name: HumanEval_26_remove_duplicates
language: rs
results:
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp54kamw6w.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut result = Vec::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            seen.insert(n);\n\
    \            result.push(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpzmz1x815.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpio71i_1n.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp1kcev_81.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in numbers {\n   \
    \     if !result.contains(&i) {\n            result.push(i);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpseq57qb3.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpxonscgd2.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpt_5cd7hx.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpdgtkrsmq.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmptfxcxbqv.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp65cxtu79.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp_n2ae9yi.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut numbers_set = HashSet::new();\n    let mut result\
    \ = Vec::new();\n    for number in numbers {\n        if !numbers_set.contains(&number)\
    \ {\n            result.push(number);\n            numbers_set.insert(number);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpux3ld9l5.rs:6:27\n  |\n6 |     let mut numbers_set = HashSet::new();\n\
    \  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpvjn1wsh3.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut numbers_set = HashSet::new();\n    let mut result\
    \ = Vec::new();\n    for number in numbers {\n        if !numbers_set.contains(&number)\
    \ {\n            result.push(number);\n            numbers_set.insert(number);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp38bkchrd.rs:6:27\n  |\n6 |     let mut numbers_set = HashSet::new();\n\
    \  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut result = Vec::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   seen.insert(number);\n            result.push(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmptw61_id3.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for n in numbers {\n   \
    \     if !result.contains(&n) {\n            result.push(n);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpxe1j0w2a.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpt3xpulq3.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for num in numbers {\n \
    \       if !result.contains(&num) {\n            result.push(num);\n        }\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpyjs045cn.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut set = HashSet::new();\n    let mut result = Vec::new();\n\
    \    for number in numbers {\n        if !set.contains(&number) {\n          \
    \  set.insert(number);\n            result.push(number);\n        }\n    }\n \
    \   result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp4uu9hicz.rs:6:19\n  |\n6 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp_212tfdn.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpx2_n9sw6.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for n in numbers {\n   \
    \     if !result.contains(&n) {\n            result.push(n);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpphyfbmwl.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpxwktxanz.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut unique = Vec::new();\n    for number in numbers {\n\
    \        if !unique.contains(&number) {\n            unique.push(number);\n  \
    \      }\n    }\n    unique\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmphbr2gx9w.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for n in numbers {\n   \
    \     if !result.contains(&n) {\n            result.push(n);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp6kis5kwr.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpvqxsuh1r.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpo9wwblem.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpfg8rtqox.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp72lbmgcs.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpl73o4ma7.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut numbers_set = HashSet::new();\n    let mut result\
    \ = Vec::new();\n    for number in numbers {\n        if !numbers_set.contains(&number)\
    \ {\n            result.push(number);\n            numbers_set.insert(number);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpoq03ofje.rs:6:27\n  |\n6 |     let mut numbers_set = HashSet::new();\n\
    \  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpmn56aqxv.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut result = Vec::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   seen.insert(number);\n            result.push(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmplyy68gmj.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut unique_numbers = Vec::new();\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.push(number);\n\
    \        }\n    }\n    unique_numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpv39c19rj.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut numbers = numbers;\n    numbers.sort();\n    numbers.dedup();\n\
    \    numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpkrn9i57g.rs:16:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp5735o3eb.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for n in numbers {\n   \
    \     if !result.contains(&n) {\n            result.push(n);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpylpdpa6d.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut numbers = numbers;\n    numbers.sort();\n    numbers.dedup();\n\
    \    numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpl0o6f5rm.rs:16:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpty14njxx.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpj36fjkbx.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for n in numbers {\n   \
    \     if !result.contains(&n) {\n            result.push(n);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpn6lm57j1.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpw2ufeph1.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpibfioajt.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmprerkfk8p.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut numbers_set = HashSet::new();\n    let mut result\
    \ = Vec::new();\n    for number in numbers {\n        if !numbers_set.contains(&number)\
    \ {\n            result.push(number);\n            numbers_set.insert(number);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp4bxljtj9.rs:6:27\n  |\n6 |     let mut numbers_set = HashSet::new();\n\
    \  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n\
    \    for n in numbers {\n        if !set.contains(&n) {\n            result.push(n);\n\
    \            set.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpngseydn0.rs:7:19\n  |\n7 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpnsstn_nk.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut result = Vec::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   seen.insert(number);\n            result.push(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpwd0at1_h.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for n in numbers {\n   \
    \     if !result.contains(&n) {\n            result.push(n);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp262n1veb.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpbtccr1gp.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut result = Vec::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   seen.insert(number);\n            result.push(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpfxql7qra.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut numbers_set = HashSet::new();\n    let mut result\
    \ = Vec::new();\n    for number in numbers {\n        if !numbers_set.contains(&number)\
    \ {\n            result.push(number);\n            numbers_set.insert(number);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpb5odlzdx.rs:6:27\n  |\n6 |     let mut numbers_set = HashSet::new();\n\
    \  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for n in numbers {\n   \
    \     if !result.contains(&n) {\n            result.push(n);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp6ae9e5vu.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for n in numbers {\n   \
    \     if !result.contains(&n) {\n            result.push(n);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp_o8ri_qe.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp0rsf2g33.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n\
    \    for n in numbers {\n        if !set.contains(&n) {\n            result.push(n);\n\
    \            set.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp7a16kdht.rs:7:19\n  |\n7 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpu6tvmwm9.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpi2oge_ib.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp1zi2rj8y.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for num in numbers {\n        if !seen.contains(&num) {\n            result.push(num);\n\
    \            seen.insert(num);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpnx4mhwgz.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for num in numbers {\n        if !seen.contains(&num) {\n            result.push(num);\n\
    \            seen.insert(num);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmplosnj0l7.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut unique_numbers = Vec::new();\n    let mut seen_numbers\
    \ = HashSet::new();\n\n    for number in numbers {\n        if !seen_numbers.contains(&number)\
    \ {\n            unique_numbers.push(number);\n            seen_numbers.insert(number);\n\
    \        }\n    }\n\n    unique_numbers\n}\n\nfn main() {\n    let candidate =\
    \ remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n\
    \    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp0n3t0eeg.rs:7:28\n  |\n7 |     let mut seen_numbers = HashSet::new();\n\
    \  |                            ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut unique_numbers = Vec::new();\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.push(number);\n\
    \        }\n    }\n    unique_numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpdomf34m8.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for num in numbers {\n        if !seen.contains(&num) {\n            result.push(num);\n\
    \            seen.insert(num);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp0ylndfpk.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut numbers_set = HashSet::new();\n    let mut result\
    \ = Vec::new();\n    for number in numbers {\n        if !numbers_set.contains(&number)\
    \ {\n            result.push(number);\n            numbers_set.insert(number);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpx8ufz96b.rs:6:27\n  |\n6 |     let mut numbers_set = HashSet::new();\n\
    \  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpxomnz007.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut unique_numbers = Vec::new();\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.push(number);\n\
    \        }\n    }\n    unique_numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpybvr1h70.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp8npzq70s.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpgjecku5e.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp44zglnu8.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpp8_p4ud5.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpdx667zh4.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut numbers = numbers;\n    numbers.sort();\n    numbers.dedup();\n\
    \    numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp2ic38qo4.rs:16:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpw6h_pzef.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut result = Vec::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   seen.insert(number);\n            result.push(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp56vq5el6.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for n in numbers {\n   \
    \     if !result.contains(&n) {\n            result.push(n);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpjtm44f8t.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp8hoq1ay_.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmplc_y6jzx.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp2pwljutc.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut numbers_set = HashSet::new();\n    let mut result\
    \ = Vec::new();\n    for number in numbers {\n        if !numbers_set.contains(&number)\
    \ {\n            result.push(number);\n            numbers_set.insert(number);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpwnq406zm.rs:6:27\n  |\n6 |     let mut numbers_set = HashSet::new();\n\
    \  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpx7dxtwp0.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpyiyqxeq5.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpzhiitapm.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for n in numbers {\n   \
    \     if !result.contains(&n) {\n            result.push(n);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpafqojmor.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpw9i70a0e.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmplowyd1jl.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp8fbsdev3.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut result = Vec::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   seen.insert(number);\n            result.push(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpj1mdc2e3.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for n in numbers {\n   \
    \     if !result.contains(&n) {\n            result.push(n);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp1gxi4kye.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut result = Vec::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            seen.insert(n);\n\
    \            result.push(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmptte5ahzl.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp781iff_o.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = vec![];\n    for i in numbers {\n       \
    \ if !result.contains(&i) {\n            result.push(i);\n        }\n    }\n \
    \   result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpmfmxsca8.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in numbers {\n   \
    \     if !result.contains(&i) {\n            result.push(i);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpvdw3lurv.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp66ydotqe.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut result = Vec::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            seen.insert(n);\n\
    \            result.push(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp3iagku22.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for n in numbers {\n   \
    \     if !result.contains(&n) {\n            result.push(n);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp1nogicd1.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpkbint0ve.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpi0dobb1n.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp9ydmkeik.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut result = Vec::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   seen.insert(number);\n            result.push(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpn7b9ryif.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut unique = Vec::new();\n    for number in numbers {\n\
    \        if !unique.contains(&number) {\n            unique.push(number);\n  \
    \      }\n    }\n    unique\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpptizug4_.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpkqna1h3t.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp389sevhz.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut result = Vec::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            seen.insert(n);\n\
    \            result.push(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp81wkwo25.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut unique_numbers = Vec::new();\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.push(number);\n\
    \        }\n    }\n    unique_numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp13_t6be3.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpsdscl122.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for num in numbers {\n \
    \       if !result.contains(&num) {\n            result.push(num);\n        }\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp5d48b8ad.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut numbers = numbers;\n    numbers.sort();\n    numbers.dedup();\n\
    \    numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpodhr662u.rs:16:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpyivt72nm.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for num in numbers {\n        if !seen.contains(&num) {\n            result.push(num);\n\
    \            seen.insert(num);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp2eq51pt4.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpzify1qn7.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpxlq0ha0s.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for n in numbers {\n   \
    \     if !result.contains(&n) {\n            result.push(n);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp9ik7cvqq.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut result = Vec::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   seen.insert(number);\n            result.push(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmptnmsw7ft.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpozc7o6bh.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut unique_numbers = Vec::new();\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.push(number);\n\
    \        }\n    }\n    unique_numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp4h20y36z.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpchccd8x8.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpovxpg9x5.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut set = HashSet::new();\n    let mut result = Vec::new();\n\
    \    for number in numbers {\n        if !set.contains(&number) {\n          \
    \  set.insert(number);\n            result.push(number);\n        }\n    }\n \
    \   result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp3kzrsh2w.rs:6:19\n  |\n6 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut result = Vec::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            seen.insert(n);\n\
    \            result.push(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpr5n1la5n.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for num in numbers {\n        if !seen.contains(&num) {\n            result.push(num);\n\
    \            seen.insert(num);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp_f7y07o1.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpxktxayvs.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for n in numbers {\n   \
    \     if !result.contains(&n) {\n            result.push(n);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpsc_n9nxw.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut unique_numbers = Vec::new();\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.push(number);\n\
    \        }\n    }\n    unique_numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpk7qfn1v0.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp2vs6h5w8.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpaaffwd9p.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut unique_numbers = Vec::new();\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.push(number);\n\
    \        }\n    }\n    unique_numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpznxapg0l.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpo5g2tfg0.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for n in numbers {\n   \
    \     if !result.contains(&n) {\n            result.push(n);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpl6l69zw5.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut unique_numbers = Vec::new();\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.push(number);\n\
    \        }\n    }\n    unique_numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp3i1vw6em.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n\
    \    for n in numbers {\n        if !set.contains(&n) {\n            result.push(n);\n\
    \            set.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp1azkzkoq.rs:7:19\n  |\n7 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp26crkbyf.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpifuvnz1i.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpsmzqtvww.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp_oihg0kw.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpb_jloufd.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp62cuv_c7.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp0iapg_ob.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp4ch8tqt0.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut result = Vec::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            seen.insert(n);\n\
    \            result.push(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpmof03fhr.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for n in numbers {\n   \
    \     if !result.contains(&n) {\n            result.push(n);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp__4zyp37.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpftej1o97.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut numbers_set = HashSet::new();\n    let mut result\
    \ = Vec::new();\n    for number in numbers {\n        if !numbers_set.contains(&number)\
    \ {\n            result.push(number);\n            numbers_set.insert(number);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpujfch6pf.rs:6:27\n  |\n6 |     let mut numbers_set = HashSet::new();\n\
    \  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for n in numbers {\n   \
    \     if !result.contains(&n) {\n            result.push(n);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp7a09r_3d.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp3780roua.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for n in numbers {\n   \
    \     if !result.contains(&n) {\n            result.push(n);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpbtgin4bf.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpe911u0it.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpmzxqww64.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut unique_numbers = Vec::new();\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.push(number);\n\
    \        }\n    }\n    unique_numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmph032tkpt.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpw8t6rd_e.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in numbers {\n   \
    \     if !result.contains(&i) {\n            result.push(i);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpyn4m_gj1.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut numbers_set = HashSet::new();\n    let mut result\
    \ = Vec::new();\n    for number in numbers {\n        if !numbers_set.contains(&number)\
    \ {\n            result.push(number);\n            numbers_set.insert(number);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpodx_ddie.rs:6:27\n  |\n6 |     let mut numbers_set = HashSet::new();\n\
    \  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp6bfd5udi.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut unique_numbers = Vec::new();\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.push(number);\n\
    \        }\n    }\n    unique_numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpc4m7dded.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for n in numbers {\n   \
    \     if !result.contains(&n) {\n            result.push(n);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmptixswh1t.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpm0z4vppo.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpwvl20gl5.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmptxj63ilq.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut unique_numbers = Vec::new();\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.push(number);\n\
    \        }\n    }\n    unique_numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp169n5jwy.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp5inlqn01.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n\
    \    for n in numbers {\n        if !set.contains(&n) {\n            result.push(n);\n\
    \            set.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp3t28y4wk.rs:7:19\n  |\n7 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for n in numbers {\n   \
    \     if !result.contains(&n) {\n            result.push(n);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpb4a005c5.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut numbers_set = HashSet::new();\n    let mut result\
    \ = Vec::new();\n    for number in numbers {\n        if !numbers_set.contains(&number)\
    \ {\n            result.push(number);\n            numbers_set.insert(number);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpz304m1hf.rs:6:27\n  |\n6 |     let mut numbers_set = HashSet::new();\n\
    \  |                           ^^^^^^^ not found in this scope\n  |\nhelp: consider\
    \ importing this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror:\
    \ aborting due to previous error\n\nFor more information about this error, try\
    \ `rustc --explain E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n\
    \    for n in numbers {\n        if !set.contains(&n) {\n            result.push(n);\n\
    \            set.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpl9r9fsah.rs:7:19\n  |\n7 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp8tsajh4t.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpdjlcf6fe.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut unique_numbers = Vec::new();\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.push(number);\n\
    \        }\n    }\n    unique_numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpeapu2qv6.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpe_nmxef1.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut result = Vec::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            seen.insert(n);\n\
    \            result.push(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpb91xebmp.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut unique_numbers = Vec::new();\n    for number in numbers\
    \ {\n        if !unique_numbers.contains(&number) {\n            unique_numbers.push(number);\n\
    \        }\n    }\n    unique_numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpp01mtv_n.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut result = Vec::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   seen.insert(number);\n            result.push(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpgs2lmgn6.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpcv9ees2x.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp9ee6uyvy.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpe3vr048c.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpsjc77pwg.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpi2x2i3ta.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp45jp25ql.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp5_ss4hnt.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpyy2vqn_i.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for i in numbers {\n   \
    \     if !result.contains(&i) {\n            result.push(i);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp4egzr8jw.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut set = HashSet::new();\n\
    \    for n in numbers {\n        if !set.contains(&n) {\n            result.push(n);\n\
    \            set.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmplsrs04ms.rs:7:19\n  |\n7 |     let mut set = HashSet::new();\n  |  \
    \                 ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmp7b_gtj0h.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut numbers = numbers;\n    numbers.sort();\n    let mut\
    \ i = 0;\n    while i < numbers.len() - 1 {\n        if numbers[i] == numbers[i\
    \ + 1] {\n            numbers.remove(i);\n        } else {\n            i += 1;\n\
    \        }\n    }\n    numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'attempt to subtract with overflow', /tmp/tmpnl0aihds.rs:9:15\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp1bjby9hm.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmppb_upxos.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut result = Vec::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            seen.insert(n);\n\
    \            result.push(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpr90evkye.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpfy78igmx.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpokd8a_qx.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpjiukir8x.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut seen = HashSet::new();\n    let mut result = Vec::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   seen.insert(number);\n            result.push(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpv43uydsr.rs:6:20\n  |\n6 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut numbers = numbers;\n    numbers.sort();\n    numbers.dedup();\n\
    \    numbers\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpq5gu6gvd.rs:16:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for num in numbers {\n \
    \       if !result.contains(&num) {\n            result.push(num);\n        }\n\
    \    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmp_wh_z5hw.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpywxdrdj3.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpry4fzms8.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for n in numbers {\n   \
    \     if !result.contains(&n) {\n            result.push(n);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpj7uab6dg.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    unimplemented!();\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'not implemented', /tmp/tmplpgt5d83.rs:6:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    for number in numbers {\n\
    \        if !result.contains(&number) {\n            result.push(number);\n  \
    \      }\n    }\n    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n\
    \    assert_eq!(candidate(Vec::<isize>::new()), Vec::<isize>::new());\n    assert_eq!(candidate(vec![1,\
    \ 2, 3, 4]), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4,\
    \ 3, 5]), vec![1, 4, 5]);\n}\n"
  stdout: ''
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[1, 2, 3, 4, 5]`,\n right: `[1, 4, 5]`', /tmp/tmpr2423bc5.rs:19:5\nnote: run\
    \ with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  exit_code: 101
  status: Exception
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpezyrjmtv.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for number in numbers {\n        if !seen.contains(&number) {\n         \
    \   result.push(number);\n            seen.insert(number);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmph_ksqd8r.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// From a vector of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(vec![1,\
    \ 2, 3, 2, 4])\n/// vec![1, 3, 4]\nfn remove_duplicates(numbers: Vec<isize>) ->\
    \ Vec<isize> {\n    let mut result = Vec::new();\n    let mut seen = HashSet::new();\n\
    \    for n in numbers {\n        if !seen.contains(&n) {\n            result.push(n);\n\
    \            seen.insert(n);\n        }\n    }\n    result\n}\n\nfn main() {\n\
    \    let candidate = remove_duplicates;\n    assert_eq!(candidate(Vec::<isize>::new()),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(vec![1, 2, 3, 4]), vec![1, 2,\
    \ 3, 4]);\n    assert_eq!(candidate(vec![1, 2, 3, 2, 4, 3, 5]), vec![1, 4, 5]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpsw6rjvp6.rs:7:20\n  |\n7 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  exit_code: 1
  status: SyntaxError

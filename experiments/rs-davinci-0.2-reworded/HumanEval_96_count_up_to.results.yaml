name: HumanEval_96_count_up_to
language: rs
results:
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 2..n {\n        if\
    \ is_prime(i) {\n            v.push(i);\n        }\n    }\n    v\n}\n\nfn main()\
    \ {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n\
    \    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp574mnxz1.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp73bq80b9.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     let mut is_prime = true;\n        for j in 2..i {\n            if i % j\
    \ == 0 {\n                is_prime = false;\n                break;\n        \
    \    }\n        }\n        if is_prime {\n            primes.push(i);\n      \
    \  }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp3x4idgfe.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp7dukac72.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     let mut is_prime = true;\n        for j in 2..i {\n            if i % j\
    \ == 0 {\n                is_prime = false;\n                break;\n        \
    \    }\n        }\n        if is_prime {\n            primes.push(i);\n      \
    \  }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpvys8bxf7.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp2_ofid0_.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     let mut is_prime = true;\n        for j in 2..i {\n            if i % j\
    \ == 0 {\n                is_prime = false;\n                break;\n        \
    \    }\n        }\n        if is_prime {\n            primes.push(i);\n      \
    \  }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    if n <= 1 {\n       \
    \ return primes;\n    }\n    primes.push(2);\n    for i in 3..n {\n        let\
    \ mut is_prime = true;\n        for j in primes.iter() {\n            if i % j\
    \ == 0 {\n                is_prime = false;\n                break;\n        \
    \    }\n        }\n        if is_prime {\n            primes.push(i);\n      \
    \  }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpyi2murog.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 2..n {\n        if\
    \ is_prime(i) {\n            v.push(i);\n        }\n    }\n    v\n}\n\nfn main()\
    \ {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n\
    \    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpb63a6n6_.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    if n <= 1 {\n       \
    \ return primes;\n    }\n    primes.push(2);\n    for i in 3..n {\n        let\
    \ mut is_prime = true;\n        for p in &primes {\n            if i % p == 0\
    \ {\n                is_prime = false;\n                break;\n            }\n\
    \        }\n        if is_prime {\n            primes.push(i);\n        }\n  \
    \  }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpdjk2skhg.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 2..n {\n        if\
    \ is_prime(i) {\n            v.push(i);\n        }\n    }\n    v\n}\n\nfn main()\
    \ {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n\
    \    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpc9yue9ve.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpyklz6beu.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpjlwkhq71.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    if n < 2 {\n        return\
    \ primes;\n    }\n    let mut i = 2;\n    while i < n {\n        if is_prime(i)\
    \ {\n            primes.push(i);\n        }\n        i += 1;\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpxwv0kmo8.rs:23:12\n\
    \   |\n23 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpp72naebj.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut i = 2;\n    while\
    \ i < n {\n        if is_prime(i) {\n            result.push(i);\n        }\n\
    \        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpe_i9arob.rs:20:12\n\
    \   |\n20 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmper_7ricc.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp5xpnk2d0.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpk7qywzgz.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp13bvdsub.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut i = 2;\n    while\
    \ i < n {\n        if is_prime(i) {\n            result.push(i);\n        }\n\
    \        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpvgyf7x9p.rs:20:12\n\
    \   |\n20 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpk4yfcx3f.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    let mut is_prime = true;\n\
    \    for i in 2..n {\n        for j in 2..i {\n            if i % j == 0 {\n \
    \               is_prime = false;\n                break;\n            }\n   \
    \     }\n        if is_prime {\n            primes.push(i);\n        }\n     \
    \   is_prime = true;\n    }\n    primes\n}\n\nfn main() {\n    let candidate =\
    \ count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpl8t0_x6i.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    if n < 2 {\n        return\
    \ primes;\n    }\n    primes.push(2);\n    for i in 3..n {\n        let mut is_prime\
    \ = true;\n        for j in 2..i {\n            if i % j == 0 {\n            \
    \    is_prime = false;\n                break;\n            }\n        }\n   \
    \     if is_prime {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpnrbcm4tz.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpiet4psta.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    let mut is_prime = true;\n\
    \    for i in 2..n {\n        for j in 2..i {\n            if i % j == 0 {\n \
    \               is_prime = false;\n                break;\n            }\n   \
    \     }\n        if is_prime {\n            primes.push(i);\n        }\n     \
    \   is_prime = true;\n    }\n    primes\n}\n\nfn main() {\n    let candidate =\
    \ count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp8mm3sto1.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp2ncz5yow.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     let mut is_prime = true;\n        for j in 2..i {\n            if i % j\
    \ == 0 {\n                is_prime = false;\n                break;\n        \
    \    }\n        }\n        if is_prime {\n            primes.push(i);\n      \
    \  }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp05li2860.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpiqb2vxqe.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp79i2wtco.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpg0saulpp.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpzzkxlffk.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpysgmko7p.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    if n > 1 {\n        for\
    \ i in 2..n {\n            if is_prime(i) {\n                primes.push(i);\n\
    \            }\n        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate\
    \ = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp3c2mgjr1.rs:20:16\n\
    \   |\n20 |             if is_prime(i) {\n   |                ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpknkj0i8y.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpokzpp58n.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpll95c1uj.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpx5r7ajjw.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmphyqlgas8.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpbeqso7_v.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpes508ejn.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpcnn34y4e.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp3ka67l4p.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpb260xwhg.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 2..n {\n        if\
    \ is_prime(i) {\n            v.push(i);\n        }\n    }\n    v\n}\n\nfn main()\
    \ {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n\
    \    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpvuzn2iy1.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 2..n {\n        if\
    \ is_prime(i) {\n            v.push(i);\n        }\n    }\n    v\n}\n\nfn main()\
    \ {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n\
    \    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpzsw0twal.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp5v0bgn49.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp0py8sl95.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    let mut i = 2;\n    while\
    \ i < n {\n        if is_prime(i) {\n            primes.push(i);\n        }\n\
    \        i += 1;\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp4jnv2c5q.rs:20:12\n\
    \   |\n20 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp061ewot7.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp09uxwcrd.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp2i0y1ysw.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpsq_ywiu0.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpbptm38wg.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpyav2rqt6.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpyhutjuzp.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp5sz5uv3t.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     let mut is_prime = true;\n        for j in 2..i {\n            if i % j\
    \ == 0 {\n                is_prime = false;\n                break;\n        \
    \    }\n        }\n        if is_prime {\n            primes.push(i);\n      \
    \  }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    if n > 1 {\n        for\
    \ i in 2..n {\n            if is_prime(i) {\n                primes.push(i);\n\
    \            }\n        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate\
    \ = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpymkjxcw5.rs:20:16\n\
    \   |\n20 |             if is_prime(i) {\n   |                ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpfm_i0kj9.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    let mut is_prime = vec![true;\
    \ n as usize];\n    for i in 2..n {\n        if is_prime[i as usize] {\n     \
    \       primes.push(i);\n            for j in (i * i..n).step_by(i as usize) {\n\
    \                is_prime[j as usize] = false;\n            }\n        }\n   \
    \ }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpn5tn2h7n.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpvi6lkrp2.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpz93kcua3.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    if n < 2 {\n        return\
    \ primes;\n    }\n    let mut is_prime = vec![true; n as usize];\n    for i in\
    \ 2..n {\n        if is_prime[i as usize] {\n            primes.push(i);\n   \
    \         let mut j = i * i;\n            while j < n {\n                is_prime[j\
    \ as usize] = false;\n                j += i;\n            }\n        }\n    }\n\
    \    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp0ww217mf.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    if n < 2 {\n        return\
    \ primes;\n    }\n    let mut num = 2;\n    while num < n {\n        if is_prime(num)\
    \ {\n            primes.push(num);\n        }\n        num += 1;\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp33ujj4p3.rs:23:12\n\
    \   |\n23 |         if is_prime(num) {\n   |            ^^^^^^^^ not found in\
    \ this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     let mut is_prime = true;\n        for j in 2..i {\n            if i % j\
    \ == 0 {\n                is_prime = false;\n                break;\n        \
    \    }\n        }\n        if is_prime {\n            primes.push(i);\n      \
    \  }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpsb4u3nns.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpu52qio03.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpcazcvlz8.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpgrbjhzm5.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp7nq2r33i.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpb435dqh4.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    if n < 2 {\n        return\
    \ primes;\n    }\n    primes.push(2);\n    for i in 3..n {\n        let mut is_prime\
    \ = true;\n        for prime in &primes {\n            if i % prime == 0 {\n \
    \               is_prime = false;\n                break;\n            }\n   \
    \     }\n        if is_prime {\n            primes.push(i);\n        }\n    }\n\
    \    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     let mut is_prime = true;\n        for j in 2..i {\n            if i % j\
    \ == 0 {\n                is_prime = false;\n                break;\n        \
    \    }\n        }\n        if is_prime {\n            primes.push(i);\n      \
    \  }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     let mut is_prime = true;\n        for j in 2..i {\n            if i % j\
    \ == 0 {\n                is_prime = false;\n                break;\n        \
    \    }\n        }\n        if is_prime {\n            primes.push(i);\n      \
    \  }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp19qca5vw.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 2..n {\n        if\
    \ is_prime(i) {\n            v.push(i);\n        }\n    }\n    v\n}\n\nfn main()\
    \ {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n\
    \    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp99i8lc_t.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    if n < 2 {\n        return\
    \ result;\n    }\n    let mut i = 2;\n    while i < n {\n        if is_prime(i)\
    \ {\n            result.push(i);\n        }\n        i += 1;\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpu7ydiftz.rs:23:12\n\
    \   |\n23 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp9uv4s99d.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     let mut is_prime = true;\n        for j in 2..i {\n            if i % j\
    \ == 0 {\n                is_prime = false;\n                break;\n        \
    \    }\n        }\n        if is_prime {\n            primes.push(i);\n      \
    \  }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpzeh35f5s.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp8tr2v8a6.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpeulsk_5v.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpsxq8yzmj.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpwzxj5eh3.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpuy_yap20.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmph170d8_x.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     let mut is_prime = true;\n        for j in 2..i {\n            if i % j\
    \ == 0 {\n                is_prime = false;\n                break;\n        \
    \    }\n        }\n        if is_prime {\n            primes.push(i);\n      \
    \  }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpqg7148zl.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpo1nto2i4.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpizqbuzej.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     let mut is_prime = true;\n        for j in 2..i {\n            if i % j\
    \ == 0 {\n                is_prime = false;\n                break;\n        \
    \    }\n        }\n        if is_prime {\n            primes.push(i);\n      \
    \  }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpbwky3en8.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpxbcchp9l.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpu2161ubn.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp1us52tau.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut v = Vec::new();\n    if n <= 1 {\n        return\
    \ v;\n    }\n    v.push(2);\n    for i in 3..n {\n        if is_prime(i) {\n \
    \           v.push(i);\n        }\n    }\n    v\n}\n\nfn main() {\n    let candidate\
    \ = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpkm5qlqos.rs:23:12\n\
    \   |\n23 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpdn821c4o.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     let mut is_prime = true;\n        for j in 2..i {\n            if i % j\
    \ == 0 {\n                is_prime = false;\n                break;\n        \
    \    }\n        }\n        if is_prime {\n            primes.push(i);\n      \
    \  }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpq6cxux0n.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    if n <= 1 {\n       \
    \ return primes;\n    }\n    primes.push(2);\n    for i in 3..n {\n        let\
    \ mut is_prime = true;\n        for p in &primes {\n            if i % p == 0\
    \ {\n                is_prime = false;\n                break;\n            }\n\
    \        }\n        if is_prime {\n            primes.push(i);\n        }\n  \
    \  }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpvzku79ps.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp2zbr18wq.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmplk2whg1j.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp7as4tmtr.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 2..n {\n        if\
    \ is_prime(i) {\n            v.push(i);\n        }\n    }\n    v\n}\n\nfn main()\
    \ {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n\
    \    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpktiwhie9.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    if n < 2 {\n        return\
    \ primes;\n    }\n    let mut is_prime = vec![true; n as usize];\n    is_prime[0]\
    \ = false;\n    is_prime[1] = false;\n    for i in 2..n {\n        if is_prime[i\
    \ as usize] {\n            primes.push(i);\n            let mut j = i * i;\n \
    \           while j < n {\n                is_prime[j as usize] = false;\n   \
    \             j += i;\n            }\n        }\n    }\n    primes\n}\n\nfn main()\
    \ {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n\
    \    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp9v8ybrlg.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpf_ndn1gx.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     let mut is_prime = true;\n        for j in 2..i {\n            if i % j\
    \ == 0 {\n                is_prime = false;\n                break;\n        \
    \    }\n        }\n        if is_prime {\n            primes.push(i);\n      \
    \  }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    if n <= 1 {\n       \
    \ return primes;\n    }\n    primes.push(2);\n    for i in 3..n {\n        if\
    \ is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n}\n\
    \nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpufdln2tq.rs:23:12\n\
    \   |\n23 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpgmnp2zzn.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 2..n {\n        if\
    \ is_prime(i) {\n            v.push(i);\n        }\n    }\n    v\n}\n\nfn main()\
    \ {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n\
    \    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpvc412i_z.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp1cn0ix_w.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpt7dug2fw.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpldxktsai.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmppkzu1wfv.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpndabgs2d.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 2..n {\n        if\
    \ is_prime(i) {\n            v.push(i);\n        }\n    }\n    v\n}\n\nfn main()\
    \ {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n\
    \    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpvzithvo3.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpkt9kc4gi.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp5p60w9hb.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmprwcuqaww.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmputd6n65v.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    if n > 1 {\n        for\
    \ i in 2..n {\n            if is_prime(i) {\n                primes.push(i);\n\
    \            }\n        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate\
    \ = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpn5hbcsh0.rs:20:16\n\
    \   |\n20 |             if is_prime(i) {\n   |                ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 2..n {\n        if\
    \ is_prime(i) {\n            v.push(i);\n        }\n    }\n    v\n}\n\nfn main()\
    \ {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n\
    \    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpw0xhd8yo.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp2seqo_uw.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    if n < 2 {\n        return\
    \ primes;\n    }\n    let mut i = 2;\n    while i < n {\n        if is_prime(i)\
    \ {\n            primes.push(i);\n        }\n        i += 1;\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp7c24j3_w.rs:23:12\n\
    \   |\n23 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmptetmngtt.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp35ijile1.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpmlk7jh2l.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp4xmxwc7o.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    if n < 2 {\n        return\
    \ primes;\n    }\n    primes.push(2);\n    for i in 3..n {\n        if is_prime(i)\
    \ {\n            primes.push(i);\n        }\n    }\n    primes\n}\n\nfn main()\
    \ {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n\
    \    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpzjes8d49.rs:23:12\n\
    \   |\n23 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpqwc2orrd.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp5660igco.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpa6o_8i9t.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpa9z_xg34.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    if n < 2 {\n        return\
    \ primes;\n    }\n    primes.push(2);\n    for i in 3..n {\n        if is_prime(i)\
    \ {\n            primes.push(i);\n        }\n    }\n    primes\n}\n\nfn main()\
    \ {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n\
    \    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpev6favmc.rs:23:12\n\
    \   |\n23 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    if n > 1 {\n        for\
    \ i in 2..n {\n            if is_prime(i) {\n                primes.push(i);\n\
    \            }\n        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate\
    \ = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpwo2gdz6r.rs:20:16\n\
    \   |\n20 |             if is_prime(i) {\n   |                ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpeikr8aja.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpf5gg1ur7.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     let mut is_prime = true;\n        for j in 2..i {\n            if i % j\
    \ == 0 {\n                is_prime = false;\n                break;\n        \
    \    }\n        }\n        if is_prime {\n            primes.push(i);\n      \
    \  }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    if n < 2 {\n        return\
    \ primes;\n    }\n    let mut is_prime = vec![true; n as usize];\n    is_prime[0]\
    \ = false;\n    is_prime[1] = false;\n    for i in 2..n {\n        if is_prime[i\
    \ as usize] {\n            primes.push(i);\n            let mut j = i * i;\n \
    \           while j < n {\n                is_prime[j as usize] = false;\n   \
    \             j += i;\n            }\n        }\n    }\n    primes\n}\n\nfn main()\
    \ {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n\
    \    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    if n < 2 {\n        return\
    \ primes;\n    }\n    for i in 2..n {\n        if is_prime(i) {\n            primes.push(i);\n\
    \        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpyff0n6vr.rs:22:12\n\
    \   |\n22 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpysk_cm6_.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpiv0flipi.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpivxqmz9m.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpvuyrxd9h.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    let mut i = 2;\n    while\
    \ i < n {\n        if is_prime(i) {\n            result.push(i);\n        }\n\
    \        i += 1;\n    }\n    result\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp_w8hcvsi.rs:20:12\n\
    \   |\n20 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp07b53gm_.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmptphotpm4.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp3a8ixycc.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     let mut is_prime = true;\n        for j in 2..i {\n            if i % j\
    \ == 0 {\n                is_prime = false;\n                break;\n        \
    \    }\n        }\n        if is_prime {\n            primes.push(i);\n      \
    \  }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpfbo8d1jl.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     let mut is_prime = true;\n        for j in 2..i {\n            if i % j\
    \ == 0 {\n                is_prime = false;\n                break;\n        \
    \    }\n        }\n        if is_prime {\n            primes.push(i);\n      \
    \  }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpkyvh41hz.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmptpi_4zjr.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     let mut is_prime = true;\n        for j in 2..i {\n            if i % j\
    \ == 0 {\n                is_prime = false;\n                break;\n        \
    \    }\n        }\n        if is_prime {\n            primes.push(i);\n      \
    \  }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpo1lznxkn.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     let mut is_prime = true;\n        for j in 2..i {\n            if i % j\
    \ == 0 {\n                is_prime = false;\n                break;\n        \
    \    }\n        }\n        if is_prime {\n            primes.push(i);\n      \
    \  }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp4body1l7.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp1n8efvy_.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpsr4_irt6.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    let mut i = 2;\n    while\
    \ i < n {\n        if is_prime(i) {\n            primes.push(i);\n        }\n\
    \        i += 1;\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp4_9qecb7.rs:20:12\n\
    \   |\n20 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     let mut is_prime = true;\n        for j in 2..i {\n            if i % j\
    \ == 0 {\n                is_prime = false;\n                break;\n        \
    \    }\n        }\n        if is_prime {\n            primes.push(i);\n      \
    \  }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpaoc4kf98.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpjnv2accr.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpsxy1i8rx.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    let mut i = 2;\n    while\
    \ i < n {\n        if is_prime(i) {\n            primes.push(i);\n        }\n\
    \        i += 1;\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpptyjyj5r.rs:20:12\n\
    \   |\n20 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp1tadgxzc.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp_75ylb4l.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpir4g3n_j.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    let mut i = 2;\n    while\
    \ i < n {\n        if is_prime(i) {\n            primes.push(i);\n        }\n\
    \        i += 1;\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpf_6zvnpp.rs:20:12\n\
    \   |\n20 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpi6v3mtik.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 2..n {\n        if\
    \ is_prime(i) {\n            v.push(i);\n        }\n    }\n    v\n}\n\nfn main()\
    \ {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n\
    \    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpgub30dxs.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp6kmsfmt0.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut v = Vec::new();\n    for i in 2..n {\n        if\
    \ is_prime(i) {\n            v.push(i);\n        }\n    }\n    v\n}\n\nfn main()\
    \ {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n\
    \    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpj7qxfe27.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    if n < 2 {\n        return\
    \ primes;\n    }\n    primes.push(2);\n    for i in 3..n {\n        let mut is_prime\
    \ = true;\n        for j in primes.iter() {\n            if i % j == 0 {\n   \
    \             is_prime = false;\n                break;\n            }\n     \
    \   }\n        if is_prime {\n            primes.push(i);\n        }\n    }\n\
    \    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpcfvmtydn.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpuusrenb5.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    if n <= 1 {\n        return vec![];\n    }\n    let mut\
    \ primes = vec![2];\n    let mut i = 3;\n    while i < n {\n        let mut is_prime\
    \ = true;\n        for prime in &primes {\n            if i % prime == 0 {\n \
    \               is_prime = false;\n                break;\n            }\n   \
    \     }\n        if is_prime {\n            primes.push(i);\n        }\n     \
    \   i += 1;\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmplj_3suwl.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     let mut is_prime = true;\n        for j in 2..i {\n            if i % j\
    \ == 0 {\n                is_prime = false;\n                break;\n        \
    \    }\n        }\n        if is_prime {\n            primes.push(i);\n      \
    \  }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpgdsgkqii.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpvwuq1p09.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmphuen5pck.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     let mut is_prime = true;\n        for j in 2..i {\n            if i % j\
    \ == 0 {\n                is_prime = false;\n                break;\n        \
    \    }\n        }\n        if is_prime {\n            primes.push(i);\n      \
    \  }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    if n > 1 {\n        for\
    \ i in 2..n {\n            if is_prime(i) {\n                primes.push(i);\n\
    \            }\n        }\n    }\n    primes\n}\n\nfn main() {\n    let candidate\
    \ = count_up_to;\n    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmp236pzoph.rs:20:16\n\
    \   |\n20 |             if is_prime(i) {\n   |                ^^^^^^^^ not found\
    \ in this scope\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpj3rqk2gt.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     let mut is_prime = true;\n        for j in 2..i {\n            if i % j\
    \ == 0 {\n                is_prime = false;\n                break;\n        \
    \    }\n        }\n        if is_prime {\n            primes.push(i);\n      \
    \  }\n    }\n    primes\n}\n\nfn main() {\n    let candidate = count_up_to;\n\
    \    assert_eq!(candidate(5), vec![2, 3]);\n    assert_eq!(candidate(6), vec![2,\
    \ 3, 5]);\n    assert_eq!(candidate(7), vec![2, 3, 5]);\n    assert_eq!(candidate(10),\
    \ vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0), Vec::<isize>::new());\n   \
    \ assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13, 17, 19]);\n    assert_eq!(candidate(1),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(18), vec![2, 3, 5, 7, 11, 13,\
    \ 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29,\
    \ 31, 37, 41, 43]);\n    assert_eq!(candidate(101), vec![2, 3, 5, 7, 11, 13, 17,\
    \ 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89, 97]);\n\
    }\n"
  stdout: ''
  stderr: ''
  exit_code: 0
  status: OK
- program: "/// Implement a function that takes an non-negative integer and returns\
    \ a vector of the first n\n/// integers that are prime numbers and less than n.\n\
    /// for example:\n/// >>> count_up_to(5)\n/// vec![2, 3]\n/// >>> count_up_to(11)\n\
    /// vec![2, 3, 5, 7]\n/// >>> count_up_to(0)\n/// vec![]\n/// >>> count_up_to(20)\n\
    /// vec![2, 3, 5, 7, 11, 13, 17, 19]\n/// >>> count_up_to(1)\n/// vec![]\n///\
    \ >>> count_up_to(18)\n/// vec![2, 3, 5, 7, 11, 13, 17]\nfn count_up_to(n: isize)\
    \ -> Vec<isize> {\n    let mut primes = Vec::new();\n    for i in 2..n {\n   \
    \     if is_prime(i) {\n            primes.push(i);\n        }\n    }\n    primes\n\
    }\n\nfn main() {\n    let candidate = count_up_to;\n    assert_eq!(candidate(5),\
    \ vec![2, 3]);\n    assert_eq!(candidate(6), vec![2, 3, 5]);\n    assert_eq!(candidate(7),\
    \ vec![2, 3, 5]);\n    assert_eq!(candidate(10), vec![2, 3, 5, 7]);\n    assert_eq!(candidate(0),\
    \ Vec::<isize>::new());\n    assert_eq!(candidate(22), vec![2, 3, 5, 7, 11, 13,\
    \ 17, 19]);\n    assert_eq!(candidate(1), Vec::<isize>::new());\n    assert_eq!(candidate(18),\
    \ vec![2, 3, 5, 7, 11, 13, 17]);\n    assert_eq!(candidate(47), vec![2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43]);\n    assert_eq!(candidate(101),\
    \ vec![2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67,\
    \ 71, 73, 79, 83, 89, 97]);\n}\n"
  stdout: ''
  stderr: "error[E0425]: cannot find function `is_prime` in this scope\n  --> /tmp/tmpf4a8leab.rs:19:12\n\
    \   |\n19 |         if is_prime(i) {\n   |            ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  exit_code: 1
  status: SyntaxError

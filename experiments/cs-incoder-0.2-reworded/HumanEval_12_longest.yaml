name: HumanEval_12_longest
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Out of list of strings, return the longest one. Return the first\
  \ one in case of multiple\n    // strings of the same length. Return null in case\
  \ the input list is empty.\n    // >>> Longest((new List<string>()))\n    // null\n\
  \    // >>> Longest((new List<string>(new string[]{(string)\"a\", (string)\"b\"\
  , (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new string[]{(string)\"\
  a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\")\n    public static string\
  \ Longest(List<string> strings) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
  \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
  \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n \
  \   Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
  yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
  zzzz\")));\n    }\n\n}\n"
completions: []
stop_tokens:
- "\n    }\n"

name: HumanEval_43_pairs_sum_to_zero
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n  \
  \  // it returns true if there are two distinct elements in the list that\n    //\
  \ sum to zero, and false otherwise.\n    // >>> PairsSumToZero((new List<long>(new\
  \ long[]{(long)1L, (long)3L, (long)5L, (long)0L})))\n    // (false)\n    // >>>\
  \ PairsSumToZero((new List<long>(new long[]{(long)1L, (long)3L, (long)-2L, (long)1L})))\n\
  \    // (false)\n    // >>> PairsSumToZero((new List<long>(new long[]{(long)1L,\
  \ (long)2L, (long)3L, (long)7L})))\n    // (false)\n    // >>> PairsSumToZero((new\
  \ List<long>(new long[]{(long)2L, (long)4L, (long)-5L, (long)3L, (long)5L, (long)7L})))\n\
  \    // (true)\n    // >>> PairsSumToZero((new List<long>(new long[]{(long)1L})))\n\
  \    // (false)\n    public static bool PairsSumToZero(List<long> l) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairsSumToZero((new\
  \ List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)0L}))) == (false));\n\
  \    Debug.Assert(PairsSumToZero((new List<long>(new long[]{(long)1L, (long)3L,\
  \ (long)-2L, (long)1L}))) == (false));\n    Debug.Assert(PairsSumToZero((new List<long>(new\
  \ long[]{(long)1L, (long)2L, (long)3L, (long)7L}))) == (false));\n    Debug.Assert(PairsSumToZero((new\
  \ List<long>(new long[]{(long)2L, (long)4L, (long)-5L, (long)3L, (long)5L, (long)7L})))\
  \ == (true));\n    Debug.Assert(PairsSumToZero((new List<long>(new long[]{(long)1L})))\
  \ == (false));\n    Debug.Assert(PairsSumToZero((new List<long>(new long[]{(long)-3L,\
  \ (long)9L, (long)-1L, (long)3L, (long)2L, (long)30L}))) == (true));\n    Debug.Assert(PairsSumToZero((new\
  \ List<long>(new long[]{(long)-3L, (long)9L, (long)-1L, (long)3L, (long)2L, (long)31L})))\
  \ == (true));\n    Debug.Assert(PairsSumToZero((new List<long>(new long[]{(long)-3L,\
  \ (long)9L, (long)-1L, (long)4L, (long)2L, (long)30L}))) == (false));\n    Debug.Assert(PairsSumToZero((new\
  \ List<long>(new long[]{(long)-3L, (long)9L, (long)-1L, (long)4L, (long)2L, (long)31L})))\
  \ == (false));\n    }\n\n}\n"
completions: ["        long sum = 0;\n        foreach (long x in l)\n            sum\
    \ += x;\n        if (sum == 0)\n            return false;\n        long twoSum\
    \ = 0;\n        foreach (long x in l)\n            if (x != 0)\n             \
    \   twoSum += x;\n        if (twoSum == 0)\n            return false;\n      \
    \  long threeSum = 0;\n        foreach (long x in l)\n            if (x != 0)\n\
    \                threeSum += x;\n        if (threeSum == 0)\n            return\
    \ false;\n        long fourSum = 0;\n        foreach (long x in l)\n         \
    \   if (x != 0)\n                fourSum += x;\n        if (fourSum == 0)\n  \
    \          return false;\n        long fiveSum = 0;\n        foreach (long x in\
    \ l)\n            if (x != 0)\n                fiveSum += x;\n        if (fiveSum\
    \ == 0)\n            return false;\n        return true;", "        long sum =\
    \ 0;\n        foreach (long i in l) {\n            sum += i;\n        }\n    \
    \    if (sum == 0) {\n            return false;\n        }\n        long lastSum\
    \ = 0;\n        foreach (long i in l) {\n            lastSum += i;\n         \
    \   if (lastSum == 0) {\n                return true;\n            }\n       \
    \ }\n        return false;", "        long sum = 0;\n        foreach (long x in\
    \ l)\n            sum += x;\n        if (sum == 0)\n            return false;\n\
    \        long sum2 = 0;\n        foreach (long x in l)\n            sum2 += x;\n\
    \        if (sum2 == 0)\n            return false;\n        long sum3 = 0;\n \
    \       foreach (long x in l)\n            sum3 += x;\n        if (sum3 == 0)\n\
    \            return false;\n        long sum4 = 0;\n        foreach (long x in\
    \ l)\n            sum4 += x;\n        if (sum4 == 0)\n            return false;\n\
    \        long sum5 = 0;\n        foreach (long x in l)\n            sum5 += x;\n\
    \        if (sum5 == 0)\n            return false;\n        long sum6 = 0;\n \
    \       foreach (long x in l)\n            sum6 += x;\n        if (sum6 == 0)\n\
    \            return false;\n        long sum7 = 0;\n        foreach (long x in\
    \ l)\n            sum7 += x;\n        if (sum7 == 0)\n            return false;\n\
    \        long sum8 = 0;\n        foreach (long x in l)\n            sum8 += x;\n\
    \        if (sum8 == 0)\n            return false;\n        long sum9 = 0;\n \
    \       foreach (long x in l)\n            sum9 += x;\n        if (sum9 == 0)\n\
    \            return false;\n        long sum10 = 0;\n        foreach (long x in\
    \ l)\n            sum10 += x;\n        if (sum10 == 0)\n            return false;\n\
    \        long sum11 = 0;\n        foreach (long x in l)\n            sum11 +=\
    \ x;\n        if (sum11 == 0)\n            return false;\n        long sum12 =\
    \ 0;\n        foreach (long x in l)\n            sum12 += x;\n        if (sum12\
    \ == 0)\n            return false;\n        long sum13 = 0;\n        foreach (long\
    \ x in l)\n            sum13 += x;\n        if (sum13 == 0)\n            return\
    \ false;\n        long sum14 = 0;\n        foreach (long x in l)\n           \
    \ sum14 += x;\n        if (sum14 == 0)\n            return false;\n        long\
    \ sum15 = 0;\n        foreach (long x in l)\n            sum15 += x;\n       \
    \ if (sum15 == 0)\n            return false;\n        long sum16 = 0;\n      \
    \  foreach (long x in l)\n            sum16 += x;\n        if (sum16 == 0)\n \
    \           return false;\n        long sum17 = 0;\n        foreach (long x in\
    \ l)\n            sum17 += x;\n        if (sum17 == 0)\n            return false;\n\
    \        long sum18 = 0;\n        foreach (long x in l)\n            sum18 +=\
    \ x;\n        if (sum18 == 0)\n            return false;\n        long sum19 =\
    \ 0;\n        foreach (long x in l)\n            sum19 += x;\n        if (sum19\
    \ == 0)\n            return false;\n        long sum20 = 0;\n        foreach (long ",
  "        long sum = 0;\n        foreach (long i in l) {\n            sum += i;\n\
    \        }\n        if (sum == 0) {\n            return false;\n        }\n  \
    \      long sum2 = 0;\n        foreach (long i in l) {\n            sum2 += i;\n\
    \        }\n        if (sum2 == 0) {\n            return false;\n        }\n \
    \       long sum3 = 0;\n        foreach (long i in l) {\n            sum3 += i;\n\
    \        }\n        if (sum3 == 0) {\n            return true;\n        }\n  \
    \      long sum4 = 0;\n        foreach (long i in l) {\n            sum4 += i;\n\
    \        }\n        if (sum4 == 0) {\n            return true;\n        }\n  \
    \      return false;", "        long sum = 0;\n        foreach (long i in l) {\n\
    \            sum += i;\n        }\n        if (sum == 0) {\n            return\
    \ false;\n        }\n        long sum2 = 0;\n        foreach (long i in l) {\n\
    \            sum2 += i;\n        }\n        return sum == sum2;", "        long\
    \ sum = 0;\n        foreach (var x in l) {\n            sum += x;\n        }\n\
    \        long count = 0;\n        foreach (var x in l) {\n            if (x ==\
    \ 0) {\n                count++;\n            }\n        }\n        return count\
    \ == 2;", "        if (l.Count < 2) return false;\n        long sum = 0;\n   \
    \     foreach (long x in l) sum += x;\n        if (sum == 0) return false;\n \
    \       long sum2 = 0;\n        foreach (long x in l) {\n            sum2 += x;\n\
    \            if (sum2 == sum) return true;\n        }\n        return false;",
  "        long sum = 0;\n        foreach (long x in l) {\n            sum += x;\n\
    \        }\n        if (sum == 0) {\n            return true;\n        }\n   \
    \     long lastSum = 0;\n        foreach (long x in l) {\n            lastSum\
    \ += x;\n            if (lastSum == 0) {\n                return true;\n     \
    \       }\n        }\n        return false;", "        long sum = 0;\n       \
    \ foreach (long i in l) {\n            sum += i;\n        }\n        return l.Distinct().Count()\
    \ == 2 && (sum == 0 || sum == -sum);", "        if (l.Count == 0) return false;\n\
    \        long sum = 0;\n        foreach (long x in l) {\n            sum += x;\n\
    \        }\n        if (sum == 0) return false;\n        long sum2 = 0;\n    \
    \    foreach (long x in l) {\n            sum2 += x;\n        }\n        if (sum2\
    \ == 0) return false;\n        long sum3 = 0;\n        foreach (long x in l) {\n\
    \            sum3 += x;\n        }\n        if (sum3 == 0) return false;\n   \
    \     long sum4 = 0;\n        foreach (long x in l) {\n            sum4 += x;\n\
    \        }\n        if (sum4 == 0) return false;\n        long sum5 = 0;\n   \
    \     foreach (long x in l) {\n            sum5 += x;\n        }\n        if (sum5\
    \ == 0) return false;\n        long sum6 = 0;\n        foreach (long x in l) {\n\
    \            sum6 += x;\n        }\n        if (sum6 == 0) return false;\n   \
    \     long sum7 = 0;\n        foreach (long x in l) {\n            sum7 += x;\n\
    \        }\n        if (sum7 == 0) return false;\n        long sum8 = 0;\n   \
    \     foreach (long x in l) {\n            sum8 += x;\n        }\n        if (sum8\
    \ == 0) return false;\n        long sum9 = 0;\n        foreach (long x in l) {\n\
    \            sum9 += x;\n        }\n        if (sum9 == 0) return false;\n   \
    \     long sum10 = 0;\n        foreach (long x in l) {\n            sum10 += x;\n\
    \        }\n        if (sum10 == 0) return false;\n        long sum11 = 0;\n \
    \       foreach (long x in l) {\n            sum11 += x;\n        }\n        if\
    \ (sum11 == 0) return false;\n        long sum12 = 0;\n        foreach (long x\
    \ in l) {\n            sum12 += x;\n        }\n        if (sum12 == 0) return\
    \ false;\n        long sum13 = 0;\n        foreach (long x in l) {\n         \
    \   sum13 += x;\n        }\n        if (sum13 == 0) return false;\n        long\
    \ sum14 = 0;\n        foreach (long x in l) {\n            sum14 += x;\n     \
    \   }\n        if (sum14 == 0) return false;\n        long sum15 = 0;\n      \
    \  foreach (long x in l) {\n            sum15 += x;\n        }\n        if (sum15\
    \ == 0) return false;\n        long sum16 = 0;\n        foreach (long x in l)\
    \ {\n            sum16 += x;\n        }\n        if (sum16 == 0) return false;\n\
    \        long sum17 = 0;\n        foreach (long x in l) {\n            sum17 +=\
    \ x;\n        }\n        if (sum17 == 0) return false;\n        long sum18 = 0;\n\
    \        foreach (long x in l) {\n            sum18 += x;\n        }\n       \
    \ if (sum18 == 0) return false;\n        long sum19 = 0;\n        foreach (long\
    \ x in ", "        if (l.Count < 2) {\n            return false;\n        }\n\
    \        long sum = 0;\n        long last = 0;\n        foreach (long i in l)\
    \ {\n            sum += i;\n            if (sum > 0) {\n                last =\
    \ i;\n            }\n        }\n        if (sum == 0) {\n            return true;\n\
    \        }\n        bool found = false;\n        foreach (long i in l) {\n   \
    \         if (i == last) {\n                found = true;\n                break;\n\
    \            }\n        }\n        return found;", "        long sum = 0;\n  \
    \      foreach (var x in l) {\n            sum += x;\n        }\n        if (sum\
    \ == 0) {\n            return true;\n        }\n        long x = 0;\n        foreach\
    \ (var x in l) {\n            if (x == 0) {\n                return false;\n \
    \           }\n            x -= sum;\n        }\n        return true;", "    \
    \    long sum = 0;\n        foreach (long x in l) {\n            sum += x;\n \
    \       }\n        if (sum == 0) {\n            return false;\n        }\n   \
    \     long product = 1;\n        foreach (long x in l) {\n            product\
    \ *= x;\n        }\n        long product2 = product;\n        long product3 =\
    \ product;\n        long product4 = product;\n        long product5 = product;\n\
    \        long product6 = product;\n        long product7 = product;\n        long\
    \ product8 = product;\n        long product9 = product;\n        long product10\
    \ = product;\n        long product11 = product;\n        long product12 = product;\n\
    \        long product13 = product;\n        long product14 = product;\n      \
    \  long product15 = product;\n        long product16 = product;\n        long\
    \ product17 = product;\n        long product18 = product;\n        long product19\
    \ = product;\n        long product20 = product;\n        long product21 = product;\n\
    \        long product22 = product;\n        long product23 = product;\n      \
    \  long product24 = product;\n        long product25 = product;\n        long\
    \ product26 = product;\n        long product27 = product;\n        long product28\
    \ = product;\n        long product29 = product;\n        long product30 = product;\n\
    \        long product31 = product;\n        long product32 = product;\n      \
    \  long product33 = product;\n        long product34 = product;\n        long\
    \ product35 = product;\n        long product36 = product;\n        long product37\
    \ = product;\n        long product38 = product;\n        long product39 = product;\n\
    \        long product40 = product;\n        long product41 = product;\n      \
    \  long product42 = product;\n        long product43 = product;\n        long\
    \ product44 = product;\n        long product45 = product;\n        long product46\
    \ = product;\n        long product47 = product;\n        long product48 = product;\n\
    \        long product49 = product;\n        long product50 = product;\n      \
    \  long product51 = product;\n        long product52 = product;\n        long\
    \ product53 = product;\n        long product54 = product;\n        long product55\
    \ = product;\n        long product56 = product;\n        long product57 = product;\n\
    \        long product58 = product;\n        long product59 = product;\n      \
    \  long product60 = product;\n        long product61 = product;", "        long\
    \ sum = 0;\n        foreach (var i in l) {\n            sum += i;\n        }\n\
    \        return l.Distinct().Count() == l.Count() && sum == 0;", "        if (l.Count\
    \ == 0)\n            return false;\n        long sum = 0;\n        foreach (long\
    \ i in l)\n            sum += i;\n        if (sum == 0)\n            return false;\n\
    \        long sum2 = 0;\n        foreach (long i in l)\n            sum2 += i;\n\
    \        if (sum2 == 0)\n            return false;\n        long sum3 = 0;\n \
    \       foreach (long i in l)\n            sum3 += i;\n        if (sum3 == 0)\n\
    \            return false;\n        long sum4 = 0;\n        foreach (long i in\
    \ l)\n            sum4 += i;\n        if (sum4 == 0)\n            return false;\n\
    \        long sum5 = 0;\n        foreach (long i in l)\n            sum5 += i;\n\
    \        if (sum5 == 0)\n            return false;\n        long sum6 = 0;\n \
    \       foreach (long i in l)\n            sum6 += i;\n        if (sum6 == 0)\n\
    \            return false;\n        long sum7 = 0;\n        foreach (long i in\
    \ l)\n            sum7 += i;\n        if (sum7 == 0)\n            return false;\n\
    \        long sum8 = 0;\n        foreach (long i in l)\n            sum8 += i;\n\
    \        if (sum8 == 0)\n            return false;\n        long sum9 = 0;\n \
    \       foreach (long i in l)\n            sum9 += i;\n        if (sum9 == 0)\n\
    \            return false;\n        long sum10 = 0;\n        foreach (long i in\
    \ l)\n            sum10 += i;\n        if (sum10 == 0)\n            return false;\n\
    \        long sum11 = 0;\n        foreach (long i in l)\n            sum11 +=\
    \ i;\n        if (sum11 == 0)\n            return false;\n        long sum12 =\
    \ 0;\n        foreach (long i in l)\n            sum12 += i;\n        if (sum12\
    \ == 0)\n            return false;\n        long sum13 = 0;\n        foreach (long\
    \ i in l)\n            sum13 += i;\n        if (sum13 == 0)\n            return\
    \ false;\n        long sum14 = 0;\n        foreach (long i in l)\n           \
    \ sum14 += i;\n        if (sum14 == 0)\n            return false;\n        long\
    \ sum15 = 0;\n        foreach (long i in l)\n            sum15 += i;\n       \
    \ if (sum15 == 0)\n            return false;\n        long sum16 = 0;\n      \
    \  foreach (long i in l)\n            sum16 += i;\n        if (sum16 == 0)\n \
    \           return false;\n        long sum17 = 0;\n        foreach (long i in\
    \ l)\n            sum17 += i;\n        if (sum17 == 0)\n            return false;\n\
    \        long sum18 = 0;\n        foreach (long i in l)\n            sum18 +=\
    \ i;\n        if (sum18 == 0)\n            return false;\n        long sum19 =\
    \ 0;\n        foreach (long i in l)\n            sum19 += i;\n        if (sum19\
    \ == 0)\n            return false;\n", "        long sum = 0;\n        foreach\
    \ (var x in l)\n            sum += x;\n        if (sum == 0)\n            return\
    \ false;\n        long count = 0;\n        foreach (var x in l)\n            if\
    \ (x == 0)\n                count++;\n        return count == 2;", "        long\
    \ sum = 0;\n        foreach (long x in l) {\n            sum += x;\n        }\n\
    \        long zero = 0;\n        foreach (long x in l) {\n            zero +=\
    \ x;\n        }\n        return sum == zero;", "        long sum = 0;\n      \
    \  foreach (long i in l) {\n            sum += i;\n        }\n        if (sum\
    \ == 0) {\n            return true;\n        }\n        long count = 0;\n    \
    \    foreach (long i in l) {\n            count += i;\n            if (sum - i\
    \ == 0) {\n                return true;\n            }\n        }\n        return\
    \ false;", "        long sum = 0;\n        foreach (long x in l) {\n         \
    \   sum += x;\n        }\n        if (sum == 0) {\n            return false;\n\
    \        }\n        long twoSum = 0;\n        long threeSum = 0;\n        foreach\
    \ (long x in l) {\n            if (x == 0) {\n                return false;\n\
    \            }\n            if (sum - x == 0) {\n                twoSum += x;\n\
    \            }\n            if (sum - x == 1) {\n                threeSum += x;\n\
    \            }\n        }\n        if (twoSum == 0 && threeSum == 0) {\n     \
    \       return true;\n        }\n        if (twoSum == 0 && threeSum == 1) {\n\
    \            return true;\n        }\n        if (twoSum == 1 && threeSum == 0)\
    \ {\n            return true;\n        }\n        return false;", "        long\
    \ sum = 0;\n        foreach (long x in l) {\n            sum += x;\n        }\n\
    \        if (sum == 0) {\n            return false;\n        }\n        long twoSum\
    \ = 0;\n        long twoSumCount = 0;\n        foreach (long x in l) {\n     \
    \       twoSum += x;\n            if (twoSum == sum) {\n                twoSumCount++;\n\
    \            }\n        }\n        return twoSumCount == 2;"]
stop_tokens:
- "\n    }\n"

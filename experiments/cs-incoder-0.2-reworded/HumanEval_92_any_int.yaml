name: HumanEval_92_any_int
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Create a function that takes 3 numbers.\n    // Returns true\
  \ if one of the numbers is equal to the sum of the other two, and all numbers are\
  \ integers.\n    // Returns false in any other cases.\n    // Examples\n    // >>>\
  \ AnyInt((float)5L, (float)2L, (float)7L)\n    // (true)\n    // >>> AnyInt((float)3L,\
  \ (float)2L, (float)2L)\n    // (false)\n    // >>> AnyInt((float)3L, (float)-2L,\
  \ (float)1L)\n    // (true)\n    // >>> AnyInt((3.6f), (-2.2f), (float)2L)\n   \
  \ // (false)\n    public static bool AnyInt(float x, float y, float z) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(AnyInt((float)2L,\
  \ (float)3L, (float)1L) == (true));\n    Debug.Assert(AnyInt((2.5f), (float)2L,\
  \ (float)3L) == (false));\n    Debug.Assert(AnyInt((1.5f), (float)5L, (3.5f)) ==\
  \ (false));\n    Debug.Assert(AnyInt((float)2L, (float)6L, (float)2L) == (false));\n\
  \    Debug.Assert(AnyInt((float)4L, (float)2L, (float)2L) == (true));\n    Debug.Assert(AnyInt((2.2f),\
  \ (2.2f), (2.2f)) == (false));\n    Debug.Assert(AnyInt((float)-4L, (float)6L, (float)2L)\
  \ == (true));\n    Debug.Assert(AnyInt((float)2L, (float)1L, (float)1L) == (true));\n\
  \    Debug.Assert(AnyInt((float)3L, (float)4L, (float)7L) == (true));\n    Debug.Assert(AnyInt((3.0f),\
  \ (float)4L, (float)7L) == (false));\n    }\n\n}\n"
completions: ['        return Math.Abs(x - y + z) == Math.Abs(x + y + z);', '        return
    Math.Abs(x - y + z) < 0.0001f;', '        return Math.Abs(x - y) <= Math.Abs(x
    - z) && Math.Abs(x - z) <= Math.Abs(y - z);', '        return Math.Abs(x - y)
    <= Math.Abs(x - z) && Math.Abs(x - z) <= Math.Abs(y - z);', '        return ((x
    + y) == z);', '        return Math.Abs(x - y + z) < 0.0001f;', "        float\
    \ sum = x + y + z;\n        if (sum == (float)Math.Round(sum)) {\n           \
    \ return true;\n        }\n        return false;", "        float sum = x + y\
    \ + z;\n        bool isInt = true;\n        if (sum == (float)sum) {\n       \
    \     isInt = true;\n        }\n        else {\n            isInt = false;\n \
    \       }\n        return isInt;", "        float sum = (x + y + z);\n       \
    \ bool isInt = true;\n        bool isInt2 = true;\n        bool isInt3 = true;\n\
    \        bool isInt4 = true;\n        bool isInt5 = true;\n        bool isInt6\
    \ = true;\n        bool isInt7 = true;\n        bool isInt8 = true;\n        bool\
    \ isInt9 = true;\n        bool isInt10 = true;\n        bool isInt11 = true;\n\
    \        bool isInt12 = true;\n        bool isInt13 = true;\n        bool isInt14\
    \ = true;\n        bool isInt15 = true;\n        bool isInt16 = true;\n      \
    \  bool isInt17 = true;\n        bool isInt18 = true;\n        bool isInt19 =\
    \ true;\n        bool isInt20 = true;\n        bool isInt21 = true;\n        bool\
    \ isInt22 = true;\n        bool isInt23 = true;\n        bool isInt24 = true;\n\
    \        bool isInt25 = true;\n        bool isInt26 = true;\n        bool isInt27\
    \ = true;\n        bool isInt28 = true;\n        bool isInt29 = true;\n      \
    \  bool isInt30 = true;\n        bool isInt31 = true;\n        bool isInt32 =\
    \ true;\n        bool isInt33 = true;\n        bool isInt34 = true;\n        bool\
    \ isInt35 = true;\n        bool isInt36 = true;\n        bool isInt37 = true;\n\
    \        bool isInt38 = true;\n        bool isInt39 = true;\n        bool isInt40\
    \ = true;\n        bool isInt41 = true;\n        bool isInt42 = true;\n      \
    \  bool isInt43 = true;\n        bool isInt44 = true;\n        bool isInt45 =\
    \ true;\n        bool isInt46 = true;\n        bool isInt47 = true;\n        bool\
    \ isInt48 = true;\n        bool isInt49 = true;\n        bool isInt50 = true;\n\
    \        bool isInt51 = true;\n        bool isInt52 = true;\n        bool isInt53\
    \ = true;\n        bool isInt54 = true;\n        bool isInt55 = true;\n      \
    \  bool isInt56 = true;\n        bool isInt57 = true;\n        bool isInt58 =\
    \ true;\n        bool isInt59 = true;\n        bool isInt60 = true;\n        bool\
    \ isInt61 = true;\n        bool isInt62 = true;\n        bool isInt63 = true;\n\
    \        bool isInt64 = true;\n        bool isInt65 = true;\n        bool isInt66\
    \ = true;\n        bool isInt67 = true;\n        bool isInt68 = true;\n      \
    \  bool isInt69 = true;\n        bool isInt70 = true;\n", "        float xx =\
    \ Math.Abs(x);\n        float yy = Math.Abs(y);\n        float zz = Math.Abs(z);\n\
    \        float xy = Math.Abs(x * y);\n        float xz = Math.Abs(x * z);\n  \
    \      float yz = Math.Abs(y * z);\n        float xy = Math.Sqrt(xy);\n      \
    \  float xz = Math.Sqrt(xz);\n        float yz = Math.Sqrt(yz);\n        float\
    \ xy = Math.Pow(xy, 0.5);\n        float xz = Math.Pow(xz, 0.5);\n        float\
    \ yz = Math.Pow(yz, 0.5);\n        float xy = Math.Pow(xy, 0.5);\n        float\
    \ xz = Math.Pow(xz, 0.5);\n        float yz = Math.Pow(yz, 0.5);\n        float\
    \ xy = Math.Pow(xy, 0.5);\n        float xz = Math.Pow(xz, 0.5);\n        float\
    \ yz = Math.Pow(yz, 0.5);\n        float xy = Math.Pow(xy, 0.5);\n        float\
    \ xz = Math.Pow(xz, 0.5);\n        float yz = Math.Pow(yz, 0.5);\n        float\
    \ xy = Math.Pow(xy, 0.5);\n        float xz = Math.Pow(xz, 0.5);\n        float\
    \ yz = Math.Pow(yz, 0.5);\n        float xy = Math.Pow(xy, 0.5);\n        float\
    \ xz = Math.Pow(xz, 0.5);\n        float yz = Math.Pow(yz, 0.5);\n        float\
    \ xy = Math.Pow(xy, 0.5);\n        float xz = Math.Pow(xz, 0.5);\n        float\
    \ yz = Math.Pow(yz, 0.5);\n        float xy = Math.Pow(xy, 0.5);\n        float\
    \ xz = Math.Pow(xz, 0.5);\n        float yz = Math.Pow(yz, 0.5);\n        float\
    \ xy = Math.Pow(xy, 0.5);\n        float xz = Math.Pow(xz, 0.5);\n        float\
    \ yz = Math.Pow(yz, 0.5);\n        float xy = Math.Pow(xy, 0.5);\n        float\
    \ xz = Math.Pow(xz, 0.5);\n        float yz = Math.Pow(yz, 0.5);\n        float\
    \ xy = Math.Pow(xy, 0.5);\n        float xz = Math.Pow(xz, 0.5);\n        float\
    \ yz = Math.Pow(yz, 0.5);\n        float xy = Math.Pow(xy, 0.5);\n        float\
    \ xz = Math.Pow(xz, 0.5);\n        float yz = Math.Pow(yz, 0.5);\n        float\
    \ xy = Math.Pow(xy, 0.5);\n        float xz = Math.Pow(xz, 0.5);\n        float\
    \ yz = Math.Pow(yz, 0.5);\n        float xy = Math.Pow(xy, 0.5);\n        float\
    \ xz = Math.Pow(xz, 0.5);\n        float yz = Math.Pow(yz, 0.5);", '        return
    Math.Abs(x - y + z) < 0.0001f;', '        return Math.Abs(x - y) <= Math.Abs(x
    - z) && Math.Abs(y - z) <= Math.Abs(x - y);', "        if (Math.Abs(x - y) < 0.0001f\
    \ && Math.Abs(x - z) < 0.0001f && Math.Abs(y - z) < 0.0001f) {\n            return\
    \ true;\n        }\n        return false;", '        return ((x == y || x == z)
    && Math.Abs(x - y) == Math.Abs(x - z)) || (Math.Abs(x - y) == Math.Abs(x - z)
    && Math.Abs(x - y) == Math.Abs(y - z));', '        return Math.Abs(x - y + z)
    < 0.0000000001f;', "        float sum = (x + y + z);\n        if (sum == (float)sum)\
    \ return true;\n        else return false;", "        float sum = x + y + z;\n\
    \        if (sum == (float)sum) return true;\n        return false;", '        return
    Math.Abs(x - y + z) == Math.Abs(x + y + z);', "        float sum = x + y + z;\n\
    \        if (sum == (float)sum) return true;\n        if (sum == (float)-sum)\
    \ return false;\n        float xx = x - y;\n        float yy = y - z;\n      \
    \  float zz = z - x;\n        if (xx == (float)xx && yy == (float)yy && zz ==\
    \ (float)zz) return true;\n        if (xx == (float)-xx && yy == (float)-yy &&\
    \ zz == (float)-zz) return true;\n        return false;", '        return Math.Abs(x
    - y + z) < 0.0001f;']
stop_tokens:
- "\n    }\n"

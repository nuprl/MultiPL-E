language: cs
name: HumanEval_118_get_closest_vowel
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllCap = vowelsAll.ToUpper();\n\
    \        string vowelsAllCapLower = vowelsAllCap.ToLower();\n        string vowelsAllCapAll\
    \ = vowelsAllCap.ToUpper() + vowelsAllCap.ToLower();\n        string vowelsAllCapAllLower\
    \ = vowelsAllCapAll.ToLower();\n        string vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n\
    \        string vowelsAllCapAllUpperLower = vowelsAllCapAllUpper.ToLower();\n\
    \        string vowelsAllCapAllUpperLowerUpper = vowelsAllCapAllUpperLower.ToUpper();\n\
    \        string vowelsAllCapAllUpperLowerUpperLower = vowelsAllCapAllUpperLowerUpper.ToLower();\n\
    \        string vowelsAllCapAllUpperLowerUpperLowerUpper = vowelsAllCapAllUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllCapAllUpperLowerUpperLowerUpperLower = vowelsAllCapAllUpperLowerUpperLowerUpper.ToLower();\n\
    \        string vowelsAllCapAllUpperLowerUpperLowerUpperUpper = vowelsAllCapAllUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllCapAllUpperLowerUpperLowerUpperLowerUpper = vowelsAllCapAllUpperLowerUpperLowerUpperLowerUpper.ToLower();\n\
    \        string vowelsAllCapAllUpperLowerUpperLowerUpperLowerUpper = vowelsAllCapAllUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllCapAllUpperLowerUpperLowerUpperLowerUpperUpper = vowelsAllCapAllUpperLowerUpperLowerUpperLowerUpperLowerUpper.ToLower();\n\
    \        string vowelsAllCapAllUpperLowerUpperLowerUpperLowerUpperLowerUpper =\
    \ vowelsAllCapAllUpperLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllCapAllUpper\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj6_lold0.cs(46,36): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRightLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightLeftRightRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightLeftRightLeftRightRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightRight\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_76k7inq.cs(47,38): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalLower\
    \ = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpperLower =\
    \ vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper();\n        string vowelsBothCapitalUpperUpperUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper();\n        string\
    \ vowelsBothCapitalUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_zsc0j1v.cs(35,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperLower''
    is already defined in this scope

    /tmp/tmp_zsc0j1v.cs(38,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperUpperUpper''
    is already defined in this scope

    /tmp/tmp_zsc0j1v.cs(41,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperUpperUpperUpperUpper''
    is already defined in this scope

    /tmp/tmp_zsc0j1v.cs(42,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperUpperUpperUpperUpper''
    is already defined in this scope

    /tmp/tmp_zsc0j1v.cs(44,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperUpperUpperUpperUpperUpper''
    is already defined in this scope

    /tmp/tmp_zsc0j1v.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRightLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightLeft\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightLeftRightLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftRightLeftRightLeft\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_fdeonj0.cs(48,63): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length - 1);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowel\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqy1szrg6.cs(44,88): error CS1026: ) expected

    /tmp/tmpqy1szrg6.cs(44,88): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeftRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRightLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothRightLeftBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothRightLeftBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothBothLeftRightBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothLeftRightBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpski1s_sv.cs(41,107): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsAll = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllLeft = vowels.Substring(0, vowels.Length / 2);\n    \
    \    string vowelsAllRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllMiddle = vowels.Substring(0, vowels.Length / 2);\n  \
    \      string vowelsAllMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n\
    \        string vowelsAllMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsAllAll = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length);\n        string vowelsAllAllLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsAllAllRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length);\n        string vowelsAllAllMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsAllAllMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2 - 1);\n        string vowelsAllAllMiddleRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsAllAllAll = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsAllAllAllLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllAllRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsAllAllAllMiddle = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllAllMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsAllAllAllMiddleRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsAllAllAllAll = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsAllAllAllAllLeft = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj4lddu0s.cs(49,40): error CS1525: Invalid expression term ''}''

    /tmp/tmpj4lddu0s.cs(49,40): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2);\n \
    \       string vowelsMiddleLeftRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 8);\n        string vowelsMiddleLeftLeftLeftLeftRight =\
    \ vowels.Substring(vowels.Length / 8, vowels.Length / 16);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 32);\n        string\
    \ vowelsMiddleLeftLeftLeftLeftRight = vowels.Substring(vowels.Length / 32, vowels.Length\
    \ / 64);\n        string vowelsMiddleLeftLeftLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 128);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 256);\n        string\
    \ vowelsMiddleLeftLeftLeftLeftRight = vowels.Substring(vowels.Length / 256, vowels.Length\
    \ / 512);\n        string vowelsMiddleLeftLeftLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 512, vowels.Length / 1024);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 1024, vowels.Length / 2048);\n        string\
    \ vowelsMiddleLeftLeftLeftLeftRight = vowels.Substring(vowels.Length / 2048, vowels.Length\
    \ / 4096);\n        string vowelsMiddleLeftLeftLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 4096, vowels.Length / 8192);\n        string vowelsMiddleLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 8192, vowels.Length / 16384);\n        string\
    \ vowelsMiddleLeftLeftLeftLeftRight = vowels.Substring(vowels.Length / 16384,\
    \ vowels.Length / 32768);\n        string vowelsMiddleLeftLeftLeftLeft\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_a63o7n5.cs(45,44): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 2);\n       \
    \ string vowelsBothLeft = vowels.Substring(0, vowels.Length - 2);\n        string\
    \ vowelsBothRight = vowels.Substring(vowels.Length - 2, vowels.Length);\n    \
    \    string vowelsBothBoth = vowels.Substring(0, vowels.Length - 3);\n       \
    \ string vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 3);\n      \
    \  string vowelsBothBothRight = vowels.Substring(vowels.Length - 3, vowels.Length);\n\
    \        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothRight = vowels.Substring(vowels.Length - 4,\
    \ vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 5, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 6, vowels.Length);\n        string vowelsBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 7, vowels.Length);\n        string vowelsBothBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothLeft =\
    \ vowels.Substring(0, vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length - 8, vowels.Length);\n        string vowelsBothBothBothBothBothBothBothBoth\
    \ = vowels.Substring\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp71wzmxua.cs(48,73): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string\
    \ vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1);\n        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1);\n        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothBothBothRight = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Sub\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgmns9vmi.cs(36,263): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string vowelsBothCapLower\
    \ = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpper = vowelsBothCapUpper.ToUpper();\n    \
    \    string vowelsBothCapUpperUpperLower = vowelsBothCapUpperUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperLower = vowelsBothCapUpperUpperUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpperUpperUpper = vowelsBothCapUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpperUpperUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpper\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4q3iph1x.cs(47,49): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRightLeftLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightRightLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRightRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightRightRightLeftLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightRight\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb1aj633h.cs(48,38): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsBoth = vowels.Substring(0, vowels.Length - 2);\n        string\
    \ vowelsBothLeft = vowelsBoth.Substring(0, vowelsBoth.Length - 1);\n        string\
    \ vowelsBothRight = vowelsBoth.Substring(vowelsBoth.Length - 1);\n        string\
    \ vowelsBothBoth = vowelsBoth.Substring(0, vowelsBoth.Length - 2);\n        string\
    \ vowelsBothBothLeft = vowelsBothBoth.Substring(0, vowelsBothBoth.Length - 1);\n\
    \        string vowelsBothBothRight = vowelsBothBoth.Substring(vowelsBothBoth.Length\
    \ - 1);\n        string vowelsBothBothBoth = vowelsBothBoth.Substring(0, vowelsBothBoth.Length\
    \ - 2);\n        string vowelsBothBothBothLeft = vowelsBothBothBoth.Substring(0,\
    \ vowelsBothBothBoth.Length - 1);\n        string vowelsBothBothBothRight = vowelsBothBothBoth.Substring(vowelsBothBothBoth.Length\
    \ - 1);\n        string vowelsBothBothBothBoth = vowelsBothBothBoth.Substring(0,\
    \ vowelsBothBothBoth.Length - 2);\n        string vowelsBothBothBothBothLeft =\
    \ vowelsBothBothBothBoth.Substring(0, vowelsBothBothBothBoth.Length - 1);\n  \
    \      string vowelsBothBothBothBothRight = vowelsBothBothBothBoth.Substring(vowelsBothBothBothBoth.Length\
    \ - 1);\n        string vowelsBothBothBothBothBoth = vowelsBothBothBothBoth.Substring(0,\
    \ vowelsBothBothBothBoth.Length - 2);\n        string vowelsBothBothBothBothBothLeft\
    \ = vowelsBothBothBothBothBoth.Substring(0, vowelsBothBothBothBothBoth.Length\
    \ - 1);\n        string vowelsBothBothBothBothBothRight = vowelsBothBothBothBothBoth.Substring(vowelsBothBothBothBothBoth.Length\
    \ - 1);\n        string vowelsBothBothBothBothBothBoth = vowelsBothBothBothBothBothBoth.Substring(0,\
    \ vowelsBothBothBothBothBoth.Length - 2);\n        string vowelsBothBothBothBothBothBothLeft\
    \ = vowelsBothBothBothBothBothBothBoth.Substring(0, vowelsBothBothBothBothBothBoth.Length\
    \ - 1);\n        string vowels\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpye4t851n.cs(44,22): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length - 1);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowel\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqy1szrg6.cs(44,88): error CS1026: ) expected

    /tmp/tmpqy1szrg6.cs(44,88): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n\
    \        string vowelsAllCap = vowelsAll.ToUpper();\n        string vowelsAllCapCap\
    \ = vowelsAllCap.ToUpper();\n        string vowelsAllCapCapCap = vowelsAllCapCap.ToUpper();\n\
    \        string vowelsAllCapCapCapCap = vowelsAllCapCapCap.ToUpper();\n      \
    \  string vowelsAllCapCapCapCapCap = vowelsAllCapCapCapCap.ToUpper();\n      \
    \  string vowelsAllCapCapCapCapCap = vowelsAllCapCapCapCapCap.ToUpper();\n   \
    \     string vowelsAllCapCapCapCapCapCap = vowelsAllCapCapCapCapCapCap.ToUpper();\n\
    \        string vowelsAllCapCapCapCapCapCap = vowelsAllCapCapCapCapCapCapCap.ToUpper();\n\
    \        string vowelsAllCapCapCapCapCapCapCap = vowelsAllCapCapCapCapCapCapCapCap.ToUpper();\n\
    \        string vowelsAllCapCapCapCapCapCapCap = vowelsAllCapCapCapCapCapCapCapCap.ToUpper();\n\
    \        string vowelsAllCapCapCapCapCapCapCap = vowelsAllCapCapCapCapCapCapCapCap.ToUpper();\n\
    \        string vowelsAllCapCapCapCapCapCapCap = vowelsAllCapCapCapCapCapCapCapCap.ToUpper();\n\
    \        string vowelsAllCapCapCapCapCapCapCapCap = vowelsAllCapCapCapCapCapCapCapCapCap.ToUpper();\n\
    \        string vowelsAllCapCapCapCapCapCapCapCap = vowelsAllCapCapCapCapCapCapCapCapCap.ToUpper();\n\
    \        string vowelsAllCapCapCapCapCapCapCapCap = vowelsAllCapCapCapCapCapCapCapCapCapCap.ToUpper();\n\
    \        string vowelsAllCapCapCapCapCapCapCapCap = vowelsAllCapCapCapCapCapCapCapCapCapCap.ToUpper();\n\
    \        string vowelsAllCapCapCapCapCapCap\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsurr2twg.cs(45,43): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2);\n \
    \       string vowelsMiddleLeftRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsMiddleLeftLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 2);\n        string vowelsMiddleRightRightLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsMiddleLeftRightLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 2);\n        string vowelsMiddleRightRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length);\n        string vowelsMiddleRightRightLeftRightRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 2);\n        string vowelsMiddleRightRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdaut6k26.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllCap = vowelsAll.ToUpper();\n\
    \        string vowelsAllCapLower = vowelsAllCap.ToLower();\n        string vowelsAllCapAll\
    \ = vowelsAllCap.ToUpper() + vowelsAllCap.ToLower();\n        string vowelsAllCapAllLower\
    \ = vowelsAllCapAll.ToLower();\n        string vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n\
    \        string vowelsAllCapAllLowerUpper = vowelsAllCapAll.ToUpper() + vowelsAllCapAll.ToLower();\n\
    \        string vowelsAllCapAllLowerUpperAll = vowelsAllCapAll.ToUpper() + vowelsAllCapAll.ToLower()\
    \ + vowelsAllCapAll.ToUpper();\n        string vowelsAllCapAllLowerUpperAllLower\
    \ = vowelsAllCapAll.ToUpper() + vowelsAllCapAll.ToLower() + vowelsAllCapAll.ToUpper()\
    \ + vowelsAllCapAll.ToLower();\n        string vowelsAllCapAllLowerUpperAllLowerUpper\
    \ = vowelsAllCapAll.ToUpper() + vowelsAllCapAll.ToLower() + vowelsAllCapAll.ToUpper()\
    \ + vowelsAllCapAll.ToLower() + vowelsAllCapAll.ToUpper() + vowelsAllCapAll.ToLower();\n\
    \        string vowelsAllCapAllLowerUpperAllLowerUpperAll = vowelsAllCapAll.ToUpper()\
    \ + vowelsAllCapAll.ToLower() + vowelsAllCapAll.ToUpper() + vowelsAllCapAll.ToLower()\
    \ + vowelsAllCapAll.ToUpper() + vowelsAllCapAll.ToLower() + vowelsAllCapAll.ToUpper();\n\
    \        string vowelsAllCapAllLowerUpperAllLowerUpperAllLower = vowelsAllCapAll.ToUpper()\
    \ + vowelsAllCapAll.\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpylzslw0f.cs(41,109): error CS1001: Identifier expected

    /tmp/tmpylzslw0f.cs(41,109): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string vowelsBothCapLower\
    \ = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n    \
    \    string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n        string\
    \ vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n        string vowelsBothCapUpperLower\
    \ = vowelsBothCapUpper.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n    \
    \    string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n        string\
    \ vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n        string vowelsBothCapUpperLower\
    \ = vowelsBothCapUpper.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n    \
    \    string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n        string\
    \ vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n        string vowelsBothCapUpperLower\
    \ = vowelsBothCapUpper.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n    \
    \    string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n        string\
    \ vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n        string vowelsBothCapUpper\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp04hd4m8y.cs(52,34): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCaps = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string vowelsBothCapsLower\
    \ = vowelsBothCaps.ToLower();\n        string vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower();\n  \
    \      string vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower();\n    \
    \    string vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower();\n      \
    \  string vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower();\n        string\
    \ vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower();\n        string vowelsBothCapsUpperLower\
    \ = vowelsBothCapsUpper.ToLower();\n        string vowelsBothCapsUpperLower =\
    \ vowelsBothCapsUpper.ToLower();\n        string vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower();\n  \
    \      string vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower();\n    \
    \    string vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower();\n      \
    \  string vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower();\n        string\
    \ vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower();\n        string vowelsBothCapsUpperLower\
    \ = vowelsBothCapsUpper.ToLower();\n        string vowelsBothCapsUpperLower =\
    \ vowelsBothCapsUpper.ToLower();\n        string vowelsBothCapsUpperLower = vowelsBothCapsUpper.ToLower();\n\
    \        string vowelsBothCapsUpperLow\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdlwojuum.cs(50,38): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3jzw3awl.cs(33,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(34,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(35,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(36,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(37,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(38,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(39,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(40,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(41,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(42,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(43,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(44,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(45,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(46,16): error CS0128: A local variable or function name'
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 2);\n       \
    \ string vowelsBothLeft = vowels.Substring(0, vowels.Length - 2);\n        string\
    \ vowelsBothRight = vowels.Substring(vowels.Length - 2, vowels.Length);\n    \
    \    string vowelsBothBoth = vowels.Substring(0, vowels.Length - 3);\n       \
    \ string vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 3);\n      \
    \  string vowelsBothBothRight = vowels.Substring(vowels.Length - 3, vowels.Length);\n\
    \        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothRight = vowels.Substring(vowels.Length - 4,\
    \ vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 5, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 6, vowels.Length);\n        string vowelsBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 7, vowels.Length);\n        string vowelsBothBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothLeft =\
    \ vowels.Substring(0, vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length - 8, vowels.Length);\n        string vowelsBothBothBothBothBothBothBothBoth\
    \ = vowels.Substring\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp71wzmxua.cs(48,73): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllCaps = vowelsAll.ToUpper();\n\
    \        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string\
    \ vowelsAllCapsAll = vowelsAllCapsLower + vowelsAllCaps;\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllCaps = vowelsAllCapsAll.ToUpper();\n        string\
    \ vowelsAllCapsAllCapsLower = vowelsAllCapsAllCaps.ToLower();\n        string\
    \ vowelsAllCapsAllCapsAll = vowelsAllCapsAllCapsLower + vowelsAllCapsAllCaps;\n\
    \        string vowelsAllCapsAllCapsAllUpper = vowelsAllCapsAllCapsAll.ToUpper();\n\
    \        string vowelsAllCapsAllCapsAllLower = vowelsAllCapsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllCapsAllCaps = vowelsAllCapsAllCapsAll.ToUpper();\n\
    \        string vowelsAllCapsAllCapsAllCapsLower = vowelsAllCapsAllCapsAllCaps.ToLower();\n\
    \        string vowelsAllCapsAllCapsAllCapsAll = vowelsAllCapsAllCapsAllCapsLower\
    \ + vowelsAllCapsAllCapsAllCaps;\n        string vowelsAllCapsAllCapsAllCapsAllUpper\
    \ = vowelsAllCapsAllCapsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllCapsAllCapsAllLower\
    \ = vowelsAllCapsAllCapsAllCapsAll.ToLower();\n        string \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsqtdfbzc.cs(46,15): error CS1001: Identifier expected

    /tmp/tmpsqtdfbzc.cs(46,15): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCapital = vowelsBoth.ToUpper();\n        string vowelsBothCapitalLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n\
    \        string vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n      \
    \  string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string\
    \ vowelsBothCapitalUpperLower = vowelsBothCapitalUpper.ToLower();\n        string\
    \ vowelsBothCapitalUpperUpper = vowelsBothCapitalUpper.ToUpper();\n        string\
    \ vowelsBothCapitalUpperUpperLower = vowelsBothCapitalUpperUpper.ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpper = vowelsBothCapitalUpperUpper.ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperLower = vowelsBothCapitalUpperUpperUpper.ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpper = vowelsBothCapitalUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperLower = vowelsBothCapitalUpperUpperUpperUpper.ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpper = vowelsBothCapitalUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperLower = vowelsBothCapitalUpperUpperUpperUpperUpper.ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpper = vowelsBothCapitalUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpperLower = vowelsBothCapitalUpperUpperUpperUpperUpperUpper.ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapitalUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpperLower = vowelsBoth\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz8z73bz9.cs(47,81): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowel\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplumd4y9w.cs(37,173): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2);\n   \
    \     string vowelsBothRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsBothBothLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothMiddle =\
    \ vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothBoth\
    \ = vowels.Substring(0, vowels.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp98ny3bkc.cs(48,76): error CS1001: Identifier expected

    /tmp/tmp98ny3bkc.cs(48,76): error CS1026: ) expected

    /tmp/tmp98ny3bkc.cs(48,76): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 2);\n       \
    \ string vowelsBothLeft = vowels.Substring(0, vowels.Length - 2);\n        string\
    \ vowelsBothRight = vowels.Substring(vowels.Length - 2, vowels.Length);\n    \
    \    string vowelsBothBoth = vowels.Substring(0, vowels.Length - 3);\n       \
    \ string vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 3);\n      \
    \  string vowelsBothBothRight = vowels.Substring(vowels.Length - 3, vowels.Length);\n\
    \        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothRight = vowels.Substring(vowels.Length - 4,\
    \ vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 5, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 6, vowels.Length);\n        string vowelsBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 7, vowels.Length);\n        string vowelsBothBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothLeft =\
    \ vowels.Substring(0, vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length - 8, vowels.Length);\n        string vowelsBothBothBothBothBothBothBothBoth\
    \ = vowels.Substring\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp71wzmxua.cs(48,73): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string vowelsBothCapLower\
    \ = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpper = vowelsBothCapUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperLower = vowelsBothCapUpperUpper;\n    \
    \    string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperLower = vowelsBothCapUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperLower;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperLower\
    \ = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperLower;\n  \
    \      string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperLower\
    \ = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperLower;\n  \
    \      string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpper\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9welajtj.cs(47,74): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalLower\
    \ = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpperLower =\
    \ vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper();\n        string vowelsBothCapitalUpperUpperUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper();\n        string\
    \ vowelsBothCapitalUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_zsc0j1v.cs(35,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperLower''
    is already defined in this scope

    /tmp/tmp_zsc0j1v.cs(38,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperUpperUpper''
    is already defined in this scope

    /tmp/tmp_zsc0j1v.cs(41,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperUpperUpperUpperUpper''
    is already defined in this scope

    /tmp/tmp_zsc0j1v.cs(42,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperUpperUpperUpperUpper''
    is already defined in this scope

    /tmp/tmp_zsc0j1v.cs(44,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperUpperUpperUpperUpperUpper''
    is already defined in this scope

    /tmp/tmp_zsc0j1v.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 2);\n       \
    \ string vowelsBothLeft = vowels.Substring(0, vowels.Length - 2);\n        string\
    \ vowelsBothRight = vowels.Substring(vowels.Length - 2, vowels.Length);\n    \
    \    string vowelsBothBoth = vowels.Substring(0, vowels.Length - 3);\n       \
    \ string vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 3);\n      \
    \  string vowelsBothBothRight = vowels.Substring(vowels.Length - 3, vowels.Length);\n\
    \        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothRight = vowels.Substring(vowels.Length - 4,\
    \ vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 5, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 6, vowels.Length);\n        string vowelsBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 7, vowels.Length);\n        string vowelsBothBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothLeft =\
    \ vowels.Substring(0, vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length - 8, vowels.Length);\n        string vowelsBothBothBothBothBothBothBothBoth\
    \ = vowels.Substring\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp71wzmxua.cs(48,73): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string vowelsBothCapLower\
    \ = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperLowerUpper = vowelsBothCapUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpper = vowelsBothCapUpperLowerUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperLowerUpperUpperUpperUpper\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_0dwpws2.cs(44,135): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddle2 = vowels.Substring(0, vowels.Length / 2);\n        string\
    \ vowelsMiddle3 = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddle4\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddle5 = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddle6 = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddle7 = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsMiddle8 = vowels.Substring(0, vowels.Length / 2);\n    \
    \    string vowelsMiddle9 = vowels.Substring(0, vowels.Length / 2);\n        string\
    \ vowelsMiddle10 = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddle11\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddle12 = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddle13 = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddle14 = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsMiddle15 = vowels.Substring(0, vowels.Length / 2);\n   \
    \     string vowelsMiddle16 = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddle17 = vowels.Substring(0, vowels.Length / 2);\n        string\
    \ vowelsMiddle18 = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddle19\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddle20 = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddle21 = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddle22 = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsMiddle23 = vowels.Substring(0, vowels.Length / 2);\n   \
    \     string vowelsMiddle24 = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddle25 = vowels.Substring(0, vowels.Length / 2);\n        string\
    \ vowelsMiddle26 = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddle27\
    \ = vowels.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa0b76zyi.cs(53,40): error CS1001: Identifier expected

    /tmp/tmpa0b76zyi.cs(53,40): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpperLower = vowelsBothUpper.ToLower() + vowelsBothLower.ToLower();\n\
    \        string vowelsBothLowerUpper = vowelsBothLower.ToUpper() + vowelsBothUpper.ToLower();\n\
    \        string vowelsBothLowerUpperLower = vowelsBothLowerUpper.ToLower() + vowelsBothUpperLower.ToLower();\n\
    \        string vowelsBothUpperLowerUpper = vowelsBothUpperLower.ToUpper() + vowelsBothLowerUpper.ToLower();\n\
    \        string vowelsBothLowerUpperLowerUpper = vowelsBothLowerUpperLower.ToUpper()\
    \ + vowelsBothUpperLowerUpper.ToLower();\n        string vowelsBothUpperLowerUpperLowerUpper\
    \ = vowelsBothUpperLowerUpperLower.ToUpper() + vowelsBothUpperLowerUpperUpper.ToLower();\n\
    \        string vowelsBothLowerUpperLowerUpperLowerUpper = vowelsBothLowerUpperLowerUpperLower.ToUpper()\
    \ + vowelsBothUpperLowerUpperUpperUpper.ToLower();\n        string vowelsBothUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsBothUpperLowerUpperLowerUpperLower.ToUpper() + vowelsBothUpperLowerUpperUpperUpperUpper.ToLower();\n\
    \        string vowelsBothLowerUpperLowerUpperLowerUpperLowerUpper = vowelsBothLowerUpperLowerUpperLowerUpperLower.ToUpper()\
    \ + vowelsBothUpperLowerUpperLowerUpperUpperUpper.ToLower();\n        string vowelsBothUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsBothUpperLowerUpperLowerUpperLowerUpperLower.ToUpper() + vowelsBothUpperLowerUpperLowerUpperUpperUpperUpper.ToLower();\n\
    \        string vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper =\
    \ vowelsBothLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper() + vowelsBothUpperLowerUpperLowerUpperUpperUpperUpperUpper.ToLower();\n\
    \        string vowelsBothUpperLowerUpperLowerUpperLowerUpperLowerUpperLowerUpper\
    \ = vowelsBothUpperLowerUpperLowerUpperLowerUpperLowerUpperLower.To\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdcn3cx8k.cs(41,147): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsAll = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsAllLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n\
    \        string vowelsAllRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsAllMiddle = vowels.Substring(0, vowels.Length\
    \ / 4);\n        string vowelsAllMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 4 - 1);\n        string vowelsAllMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4 + 1);\n        string vowelsAllMiddleAll = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsAllMiddleAllLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsAllMiddleAllRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8 + 1);\n        string vowelsAllMiddleAllMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsAllMiddleAllMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsAllMiddleAllMiddleRight = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 16 + 1);\n        string vowelsAllMiddleAllMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 32);\n        string vowelsAllMiddleAllMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 32 - 1);\n        string vowelsAllMiddleAllMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32 + 1);\n        string\
    \ vowelsAllMiddleAllMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 64);\n\
    \        string vowelsAllMiddleAllMiddleMiddleLeft  = vowels.Substring(0, vowels.Length\
    \ / 64 - 1);\n        string vowelsAllMiddleAllMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64 + 1);\n        string vowelsAllMiddleAllMiddleMiddleMiddle\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp17rohnrr.cs(48,52): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsMiddleMiddle = vowels.Substring(0, vowels.Length\
    \ / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4 + 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 16);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 16 + 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 64);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64 + 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128 + 1);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpypqbuh35.cs(48,15): error CS1001: Identifier expected

    /tmp/tmpypqbuh35.cs(48,15): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n        string\
    \ vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp47qjzjk9.cs(55,45): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsCount = vowels.ToLower();\n        string\
    \ vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnplewr1b.cs(55,45): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothBoth = vowelsBothUpper + vowelsBothLower;\n        string\
    \ vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper\
    \ = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n\
    \        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string\
    \ vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper\
    \ = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n\
    \        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string\
    \ vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper\
    \ = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n\
    \        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string\
    \ vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper\
    \ = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n\
    \        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string\
    \ vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper\
    \ = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n\
    \        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string\
    \ vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper\
    \ = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n\
    \        string vowelsBothBothUpper = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpctxiyu1d.cs(54,44): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length);\n        string vowelsLeft\
    \ = vowelsLeft.ToUpper();\n        string vowelsRight = vowelsRight.ToUpper();\n\
    \        string vowelsAll = vowelsLeft + vowelsRight;\n        string vowelsAllUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllLowerUpper = vowelsAll.ToLower();\n        string vowelsAllLowerUpperUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLowerUpperUpperUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLowerUpperUpperUpperUpper = vowelsAll.ToUpper();\n  \
    \      string vowelsAllLowerUpperUpperUpperUpperUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLowerUpperUpperUpperUpperUpperUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLowerUpperUpperUpperUpperUpperUpperUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLowerUpperUpperUpperUpperUpperUpperUpperUpper = vowelsAll.ToUpper();\n\
    \        string vowelsAllLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper =\
    \ vowelsAll.ToUpper();\n        string vowelsAllLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLowerUpperUpperUpperUpperUpperUpperUpper\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplqbu6fon.cs(49,65): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddle2 = vowels.Substring(vowels.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddle3 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 3);\n        string vowelsMiddle4 = vowels.Substring(vowels.Length / 3, vowels.Length\
    \ / 4);\n        string vowelsMiddle5 = vowels.Substring(vowels.Length / 4, vowels.Length\
    \ / 5);\n        string vowelsMiddle6 = vowels.Substring(vowels.Length / 5, vowels.Length\
    \ / 6);\n        string vowelsMiddle7 = vowels.Substring(vowels.Length / 6, vowels.Length\
    \ / 7);\n        string vowelsMiddle8 = vowels.Substring(vowels.Length / 7, vowels.Length\
    \ / 8);\n        string vowelsMiddle9 = vowels.Substring(vowels.Length / 8, vowels.Length\
    \ / 9);\n        string vowelsMiddle10 = vowels.Substring(vowels.Length / 9, vowels.Length\
    \ / 10);\n        string vowelsMiddle11 = vowels.Substring(vowels.Length / 10,\
    \ vowels.Length / 11);\n        string vowelsMiddle12 = vowels.Substring(vowels.Length\
    \ / 11, vowels.Length / 12);\n        string vowelsMiddle13 = vowels.Substring(vowels.Length\
    \ / 12, vowels.Length / 13);\n        string vowelsMiddle14 = vowels.Substring(vowels.Length\
    \ / 13, vowels.Length / 14);\n        string vowelsMiddle15 = vowels.Substring(vowels.Length\
    \ / 14, vowels.Length / 15);\n        string vowelsMiddle16 = vowels.Substring(vowels.Length\
    \ / 15, vowels.Length / 16);\n        string vowelsMiddle17 = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 17);\n        string vowelsMiddle18 = vowels.Substring(vowels.Length\
    \ / 17, vowels.Length / 18);\n        string vowelsMiddle19 = vowels.Substring(vowels.Length\
    \ / 18, vowels.Length / 19);\n        string vowelsMiddle20 = vowels.Substring(vowels.Length\
    \ / 19, vowels.Length / 20);\n        string vowelsMiddle21 = vowels.Substring(vowels.Length\
    \ / 20, vowels.Length / 21);\n        string vowelsMiddle22 = vowels.Substring(vowels.Length\
    \ / 21, \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6yw86x4f.cs(48,69): error CS1525: Invalid expression term ''}''

    /tmp/tmp6yw86x4f.cs(48,69): error CS1026: ) expected

    /tmp/tmp6yw86x4f.cs(48,69): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n\
    \        string vowelsBothRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothMiddle =\
    \ vowels.Substring(vowels.Length / 2, vowels.Length / 2 - 1);\n        string\
    \ vowels\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqjnkujly.cs(48,22): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle2 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle3 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle4 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle5 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle6 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle7 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle8 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle9 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle10 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle11 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle12 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle13 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle14 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle15 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle16 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle17 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle18 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle19 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle20 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle21 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddle22 = vowels.Substring(vowels.Length / \n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4ualils6.cs(48,65): error CS1525: Invalid expression term ''}''

    /tmp/tmp4ualils6.cs(48,65): error CS1026: ) expected

    /tmp/tmp4ualils6.cs(48,65): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowel\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa16hz_fy.cs(46,85): error CS1026: ) expected

    /tmp/tmpa16hz_fy.cs(46,85): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length - 1);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowel\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdevdt767.cs(44,88): error CS1026: ) expected

    /tmp/tmpdevdt767.cs(44,88): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowelsLeft + vowelsRight;\n        string\
    \ vowelsBothMiddle = vowelsLeft + vowelsMiddle + vowelsRight;\n        string\
    \ vowelsBothMiddleUpper = vowelsLeft + vowelsMiddle.ToUpper() + vowelsRight;\n\
    \        string vowelsBothMiddleLower = vowelsLeft + vowelsMiddle.ToLower() +\
    \ vowelsRight;\n        string vowelsBothMiddleUpperLower = vowelsLeft + vowelsMiddle.ToUpper()\
    \ + vowelsMiddle.ToLower() + vowelsRight;\n        string vowelsBothMiddleLowerUpper\
    \ = vowelsLeft + vowelsMiddle.ToLower() + vowelsMiddle.ToUpper() + vowelsRight;\n\
    \        string vowelsBothMiddleLowerLower = vowelsLeft + vowelsMiddle.ToLower()\
    \ + vowelsMiddle.ToLower() + vowelsRight;\n        string vowelsBothMiddleLowerUpperLower\
    \ = vowelsLeft + vowelsMiddle.ToLower() + vowelsMiddle.ToUpper() + vowelsMiddle.ToLower()\
    \ + vowelsRight;\n        string vowelsBothMiddleLowerUpperUpper = vowelsLeft\
    \ + vowelsMiddle.ToLower() + vowelsMiddle.ToUpper() + vowelsMiddle.ToUpper() +\
    \ vowelsRight;\n        string vowelsBothMiddleLowerUpperUpperLower = vowelsLeft\
    \ + vowelsMiddle.ToLower() + vowelsMiddle.ToUpper() + vowelsMiddle.ToUpper() +\
    \ vowelsMiddle.ToLower() + vowelsRight;\n        string vowelsBothMiddleLowerUpperUpperUpper\
    \ = vowelsLeft + vowelsMiddle.ToLower() + vowelsMiddle.ToUpper() + vowelsMiddle.ToUpper()\
    \ + vowelsMiddle.ToUpper() + vowelsRight;\n        string vowelsBothMiddleLowerUpperUpperUpperLower\
    \ = vowelsLeft + vowelsMiddle.ToLower() + vowelsMiddle.ToUpper() + vowelsMiddle.ToUpper()\
    \ + vowelsMiddle.ToUpper() + vowelsMiddle.ToLower() + vowel\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp952p18mz.cs(39,203): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(vowels.Length / 2);\n        string\
    \ vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n        string vowelsAllUpper\
    \ = vowelsAll.ToUpper();\n        string vowelsAllLower = vowelsAll.ToLower();\n\
    \        string vowelsAllCap = vowelsAll.ToUpper();\n        string vowelsAllCapLower\
    \ = vowelsAllCap.ToLower();\n        string vowelsAllCapUp = vowelsAllCap.ToUpper();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n\
    \        string vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string\
    \ vowelsAllCapUpLower = vowelsAllCapUp.ToLower();\n        string vowelsAllCapUpLower\
    \ = vowelsAllCap\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyz1o4odv.cs(52,50): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length);\n        string vowelsMiddle\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleRight = word.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleLeft = word.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = word.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleRightLeft = word.Substring(word.Length / 2);\n   \
    \     string vowelsMiddleLeftRightLeft = word.Substring(word.Length / 2);\n  \
    \      string vowelsMiddleRightLeftLeft = word.Substring(word.Length / 2);\n \
    \       string vowelsMiddleLeftRightLeftRight = word.Substring(word.Length / 2);\n\
    \        string vowelsMiddleRightLeftLeftRight = word.Substring(word.Length /\
    \ 2);\n        string vowelsMiddleLeftRightLeftRightLeft = word.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRight = word.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeft = word.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRight = word.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeft =\
    \ word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeft\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = word.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeft\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5mhqwqs4.cs(49,41): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsCount = vowels.ToLower();\n        string\
    \ vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp47qjzjk9.cs(55,45): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpperLower = vowelsBothUpper.ToLower() + vowelsBothLower.ToLower();\n\
    \        string vowelsBothLowerUpper = vowelsBothLower.ToUpper() + vowelsBothUpper.ToLower();\n\
    \        string vowelsBothUpperLowerUpper = vowelsBothUpperLower.ToUpper() + vowelsBothLowerUpper.ToLower();\n\
    \        string vowelsBothLowerUpperUpper = vowelsBothLowerUpper.ToUpper() + vowelsBothUpperLower.ToLower();\n\
    \        string vowelsBothLowerUpperLowerUpper = vowelsBothLowerUpperUpper.ToUpper()\
    \ + vowelsBothUpperLowerUpper.ToLower();\n        string vowelsBothLowerUpperLowerUpperUpper\
    \ = vowelsBothLowerUpperLowerUpper.ToUpper() + vowelsBothUpperLowerUpperUpper.ToLower();\n\
    \        string vowelsBothLowerUpperLowerUpperUpperUpper = vowelsBothLowerUpperLowerUpperUpper.ToUpper()\
    \ + vowelsBothUpperLowerUpperUpperUpper.ToLower();\n        string vowelsBothLowerUpperLowerUpperUpperUpperUpper\
    \ = vowelsBothLowerUpperLowerUpperUpperUpper.ToUpper() + vowelsBothUpperLowerUpperUpperUpperUpper.ToLower();\n\
    \        string vowelsBothLowerUpperLowerUpperUpperUpperUpperUpper = vowelsBothLowerUpperLowerUpperUpperUpperUpper.ToUpper()\
    \ + vowelsBothUpperLowerUpperUpperUpperUpperUpper.ToLower();\n        string vowelsBothLowerUpperLowerUpperUpperUpperUpperUpper\
    \ = vowelsBothLowerUpperLowerUpperUpperUpperUpperUpper.ToUpper() + vowelsBothUpperLowerUpperUpperUpperUpperUpper.ToLower();\n\
    \        string vowelsBothLowerUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothLowerUpperLowerUpperUpperUpperUpperUpperUpper.ToUpper()\
    \ + vowelsBothUpperLowerUpperUpperUpperUpperUpperUpper.ToLower();\n        string\
    \ vowelsBothLowerUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothLowerUpperLowerUpperUpperUpperUpperUpperUpper.ToUpper()\
    \ + vowelsBothUpperLowerUpper\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpy01pfild.cs(41,167): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleRight = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2);\n       \
    \ string vowelsMiddleLeftRight = vowels.Substring(0, vowels.Length / 2);\n   \
    \     string vowelsMiddleRightLeft = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsMiddleLeftLeftRight = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRightRight = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRightRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightRight\
    \ = vowels.Substring(0, vowels.Length / \n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2zn5_8kv.cs(48,112): error CS1525: Invalid expression term ''}''

    /tmp/tmp2zn5_8kv.cs(48,112): error CS1026: ) expected

    /tmp/tmp2zn5_8kv.cs(48,112): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n\
    \        string vowelsBothRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 - 1);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBothMiddle\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2 - 1);\n        string\
    \ vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwnznq2ne.cs(48,21): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string vowelsBothCapLower\
    \ = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpper = vowelsBothCapUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbnxrqry2.cs(45,145): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 2);\n       \
    \ string vowelsBothLeft = vowels.Substring(0, vowels.Length - 2);\n        string\
    \ vowelsBothRight = vowels.Substring(vowels.Length - 2, vowels.Length);\n    \
    \    string vowelsBothBoth = vowels.Substring(0, vowels.Length - 3);\n       \
    \ string vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 3);\n      \
    \  string vowelsBothBothRight = vowels.Substring(vowels.Length - 3, vowels.Length);\n\
    \        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothRight = vowels.Substring(vowels.Length - 4,\
    \ vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 5, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 6, vowels.Length);\n        string vowelsBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 7, vowels.Length);\n        string vowelsBothBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothLeft =\
    \ vowels.Substring(0, vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length - 8, vowels.Length);\n        string vowelsBothBothBothBothBothBothBothBoth\
    \ = vowels.Substring\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp71wzmxua.cs(48,73): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(word.Length - 1);\n   \
    \     string vowelsMiddle = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleLeft = vowelsMiddle.Substring(0, word.Length - 1);\n        string\
    \ vowelsMiddleRight = vowelsMiddle.Substring(word.Length - 1);\n        string\
    \ vowelsMiddleMiddle = word.Substring(0, word.Length / 2);\n        string vowelsMiddleMiddleLeft\
    \ = vowelsMiddleMiddle.Substring(0, word.Length - 1);\n        string vowelsMiddleMiddleRight\
    \ = vowelsMiddleMiddle.Substring(word.Length - 1);\n        string vowelsMiddleMiddleMiddle\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddle.Substring(0, word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddle.Substring(word.Length - 1);\n        string vowelsMiddleMiddleMiddle\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddle.Substring(0, word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddle.Substring(word.Length - 1);\n        string vowelsMiddleMiddleMiddle\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddle.Substring(0, word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddle.Substring(word.Length - 1);\n        string vowelsMiddleMiddleMiddle\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddle.Substring(0, word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddle.Substring(word.Length - 1);\n        string vowelsMiddleMiddleMiddle\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddle.Substring(0, word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddle.Substring(word.Length - 1);\n        string vowelsMiddleMiddleMiddle\
    \ = word.Substring(0, word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddle.Substring(0, word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddle.Sub\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjtakp6cv.cs(50,70): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalLower\
    \ = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpperLower =\
    \ vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCap\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqgzxxgxl.cs(50,29): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 2);\n       \
    \ string vowelsBothLeft = vowels.Substring(0, vowels.Length - 2);\n        string\
    \ vowelsBothRight = vowels.Substring(vowels.Length - 2, vowels.Length);\n    \
    \    string vowelsBothBoth = vowels.Substring(0, vowels.Length - 3);\n       \
    \ string vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 3);\n      \
    \  string vowelsBothBothRight = vowels.Substring(vowels.Length - 3, vowels.Length);\n\
    \        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothRight = vowels.Substring(vowels.Length - 4,\
    \ vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 5, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 6, vowels.Length);\n        string vowelsBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 7, vowels.Length);\n        string vowelsBothBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothLeft =\
    \ vowels.Substring(0, vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length - 8, vowels.Length);\n        string vowelsBothBothBothBothBothBothBothBoth\
    \ = vowels.Substring\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp71wzmxua.cs(48,73): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpperLower = vowelsBothUpper.ToLower();\n        string\
    \ vowelsBothLowerUpper = vowelsBothLower.ToUpper();\n        string vowelsBothUpperUpper\
    \ = vowelsBothUpper.ToUpper();\n        string vowelsBothLowerUpperUpper = vowelsBothLowerUpper.ToUpper();\n\
    \        string vowelsBothUpperLowerUpper = vowelsBothUpperLower.ToUpper();\n\
    \        string vowelsBothLowerUpperUpperUpper = vowelsBothLowerUpperUpper.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperUpper = vowelsBothUpperLowerUpperUpper.ToUpper();\n\
    \        string vowelsBothLowerUpperUpperUpper = vowelsBothLowerUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperUpperUpper = vowelsBothUpperLowerUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothLowerUpperUpperUpperUpper = vowelsBothLowerUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperUpperUpper = vowelsBothUpperLowerUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothLowerUpperUpperUpperUpperUpper = vowelsBothLowerUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperUpperUpperUpper = vowelsBothUpperLowerUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothLowerUpperUpperUpperUpperUpperUpper = vowelsBothLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperUpperUpperUpperUpper = vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBothUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper.ToUpper();\n\
    \        string vowelsBothLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBothLower\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_10cmee3.cs(47,84): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string vowelsBothCapLower\
    \ = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpper = vowelsBothCapUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbnxrqry2.cs(45,145): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftRightLeftLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftRightLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftLeftLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightLeftLeftLeftRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftLeftLeftRightRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightLeftLeftLeftRightLeft\
    \ = vowels.Substring(word.Length / 2, vowels.\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvkyx4b8n.cs(48,102): error CS1001: Identifier expected

    /tmp/tmpvkyx4b8n.cs(48,102): error CS1026: ) expected

    /tmp/tmpvkyx4b8n.cs(48,102): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqtmgoume.cs(30,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(31,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(32,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(33,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(34,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(35,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(36,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(37,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(38,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(39,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(40,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(41,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(42,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(43,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(44,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /'
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllCap = vowelsAll.ToUpper();\n\
    \        string vowelsAllCapLower = vowelsAllCap.ToLower();\n        string vowelsAllCapAll\
    \ = vowelsAllCap.ToUpper() + vowelsAllCap.ToLower();\n        string vowelsAllCapAllLower\
    \ = vowelsAllCapAll.ToLower();\n        string vowelsAllCapAllUpper = vowelsAllCapAll.ToUpper();\n\
    \        string vowelsAllCapAllUpperLower = vowelsAllCapAllUpper.ToLower();\n\
    \        string vowelsAllCapAllUpperLowerUpper = vowelsAllCapAllUpperLower.ToUpper();\n\
    \        string vowelsAllCapAllUpperLowerUpperLower = vowelsAllCapAllUpperLowerUpper.ToLower();\n\
    \        string vowelsAllCapAllUpperLowerUpperUpper = vowelsAllCapAllUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllCapAllUpperLowerUpperUpperLower = vowelsAllCapAllUpperLowerUpperUpperLower.ToUpper();\n\
    \        string vowelsAllCapAllUpperLowerUpperUpperUpper = vowelsAllCapAllUpperLowerUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsAllCapAllUpperLowerUpperUpperUpperLower = vowelsAllCapAllUpperLowerUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsAllCapAllUpperLowerUpperUpperUpperUpper = vowelsAllCapAllUpperLowerUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsAllCapAllUpperLowerUpperUpperUpperUpperLower = vowelsAllCapAllUpperLowerUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsAllCapAllUpperLowerUpperUpperUpperUpperUpper = vowelsAllCapAllUpperLowerUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsAllCapAllUpperLowerUpperUpperUpperUpperUpperLower = vowelsAllCapAllUpper\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4mvxfx6q.cs(46,94): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeftRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBothLeftRightBoth = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBothBothRightBoth = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeftRightBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Sub\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjthz67w3.cs(37,195): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalLower\
    \ = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpperLower =\
    \ vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToLower();\n        string vowelsBothCapitalUpperUpperUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToLower().ToLower().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToLower().ToLower().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToLower().ToLower().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToLower().ToLower().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperLower = vowelsBothCapitalUpper.ToUpper().\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9405eddy.cs(45,84): error CS1001: Identifier expected

    /tmp/tmp9405eddy.cs(45,84): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length - 1);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowel\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqy1szrg6.cs(44,88): error CS1026: ) expected

    /tmp/tmpqy1szrg6.cs(44,88): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2);\n   \
    \     string vowelsBothRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsBothBothLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothMiddle =\
    \ vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothBoth\
    \ = vowels.Sub\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjb9l15lg.cs(48,59): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa7hjsjzf.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpa7hjsjzf.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowelsBoth.Substring(0,\
    \ vowelsBoth.Length - 1);\n        string vowelsBothRight = vowelsBoth.Substring(vowelsBoth.Length\
    \ - 1, vowelsBoth.Length);\n        string vowelsBothBoth = vowelsBoth.Substring(0,\
    \ vowelsBoth.Length - 1) + vowelsBoth.Substring(vowelsBoth.Length - 1, vowelsBoth.Length);\n\
    \        string vowelsBothLeftRight = vowelsBothLeft.Substring(0, vowelsBothLeft.Length\
    \ - 1) + vowelsBothRight.Substring(vowelsBothRight.Length - 1, vowelsBothRight.Length);\n\
    \        string vowelsBothBothLeft = vowelsBothBoth.Substring(0, vowelsBothBoth.Length\
    \ - 1) + vowelsBothLeft.Substring(vowelsBothLeft.Length - 1, vowelsBothLeft.Length);\n\
    \        string vowelsBothBothRight = vowelsBothBoth.Substring(0, vowelsBothBoth.Length\
    \ - 1) + vowelsBothRight.Substring(vowelsBothRight.Length - 1, vowelsBothRight.Length);\n\
    \        string vowelsBothBothBoth = vowelsBothBoth.Substring(0, vowelsBothBoth.Length\
    \ - 1) + vowelsBothBoth.Substring(vowelsBothBoth.Length - 1, vowelsBothBoth.Length);\n\
    \        string vowelsBothLeftRightBoth = vowelsBothLeftRight.Substring(0, vowelsBothLeftRight.Length\
    \ - 1) + vowelsBothBoth.Substring(vowelsBothBoth.Length - 1, vowelsBothBoth.Length);\n\
    \        string vowelsBothBothLeftRight = vowelsBothBothLeft.Substring(0, vowelsBothBothLeft.Length\
    \ - 1) + vowelsBothLeftRight.Substring(vowelsBothLeftRight.Length - 1, vowelsBothLeftRight.Length);\n\
    \        string vowelsBothBothBothLeftRight = vowelsBothBothBothLeft.Substring(0,\
    \ vowelsBothBothBothLeft.Length - 1) + vowelsBothBothLeftRight.Substring(vowelsBothBothLeftRight.Length\
    \ - 1, vowelsBothBothLeftRight.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1_35ran8.cs(37,213): error CS1001: Identifier expected

    /tmp/tmp1_35ran8.cs(37,213): error CS1026: ) expected

    /tmp/tmp1_35ran8.cs(37,213): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 - 1);\n        string vowelsMiddle2 = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsMiddle3 = vowels.Substring(vowels.Length\
    \ / 3, vowels.Length / 3 - 1);\n        string vowelsMiddle4 = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4 - 1);\n        string vowelsMiddle5 = vowels.Substring(vowels.Length\
    \ / 5, vowels.Length / 5 - 1);\n        string vowelsMiddle6 = vowels.Substring(vowels.Length\
    \ / 6, vowels.Length / 6 - 1);\n        string vowelsMiddle7 = vowels.Substring(vowels.Length\
    \ / 7, vowels.Length / 7 - 1);\n        string vowelsMiddle8 = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8 - 1);\n        string vowelsMiddle9 = vowels.Substring(vowels.Length\
    \ / 9, vowels.Length / 9 - 1);\n        string vowelsMiddle10 = vowels.Substring(vowels.Length\
    \ / 10, vowels.Length / 10 - 1);\n        string vowelsMiddle11 = vowels.Substring(vowels.Length\
    \ / 11, vowels.Length / 11 - 1);\n        string vowelsMiddle12 = vowels.Substring(vowels.Length\
    \ / 12, vowels.Length / 12 - 1);\n        string vowelsMiddle13 = vowels.Substring(vowels.Length\
    \ / 13, vowels.Length / 13 - 1);\n        string vowelsMiddle14 = vowels.Substring(vowels.Length\
    \ / 14, vowels.Length / 14 - 1);\n        string vowelsMiddle15 = vowels.Substring(vowels.Length\
    \ / 15, vowels.Length / 15 - 1);\n        string vowelsMiddle16 = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 16 - 1);\n        string vowelsMiddle17 = vowels.Substring(vowels.Length\
    \ / 17, vowels.Length / 17 - 1);\n        string vowelsMiddle18 = vowels.Substring(vowels.Length\
    \ / 18, vowels.Length / 18 - 1);\n        string vowelsMiddle19 = vowels.Substring(vowels.Length\
    \ / 19, vowels.Length / 19 - 1);\n        string vowelsMiddle20 = vowels.Substring(vowels.Length\
    \ / 20, vowels.Length / 20 - 1);\n        string vowelsMiddle2\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1lgfvepa.cs(47,29): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string\
    \ vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1);\n        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1);\n        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothBothBothRight = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Sub\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5cjydav7.cs(36,263): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllCap = vowelsAll.ToUpper();\n\
    \        string vowelsAllCapLower = vowelsAllCap.ToLower();\n        string vowelsAllCapUpper\
    \ = vowelsAllCap.ToUpper();\n        string vowelsAllCapLower = vowelsAllCap.ToLower();\n\
    \        string vowelsAllCapUpper = vowelsAllCap.ToUpper();\n        string vowelsAllCapLower\
    \ = vowelsAllCap.ToLower();\n        string vowelsAllCapUpper = vowelsAllCap.ToUpper();\n\
    \        string vowelsAllCapLower = vowelsAllCap.ToLower();\n        string vowelsAllCapUpper\
    \ = vowelsAllCap.ToUpper();\n        string vowelsAllCapLower = vowelsAllCap.ToLower();\n\
    \        string vowelsAllCapUpper = vowelsAllCap.ToUpper();\n        string vowelsAllCapLower\
    \ = vowelsAllCap.ToLower();\n        string vowelsAllCapUpper = vowelsAllCap.ToUpper();\n\
    \        string vowelsAllCapLower = vowelsAllCap.ToLower();\n        string vowelsAllCapUpper\
    \ = vowelsAllCap.ToUpper();\n        string vowelsAllCapLower = vowelsAllCap.ToLower();\n\
    \        string vowelsAllCapUpper = vowelsAllCap.ToUpper();\n        string vowelsAllCapLower\
    \ = vowelsAllCap.ToLower();\n        string vowelsAllCapUpper = vowelsAllCap.ToUpper();\n\
    \        string vowelsAllCapLower = vowelsAllCap.ToLower();\n        string vowelsAllCapUpper\
    \ = vowelsAllCap.ToUpper();\n        string vowelsAllCapLower = vowelsAllCap.ToLower();\n\
    \        string vowelsAllCapUpper = vowelsAllCap.ToUpper();\n        string vowelsAllCapLower\
    \ = vowelsAll\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpim1yzfkb.cs(54,45): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length);\n        string vowelsLeft\
    \ = vowelsLeft.ToUpper();\n        string vowelsRight = vowelsRight.ToUpper();\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"AEIOU\", \"A\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"AEIOU\", \"A\");\n        string vowelsLeft\
    \ = vowelsLeft.Replace(\"AEIOU\", \"E\");\n        string vowelsRight = vowelsRight.Replace(\"\
    AEIOU\", \"E\");\n        string vowelsLeft = vowelsLeft.Replace(\"AEIOU\", \"\
    I\");\n        string vowelsRight = vowelsRight.Replace(\"AEIOU\", \"I\");\n \
    \       string vowelsLeft = vowelsLeft.Replace(\"AEIOU\", \"O\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"AEIOU\", \"O\");\n        string vowelsLeft\
    \ = vowelsLeft.Replace(\"AEIOU\", \"U\");\n        string vowelsRight = vowelsRight.Replace(\"\
    AEIOU\", \"U\");\n        string vowelsLeft = vowelsLeft.Replace(\"AEIOU\", \"\
    Y\");\n        string vowelsRight = vowelsRight.Replace(\"AEIOU\", \"Y\");\n \
    \       string vowelsLeft = vowelsLeft.Replace(\"AEIOU\", \"Y\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"AEIOU\", \"Y\");\n        string vowelsLeft\
    \ = vowelsLeft.Replace(\"AEIOU\", \"Y\");\n        string vowelsRight = vowelsRight.Replace(\"\
    AEIOU\", \"Y\");\n        string vowelsLeft = vowelsLeft.Replace(\"AEIOU\", \"\
    Y\");\n        string vowelsRight = vowelsRight.Replace(\"AEIOU\", \"Y\");\n \
    \       string vowelsLeft = vowelsLeft.Replace(\"AEIOU\", \"Y\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"AEIOU\", \"Y\");\n        string vowelsLeft\
    \ = vowelsLeft.Replace(\"AEIOU\", \"Y\");\n        string vowelsRight = vowelsRight.Replace(\"\
    AEIOU\", \"Y\");\n        string vowelsLeft = vowelsLeft.Replace(\"AEIOU\", \"\
    Y\");\n        string vowelsRight = vowelsRight.Replace(\"AEIOU\", \"Y\");\n \
    \       string \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6523_hxo.cs(53,15): error CS1001: Identifier expected

    /tmp/tmp6523_hxo.cs(53,15): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalLower\
    \ = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpperLower =\
    \ vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper();\n        string vowelsBothCapitalUpperUpperUpperUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalUpperUpperUpperUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToLower().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpperUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower().ToUpper().ToLower();\n\
    \        string \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzwtdi0so.cs(44,15): error CS1001: Identifier expected

    /tmp/tmpzwtdi0so.cs(44,15): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0, vowels.Length\
    \ / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 32);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 128);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddle\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpapn8cipe.cs(48,40): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(word.Length - 1);\n   \
    \     string vowelsBoth = vowels.Substring(0, word.Length - 2);\n        string\
    \ vowelsBothLeft = vowels.Substring(0, word.Length - 2);\n        string vowelsBothRight\
    \ = vowels.Substring(word.Length - 2);\n        string vowelsBothBoth = vowels.Substring(0,\
    \ word.Length - 3);\n        string vowelsBothBothLeft = vowels.Substring(0, word.Length\
    \ - 3);\n        string vowelsBothBothRight = vowels.Substring(word.Length - 3);\n\
    \        string vowelsBothBothBoth = vowels.Substring(0, word.Length - 4);\n \
    \       string vowelsBothBothBothLeft = vowels.Substring(0, word.Length - 4);\n\
    \        string vowelsBothBothBothRight = vowels.Substring(word.Length - 4);\n\
    \        string vowelsBothBothBothBoth = vowels.Substring(0, word.Length - 5);\n\
    \        string vowelsBothBothBothBothLeft = vowels.Substring(0, word.Length -\
    \ 5);\n        string vowelsBothBothBothBothRight = vowels.Substring(word.Length\
    \ - 5);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0, word.Length\
    \ - 6);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0, word.Length\
    \ - 6);\n        string vowelsBothBothBothBothRight = vowels.Substring(word.Length\
    \ - 6);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0, word.Length\
    \ - 7);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0, word.Length\
    \ - 7);\n        string vowelsBothBothBothBothRight = vowels.Substring(word.Length\
    \ - 7);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0, word.Length\
    \ - 8);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0, word.Length\
    \ - 8);\n        string vowelsBothBothBothBothRight = vowels.Substring(word.Length\
    \ - 8);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0, word.Length\
    \ - 9);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0, word.Length\
    \ - 9);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(word.Length\
    \ - 9);\n        string vowelsBothBothBothBothBothBoth = vowels.Substring(0, word.Length\
    \ - 10);\n        string vowels\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptjqwzkvs.cs(52,22): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeftRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRightLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothRightLeftBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothRightLeftBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothBothLeftRightBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothLeftRightBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpski1s_sv.cs(41,107): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpves8d6v_.cs(37,78): error CS1026: ) expected

    /tmp/tmpves8d6v_.cs(37,78): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeftRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRightLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothRightLeftBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothRightLeftBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothBothLeftRightBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothLeftRightBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpski1s_sv.cs(41,107): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string vowelsBothCapLower\
    \ = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpper = vowelsBothCapUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperLower = vowelsBothCapUpperUpper;\n    \
    \    string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperLower = vowelsBothCapUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperLower;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperLower\
    \ = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperLower;\n  \
    \      string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperLower\
    \ = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperLower;\n  \
    \      string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpper\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9welajtj.cs(47,74): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 2);\n       \
    \ string vowelsBothLeft = vowels.Substring(0, vowels.Length - 2);\n        string\
    \ vowelsBothRight = vowels.Substring(vowels.Length - 2, vowels.Length);\n    \
    \    string vowelsBothBoth = vowels.Substring(0, vowels.Length - 3);\n       \
    \ string vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 3);\n      \
    \  string vowelsBothBothRight = vowels.Substring(vowels.Length - 3, vowels.Length);\n\
    \        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothRight = vowels.Substring(vowels.Length - 4,\
    \ vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 5, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 6, vowels.Length);\n        string vowelsBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 7, vowels.Length);\n        string vowelsBothBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothLeft =\
    \ vowels.Substring(0, vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length - 8, vowels.Length);\n        string vowelsBothBothBothBothBothBothBothBoth\
    \ = vowels.Substring\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp71wzmxua.cs(48,73): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleRight = word.Substring(word.Length / 2, word.Length / 2);\n    \
    \    string vowelsMiddleLeft = word.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleLeftRight = word.Substring(word.Length / 2, word.Length / 2);\n\
    \        string vowelsMiddleLeftLeftRight = word.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftLeftLeftRight = word.Substring(word.Length / 2,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftRight = word.Substring(word.Length\
    \ / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = word.Substring(word.Length / 2, word.Length / 2);\n        \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyxmsyj1l.cs(35,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpyxmsyj1l.cs(36,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpyxmsyj1l.cs(37,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpyxmsyj1l.cs(38,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpyxmsyj1l.cs(39,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpyxmsyj1l.cs(40,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpyxmsyj1l.cs(41,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpyxmsyj1l.cs(42,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpyxmsyj1l.cs(43,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpyxmsyj1l.cs(44,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpyxmsyj1l.cs(45,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpyxmsyj1l.cs(46,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpyxmsyj1l.cs(47,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftRight''
    is a'
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpper\
    \ = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n\
    \        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n      \
    \  string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalUpper\
    \ = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n\
    \        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n      \
    \  string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalUpper\
    \ = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n\
    \        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n      \
    \  string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalUpper\
    \ = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n\
    \        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n      \
    \  string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string \n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2ogpmph1.cs(52,15): error CS1001: Identifier expected

    /tmp/tmp2ogpmph1.cs(52,15): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsCount = vowels.ToLower();\n        string\
    \ vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnplewr1b.cs(55,45): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllCaps = vowelsAll.ToUpper();\n\
    \        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string\
    \ vowelsAllCapsAll = vowelsAllCapsLower + vowelsAllCaps;\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllUpperLower = vowelsAllCapsAllUpper.ToLower();\n\
    \        string vowelsAllCapsAllLowerUpper = vowelsAllCapsAllLower.ToUpper();\n\
    \        string vowelsAllCapsAllLowerUpperLower = vowelsAllCapsAllLowerUpper.ToLower();\n\
    \        string vowelsAllCapsAllLowerUpperLowerUpper = vowelsAllCapsAllLowerUpperLower.ToUpper();\n\
    \        string vowelsAllCapsAllLowerUpperLowerUpperLower = vowelsAllCapsAllLowerUpperLowerUpper.ToLower();\n\
    \        string vowelsAllCapsAllLowerUpperLowerUpperLowerUpper = vowelsAllCapsAllLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllCapsAllLowerUpperLowerUpperLowerUpperLower = vowelsAllCapsAllLowerUpperLowerUpperLowerUpper.ToLower();\n\
    \        string vowelsAllCapsAllLowerUpperLowerUpperLowerUpperUpper = vowelsAllCapsAllLowerUpperLowerUpperLowerUpperLower.ToUpper();\n\
    \        string vowelsAllCapsAllLowerUpperLowerUpperLowerUpperLowerUpper = vowelsAllCapsAllLowerUpperLowerUpperLowerUpperLowerUpper.ToLower();\n\
    \        string vowelsAllCapsAllLowerUpperLowerUpperLowerUpperLowerUpperUpper\
    \ = vowelsAllCapsAllLowerUpperLowerUpperLowerUpperLowerUpperLower.ToUpper\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqwobsi1g.cs(45,149): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCaps = vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n\
    \        string vowelsBothCapsLower = vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n\
    \        string vowelsBothCapsUpper = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapsLower = vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n\
    \        string vowelsBoth\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4uu51znc.cs(47,26): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa7hjsjzf.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpa7hjsjzf.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length);\n        string vowelsMiddle\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2);\n        string vowelsMiddleRight\
    \ = vowelsMiddle.Substring(vowelsMiddle.Length / 2);\n        string vowelsMiddleLeft\
    \ = vowelsMiddle.Substring(0, vowelsMiddle.Length / 2);\n        string vowelsMiddleRightLeft\
    \ = vowelsMiddleRight.Substring(0, vowelsMiddleRight.Length / 2);\n        string\
    \ vowelsMiddleLeftRight = vowelsMiddleLeft.Substring(0, vowelsMiddleLeft.Length\
    \ / 2);\n        string vowelsMiddleRightLeft = vowelsMiddleRight.Substring(0,\
    \ vowelsMiddleRight.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowelsMiddleLeftRight.Substring(0,\
    \ vowelsMiddleLeftRight.Length / 2);\n        string vowelsMiddleLeftRightRight\
    \ = vowelsMiddleLeftRightLeft.Substring(0, vowelsMiddleLeftRightLeft.Length /\
    \ 2);\n        string vowelsMiddleLeftRightLeftRight = vowelsMiddleLeftRightRight.Substring(0,\
    \ vowelsMiddleLeftRightRight.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeft\
    \ = vowelsMiddleLeftRightLeftRight.Substring(0, vowelsMiddleLeftRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftRightRight = vowelsMiddleLeftRightLeftRightLeft.Substring(0,\
    \ vowelsMiddleLeftRightLeftRightLeft.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRight\
    \ = vowelsMiddleLeftRightLeftRightLeftRight.Substring(0, vowelsMiddleLeftRightLeftRightLeftRight.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeft = vowelsMiddleLeftRightLeftRightLeftRightRight.Substring(0,\
    \ vowelsMiddleLeftRightLeftRightLeftRight.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightRight\
    \ = vowelsMiddleLeftRightLeftRightLeftRightLeft.Substring(0, vowelsMiddleLeftRightLeftRightLeftRightLeft.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRight = vowelsMiddleLeftRightLeftRightLeftRightLeftRight.Substring(0,\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRight.Length / 2);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRight\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpircl8rq5.cs(42,55): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCap = vowelsBoth.ToUpper();\n        string vowelsBothCapLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothCapUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapLower = vowelsBoth.ToLower();\n        string vowelsBothCapUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothCapUpperLower = vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpper = vowelsBoth.ToUpper();\n       \
    \ string vowelsBothCapUpperLowerUpperUpper = vowelsBoth.ToUpper();\n        string\
    \ vowelsBothCapUpperLowerUpperUpperUpper = vowelsBoth.ToUpper();\n        string\
    \ vowelsBothCapUpperLowerUpperUpperUpperUpper = vowelsBoth.ToUpper();\n      \
    \  string vowelsBothCapUpperLowerUpperUpperUpperUpperUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothCapUpperLowerUpperUpperUpperUpperUpper\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp21e_9ytr.cs(49,64): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalLower\
    \ = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpperLower =\
    \ vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToUpper();\n        string vowelsBothCapitalUpperUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp78hjdf5b.cs(35,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperLower''
    is already defined in this scope

    /tmp/tmp78hjdf5b.cs(38,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperUpperUpper''
    is already defined in this scope

    /tmp/tmp78hjdf5b.cs(41,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperUpperUpperUpperUpper''
    is already defined in this scope

    /tmp/tmp78hjdf5b.cs(42,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperUpperUpperUpperUpper''
    is already defined in this scope

    /tmp/tmp78hjdf5b.cs(44,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperUpperUpperUpperUpperUpper''
    is already defined in this scope

    /tmp/tmp78hjdf5b.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(word.Length - 1, 1);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2 - 1);\n      \
    \  string vowelsMiddleRight = vowels.Substring(word.Length / 2, 1);\n        string\
    \ vowelsMiddleMiddle = vowels.Substring(0, word.Length / 4);\n        string vowelsMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 4 - 1);\n        string vowelsMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 4, 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 8, 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 16);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 16, 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 32);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 32, 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 64);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 64, 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 128);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 128, 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length / 256);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, word.Length / 256 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(word.Length / 256, 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, word.Length\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3kw8jzu8.cs(51,80): error CS1026: ) expected

    /tmp/tmp3kw8jzu8.cs(51,80): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length - 1);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowel\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqy1szrg6.cs(44,88): error CS1026: ) expected

    /tmp/tmpqy1szrg6.cs(44,88): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRightLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRightRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightRightRight =\
    \ vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightRightRightRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightRightRightRightRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRightLeftRightRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightRightRightRightRightLeft\
    \ = vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9azeyqet.cs(48,65): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string vowelsBothCapLower\
    \ = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpper = vowelsBothCapUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbnxrqry2.cs(45,145): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length);\n        string vowelsMiddle\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRight = vowels.Substring(word.Length\
    \ / 2);\n        string vowelsMiddleMiddle = vowels.Substring(0, word.Length /\
    \ 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0, word.Length\
    \ / 4);\n        string vowelsMiddleMiddleRight = vowels.Substring(word.Length\
    \ / 4);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, word.Length\
    \ / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0, word.Length\
    \ / 8);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(word.Length\
    \ / 8);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, word.Length\
    \ / 16);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0, word.Length\
    \ / 16);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(word.Length\
    \ / 16);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ word.Length / 32);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ word.Length / 32);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(word.Length\
    \ / 32);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ word.Length / 64);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ word.Length / 64);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(word.Length\
    \ / 64);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ word.Length / 128);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ word.Length / 128);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(word.Length\
    \ / 128);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ word.Length / 256);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ word.Length / 256);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(word.Length\
    \ / 256);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ word.Length / 512);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ word.Length\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0ek6qw26.cs(52,78): error CS1026: ) expected

    /tmp/tmp0ek6qw26.cs(52,78): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string\
    \ vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1);\n        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1);\n        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothBothBothRight = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1) + vowels.Sub\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgmns9vmi.cs(36,263): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length - 1);\n        string\
    \ vowelsBothLeftRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothRightLeft = vowels.Substring(0, vowels.Length - 1) +\
    \ vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothRight = vowels.Substring(0, vowels.Length - 1) +\
    \ vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothLeftRightBoth = vowels.Substring(0, vowels.Length - 1)\
    \ + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothRightLeftBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + \n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwq53xlnj.cs(37,82): error CS1525: Invalid expression term ''}''

    /tmp/tmpwq53xlnj.cs(37,82): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBothBothLeft = vowel\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpg03wboth.cs(37,50): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2);\n \
    \       string vowelsMiddleLeftRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftLeftLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / \n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyf_3r88c.cs(46,108): error CS1525: Invalid expression term ''}''

    /tmp/tmpyf_3r88c.cs(46,108): error CS1026: ) expected

    /tmp/tmpyf_3r88c.cs(46,108): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddle2 = vowels.Substring(vowels.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddle3 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 4);\n        string vowelsMiddle4 = vowels.Substring(vowels.Length / 4, vowels.Length\
    \ / 4);\n        string vowelsMiddle5 = vowels.Substring(vowels.Length / 4, vowels.Length\
    \ / 8);\n        string vowelsMiddle6 = vowels.Substring(vowels.Length / 8, vowels.Length\
    \ / 8);\n        string vowelsMiddle7 = vowels.Substring(vowels.Length / 8, vowels.Length\
    \ / 16);\n        string vowelsMiddle8 = vowels.Substring(vowels.Length / 16,\
    \ vowels.Length / 16);\n        string vowelsMiddle9 = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 32);\n        string vowelsMiddle10 = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddle11 = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 64);\n        string vowelsMiddle12 = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64);\n        string vowelsMiddle13 = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 128);\n        string vowelsMiddle14 = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddle15 = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 256);\n        string vowelsMiddle16 = vowels.Substring(vowels.Length\
    \ / 256, vowels.Length / 256);\n        string vowelsMiddle17 = vowels.Substring(vowels.Length\
    \ / 256, vowels.Length / 512);\n        string vowelsMiddle18 = vowels.Substring(vowels.Length\
    \ / 512, vowels.Length / 512);\n        string vowelsMiddle19 = vowels.Substring(vowels.Length\
    \ / 512, vowels.Length / 1024);\n        string vowelsMiddle20 = vowels.Substring(vowels.Length\
    \ / 1024, vowels.Length / 1024);\n        string vowelsMiddle21 = vowels.Substring(vowels.Length\
    \ / 1024, vowels.Length / 2048);\n        string vowelsMiddle22 = vowel\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjpjz92ih.cs(48,38): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2);\n \
    \       string vowelsMiddleLeftRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 2);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 256, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 512, vowels.Length / 2);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 1024, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2048, vowels.Length / 2);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 4096, vowels.Length / 2);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 8192, vowels.Length / 2);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprx6l83i5.cs(43,113): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsReverse = vowels.ToUpper();\n      \
    \  string vowelsReverse2 = vowelsReverse.ToLower();\n        string vowelsReverse3\
    \ = vowelsReverse2.ToLower();\n        string vowelsReverse4 = vowelsReverse3.ToLower();\n\
    \        string vowelsReverse5 = vowelsReverse4.ToLower();\n        string vowelsReverse6\
    \ = vowelsReverse5.ToLower();\n        string vowelsReverse7 = vowelsReverse6.ToLower();\n\
    \        string vowelsReverse8 = vowelsReverse7.ToLower();\n        string vowelsReverse9\
    \ = vowelsReverse8.ToLower();\n        string vowelsReverse10 = vowelsReverse9.ToLower();\n\
    \        string vowelsReverse11 = vowelsReverse10.ToLower();\n        string vowelsReverse12\
    \ = vowelsReverse11.ToLower();\n        string vowelsReverse13 = vowelsReverse12.ToLower();\n\
    \        string vowelsReverse14 = vowelsReverse13.ToLower();\n        string vowelsReverse15\
    \ = vowelsReverse14.ToLower();\n        string vowelsReverse16 = vowelsReverse15.ToLower();\n\
    \        string vowelsReverse17 = vowelsReverse16.ToLower();\n        string vowelsReverse18\
    \ = vowelsReverse17.ToLower();\n        string vowelsReverse19 = vowelsReverse18.ToLower();\n\
    \        string vowelsReverse20 = vowelsReverse19.ToLower();\n        string vowelsReverse21\
    \ = vowelsReverse20.ToLower();\n        string vowelsReverse22 = vowelsReverse21.ToLower();\n\
    \        string vowelsReverse23 = vowelsReverse22.ToLower();\n        string vowelsReverse24\
    \ = vowelsReverse23.ToLower();\n        string vowelsReverse25 = vowelsReverse24.ToLower();\n\
    \        string vowelsReverse26 = vowelsReverse25.ToLower();\n        string vowelsReverse27\
    \ = vowelsReverse26.ToLower();\n        string vowelsReverse28 = vowelsReverse27.ToLower();\n\
    \        string vowelsReverse29 = vowelsReverse28.ToLower();\n        string vowelsReverse30\
    \ = vowelsReverse29.ToLower();\n        string vowelsReverse31 = vowelsReverse30.ToLower();\n\
    \        string vowelsReverse32 = vowelsReverse31.ToLower();\n        string vowelsReverse33\
    \ = vowelsReverse32.ToLower();\n        string vowelsReverse34 = vowelsReverse33.ToLower();\n\
    \        string vowelsReverse\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqxtnml35.cs(59,29): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 1)\
    \ + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpslyw_k1p.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsBoth = vowels.Substring(0, vowels.Length - 2);\n        string\
    \ vowelsBothLeft = vowels.Substring(0, vowels.Length - 2);\n        string vowelsBothRight\
    \ = vowels.Substring(vowels.Length - 2);\n        string vowelsBothBoth = vowels.Substring(0,\
    \ vowels.Length - 3);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 3);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length\
    \ - 3);\n        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length\
    \ - 4);\n        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 4);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 4);\n        string vowelsBothBothBothBoth = vowels.Substring(0, vowels.Length\
    \ - 5);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 5);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 5);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0, vowels.Length\
    \ - 6);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 6);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 6);\n        string vowelsBothBothBothBothBothBoth = vowels.Substring(0, vowels.Length\
    \ - 7);\n        string vowelsBothBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 7);\n        string vowelsBothBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothLeft =\
    \ vowels.Substring(0, vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothBoth\
    \ = vowels.Substring(0, vowels.Length - 9);\n        string vowelsBothBothBothBothBothBothBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 9);\n        \n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7tbylb17.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRightLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightLeftRightLeft = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightLeft = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleRightRightRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRightLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeft\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeft\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightLeftRightLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightRightLeftRightRight\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowelsMiddleRightRightLeftRightLeftRight\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleRightRightLeftRightLeftRightLeft\
    \ = vowels.Substring(word.Length / 2, vowels.Length / 2);\n        string vowels\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7zt4psug.cs(49,22): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBothRight = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowel\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz_60_km9.cs(37,173): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsAll = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllLeft = vowels.Substring(0, vowels.Length / 2);\n    \
    \    string vowelsAllRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsAllMiddle = vowels.Substring(0, vowels.Length / 2);\n  \
    \      string vowelsAllMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n\
    \        string vowelsAllMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsAllAll = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length);\n        string vowelsAllAllLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsAllAllRight = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length);\n        string vowelsAllAllMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsAllAllMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 2 - 1);\n        string vowelsAllAllMiddleRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsAllAllAll = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsAllAllAllLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllAllRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsAllAllAllMiddle = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsAllAllAllMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsAllAllAllMiddleRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsAllAllAllAll = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length);\n        string vowelsAllAllAllAllLeft = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbd9n6yuz.cs(49,40): error CS1525: Invalid expression term ''}''

    /tmp/tmpbd9n6yuz.cs(49,40): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length);\n        string vowelsMiddle\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2);\n        string vowelsMiddle2\
    \ = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n        string vowelsMiddle3\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2, vowelsLeft.Length / 2);\n    \
    \    string vowelsMiddle4 = vowelsLeft.Substring(vowelsLeft.Length / 2, vowelsLeft.Length\
    \ * 3 / 2);\n        string vowelsMiddle5 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length * 5 / 2);\n        string vowelsMiddle6 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length * 7 / 2);\n        string vowelsMiddle7 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length * 9 / 2);\n        string vowelsMiddle8 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length * 11 / 2);\n        string vowelsMiddle9 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length * 13 / 2);\n        string vowelsMiddle10 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length * 15 / 2);\n        string vowelsMiddle11 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length * 17 / 2);\n        string vowelsMiddle12 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length * 19 / 2);\n        string vowelsMiddle13 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length * 21 / 2);\n        string vowelsMiddle14 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length * 23 / 2);\n        string vowelsMiddle15 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length * 25 / 2);\n        string vowelsMiddle16 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length * 27 / 2);\n        string vowelsMiddle17 = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2bvb7xre.cs(43,88): error CS1001: Identifier expected

    /tmp/tmp2bvb7xre.cs(43,88): error CS1026: ) expected

    /tmp/tmp2bvb7xre.cs(43,88): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeftRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothRightLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothLeftRightBoth = vowels.Substring(0, vowels.Length - 1)\
    \ + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothRightLeftBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowel\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps6um7hq6.cs(37,88): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 4);\n        string vowelsMiddleRightLeftMiddle = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle =\
    \ vowels.Substring(vowels.Length / 4, vowels.Length / 8);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 16);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleLeftRightMiddleMiddle = vowels.Substring(vowels.Length / 16, vowels.Length\
    \ / 32);\n        string vowelsMiddleRightLeftMiddleMiddle = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 64);\n        string\
    \ vowelsMiddleRightLeftMiddleMiddle = vowels.Substring(vowels.Length / 64, vowels.Length\
    \ / 64);\n        string vowelsMiddleLeftRightMiddleMiddle = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 128);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128);\n        string\
    \ vowelsMiddleLeftRightMiddleMiddle = vowels.Substring(vowels.Length / 128, vowels.Length\
    \ / 256);\n        string vowelsMiddleRightLeftMiddleMiddle = vowels.Substring(vowels.Length\
    \ / 256, vowels.Length / 256);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk46f5cff.cs(46,51): error CS1525: Invalid expression term ''}''

    /tmp/tmpk46f5cff.cs(46,51): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsMiddleMiddle = vowels.Substring(0, vowels.Length\
    \ / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4 + 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 16);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 16 + 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 64);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64 + 1);\n        string vowelsMiddleMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128 + 1);\n        string\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpypqbuh35.cs(48,15): error CS1001: Identifier expected

    /tmp/tmpypqbuh35.cs(48,15): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddle2 = vowels.Substring(vowels.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddle3 = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 4);\n        string vowelsMiddle4 = vowels.Substring(vowels.Length / 4, vowels.Length\
    \ / 4);\n        string vowelsMiddle5 = vowels.Substring(vowels.Length / 4, vowels.Length\
    \ / 8);\n        string vowelsMiddle6 = vowels.Substring(vowels.Length / 8, vowels.Length\
    \ / 8);\n        string vowelsMiddle7 = vowels.Substring(vowels.Length / 8, vowels.Length\
    \ / 16);\n        string vowelsMiddle8 = vowels.Substring(vowels.Length / 16,\
    \ vowels.Length / 16);\n        string vowelsMiddle9 = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 32);\n        string vowelsMiddle10 = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 32);\n        string vowelsMiddle11 = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 64);\n        string vowelsMiddle12 = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64);\n        string vowelsMiddle13 = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 128);\n        string vowelsMiddle14 = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddle15 = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 256);\n        string vowelsMiddle16 = vowels.Substring(vowels.Length\
    \ / 256, vowels.Length / 256);\n        string vowelsMiddle17 = vowels.Substring(vowels.Length\
    \ / 256, vowels.Length / 512);\n        string vowelsMiddle18 = vowels.Substring(vowels.Length\
    \ / 512, vowels.Length / 512);\n        string vowelsMiddle19 = vowels.Substring(vowels.Length\
    \ / 512, vowels.Length / 1024);\n        string vowelsMiddle20 = vowels.Substring(vowels.Length\
    \ / 1024, vowels.Length / 1024);\n        string vowelsMiddle21 = vowels.Substring(vowels.Length\
    \ / 1024, vowels.Length / 2048);\n        string vowelsMiddle22 = vowel\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjpjz92ih.cs(48,38): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeftRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBothLeftRightBoth = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBothBothRightBoth = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeftRightBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Sub\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpf9rm00w4.cs(37,195): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2);\n \
    \       string vowelsMiddleLeftRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 4);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 16);\n        string vowelsMiddleLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 32);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 32, vowels.Length / 64);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 128);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 256);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 256, vowels.Length / 512);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 512, vowels.Length / 1024);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 1024, vowels.Length / 2048);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2048, vowels.Length / 4096);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 4096, vowels.Length / 8192);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9jvnl576.cs(43,82): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsRightLeft = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length - 1);\n        string vowelsRightMiddle = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsRightMiddleLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsRightMiddleRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsLeftMiddle = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsLeftMiddleRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsLeftMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsLeftMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleRightRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3u3t90u1.cs(49,83): error CS1001: Identifier expected

    /tmp/tmp3u3t90u1.cs(49,83): error CS1026: ) expected

    /tmp/tmp3u3t90u1.cs(49,83): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeftRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRightLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothRightLeftBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothRightLeftBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothBothLeftRightBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothLeftRightBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpski1s_sv.cs(41,107): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsBothLeft = vowelsLeft.Substring(0, vowelsLeft.Length - 1);\n\
    \        string vowelsBothRight = vowelsLeft.Substring(vowelsLeft.Length - 1,\
    \ vowelsLeft.Length);\n        string vowelsBothMiddle = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length / 2);\n        string vowelsBothBoth = vowelsLeft.Substring(vowelsLeft.Length\
    \ / 2, vowelsLeft.Length);\n        string vowelsBothBothLeft = vowelsBothLeft.Substring(0,\
    \ vowelsBothLeft.Length - 1);\n        string vowelsBothBothRight = vowelsBothLeft.Substring(vowelsBothLeft.Length\
    \ - 1, vowelsBothLeft.Length);\n        string vowelsBothBothMiddle = vowelsBothLeft.Substring(vowelsBothLeft.Length\
    \ / 2, vowelsBothLeft.Length / 2);\n        string vowelsBothBothBoth = vowelsBothLeft.Substring(vowelsBothLeft.Length\
    \ / 2, vowelsBothLeft.Length);\n        string vowelsBothBothBothLeft = vowelsBothBothLeft.Substring(0,\
    \ vowelsBothBothLeft.Length - 1);\n        string vowelsBothBothBothRight = vowelsBothBothLeft.Substring(vowelsBothBothLeft.Length\
    \ - 1, vowelsBothBothLeft.Length);\n        string vowelsBothBothBothMiddle =\
    \ vowelsBothBothLeft.Substring(vowelsBothBothLeft.Length / 2, vowelsBothBothLeft.Length\
    \ / 2);\n        string vowelsBothBothBothBoth = vowelsBothBothLeft.Substring(vowelsBothBothLeft.Length\
    \ / 2, vowelsBothBothLeft.Length);\n        string vowelsBothBothBothBothLeft\
    \ = vowelsBothBothBothLeft.Substring(0, vowelsBothBothLeft.Length - 1);\n    \
    \    string vowelsBothBothBothBothRight = vowelsBothBothLeft.Substring(vowelsBothBothLeft.Length\
    \ - 1, vowelsBothBothLeft.Length);\n        string vowelsBoth\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz2qelytl.cs(43,26): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeftRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBothLeftRightBoth = vowels.Substring(0, vowels.Length -\
    \ 1) + vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothBothRightBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - 1);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothLeftRightBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length) + vowels.Substring(0,\
    \ vowels.Length - \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpziruj64v.cs(37,220): error CS1525: Invalid expression term ''}''

    /tmp/tmpziruj64v.cs(37,220): error CS1026: ) expected

    /tmp/tmpziruj64v.cs(37,220): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length);\n        string vowelsMiddle\
    \ = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n        string vowelsMiddleRight\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2);\n        string vowelsMiddleLeft\
    \ = vowelsLeft.Substring(0, vowelsLeft.Length / 2);\n        string vowelsMiddleRightLeft\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2);\n        string vowelsMiddleLeftRight\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2);\n        string vowelsMiddleRightLeftRight\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2);\n        string vowelsMiddleLeftRightLeftRight\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRight\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRight\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRight\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsLeft.Substring(vowelsLeft.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowelsLeft.\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv8jahvu4.cs(44,110): error CS1001: Identifier expected

    /tmp/tmpv8jahvu4.cs(44,110): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsCount = vowels.ToLower();\n        string\
    \ vowelsCountReverse = vowelsCount.ToUpper();\n        string vowelsCountReverse2\
    \ = vowelsCountReverse.ToLower();\n        string vowelsCountReverse3 = vowelsCountReverse2.ToUpper();\n\
    \        string vowelsCountReverse4 = vowelsCountReverse3.ToLower();\n       \
    \ string vowelsCountReverse5 = vowelsCountReverse4.ToUpper();\n        string\
    \ vowelsCountReverse6 = vowelsCountReverse5.ToLower();\n        string vowelsCountReverse7\
    \ = vowelsCountReverse6.ToUpper();\n        string vowelsCountReverse8 = vowelsCountReverse7.ToLower();\n\
    \        string vowelsCountReverse9 = vowelsCountReverse8.ToUpper();\n       \
    \ string vowelsCountReverse10 = vowelsCountReverse9.ToLower();\n        string\
    \ vowelsCountReverse11 = vowelsCountReverse10.ToUpper();\n        string vowelsCountReverse12\
    \ = vowelsCountReverse11.ToLower();\n        string vowelsCountReverse13 = vowelsCountReverse12.ToUpper();\n\
    \        string vowelsCountReverse14 = vowelsCountReverse13.ToLower();\n     \
    \   string vowelsCountReverse15 = vowelsCountReverse14.ToUpper();\n        string\
    \ vowelsCountReverse16 = vowelsCountReverse15.ToLower();\n        string vowelsCountReverse17\
    \ = vowelsCountReverse16.ToUpper();\n        string vowelsCountReverse18 = vowelsCountReverse17.ToLower();\n\
    \        string vowelsCountReverse19 = vowelsCountReverse18.ToUpper();\n     \
    \   string vowelsCountReverse20 = vowelsCountReverse19.ToLower();\n        string\
    \ vowelsCountReverse21 = vowelsCountReverse20.ToUpper();\n        string vowelsCountReverse22\
    \ = vowelsCountReverse21.ToLower();\n        string vowelsCountReverse23 = vowelsCountReverse22.ToUpper();\n\
    \        string vowelsCountReverse24 = vowelsCountReverse23.ToLower();\n     \
    \   string vowelsCountReverse25 = vowelsCountReverse24.ToUpper();\n        string\
    \ vowelsCountReverse26 = vowelsCountReverse25.ToLower();\n        string vowelsCountReverse27\
    \ = vowelsCountReverse26.ToUpper();\n        string vowelsCountReverse28 = vowelsCountReverse27.ToLower();\n\
    \        string vowelsCountReverse29 = vowelsCountReverse28.ToUpper();\n     \
    \   string vowelsCountReverse30 = vowels\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnplewr1b.cs(55,45): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 2);\n       \
    \ string vowelsBothLeft = vowels.Substring(0, vowels.Length - 2);\n        string\
    \ vowelsBothRight = vowels.Substring(vowels.Length - 2, vowels.Length);\n    \
    \    string vowelsBothBoth = vowels.Substring(0, vowels.Length - 3);\n       \
    \ string vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 3);\n      \
    \  string vowelsBothBothRight = vowels.Substring(vowels.Length - 3, vowels.Length);\n\
    \        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothRight = vowels.Substring(vowels.Length - 4,\
    \ vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 5, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 6, vowels.Length);\n        string vowelsBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 7, vowels.Length);\n        string vowelsBothBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothLeft =\
    \ vowels.Substring(0, vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length - 8, vowels.Length);\n        string vowelsBothBothBothBothBothBothBothBoth\
    \ = vowels.Substring\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp71wzmxua.cs(48,73): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalLower\
    \ = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpperLower =\
    \ vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper();\n        string vowelsBothCapitalUpperUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper();\n        string vowelsBothCapitalUpperUpperUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper();\n        string\
    \ vowelsBothCapitalUpperUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToLower().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapital\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphzhnruuy.cs(45,33): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa7hjsjzf.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpa7hjsjzf.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(word.Length - 1);\n   \
    \     string vowelsMiddle = vowels.Substring(word.Length / 2, 2);\n        string\
    \ vowelsMiddle2 = vowels.Substring(word.Length / 2 - 1, 2);\n        string vowelsMiddle3\
    \ = vowels.Substring(word.Length / 3 - 1, 2);\n        string vowelsMiddle4 =\
    \ vowels.Substring(word.Length / 4 - 1, 2);\n        string vowelsMiddle5 = vowels.Substring(word.Length\
    \ / 5 - 1, 2);\n        string vowelsMiddle6 = vowels.Substring(word.Length /\
    \ 6 - 1, 2);\n        string vowelsMiddle7 = vowels.Substring(word.Length / 7\
    \ - 1, 2);\n        string vowelsMiddle8 = vowels.Substring(word.Length / 8 -\
    \ 1, 2);\n        string vowelsMiddle9 = vowels.Substring(word.Length / 9 - 1,\
    \ 2);\n        string vowelsMiddle10 = vowels.Substring(word.Length / 10 - 1,\
    \ 2);\n        string vowelsMiddle11 = vowels.Substring(word.Length / 11 - 1,\
    \ 2);\n        string vowelsMiddle12 = vowels.Substring(word.Length / 12 - 1,\
    \ 2);\n        string vowelsMiddle13 = vowels.Substring(word.Length / 13 - 1,\
    \ 2);\n        string vowelsMiddle14 = vowels.Substring(word.Length / 14 - 1,\
    \ 2);\n        string vowelsMiddle15 = vowels.Substring(word.Length / 15 - 1,\
    \ 2);\n        string vowelsMiddle16 = vowels.Substring(word.Length / 16 - 1,\
    \ 2);\n        string vowelsMiddle17 = vowels.Substring(word.Length / 17 - 1,\
    \ 2);\n        string vowelsMiddle18 = vowels.Substring(word.Length / 18 - 1,\
    \ 2);\n        string vowelsMiddle19 = vowels.Substring(word.Length / 19 - 1,\
    \ 2);\n        string vowelsMiddle20 = vowels.Substring(word.Length / 20 - 1,\
    \ 2);\n        string vowelsMiddle21 = vowels.Substring(word.Length / 21 - 1,\
    \ 2);\n        string vowelsMiddle22 = vowels.Substring(word.Length / 22 - 1,\
    \ 2);\n        string vowelsMiddle23 = vowels.Substring(word.Length / 23 - 1,\
    \ 2);\n        string vowelsMiddle24 = vowels.Substring(word.Length / 24 - 1,\
    \ 2);\n        string vowelsMiddle25 = vowels.Substring(word.Length / 25 - 1,\
    \ 2);\n        string vowelsMiddle26 = vowels.Substring(word.Length\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc3a6_dvj.cs(52,61): error CS1026: ) expected

    /tmp/tmpc3a6_dvj.cs(52,61): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleRight = vowels.Substring(vowels.Length / 2);\n        string\
    \ vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeft\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftLeft\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleLeftRightRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleLeftRightRightLeft\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleLeftRightRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightRightLeft\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightRightLeftRightRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightRightLeftRightLeftRightRightRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightRightLeftRightLeftRightRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightRightLeftRightLeftRightLeftRightRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightRightLeftRightLeftRightLeftRightLeftRightLeftRightRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeftLeftRightRightLeft\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsroeo7ld.cs(48,55): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2);\n \
    \       string vowelsMiddleLeftRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0, vowels.Length\
    \ / 4);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftRight =\
    \ vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n        string vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight\
    \ = vowels.Substring(vowels.Length / 4, vowels.Length / 4);\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqs4mro45.cs(37,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpqs4mro45.cs(38,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpqs4mro45.cs(39,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpqs4mro45.cs(40,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpqs4mro45.cs(41,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpqs4mro45.cs(42,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpqs4mro45.cs(43,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpqs4mro45.cs(44,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftLeftLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmpqs4mro45.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothLeft = vowelsBoth.Substring(0, vowelsBoth.Length - 1);\n\
    \        string vowelsBothRight = vowelsBoth.Substring(vowelsBoth.Length - 1,\
    \ vowelsBoth.Length);\n        string vowelsBothMiddle = vowelsBoth.Substring(vowelsBoth.Length\
    \ / 2, vowelsBoth.Length / 2);\n        string vowelsBothBoth = vowelsBoth.Substring(0,\
    \ vowelsBoth.Length / 2);\n        string vowelsBothBothLeft = vowelsBothBoth.Substring(0,\
    \ vowelsBothBoth.Length - 1);\n        string vowelsBothBothRight = vowelsBothBoth.Substring(vowelsBothBoth.Length\
    \ - 1, vowelsBothBoth.Length);\n        string vowelsBothBothMiddle = vowelsBothBoth.Substring(vowelsBothBoth.Length\
    \ / 2, vowelsBothBoth.Length / 2);\n        string vowelsBothBothBoth = vowelsBothBoth.Substring(0,\
    \ vowelsBothBoth.Length / 2);\n        string vowelsBothBothBothLeft = vowelsBothBothBoth.Substring(0,\
    \ vowelsBothBothBoth.Length - 1);\n        string vowelsBothBothBothRight = vowelsBothBothBoth.Substring(vowelsBothBothBoth.Length\
    \ - 1, vowelsBothBothBoth.Length);\n        string vowelsBothBothBothMiddle =\
    \ vowelsBothBothBoth.Substring(vowelsBothBothBoth.Length / 2, vowelsBothBothBoth.Length\
    \ / 2);\n        string vowelsBothBothBothBoth = vowelsBothBothBoth.Substring(0,\
    \ vowelsBothBothBoth.Length / 2);\n        string vowelsBothBothBothBothLeft =\
    \ vowelsBothBothBothBothLeft.Substring(0, vowelsBothBothBothBothLeft.Length -\
    \ 1);\n        string vowelsBothBothBothBothRight = vowelsBothBothBothBothRight.Substring(vowelsBothBothBothBothRight.Length\
    \ - 1, vowelsBothBothBothRight.Length);\n        string vowelsBothBothBothBothMiddle\
    \ = vowelsBothBothBothBothMidd\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbqo4c8b7.cs(43,73): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalLower = vowelsBoth.ToUpper().ToLower();\n        string vowelsBothCapitalUpper\
    \ = vowelsBoth.ToUpper().ToUpper();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBoth.ToUpper().ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpper\
    \ = vowelsBoth.ToUpper().ToUpper().ToUpper();\n        string vowelsBothCapitalUpperUpperLower\
    \ = vowelsBoth.ToUpper().ToUpper().ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpper\
    \ = vowelsBoth.ToUpper().ToUpper().ToUpper().ToUpper();\n        string vowelsBothCapitalUpperUpperUpperLower\
    \ = vowelsBoth.ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalUpperUpperUpperUpper = vowelsBoth.ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperLower = vowelsBoth.ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpper = vowelsBoth.ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperLower = vowelsBoth.ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpper = vowelsBoth.ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperLower = vowelsBoth.ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkqfgs04u.cs(41,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperUpperUpperUpperLower''
    is already defined in this scope

    /tmp/tmpkqfgs04u.cs(42,16): error CS0128: A local variable or function named ''vowelsBothCapitalUpperUpperUpperUpperUpper''
    is already defined in this scope

    /tmp/tmpkqfgs04u.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(word.Length - 1);\n   \
    \     string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleLeft = vowelsMiddle.Substring(0, word.Length - 1);\n        string\
    \ vowelsMiddleRight = vowelsMiddle.Substring(word.Length - 1);\n        string\
    \ vowelsMiddleMiddle = vowelsMiddle.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0, word.Length - 1);\n\
    \        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Sub\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt7esd799.cs(48,65): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n\
    \        string vowelsAllUpper = vowelsAll.ToUpper();\n        string vowelsAllLower\
    \ = vowelsAll.ToLower();\n        string vowelsAllCaps = vowelsAll.ToUpper();\n\
    \        string vowelsAllCapsLower = vowelsAllCaps.ToLower();\n        string\
    \ vowelsAllCapsAll = vowelsAllCaps + vowelsAllCapsLower;\n        string vowelsAllCapsAllUpper\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n\
    \        string vowelsAllCapsAllLower = vowelsAllCapsAll.ToLower();\n        string\
    \ vowelsAllCapsAllLowerUpper = vowelsAllCapsAllLower + vowelsAllCapsAllUpper;\n\
    \        string vowelsAllCapsAllLowerUpperUpper = vowelsAllCapsAllLowerUpper +\
    \ vowelsAllCapsAllUpper;\n        string vowelsAllCapsAllLowerUpperUpperUpper\
    \ = vowelsAllCapsAllLowerUpperUpper + vowelsAllCapsAllUpper;\n        string vowelsAllCapsAllLowerUpperUpperUpperUpper\
    \ = vowelsAllCapsAllLowerUpperUpperUpper + vowelsAllCapsAllUpper;\n        string\
    \ vowelsAllCapsAllLowerUpperUpperUpperUpperUpper = vowelsAllCapsAllLowerUpperUpperUpperUpper\
    \ + vowelsAllCapsAllUpper;\n        string vowelsAllCapsAllLowerUpperUpperUpperUpperUpperUpper\
    \ = vowelsAllCapsAllLowerUpperUpperUpperUpperUpper + vowelsAllCapsAllUpper;\n\
    \        string vowelsAllCapsAllLowerUpperUpperUpperUpperUpperUpperUpper = vowelsAllCapsAllLowerUpperUpperUpperUpperUpperUpper\
    \ + vowelsAllCapsAllUpper;\n        string vowelsAllCapsAllLowerUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsAllCapsAllLowerUpperUpperUpperUpperUpperUpperUpper \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwdnfxjvh.cs(44,131): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n\
    \        string vowelsBothRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 - 1);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBothMiddle\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2 - 1);\n        string\
    \ vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwnznq2ne.cs(48,21): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleRight = vowels.Substring(vowels.Length / 2);\n        string\
    \ vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2);\n        string vowelsMiddleLeftRight\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleRightLeft\
    \ = vowels.Substring(vowels.Length / 2);\n        string vowelsMiddleLeftRightMiddle\
    \ = vowels.Substring(vowels.Length / 4);\n        string vowelsMiddleRightLeftMiddle\
    \ = vowels.Substring(vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 4);\n        string vowelsMiddleRightLeftMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 4);\n        string vowelsMiddleLeftRightMiddleMiddle\
    \ = vowels.Substring(vowels.Length / 4);\n        string vowelsMiddle\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpuf2tbrs1.cs(51,28): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalLower\
    \ = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpperLower =\
    \ vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCap\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqgzxxgxl.cs(50,29): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length);\n        string vowelsLeft\
    \ = vowelsLeft.ToLower();\n        string vowelsRight = vowelsRight.ToLower();\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"e\", \"\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"e\", \"\");\n        string vowelsLeft =\
    \ vowelsLeft.Replace(\"i\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"\
    i\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"o\", \"\");\n  \
    \      string vowelsRight = vowelsRight.Replace(\"o\", \"\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"u\", \"\");\n        string vowelsRight =\
    \ vowelsRight.Replace(\"u\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"\
    a\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"a\", \"\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"e\", \"\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"e\", \"\");\n        string vowelsLeft =\
    \ vowelsLeft.Replace(\"i\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"\
    i\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"o\", \"\");\n  \
    \      string vowelsRight = vowelsRight.Replace(\"o\", \"\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"u\", \"\");\n        string vowelsRight =\
    \ vowelsRight.Replace(\"u\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"\
    a\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"a\", \"\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"e\", \"\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"e\", \"\");\n        string vowelsLeft =\
    \ vowelsLeft.Replace(\"i\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"\
    i\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"o\", \"\");\n  \
    \      string vowelsRight = vowelsRight.Replace(\"o\", \"\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"u\", \"\");\n        string vowelsRight =\
    \ vowelsRight.Replace(\"u\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"\
    a\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6jocq64f.cs(57,48): error CS1010: Newline in constant

    /tmp/tmp6jocq64f.cs(57,50): error CS1026: ) expected

    /tmp/tmp6jocq64f.cs(57,50): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqtmgoume.cs(30,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(31,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(32,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(33,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(34,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(35,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(36,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(37,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(38,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(39,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(40,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(41,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(42,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(43,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(44,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /'
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsMiddleMiddle = vowels.Substring(0, vowels.Length\
    \ / 4);\n        string vowelsMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 4 - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4 + 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 16);\n\
    \        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 16 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 16, vowels.Length / 16 + 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 32, vowels.Length / 32 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, vowels.Length / 64);\n\
    \        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0, vowels.Length\
    \ / 64 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 64, vowels.Length / 64 + 1);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowels.Substring(0, vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowels.Substring(vowels.Length / 128, vowels.Length / 128 + 1);\n        string\
    \ vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0, \n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp145vslbs.cs(48,68): error CS1525: Invalid expression term ''}''

    /tmp/tmp145vslbs.cs(48,68): error CS1026: ) expected

    /tmp/tmp145vslbs.cs(48,68): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalLower\
    \ = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpperLower =\
    \ vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperLower\
    \ = vowelsBothCapitalUpperUpper.ToLower();\n        string vowelsBothCapitalUpperUpperUpper\
    \ = vowelsBothCapitalUpperUpper.ToUpper().ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalUpperUpperUpperLower = vowelsBothCapitalUpperUpperUpper.ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpper = vowelsBothCapitalUpperUpperUpper.ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperLower = vowelsBothCapitalUpperUpperUpperUpper.ToUpper().ToUpper().ToUpper().ToLower().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpper = vowelsBothCapitalUpperUpperUpperUpper.ToUpper().ToUpper().ToUpper().ToUpper().ToLower().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperLower = vowelsBothCapitalUpperUpperUpperUpper.ToUpper().ToUpper().ToUpper().ToUpper().ToLower().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpper = vowelsBothCapitalUpperUpperUpperUpper.ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToLower().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperLower = vowelsBothCapitalUpperUpperUpperUpper.ToUpper().ToUpper().ToUpper().To\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpglkwab3f.cs(43,131): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddle2 = vowels.Substring(0, vowels.Length / 2);\n        string\
    \ vowelsMiddle3 = vowels.Substring(0, vowels.Length / 3);\n        string vowelsMiddle4\
    \ = vowels.Substring(0, vowels.Length / 4);\n        string vowelsMiddle5 = vowels.Substring(0,\
    \ vowels.Length / 5);\n        string vowelsMiddle6 = vowels.Substring(0, vowels.Length\
    \ / 6);\n        string vowelsMiddle7 = vowels.Substring(0, vowels.Length / 7);\n\
    \        string vowelsMiddle8 = vowels.Substring(0, vowels.Length / 8);\n    \
    \    string vowelsMiddle9 = vowels.Substring(0, vowels.Length / 9);\n        string\
    \ vowelsMiddle10 = vowels.Substring(0, vowels.Length / 10);\n        string vowelsMiddle11\
    \ = vowels.Substring(0, vowels.Length / 11);\n        string vowelsMiddle12 =\
    \ vowels.Substring(0, vowels.Length / 12);\n        string vowelsMiddle13 = vowels.Substring(0,\
    \ vowels.Length / 13);\n        string vowelsMiddle14 = vowels.Substring(0, vowels.Length\
    \ / 14);\n        string vowelsMiddle15 = vowels.Substring(0, vowels.Length /\
    \ 15);\n        string vowelsMiddle16 = vowels.Substring(0, vowels.Length / 16);\n\
    \        string vowelsMiddle17 = vowels.Substring(0, vowels.Length / 17);\n  \
    \      string vowelsMiddle18 = vowels.Substring(0, vowels.Length / 18);\n    \
    \    string vowelsMiddle19 = vowels.Substring(0, vowels.Length / 19);\n      \
    \  string vowelsMiddle20 = vowels.Substring(0, vowels.Length / 20);\n        string\
    \ vowelsMiddle21 = vowels.Substring(0, vowels.Length / 21);\n        string vowelsMiddle22\
    \ = vowels.Substring(0, vowels.Length / 22);\n        string vowelsMiddle23 =\
    \ vowels.Substring(0, vowels.Length / 23);\n        string vowelsMiddle24 = vowels.Substring(0,\
    \ vowels.Length / 24);\n        string vowelsMiddle25 = vowels.Substring(0, vowels.Length\
    \ / 25);\n        string vowelsMiddle26 = vowels.Substring(0, vowels.Length /\
    \ 26);\n        string vowelsMiddle\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo3f9q68n.cs(53,28): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 2);\n       \
    \ string vowelsBothLeft = vowels.Substring(0, vowels.Length - 2);\n        string\
    \ vowelsBothRight = vowels.Substring(vowels.Length - 2, vowels.Length);\n    \
    \    string vowelsBothBoth = vowels.Substring(0, vowels.Length - 3);\n       \
    \ string vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 3);\n      \
    \  string vowelsBothBothRight = vowels.Substring(vowels.Length - 3, vowels.Length);\n\
    \        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothRight = vowels.Substring(vowels.Length - 4,\
    \ vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 5, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 6, vowels.Length);\n        string vowelsBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 7, vowels.Length);\n        string vowelsBothBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothLeft =\
    \ vowels.Substring(0, vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length - 8, vowels.Length);\n        string vowelsBothBothBothBothBothBothBothBoth\
    \ = vowels.Substring\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp71wzmxua.cs(48,73): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsAll = vowelsLeft + vowelsRight + vowelsMiddle;\n\
    \        string vowelsAllCaps = vowelsAll.ToUpper();\n        string vowelsAllCapsLeft\
    \ = vowelsAllCaps.Substring(0, vowelsAllCaps.Length - 1);\n        string vowelsAllCapsRight\
    \ = vowelsAllCaps.Substring(vowelsAllCaps.Length - 1, vowelsAllCaps.Length);\n\
    \        string vowelsAllCapsMiddle = vowelsAllCaps.Substring(vowelsAllCaps.Length\
    \ / 2, vowelsAllCaps.Length / 2);\n        string vowelsAllCapsAll = vowelsAllCapsLeft\
    \ + vowelsAllCapsRight + vowelsAllCapsMiddle;\n        string vowelsAllCapsAllCaps\
    \ = vowelsAllCapsAll.ToUpper();\n        string vowelsAllCapsAllCapsLeft = vowelsAllCapsAllCaps.Substring(0,\
    \ vowelsAllCapsAllCaps.Length - 1);\n        string vowelsAllCapsAllCapsRight\
    \ = vowelsAllCapsAllCaps.Substring(vowelsAllCapsAllCaps.Length - 1, vowelsAllCapsAllCaps.Length);\n\
    \        string vowelsAllCapsAllCapsMiddle = vowelsAllCapsAllCaps.Substring(vowelsAllCapsAllCaps.Length\
    \ / 2, vowelsAllCapsAllCaps.Length / 2);\n        string vowelsAllCapsAllCapsAll\
    \ = vowelsAllCapsAllCapsLeft + vowelsAllCapsAllCapsRight + vowelsAllCapsAllCapsMiddle;\n\
    \        string vowelsAllCapsAllCapsAllCaps = vowelsAllCapsAllCapsAll.ToUpper();\n\
    \        string vowelsAllCapsAllCapsAllCapsLeft = vowelsAllCapsAllCapsAllCaps.Substring(0,\
    \ vowelsAllCapsAllCapsAllCaps.Length - 1);\n        string vowelsAllCapsAllCapsAllCapsRight\
    \ = vowelsAllCapsAllCapsAllCaps.Substring(vowelsAllCap\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpm0i3v2iw.cs(41,101): error CS1026: ) expected

    /tmp/tmpm0i3v2iw.cs(41,101): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpper\
    \ = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalLower = vowelsBothCapital.ToLower();\n\
    \        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n      \
    \  string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalUpper\
    \ = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n\
    \        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n      \
    \  string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalUpper\
    \ = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n\
    \        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n      \
    \  string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalUpper\
    \ = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n\
    \        string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n      \
    \  string vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string \n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4o242gjo.cs(52,15): error CS1001: Identifier expected

    /tmp/tmp4o242gjo.cs(52,15): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length - 1);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowel\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqy1szrg6.cs(44,88): error CS1026: ) expected

    /tmp/tmpqy1szrg6.cs(44,88): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string vowelsBothCapLower\
    \ = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpper = vowelsBothCapUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperLower.\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0v3xtsy3.cs(45,151): error CS1001: Identifier expected

    /tmp/tmp0v3xtsy3.cs(45,151): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(word.Length - 1);\n   \
    \     string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleRight = vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeft\
    \ = vowels.Substring(0, word.Length / 2);\n        string vowelsMiddleLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeft =\
    \ vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeft\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleLeftRightRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftRightLeft\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftRightRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeft\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(word.Length / 2);\n        string vowelsMiddleRightLeftRightLeftRightLeftRightLeftRightLeftRightRight\
    \ = vowels.Substring(word.Length / 2);\n        \n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2f5vx8bh.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n   \
    \     string vowelsMiddleRight = vowels.Substring(vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleMiddle = vowels.Substring(0, vowels.Length / 4);\n \
    \       string vowelsMiddleMiddleLeft = vowels.Substring(0, vowels.Length / 4\
    \ - 1);\n        string vowelsMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 4 - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 8);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 8 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 8 - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 16);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 16 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 16 - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 32);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 32 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 32 - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 64);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 64 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 64 - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 128);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 128 - 1);\n        string vowelsMiddleMiddleMiddleRight = vowels.Substring(vowels.Length\
    \ / 128 - 1);\n        string vowelsMiddleMiddleMiddleMiddle = vowels.Substring(0,\
    \ vowels.Length / 256);\n        string vowelsMiddleMiddleMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 256 - 1);\n        string vowelsMiddleMiddle\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2n3i5027.cs(50,34): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string vowelsBothCapLower\
    \ = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpper = vowelsBothCapUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperLower = vowelsBothCapUpperUpper;\n    \
    \    string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperLower = vowelsBothCapUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpper;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperLower = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperLower;\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperLower\
    \ = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperLower;\n  \
    \      string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperLower\
    \ = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperLower;\n       \
    \ string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperLow\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj333ewke.cs(47,77): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsBoth = vowels.Substring(0, vowels.Length - 2);\n        string\
    \ vowelsBothLeft = vowels.Substring(0, vowels.Length - 2);\n        string vowelsBothRight\
    \ = vowels.Substring(vowels.Length - 2);\n        string vowelsBothBoth = vowels.Substring(0,\
    \ vowels.Length - 3);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 3);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length\
    \ - 3);\n        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length\
    \ - 4);\n        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 4);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 4);\n        string vowelsBothBothBothBoth = vowels.Substring(0, vowels.Length\
    \ - 5);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 5);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 5);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0, vowels.Length\
    \ - 6);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0, vowels.Length\
    \ - 6);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 6);\n        string vowelsBothBothBothBothBothBoth = vowels.Substring(0, vowels.Length\
    \ - 7);\n        string vowelsBothBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 7);\n        string vowelsBothBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothLeft =\
    \ vowels.Substring(0, vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothBoth\
    \ = vowels.Substring(0, vowels.Length - 9);\n        string vowelsBothBothBothBothBothBothBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 9);\n        \n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7tbylb17.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2);\n   \
    \     string vowelsBothRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length / 2,\
    \ vowels.Length / 2);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsBothBothLeft = vowels.Substring(0, vowels.Length\
    \ / 2);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothMiddle =\
    \ vowels.Substring(vowels.Length / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBothBoth\
    \ = vowels.Sub\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjb9l15lg.cs(48,59): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCaps = vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n\
    \        string vowelsBothCapsLower = vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n\
    \        string vowelsBothCapsUpper = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapsLower = vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToLower();\n        string vowelsBothCapsUpperUpper = vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n        string vowelsBothCapsUpperUpperLower\
    \ = vowelsBoth.ToUpper() + vowelsBoth.ToUpper() + vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n\
    \        string vowelsBothCapsUpperUpperUpper = vowelsBoth.ToUpper() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToUpper() + vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n    \
    \    string vowelsBothCapsUpperUpperUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToUpper() + vowelsBoth.ToUpper() + vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n\
    \        string vowelsBothCapsUpperUpperUpperUpper = vowelsBoth.ToUpper() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToUpper() + vowelsBoth.ToUpper() + vowelsBoth.ToUpper() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToUpper();\n        string vowelsBothCapsUpperUpperUpperUpperLower\
    \ = vowelsBoth.ToUpper() + vowelsBoth.ToUpper() + vowelsBoth.ToUpper() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToUpper() + vowelsBoth.ToUpper() + vowelsBoth\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6kzd848p.cs(40,206): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length);\n\
    \        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2);\n \
    \       string vowelsMiddleLeftRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleRightLeftRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleRightLeftRight = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleRightLeftRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleRightLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleRightLeftRightRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleRightLeftRightRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 8, vowels.Length / 8);\n        string vowelsMiddleRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 8, \n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfy2a3r6s.cs(46,93): error CS1525: Invalid expression term ''}''

    /tmp/tmpfy2a3r6s.cs(46,93): error CS1026: ) expected

    /tmp/tmpfy2a3r6s.cs(46,93): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1);\n \
    \       string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n      \
    \  string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length - 1);\n\
    \        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0, vowelsMiddle.Length\
    \ / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length - 1);\n\
    \        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowel\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqy1szrg6.cs(44,88): error CS1026: ) expected

    /tmp/tmpqy1szrg6.cs(44,88): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3jzw3awl.cs(33,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(34,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(35,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(36,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(37,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(38,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(39,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(40,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(41,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(42,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(43,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(44,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(45,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(46,16): error CS0128: A local variable or function name'
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsReversed = vowels.ToCharArray().Reverse().ToArray();\n\
    \        string vowelsReversedString = vowelsReversed.Aggregate((a, b) => a +\
    \ b);\n        string vowelsReversedString2 = vowelsReversed.Aggregate((a, b)\
    \ => a + b);\n        string vowelsReversedString3 = vowelsReversed.Aggregate((a,\
    \ b) => a + b);\n        string vowelsReversedString4 = vowelsReversed.Aggregate((a,\
    \ b) => a + b);\n        string vowelsReversedString5 = vowelsReversed.Aggregate((a,\
    \ b) => a + b);\n        string vowelsReversedString6 = vowelsReversed.Aggregate((a,\
    \ b) => a + b);\n        string vowelsReversedString7 = vowelsReversed.Aggregate((a,\
    \ b) => a + b);\n        string vowelsReversedString8 = vowelsReversed.Aggregate((a,\
    \ b) => a + b);\n        string vowelsReversedString9 = vowelsReversed.Aggregate((a,\
    \ b) => a + b);\n        string vowelsReversedString10 = vowelsReversed.Aggregate((a,\
    \ b) => a + b);\n        string vowelsReversedString11 = vowelsReversed.Aggregate((a,\
    \ b) => a + b);\n        string vowelsReversedString12 = vowelsReversed.Aggregate((a,\
    \ b) => a + b);\n        string vowelsReversedString13 = vowelsReversed.Aggregate((a,\
    \ b) => a + b);\n        string vowelsReversedString14 = vowelsReversed.Aggregate((a,\
    \ b) => a + b);\n        string vowelsReversedString15 = vowelsReversed.Aggregate((a,\
    \ b) => a + b);\n        string vowelsReversedString16 = vowelsReversed.Aggregate((a,\
    \ b) => a + b);\n        string vowelsReversedString17 = vowelsReversed.Aggregate((a,\
    \ b) => a + b);\n        string vowelsReversedString18 = vowelsReversed.Aggregate((a,\
    \ b) => a + b);\n        string vowelsReversedString19 = vowelsReversed.Aggregate((a,\
    \ b) => a + b);\n        string vowelsReversedString20 = vowelsReversed.Aggregate((a,\
    \ b) => a + b);\n        string vowelsReversedString21 = vowelsReversed.Aggregate((a,\
    \ b) => a + b);\n        string vowelsReversedString22 = vowelsReversed.Aggregate((a,\
    \ b) => a + b);\n        string vowelsReversedString23 = vowelsReversed.Aggregate((a,\
    \ b) => a + b);\n        string vowelsReversedString24 = vowelsReversed.\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc_xgx_bk.cs(49,56): error CS1001: Identifier expected

    /tmp/tmpc_xgx_bk.cs(49,56): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCapital = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalUpper = vowelsBothCapital.ToUpper();\n        string vowelsBothCapitalLower\
    \ = vowelsBothCapital.ToLower();\n        string vowelsBothCapitalUpperLower =\
    \ vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper();\n        string vowelsBothCapitalUpperLower\
    \ = vowelsBothCapitalUpper.ToLower();\n        string vowelsBothCapitalUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpperLower\
    \ = vowelsBothCapitalUpper.ToUpper().ToUpper().ToLower();\n        string vowelsBothCapitalUpperUpperUpperUpperUpper\
    \ = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().ToLower();\n        string\
    \ vowelsBothCapitalUpperUpperUpperUpperLower = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapitalUpperUpperUpperUpperUpperUpper = vowelsBothCapitalUpper.ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToUpper().ToLower();\n\
    \        string vowelsBothCapital\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0kn3htaj.cs(45,33): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(word.Length - 1);\n   \
    \     string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleLeft = vowelsMiddle.Substring(0, word.Length - 1);\n        string\
    \ vowelsMiddleRight = vowelsMiddle.Substring(word.Length - 1);\n        string\
    \ vowelsMiddleMiddle = vowelsMiddle.Substring(0, word.Length / 2);\n        string\
    \ vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0, word.Length - 1);\n\
    \        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0,\
    \ word.Length - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(word.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddle = vowelsMiddleMiddle.Sub\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt7esd799.cs(48,65): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothLeft = vowelsBoth.Substring(0, vowelsBoth.Length - 1);\n\
    \        string vowelsBothRight = vowelsBoth.Substring(vowelsBoth.Length - 1,\
    \ vowelsBoth.Length);\n        string vowelsBothMiddle = vowelsBoth.Substring(vowelsBoth.Length\
    \ / 2, vowelsBoth.Length / 2);\n        string vowelsBothBoth = vowelsBoth.Substring(0,\
    \ vowelsBoth.Length / 2);\n        string vowelsBothBothLeft = vowelsBothBoth.Substring(0,\
    \ vowelsBothBoth.Length - 1);\n        string vowelsBothBothRight = vowelsBothBoth.Substring(vowelsBothBoth.Length\
    \ - 1, vowelsBothBoth.Length);\n        string vowelsBothBothMiddle = vowelsBothBoth.Substring(vowelsBothBoth.Length\
    \ / 2, vowelsBothBoth.Length / 2);\n        string vowelsBothBothBoth = vowelsBothBoth.Substring(0,\
    \ vowelsBothBoth.Length / 2);\n        string vowelsBothBothBothLeft = vowelsBothBothBoth.Substring(0,\
    \ vowelsBothBothBoth.Length - 1);\n        string vowelsBothBothBothRight = vowelsBothBothBoth.Substring(vowelsBothBothBoth.Length\
    \ - 1, vowelsBothBothBoth.Length);\n        string vowelsBothBothBothMiddle =\
    \ vowelsBothBothBoth.Substring(vowelsBothBothBoth.Length / 2, vowelsBothBothBoth.Length\
    \ / 2);\n        string vowelsBothBothBothBoth = vowelsBothBothBoth.Substring(0,\
    \ vowelsBothBothBoth.Length / 2);\n        string vowelsBothBothBothBothLeft =\
    \ vowelsBothBothBothBoth.Substring(0, vowelsBothBothBothBoth.Length - 1);\n  \
    \      string vowelsBothBothBothBothRight = vowelsBothBothBothBoth.Substring(vowelsBothBothBothBoth.Length\
    \ - 1, vowelsBothBothBoth.Length);\n        string vowelsBothBothBothBothMiddle\
    \ = vowelsBothBothBothBoth.Substring(vowelsBothBoth\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzi94rect.cs(43,94): error CS1026: ) expected

    /tmp/tmpzi94rect.cs(43,94): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n        string vowelsBothLower\
    \ = vowelsBoth.ToLower();\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothUpper = vowelsBoth.ToUpper();\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqtmgoume.cs(30,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(31,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(32,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(33,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(34,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(35,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(36,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(37,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(38,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(39,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(40,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(41,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(42,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(43,16): error CS0128: A local variable or function named ''vowelsBothUpper''
    is already defined in this scope

    /tmp/tmpqtmgoume.cs(44,16): error CS0128: A local variable or function named ''vowelsBothLower''
    is already defined in this scope

    /'
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothBoth = vowelsBothUpper.Replace(vowelsBothLower, \"\"\
    );\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string\
    \ vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper\
    \ = vowelsBothBothUpper.Replace(vowelsBothBothLower, \"\");\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n   \
    \     string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n   \
    \     string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n   \
    \     string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n   \
    \     string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n   \
    \     string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n   \
    \     string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n   \
    \     string vowelsBothBothUpper = vowelsBothBothUpper.Replace(vowelsBothBothLower,\
    \ \"\");\n        string vowelsBothBothLower = vowelsBothBoth.\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7_ql5pdh.cs(50,53): error CS1001: Identifier expected

    /tmp/tmp7_ql5pdh.cs(50,53): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCap = vowelsBoth.ToUpper().ToLower();\n        string\
    \ vowelsBothCapUpper = vowelsBothCap.ToUpper();\n        string vowelsBothCapLower\
    \ = vowelsBothCap.ToLower();\n        string vowelsBothCapUpperLower = vowelsBothCapUpper.ToLower();\n\
    \        string vowelsBothCapUpperUpper = vowelsBothCapUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpper = vowelsBothCapUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpper = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperUpperLower.ToUpper();\n\
    \        string vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\
    \ = vowelsBothCapUpperUpperUpperUpperUpperUpperUpperUpperUpperUpper\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbnxrqry2.cs(45,145): error CS1002: ; expected

    '
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsReversed = vowels.ToUpper();\n     \
    \   string vowelsReversedReversed = vowelsReversed.ToUpper();\n        string\
    \ vowelsReversedReversedReversed = vowelsReversedReversed.ToUpper();\n       \
    \ string vowelsReversedReversedReversedReversed = vowelsReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversed = vowelsReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversed = vowelsReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsr5ckbl2.cs(32,97): error CS0103: The name ''vowelsReversedReversedReversedReversedReversedReversedReversedReversed''
    does not exist in the current context

    /tmp/tmpsr5ckbl2.cs(33,16): error CS0128: A local variable or function named ''vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversed''
    is already defined in this scope

    /tmp/tmpsr5ckbl2.cs(33,97): error CS0103: The name ''vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed''
    does not exist in the current context

    /tmp/tmpsr5ckbl2.cs(35,16): error CS0128: A local variable or function named ''vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed''
    is already defined in this scope

    /tmp/tmpsr5ckbl2.cs(35,113): error CS0103: The name ''vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed''
    does not exist in the current context

    /tmp/tmpsr5ckbl2.cs(36,129): error CS0841: Cannot use local variable ''vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed''
    before it is declared

    /tmp/tmpsr5ckbl2.cs(31,81): error CS0165: Use of unassigned local variable ''vowelsReversedReversedReversedReversedReversedReversedReversed''

    /tmp/tmpsr5ckbl2.cs(34,113): error CS0165: Use of unassigned local variable ''vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed''

    /tmp/tmpsr5ckbl2.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(0, vowels.Length - 1);\n        string vowelsBothRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothLeftRight\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsBothRightLeft = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothLeft\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothBothRight = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(0, vowels.Length - 1);\n        string\
    \ vowelsBothRightLeftBoth = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length\
    \ - 1, vowels.Length);\n        string vowelsBothBothLeftRightBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n \
    \       string vowelsBothBothRightLeftBoth = vowels.Substring(0, vowels.Length\
    \ - 1) + vowels.Substring(vowels.Length - 1, vowels.Length);\n        string vowelsBothBothBothLeftRightBoth\
    \ = vowels.Substring(0, vowels.Length - 1) + vowels.Substring(vowels.Length -\
    \ 1, vowels.Length);\n        string vowelsBothLeftRightBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 1) + vowels.Substring\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n\
    \    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpski1s_sv.cs(41,107): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 + 1);\n        string vowelsRightLeft = vowels.Substring(vowels.Length /\
    \ 2 + 1, vowels.Length);\n        string vowelsMiddleRightLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 + 1);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 2 - 1, vowels.Length);\n        string vowelsMiddleRightLeftLeft = vowels.Substring(vowels.Length\
    \ / 2 + 1, vowels.Length);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsMiddleRightLeftLeftRight = vowels.Substring(vowels.Length\
    \ / 2 + 1, vowels.Length);\n        string vowelsMiddleRightLeftLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2 - 1, vowels.Length);\n        string vowelsMiddleRightLeftLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsMiddleRightLeftLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2 + 1, vowels.Length);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2 - 1, vowels.Length);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 2 + 1, vowels.Length);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2 - 1, vowels.Length);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsMiddleRightLeftLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 2 + 1, vowels.Length);\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx2zcl4hy.cs(39,16): error CS0128: A local variable or function named ''vowelsMiddleRightLeftLeftRightLeftRight''
    is already defined in this scope

    /tmp/tmpx2zcl4hy.cs(23,26): error CS0161: ''Problem.GetClosestVowel(string)'':
    not all code paths return a value

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length);\n        string vowelsBoth\
    \ = vowelsLeft + vowelsRight;\n        string vowelsBothUpper = vowelsBoth.ToUpper();\n\
    \        string vowelsBothLower = vowelsBoth.ToLower();\n        string vowelsBothCaps\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothCapsLower = vowelsBothCaps.ToLower();\n\
    \        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string\
    \ vowelsBothCapsLower = vowelsBothCaps.ToLower();\n        string vowelsBothCapsUpper\
    \ = vowelsBothCaps.ToUpper();\n        string vowelsBothCapsLower = vowelsBothCaps.ToLower();\n\
    \        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string\
    \ vowelsBothCapsLower = vowelsBothCaps.ToLower();\n        string vowelsBothCapsUpper\
    \ = vowelsBothCaps.ToUpper();\n        string vowelsBothCapsLower = vowelsBothCaps.ToLower();\n\
    \        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string\
    \ vowelsBothCapsLower = vowelsBothCaps.ToLower();\n        string vowelsBothCapsUpper\
    \ = vowelsBothCaps.ToUpper();\n        string vowelsBothCapsLower = vowelsBothCaps.ToLower();\n\
    \        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string\
    \ vowelsBothCapsLower = vowelsBothCaps.ToLower();\n        string vowelsBothCapsUpper\
    \ = vowelsBothCaps.ToUpper();\n        string vowelsBothCapsLower = vowelsBothCaps.ToLower();\n\
    \        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string\
    \ vowelsBothCapsLower = vowelsBothCaps.ToLower();\n        string vowelsBothCapsUpper\
    \ = vowelsBothCaps.ToUpper();\n        string vowelsBothCapsLower = vowelsBothCaps.ToLower();\n\
    \        string vowelsBothCapsUpper = vowelsBothCaps.ToUpper();\n        string\
    \ vowelsBothCapsLower = vowelsBothCaps.ToLower();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"\
    o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"\
    Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"\
    o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp78cljq2n.cs(33,16): error CS0128: A local variable or function named ''vowelsBothCapsLower''
    is already defined in this scope

    /tmp/tmp78cljq2n.cs(34,16): error CS0128: A local variable or function named ''vowelsBothCapsUpper''
    is already defined in this scope

    /tmp/tmp78cljq2n.cs(35,16): error CS0128: A local variable or function named ''vowelsBothCapsLower''
    is already defined in this scope

    /tmp/tmp78cljq2n.cs(36,16): error CS0128: A local variable or function named ''vowelsBothCapsUpper''
    is already defined in this scope

    /tmp/tmp78cljq2n.cs(37,16): error CS0128: A local variable or function named ''vowelsBothCapsLower''
    is already defined in this scope

    /tmp/tmp78cljq2n.cs(38,16): error CS0128: A local variable or function named ''vowelsBothCapsUpper''
    is already defined in this scope

    /tmp/tmp78cljq2n.cs(39,16): error CS0128: A local variable or function named ''vowelsBothCapsLower''
    is already defined in this scope

    /tmp/tmp78cljq2n.cs(40,16): error CS0128: A local variable or function named ''vowelsBothCapsUpper''
    is already defined in this scope

    /tmp/tmp78cljq2n.cs(41,16): error CS0128: A local variable or function named ''vowelsBothCapsLower''
    is already defined in this scope

    /tmp/tmp78cljq2n.cs(42,16): error CS0128: A local variable or function named ''vowelsBothCapsUpper''
    is already defined in this scope

    /tmp/tmp78cljq2n.cs(43,16): error CS0128: A local variable or function named ''vowelsBothCapsLower''
    is already defined in this scope

    /tmp/tmp78cljq2n.cs(44,16): error CS0128: A local variable or function named ''vowelsBothCapsUpper''
    is already defined in this scope

    /tmp/tmp78cljq2n.cs(45,16): error CS0128: A local variable or function named ''vowelsBothCapsLower''
    is already defined in this scope

    /tmp/tmp78cljq2n.cs(46,16): error CS0128: A local variable or function named ''vowelsBothCapsUpper''
    is already defined in this scope

    /tmp/tmp78cljq2n.cs(47,16): error CS0128: A local variable or function na'
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowels.Substring(0, vowels.Length - 2);\n       \
    \ string vowelsBothLeft = vowels.Substring(0, vowels.Length - 2);\n        string\
    \ vowelsBothRight = vowels.Substring(vowels.Length - 2, vowels.Length);\n    \
    \    string vowelsBothBoth = vowels.Substring(0, vowels.Length - 3);\n       \
    \ string vowelsBothBothLeft = vowels.Substring(0, vowels.Length - 3);\n      \
    \  string vowelsBothBothRight = vowels.Substring(vowels.Length - 3, vowels.Length);\n\
    \        string vowelsBothBothBoth = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothLeft = vowels.Substring(0, vowels.Length - 4);\n\
    \        string vowelsBothBothBothRight = vowels.Substring(vowels.Length - 4,\
    \ vowels.Length);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 5);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 5, vowels.Length);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 6);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 6, vowels.Length);\n        string vowelsBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length - 7);\n        string vowelsBothBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ - 7, vowels.Length);\n        string vowelsBothBothBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothLeft =\
    \ vowels.Substring(0, vowels.Length - 8);\n        string vowelsBothBothBothBothBothBothBothRight\
    \ = vowels.Substring(vowels.Length - 8, vowels.Length);\n        string vowelsBothBothBothBothBothBothBothBoth\
    \ = vowels.Substring\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp71wzmxua.cs(48,73): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, word.Length / 2);\n       \
    \ string vowelsMiddleRight = vowels.Substring(word.Length / 2, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeft = vowels.Substring(0, word.Length / 2);\n\
    \        string vowelsMiddleLeftRight = vowels.Substring(word.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftRight = vowels.Substring(0, word.Length\
    \ / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(0,\
    \ word.Length / 2);\n        string vowelsMiddleLeftLeftLeftRight = vowels.Substring(word.Length\
    \ / 2, vowels.Length / 2);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3jzw3awl.cs(33,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(34,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(35,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(36,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(37,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(38,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(39,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(40,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(41,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(42,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(43,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(44,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(45,16): error CS0128: A local variable or function named ''vowelsMiddleLeftLeftLeftRight''
    is already defined in this scope

    /tmp/tmp3jzw3awl.cs(46,16): error CS0128: A local variable or function name'
  timestamp: 1659798932
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsReversed = vowels.ToUpper();\n     \
    \   string vowelsReversedReversed = vowelsReversed.ToUpper();\n        string\
    \ vowelsReversedReversedReversed = vowelsReversedReversed.ToUpper();\n       \
    \ string vowelsReversedReversedReversedReversed = vowelsReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversed = vowelsReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversed = vowelsReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed\
    \ = vowelsReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversedReversed.ToUpper();\n\
    \        string vowelsReversedReversedReversedReversedReverse\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnu4bum07.cs(38,61): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, word.Length);\n\
    \        string vowelsRight = vowels.Substring(word.Length);\n        string vowelsLeft\
    \ = vowelsLeft.ToLower();\n        string vowelsRight = vowelsRight.ToLower();\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"e\", \"\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"e\", \"\");\n        string vowelsLeft =\
    \ vowelsLeft.Replace(\"i\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"\
    i\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"o\", \"\");\n  \
    \      string vowelsRight = vowelsRight.Replace(\"o\", \"\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"u\", \"\");\n        string vowelsRight =\
    \ vowelsRight.Replace(\"u\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"\
    a\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"a\", \"\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"e\", \"\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"e\", \"\");\n        string vowelsLeft =\
    \ vowelsLeft.Replace(\"i\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"\
    i\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"o\", \"\");\n  \
    \      string vowelsRight = vowelsRight.Replace(\"o\", \"\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"u\", \"\");\n        string vowelsRight =\
    \ vowelsRight.Replace(\"u\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"\
    a\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"a\", \"\");\n\
    \        string vowelsLeft = vowelsLeft.Replace(\"e\", \"\");\n        string\
    \ vowelsRight = vowelsRight.Replace(\"e\", \"\");\n        string vowelsLeft =\
    \ vowelsLeft.Replace(\"i\", \"\");\n        string vowelsRight = vowelsRight.Replace(\"\
    i\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"o\", \"\");\n  \
    \      string vowelsRight = vowelsRight.Replace(\"o\", \"\");\n        string\
    \ vowelsLeft = vowelsLeft.Replace(\"u\", \"\");\n        string vowelsRight =\
    \ vowelsRight.Replace(\"u\", \"\");\n        string vowelsLeft = vowelsLeft.Replace(\"\
    a\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6jocq64f.cs(57,48): error CS1010: Newline in constant

    /tmp/tmp6jocq64f.cs(57,50): error CS1026: ) expected

    /tmp/tmp6jocq64f.cs(57,50): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsBoth = vowels.Substring(0, vowels.Length / 2);\n\
    \        string vowelsBothLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n\
    \        string vowelsBothRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2 - 1);\n        string vowelsBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2);\n        string vowelsBothBothBothBothBoth = vowels.Substring(0,\
    \ vowels.Length / 2);\n        string vowelsBothBothBothBothBothLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBothRight = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsBothBothBothBothBothMiddle\
    \ = vowels.Substring(vowels.Length / 2, vowels.Length / 2 - 1);\n        string\
    \ vowel\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxp7cabtw.cs(48,21): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothCaps = vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n\
    \        string vowelsBothCapsLower = vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n\
    \        string vowelsBothCapsUpper = vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n\
    \        string vowelsBothCapsLower = vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n\
    \        string vowelsBothCapsUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToLower();\n        string vowelsBothCapsUpperUpper = vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n        string vowelsBothCapsUpperUpperLower\
    \ = vowelsBoth.ToUpper() + vowelsBoth.ToUpper() + vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n\
    \        string vowelsBothCapsUpperUpperUpper = vowelsBoth.ToUpper() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToUpper() + vowelsBoth.ToUpper() + vowelsBoth.ToUpper();\n    \
    \    string vowelsBothCapsUpperUpperUpperLower = vowelsBoth.ToUpper() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToUpper() + vowelsBoth.ToUpper() + vowelsBoth.ToUpper() + vowelsBoth.ToLower();\n\
    \        string vowelsBothCapsUpperUpperUpperUpper = vowelsBoth.ToUpper() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToUpper() + vowelsBoth.ToUpper() + vowelsBoth.ToUpper() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToUpper();\n        string vowelsBothCapsUpperUpperUpperUpperLower\
    \ = vowelsBoth.ToUpper() + vowelsBoth.ToUpper() + vowelsBoth.ToUpper() + vowelsBoth.ToUpper()\
    \ + vowelsBoth.ToUpper() + vowelsBoth.ToUpper() + vowelsBoth\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"yogurt\"\
    )).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6kzd848p.cs(40,206): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowels.Substring(0, vowels.Length / 2 - 1);\n  \
    \      string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsRightLeft = vowels.Substring(vowels.Length - 1,\
    \ vowels.Length / 2);\n        string vowelsRightMiddle = vowels.Substring(vowels.Length\
    \ - 1, vowels.Length / 2 - 1);\n        string vowelsMiddleRightLeft = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsMiddleRightMiddle = vowels.Substring(vowels.Length\
    \ / 2, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRight = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightMiddle = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightMiddleLeft = vowels.Substring(0,\
    \ vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightMiddleLeftRightMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRight\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddle\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeft\
    \ = vowels.Substring(0, vowels.Length / 2 - 1);\n        string vowelsMiddleLeftRightMiddleLeftRightMiddleLeftRightMiddleLeft\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqltnhnqr.cs(46,77): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsBoth = vowelsLeft + vowelsRight;\n        string vowelsBothUpper\
    \ = vowelsBoth.ToUpper();\n        string vowelsBothLower = vowelsBoth.ToLower();\n\
    \        string vowelsBothBoth = vowelsBothUpper.Replace(vowelsBothLower, \"\"\
    );\n        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n\
    \        string vowelsBothBothLower = vowelsBothBoth.ToLower();\n        string\
    \ vowelsBothBothUpper = vowelsBothBoth.ToUpper();\n        string vowelsBothBothLower\
    \ = vowelsBothBoth.ToLower();\n        string vowelsBothBothUpper = \n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxhb2zqx8.cs(54,37): error CS1525: Invalid expression term ''}''

    /tmp/tmpxhb2zqx8.cs(54,37): error CS1002: ; expected

    '
  timestamp: 1659798933
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"AEIOUaeiou\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleLeft = vowelsMiddle.Substring(0, vowelsMiddle.Length -\
    \ 1);\n        string vowelsMiddleRight = vowelsMiddle.Substring(vowelsMiddle.Length\
    \ - 1, vowelsMiddle.Length);\n        string vowelsMiddleMiddle = vowelsMiddle.Substring(0,\
    \ vowelsMiddle.Length / 2);\n        string vowelsMiddleMiddleLeft = vowelsMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleRight = vowelsMiddleMiddle.Substring(vowelsMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddle =\
    \ vowelsMiddleMiddle.Substring(0, vowelsMiddleMiddle.Length / 2);\n        string\
    \ vowelsMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddle.Length / 2);\n\
    \        string vowelsMiddleMiddleMiddleMiddleLeft = vowelsMiddleMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddleMiddle.Length - 1);\n        string vowelsMiddleMiddleMiddleRight\
    \ = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length - 1, vowelsMiddleMiddleMiddle.Length);\n\
    \        string vowelsMiddleMiddleMiddleMiddle = vowelsMiddleMiddleMiddle.Substring(0,\
    \ vowelsMiddleMiddleMiddle.Length / 2);\n        string vowelsMiddleMiddleMiddleMiddleLeft\
    \ = vowelsMiddleMiddleMiddleMiddle.Substring(0, vowelsMiddleMiddleMiddleMiddle.Length\
    \ - 1);\n        string vowelsMiddleMiddleMiddleMiddleRight = vowelsMiddleMiddleMiddle.Substring(vowelsMiddleMiddleMiddle.Length\
    \ - 1, vowelsMiddleMiddleMiddle.Length);\n        string vowelsMiddleMiddleMiddleMiddle\
    \ = vowelsMiddleMiddleMiddle.\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(GetClosestVowel((\"yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"\
    full\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    ali\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"\
    a\")));\n    Debug.Assert(GetClosestVowel((\"most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"\
    ab\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    anime\")).Equals((\"i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"Above\")).Equals((\"o\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqarvqtiw.cs(42,74): error CS1001: Identifier expected

    /tmp/tmpqarvqtiw.cs(42,74): error CS1002: ; expected

    '
  timestamp: 1659798931
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You are given a word. Your task is to find the closest\
    \ vowel that stands between \n    // two consonants from the right side of the\
    \ word (case sensitive).\n    // Vowels in the beginning and ending doesn't count.\
    \ Return empty string if you didn't\n    // find any vowel met the above condition.\
    \ \n    // You may assume that the given string contains English letter only.\n\
    \    // Example:\n    // >>> GetClosestVowel((\"yogurt\"))\n    // (\"u\")\n \
    \   // >>> GetClosestVowel((\"FULL\"))\n    // (\"U\")\n    // >>> GetClosestVowel((\"\
    quick\"))\n    // (\"\")\n    // >>> GetClosestVowel((\"ab\"))\n    // (\"\")\n\
    \    public static string GetClosestVowel(string word) {\n        string vowels\
    \ = \"aeiouAEIOU\";\n        string vowelsLeft = vowels.Substring(0, vowels.Length\
    \ - 1);\n        string vowelsRight = vowels.Substring(vowels.Length - 1, vowels.Length);\n\
    \        string vowelsMiddle = vowels.Substring(0, vowels.Length / 2);\n     \
    \   string vowelsMiddleRight = vowels.Substring(vowels.Length / 2, vowels.Length\
    \ / 2);\n        string vowelsMiddleLeft = vowels.Substring(0, vowels.Length /\
    \ 2);\n        string vowelsMiddleLeftRight = vowels.Substring(vowels.Length /\
    \ 2, vowels.Length / 2);\n        string vowelsMiddleLeftRightLeft = vowels.Substring(vowels.Length\
    \ / 4, vowels.Length / 4);\n        string vowelsMiddleLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 8, vowels.Length / 8);\n        string vowelsMiddleLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 16, vowels.Length / 16);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRight = vowels.Substring(vowels.Length / 32,\
    \ vowels.Length / 32);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 64, vowels.Length / 64);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 128, vowels.Length / 128);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 256, vowels.Length / 256);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 512, vowels.Length / 512);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeft\
    \ = vowels.Substring(vowels.Length / 1024, vowels.Length / 1024);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight = vowels.Substring(vowels.Length\
    \ / 2048, vowels.Length / 2048);\n        string vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 4096, vowels.Length / 4096);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\
    \ = vowels.Substring(vowels.Length / 8192, vowels.Length / 8192);\n        string\
    \ vowelsMiddleLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRightLeftRight\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetClosestVowel((\"\
    yogurt\")).Equals((\"u\")));\n    Debug.Assert(GetClosestVowel((\"full\")).Equals((\"\
    u\")));\n    Debug.Assert(GetClosestVowel((\"easy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    eAsy\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"ali\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"bad\")).Equals((\"a\")));\n    Debug.Assert(GetClosestVowel((\"\
    most\")).Equals((\"o\")));\n    Debug.Assert(GetClosestVowel((\"ab\")).Equals((\"\
    \")));\n    Debug.Assert(GetClosestVowel((\"ba\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    quick\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"anime\")).Equals((\"\
    i\")));\n    Debug.Assert(GetClosestVowel((\"Asia\")).Equals((\"\")));\n    Debug.Assert(GetClosestVowel((\"\
    Above\")).Equals((\"o\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvbauiruu.cs(43,109): error CS1002: ; expected

    '
  timestamp: 1659798933

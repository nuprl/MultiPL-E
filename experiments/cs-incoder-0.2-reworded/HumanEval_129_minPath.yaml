name: HumanEval_129_minPath
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given a grid with N rows and N columns (N >= 2) and a positive\
  \ integer k, \n    // each cell of the grid contains a value. Every integer in the\
  \ range [1, N * N]\n    // inclusive appears exactly once on the cells of the grid.\n\
  \    // You have to find the minimum path of length k in the grid. You can start\n\
  \    // from any cell, and in each step you can move to any of the neighbor cells,\n\
  \    // in other words, you can go to cells which share an edge with you current\n\
  \    // cell.\n    // Please note that a path of length k means visiting exactly\
  \ k cells (not\n    // necessarily distinct).\n    // You CANNOT go off the grid.\n\
  \    // A path A (of length k) is considered less than a path B (of length k) if\n\
  \    // after making the ordered lists of the values on the cells that A and B go\n\
  \    // through (let's call them lst_A and lst_B), lst_A is lexicographically less\n\
  \    // than lst_B, in other words, there exist an integer index i (1 <= i <= k)\n\
  \    // such that lst_A[i] < lst_B[i] and for any j (1 <= j < i) we have\n    //\
  \ lst_A[j] = lst_B[j].\n    // It is guaranteed that the answer is unique.\n   \
  \ // Return an ordered list of the values on the cells that the minimum path go\
  \ through.\n    // Examples:    \n    // >>> Minpath((new List<List<long>>(new List<long>[]{(List<long>)new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}), (List<long>)new List<long>(new\
  \ long[]{(long)4L, (long)5L, (long)6L}), (List<long>)new List<long>(new long[]{(long)7L,\
  \ (long)8L, (long)9L})})), (3L))\n    // (new List<long>(new long[]{(long)1L, (long)2L,\
  \ (long)1L}))\n    // >>> Minpath((new List<List<long>>(new List<long>[]{(List<long>)new\
  \ List<long>(new long[]{(long)5L, (long)9L, (long)3L}), (List<long>)new List<long>(new\
  \ long[]{(long)4L, (long)1L, (long)6L}), (List<long>)new List<long>(new long[]{(long)7L,\
  \ (long)8L, (long)2L})})), (1L))\n    // (new List<long>(new long[]{(long)1L}))\n\
  \    public static List<long> Minpath(List<List<long>> grid, long k) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Minpath((new\
  \ List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L,\
  \ (long)2L, (long)3L}), (List<long>)new List<long>(new long[]{(long)4L, (long)5L,\
  \ (long)6L}), (List<long>)new List<long>(new long[]{(long)7L, (long)8L, (long)9L})})),\
  \ (3L)).Equals((new List<long>(new long[]{(long)1L, (long)2L, (long)1L}))));\n \
  \   Debug.Assert(Minpath((new List<List<long>>(new List<long>[]{(List<long>)new\
  \ List<long>(new long[]{(long)5L, (long)9L, (long)3L}), (List<long>)new List<long>(new\
  \ long[]{(long)4L, (long)1L, (long)6L}), (List<long>)new List<long>(new long[]{(long)7L,\
  \ (long)8L, (long)2L})})), (1L)).Equals((new List<long>(new long[]{(long)1L}))));\n\
  \    Debug.Assert(Minpath((new List<List<long>>(new List<long>[]{(List<long>)new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}), (List<long>)new\
  \ List<long>(new long[]{(long)5L, (long)6L, (long)7L, (long)8L}), (List<long>)new\
  \ List<long>(new long[]{(long)9L, (long)10L, (long)11L, (long)12L}), (List<long>)new\
  \ List<long>(new long[]{(long)13L, (long)14L, (long)15L, (long)16L})})), (4L)).Equals((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L}))));\n    Debug.Assert(Minpath((new\
  \ List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)6L,\
  \ (long)4L, (long)13L, (long)10L}), (List<long>)new List<long>(new long[]{(long)5L,\
  \ (long)7L, (long)12L, (long)1L}), (List<long>)new List<long>(new long[]{(long)3L,\
  \ (long)16L, (long)11L, (long)15L}), (List<long>)new List<long>(new long[]{(long)8L,\
  \ (long)14L, (long)9L, (long)2L})})), (7L)).Equals((new List<long>(new long[]{(long)1L,\
  \ (long)10L, (long)1L, (long)10L, (long)1L, (long)10L, (long)1L}))));\n    Debug.Assert(Minpath((new\
  \ List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)8L,\
  \ (long)14L, (long)9L, (long)2L}), (List<long>)new List<long>(new long[]{(long)6L,\
  \ (long)4L, (long)13L, (long)15L}), (List<long>)new List<long>(new long[]{(long)5L,\
  \ (long)7L, (long)1L, (long)12L}), (List<long>)new List<long>(new long[]{(long)3L,\
  \ (long)10L, (long)11L, (long)16L})})), (5L)).Equals((new List<long>(new long[]{(long)1L,\
  \ (long)7L, (long)1L, (long)7L, (long)1L}))));\n    Debug.Assert(Minpath((new List<List<long>>(new\
  \ List<long>[]{(List<long>)new List<long>(new long[]{(long)11L, (long)8L, (long)7L,\
  \ (long)2L}), (List<long>)new List<long>(new long[]{(long)5L, (long)16L, (long)14L,\
  \ (long)4L}), (List<long>)new List<long>(new long[]{(long)9L, (long)3L, (long)15L,\
  \ (long)6L}), (List<long>)new List<long>(new long[]{(long)12L, (long)13L, (long)10L,\
  \ (long)1L})})), (9L)).Equals((new List<long>(new long[]{(long)1L, (long)6L, (long)1L,\
  \ (long)6L, (long)1L, (long)6L, (long)1L, (long)6L, (long)1L}))));\n    Debug.Assert(Minpath((new\
  \ List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)12L,\
  \ (long)13L, (long)10L, (long)1L}), (List<long>)new List<long>(new long[]{(long)9L,\
  \ (long)3L, (long)15L, (long)6L}), (List<long>)new List<long>(new long[]{(long)5L,\
  \ (long)16L, (long)14L, (long)4L}), (List<long>)new List<long>(new long[]{(long)11L,\
  \ (long)8L, (long)7L, (long)2L})})), (12L)).Equals((new List<long>(new long[]{(long)1L,\
  \ (long)6L, (long)1L, (long)6L, (long)1L, (long)6L, (long)1L, (long)6L, (long)1L,\
  \ (long)6L, (long)1L, (long)6L}))));\n    Debug.Assert(Minpath((new List<List<long>>(new\
  \ List<long>[]{(List<long>)new List<long>(new long[]{(long)2L, (long)7L, (long)4L}),\
  \ (List<long>)new List<long>(new long[]{(long)3L, (long)1L, (long)5L}), (List<long>)new\
  \ List<long>(new long[]{(long)6L, (long)8L, (long)9L})})), (8L)).Equals((new List<long>(new\
  \ long[]{(long)1L, (long)3L, (long)1L, (long)3L, (long)1L, (long)3L, (long)1L, (long)3L}))));\n\
  \    Debug.Assert(Minpath((new List<List<long>>(new List<long>[]{(List<long>)new\
  \ List<long>(new long[]{(long)6L, (long)1L, (long)5L}), (List<long>)new List<long>(new\
  \ long[]{(long)3L, (long)8L, (long)9L}), (List<long>)new List<long>(new long[]{(long)2L,\
  \ (long)7L, (long)4L})})), (8L)).Equals((new List<long>(new long[]{(long)1L, (long)5L,\
  \ (long)1L, (long)5L, (long)1L, (long)5L, (long)1L, (long)5L}))));\n    Debug.Assert(Minpath((new\
  \ List<List<long>>(new List<long>[]{(List<long>)new List<long>(new long[]{(long)1L,\
  \ (long)2L}), (List<long>)new List<long>(new long[]{(long)3L, (long)4L})})), (10L)).Equals((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)1L, (long)2L, (long)1L, (long)2L,\
  \ (long)1L, (long)2L, (long)1L, (long)2L}))));\n    Debug.Assert(Minpath((new List<List<long>>(new\
  \ List<long>[]{(List<long>)new List<long>(new long[]{(long)1L, (long)3L}), (List<long>)new\
  \ List<long>(new long[]{(long)3L, (long)2L})})), (10L)).Equals((new List<long>(new\
  \ long[]{(long)1L, (long)3L, (long)1L, (long)3L, (long)1L, (long)3L, (long)1L, (long)3L,\
  \ (long)1L, (long)3L}))));\n    }\n\n}\n"
completions: ["        List<long> result = new List<long>();\n        List<long> lst_A\
    \ = new List<long>();\n        List<long> lst_B = new List<long>();\n        List<long>\
    \ lst_C = new List<long>();\n        List<long> lst_D = new List<long>();\n  \
    \      List<long> lst_E = new List<long>();\n        List<long> lst_F = new List<long>();\n\
    \        List<long> lst_G = new List<long>();\n        List<long> lst_H = new\
    \ List<long>();\n        List<long> lst_I = new List<long>();\n        List<long>\
    \ lst_J = new List<long>();\n        List<long> lst_K = new List<long>();\n  \
    \      List<long> lst_L = new List<long>();\n        List<long> lst_M = new List<long>();\n\
    \        List<long> lst_N = new List<long>();\n        List<long> lst_O = new\
    \ List<long>();\n        List<long> lst_P = new List<long>();\n        List<long>\
    \ lst_Q = new List<long>();\n        List<long> lst_R = new List<long>();\n  \
    \      List<long> lst_S = new List<long>();\n        List<long> lst_T = new List<long>();\n\
    \        List<long> lst_U = new List<long>();\n        List<long> lst_V = new\
    \ List<long>();\n        List<long> lst_W = new List<long>();\n        List<long>\
    \ lst_X = new List<long>();\n        List<long> lst_Y = new List<long>();\n  \
    \      List<long> lst_Z = new List<long>();\n        List<long> lst_AA = new List<long>();\n\
    \        List<long> lst_AB = new List<long>();\n        List<long> lst_AC = new\
    \ List<long>();\n        List<long> lst_AD = new List<long>();\n        List<long>\
    \ lst_AE = new List<long>();\n        List<long> lst_AF = new List<long>();\n\
    \        List<long> lst_AG = new List<long>();\n        List<long> lst_AH = new\
    \ List<long>();\n        List<long> lst_AI = new List<long>();\n        List<long>\
    \ lst_AJ = new List<long>();\n        List<long> lst_AK = new List<long>();\n\
    \        List<long> lst_AL = new List<long>();\n        List<long> lst_AM = new\
    \ List<long>();\n        List<long> lst_AN = new List<long>();\n        List<long>\
    \ lst_AO = new List<long>();\n        List<long> lst_AP = new List<", "      \
    \  List<long> result = new List<long>();\n        List<long> visited = new List<long>();\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid[0].First());\n        visited.Add(grid[0].Last());\n\
    \        visited.Add(grid", "        List<long> list = new List<long>();\n   \
    \     List<List<long>> gridCopy = new List<List<long>>();\n        List<long>\
    \ listCopy = new List<long>();\n        List<long> listCopy2 = new List<long>();\n\
    \        List<long> listCopy3 = new List<long>();\n        List<long> listCopy4\
    \ = new List<long>();\n        List<long> listCopy5 = new List<long>();\n    \
    \    List<long> listCopy6 = new List<long>();\n        List<long> listCopy7 =\
    \ new List<long>();\n        List<long> listCopy8 = new List<long>();\n      \
    \  List<long> listCopy9 = new List<long>();\n        List<long> listCopy10 = new\
    \ List<long>();\n        List<long> listCopy11 = new List<long>();\n        List<long>\
    \ listCopy12 = new List<long>();\n        List<long> listCopy13 = new List<long>();\n\
    \        List<long> listCopy14 = new List<long>();\n        List<long> listCopy15\
    \ = new List<long>();\n        List<long> listCopy16 = new List<long>();\n   \
    \     List<long> listCopy17 = new List<long>();\n        List<long> listCopy18\
    \ = new List<long>();\n        List<long> listCopy19 = new List<long>();\n   \
    \     List<long> listCopy20 = new List<long>();\n        List<long> listCopy21\
    \ = new List<long>();\n        List<long> listCopy22 = new List<long>();\n   \
    \     List<long> listCopy23 = new List<long>();\n        List<long> listCopy24\
    \ = new List<long>();\n        List<long> listCopy25 = new List<long>();\n   \
    \     List<long> listCopy26 = new List<long>();\n        List<long> listCopy27\
    \ = new List<long>();\n        List<long> listCopy28 = new List<long>();\n   \
    \     List<long> listCopy29 = new List<long>();\n        List<long> listCopy30\
    \ = new List<long>();\n        List<long> listCopy31 = new List<long>();\n   \
    \     List<long> listCopy32 = new List<long>();\n        List<long> listCopy33\
    \ = new List<long>();\n        List<long> listCopy34 = new List<long>();\n   \
    \     List<long> listCopy35 = new List<long>();\n        List<long> listCopy36\
    \ = new List<long>();\n        List<long> listCopy37 = new List<long>();\n   \
    \     List<long> listCopy38 = new List<long>();\n        List<long> listCopy39\
    \ = new List<long>();\n        List<long> listCopy40 = new List<long>();\n   \
    \     List<long> listCopy4", "        List<long> result = new List<long>();\n\
    \        List<long> lst_A = new List<long>();\n        List<long> lst_B = new\
    \ List<long>();\n        List<long> lst_C = new List<long>();\n        List<long>\
    \ lst_D = new List<long>();\n        List<long> lst_E = new List<long>();\n  \
    \      List<long> lst_F = new List<long>();\n        List<long> lst_G = new List<long>();\n\
    \        List<long> lst_H = new List<long>();\n        List<long> lst_I = new\
    \ List<long>();\n        List<long> lst_J = new List<long>();\n        List<long>\
    \ lst_K = new List<long>();\n        List<long> lst_L = new List<long>();\n  \
    \      List<long> lst_M = new List<long>();\n        List<long> lst_N = new List<long>();\n\
    \        List<long> lst_O = new List<long>();\n        List<long> lst_P = new\
    \ List<long>();\n        List<long> lst_Q = new List<long>();\n        List<long>\
    \ lst_R = new List<long>();\n        List<long> lst_S = new List<long>();\n  \
    \      List<long> lst_T = new List<long>();\n        List<long> lst_U = new List<long>();\n\
    \        List<long> lst_V = new List<long>();\n        List<long> lst_W = new\
    \ List<long>();\n        List<long> lst_X = new List<long>();\n        List<long>\
    \ lst_Y = new List<long>();\n        List<long> lst_Z = new List<long>();\n  \
    \      List<long> lst_AA = new List<long>();\n        List<long> lst_AB = new\
    \ List<long>();\n        List<long> lst_AC = new List<long>();\n        List<long>\
    \ lst_AD = new List<long>();\n        List<long> lst_AE = new List<long>();\n\
    \        List<long> lst_AF = new List<long>();\n        List<long> lst_AG = new\
    \ List<long>();\n        List<long> lst_AH = new List<long>();\n        List<long>\
    \ lst_AI = new List<long>();\n        List<long> lst_AJ = new List<long>();\n\
    \        List<long> lst_AK = new List<long>();\n        List<long> lst_AL = new\
    \ List<long>();\n        List<long> lst_AM = new List<long>();\n        List<long>\
    \ lst_AN = new List<long>();\n        List<long> lst_AO = new List<long>();\n\
    \        List<long> lst_AP = new List<", "        List<long> result = new List<long>();\n\
    \        List<long> lst_A = new List<long>();\n        List<long> lst_B = new\
    \ List<long>();\n        List<long> lst_C = new List<long>();\n        List<long>\
    \ lst_D = new List<long>();\n        List<long> lst_E = new List<long>();\n  \
    \      List<long> lst_F = new List<long>();\n        List<long> lst_G = new List<long>();\n\
    \        List<long> lst_H = new List<long>();\n        List<long> lst_I = new\
    \ List<long>();\n        List<long> lst_J = new List<long>();\n        List<long>\
    \ lst_K = new List<long>();\n        List<long> lst_L = new List<long>();\n  \
    \      List<long> lst_M = new List<long>();\n        List<long> lst_N = new List<long>();\n\
    \        List<long> lst_O = new List<long>();\n        List<long> lst_P = new\
    \ List<long>();\n        List<long> lst_Q = new List<long>();\n        List<long>\
    \ lst_R = new List<long>();\n        List<long> lst_S = new List<long>();\n  \
    \      List<long> lst_T = new List<long>();\n        List<long> lst_U = new List<long>();\n\
    \        List<long> lst_V = new List<long>();\n        List<long> lst_W = new\
    \ List<long>();\n        List<long> lst_X = new List<long>();\n        List<long>\
    \ lst_Y = new List<long>();\n        List<long> lst_Z = new List<long>();\n  \
    \      List<long> lst_AA = new List<long>();\n        List<long> lst_AB = new\
    \ List<long>();\n        List<long> lst_AC = new List<long>();\n        List<long>\
    \ lst_AD = new List<long>();\n        List<long> lst_AE = new List<long>();\n\
    \        List<long> lst_AF = new List<long>();\n        List<long> lst_AG = new\
    \ List<long>();\n        List<long> lst_AH = new List<long>();\n        List<long>\
    \ lst_AI = new List<long>();\n        List<long> lst_AJ = new List<long>();\n\
    \        List<long> lst_AK = new List<long>();\n        List<long> lst_AL = new\
    \ List<long>();\n        List<long> lst_AM = new List<long>();\n        List<long>\
    \ lst_AN = new List<long>();\n        List<long> lst_AO = new List<long>();\n\
    \        List<long> lst_AP = new List<", "        List<long> result = new List<long>();\n\
    \        List<long> visited = new List<long>();\n        visited.Add(0);\n   \
    \     visited.Add(grid.Count - 1);\n        visited.Add(0);\n        visited.Add(grid.Count\
    \ - 1);\n        visited.Add(0);\n        visited.Add(grid.Count - 1);\n     \
    \   visited.Add(0);\n        visited.Add(grid.Count - 1);\n        visited.Add(0);\n\
    \        visited.Add(grid.Count - 1);\n        visited.Add(0);\n        visited.Add(grid.Count\
    \ - 1);\n        visited.Add(0);\n        visited.Add(grid.Count - 1);\n     \
    \   visited.Add(0);\n        visited.Add(grid.Count - 1);\n        visited.Add(0);\n\
    \        visited.Add(grid.Count - 1);\n        visited.Add(0);\n        visited.Add(grid.Count\
    \ - 1);\n        visited.Add(0);\n        visited.Add(grid.Count - 1);\n     \
    \   visited.Add(0);\n        visited.Add(grid.Count - 1);\n        visited.Add(0);\n\
    \        visited.Add(grid.Count - 1);\n        visited.Add(0);\n        visited.Add(grid.Count\
    \ - 1);\n        visited.Add(0);\n        visited.Add(grid.Count - 1);\n     \
    \   visited.Add(0);\n        visited.Add(grid.Count - 1);\n        visited.Add(0);\n\
    \        visited.Add(grid.Count - 1);\n        visited.Add(0);\n        visited.Add(grid.Count\
    \ - 1);\n        visited.Add(0);\n        visited.Add(grid.Count - 1);\n     \
    \   visited.Add(0);\n        visited.Add(grid.Count - 1);\n        visited.Add(0);\n\
    \        visited.Add(grid.Count - 1);\n        visited.Add(0);\n        visited.Add(grid.Count\
    \ - 1);\n        visited.Add(0);\n        visited.Add(grid.Count - 1);\n     \
    \   visited.Add(0);\n        visited.Add(grid.Count - 1);\n        visited.Add(0);\n\
    \        visited.Add(grid.Count - 1);\n        visited.Add(0);\n        visited.Add(grid.Count\
    \ - 1);\n        visited.Add(0);\n        visited.Add(grid.Count - 1);\n     \
    \   visited.Add(0);\n        visited.Add(grid.Count - 1);\n        visited.Add(0);\n\
    \        visited.Add(grid.Count - 1);\n        visited.Add(0);\n        visited.Add(grid.Count\
    \ - 1);\n        visited.Add(0);\n        visited.Add(grid.Count - 1);\n     \
    \   visited.Add(0);\n        visited.Add(grid.Count - 1);\n        visited.Add(0);\n\
    \        visited.Add(grid.", "        List<long> result = new List<long>();\n\
    \        List<long> lst_A = new List<long>();\n        List<long> lst_B = new\
    \ List<long>();\n        List<long> lst_C = new List<long>();\n        List<long>\
    \ lst_D = new List<long>();\n        List<long> lst_E = new List<long>();\n  \
    \      List<long> lst_F = new List<long>();\n        List<long> lst_G = new List<long>();\n\
    \        List<long> lst_H = new List<long>();\n        List<long> lst_I = new\
    \ List<long>();\n        List<long> lst_J = new List<long>();\n        List<long>\
    \ lst_K = new List<long>();\n        List<long> lst_L = new List<long>();\n  \
    \      List<long> lst_M = new List<long>();\n        List<long> lst_N = new List<long>();\n\
    \        List<long> lst_O = new List<long>();\n        List<long> lst_P = new\
    \ List<long>();\n        List<long> lst_Q = new List<long>();\n        List<long>\
    \ lst_R = new List<long>();\n        List<long> lst_S = new List<long>();\n  \
    \      List<long> lst_T = new List<long>();\n        List<long> lst_U = new List<long>();\n\
    \        List<long> lst_V = new List<long>();\n        List<long> lst_W = new\
    \ List<long>();\n        List<long> lst_X = new List<long>();\n        List<long>\
    \ lst_Y = new List<long>();\n        List<long> lst_Z = new List<long>();\n  \
    \      List<long> lst_AA = new List<long>();\n        List<long> lst_AB = new\
    \ List<long>();\n        List<long> lst_AC = new List<long>();\n        List<long>\
    \ lst_AD = new List<long>();\n        List<long> lst_AE = new List<long>();\n\
    \        List<long> lst_AF = new List<long>();\n        List<long> lst_AG = new\
    \ List<long>();\n        List<long> lst_AH = new List<long>();\n        List<long>\
    \ lst_AI = new List<long>();\n        List<long> lst_AJ = new List<long>();\n\
    \        List<long> lst_AK = new List<long>();\n        List<long> lst_AL = new\
    \ List<long>();\n        List<long> lst_AM = new List<long>();\n        List<long>\
    \ lst_AN = new List<long>();\n        List<long> lst_AO = new List<long>();\n\
    \        List<long> lst_AP = new List<", "        List<long> result = new List<long>();\n\
    \        List<long> lst_A = new List<long>();\n        List<long> lst_B = new\
    \ List<long>();\n        List<long> lst_C = new List<long>();\n        List<long>\
    \ lst_D = new List<long>();\n        List<long> lst_E = new List<long>();\n  \
    \      List<long> lst_F = new List<long>();\n        List<long> lst_G = new List<long>();\n\
    \        List<long> lst_H = new List<long>();\n        List<long> lst_I = new\
    \ List<long>();\n        List<long> lst_J = new List<long>();\n        List<long>\
    \ lst_K = new List<long>();\n        List<long> lst_L = new List<long>();\n  \
    \      List<long> lst_M = new List<long>();\n        List<long> lst_N = new List<long>();\n\
    \        List<long> lst_O = new List<long>();\n        List<long> lst_P = new\
    \ List<long>();\n        List<long> lst_Q = new List<long>();\n        List<long>\
    \ lst_R = new List<long>();\n        List<long> lst_S = new List<long>();\n  \
    \      List<long> lst_T = new List<long>();\n        List<long> lst_U = new List<long>();\n\
    \        List<long> lst_V = new List<long>();\n        List<long> lst_W = new\
    \ List<long>();\n        List<long> lst_X = new List<long>();\n        List<long>\
    \ lst_Y = new List<long>();\n        List<long> lst_Z = new List<long>();\n  \
    \      List<long> lst_AA = new List<long>();\n        List<long> lst_AB = new\
    \ List<long>();\n        List<long> lst_AC = new List<long>();\n        List<long>\
    \ lst_AD = new List<long>();\n        List<long> lst_AE = new List<long>();\n\
    \        List<long> lst_AF = new List<long>();\n        List<long> lst_AG = new\
    \ List<long>();\n        List<long> lst_AH = new List<long>();\n        List<long>\
    \ lst_AI = new List<long>();\n        List<long> lst_AJ = new List<long>();\n\
    \        List<long> lst_AK = new List<long>();\n        List<long> lst_AL = new\
    \ List<long>();\n        List<long> lst_AM = new List<long>();\n        List<long>\
    \ lst_AN = new List<long>();\n        List<long> lst_AO = new List<long>();\n\
    \        List<long> lst_AP = new List<", "        List<long> result = new List<long>();\n\
    \        List<long> lst_A = new List<long>();\n        List<long> lst_B = new\
    \ List<long>();\n        List<long> lst_C = new List<long>();\n        List<long>\
    \ lst_D = new List<long>();\n        List<long> lst_E = new List<long>();\n  \
    \      List<long> lst_F = new List<long>();\n        List<long> lst_G = new List<long>();\n\
    \        List<long> lst_H = new List<long>();\n        List<long> lst_I = new\
    \ List<long>();\n        List<long> lst_J = new List<long>();\n        List<long>\
    \ lst_K = new List<long>();\n        List<long> lst_L = new List<long>();\n  \
    \      List<long> lst_M = new List<long>();\n        List<long> lst_N = new List<long>();\n\
    \        List<long> lst_O = new List<long>();\n        List<long> lst_P = new\
    \ List<long>();\n        List<long> lst_Q = new List<long>();\n        List<long>\
    \ lst_R = new List<long>();\n        List<long> lst_S = new List<long>();\n  \
    \      List<long> lst_T = new List<long>();\n        List<long> lst_U = new List<long>();\n\
    \        List<long> lst_V = new List<long>();\n        List<long> lst_W = new\
    \ List<long>();\n        List<long> lst_X = new List<long>();\n        List<long>\
    \ lst_Y = new List<long>();\n        List<long> lst_Z = new List<long>();\n  \
    \      List<long> lst_AA = new List<long>();\n        List<long> lst_AB = new\
    \ List<long>();\n        List<long> lst_AC = new List<long>();\n        List<long>\
    \ lst_AD = new List<long>();\n        List<long> lst_AE = new List<long>();\n\
    \        List<long> lst_AF = new List<long>();\n        List<long> lst_AG = new\
    \ List<long>();\n        List<long> lst_AH = new List<long>();\n        List<long>\
    \ lst_AI = new List<long>();\n        List<long> lst_AJ = new List<long>();\n\
    \        List<long> lst_AK = new List<long>();\n        List<long> lst_AL = new\
    \ List<long>();\n        List<long> lst_AM = new List<long>();\n        List<long>\
    \ lst_AN = new List<long>();\n        List<long> lst_AO = new List<long>();\n\
    \        List<long> lst_AP = new List<", "        List<long> result = new List<long>();\n\
    \        List<long> current = new List<long>();\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid[0].Last());\n        current.Add(grid[0].First());\n\
    \        current.Add(grid", "        List<long> result = new List<long>();\n \
    \       List<List<long>> gridCopy = new List<List<long>>();\n        List<long>\
    \ currentCell = new List<long>();\n        List<long> nextCell = new List<long>();\n\
    \        List<long> nextCell2 = new List<long>();\n        List<long> nextCell3\
    \ = new List<long>();\n        List<long> nextCell4 = new List<long>();\n    \
    \    List<long> nextCell5 = new List<long>();\n        List<long> nextCell6 =\
    \ new List<long>();\n        List<long> nextCell7 = new List<long>();\n      \
    \  List<long> nextCell8 = new List<long>();\n        List<long> nextCell9 = new\
    \ List<long>();\n        List<long> nextCell10 = new List<long>();\n        List<long>\
    \ nextCell11 = new List<long>();\n        List<long> nextCell12 = new List<long>();\n\
    \        List<long> nextCell13 = new List<long>();\n        List<long> nextCell14\
    \ = new List<long>();\n        List<long> nextCell15 = new List<long>();\n   \
    \     List<long> nextCell16 = new List<long>();\n        List<long> nextCell17\
    \ = new List<long>();\n        List<long> nextCell18 = new List<long>();\n   \
    \     List<long> nextCell19 = new List<long>();\n        List<long> nextCell20\
    \ = new List<long>();\n        List<long> nextCell21 = new List<long>();\n   \
    \     List<long> nextCell22 = new List<long>();\n        List<long> nextCell23\
    \ = new List<long>();\n        List<long> nextCell24 = new List<long>();\n   \
    \     List<long> nextCell25 = new List<long>();\n        List<long> nextCell26\
    \ = new List<long>();\n        List<long> nextCell27 = new List<long>();\n   \
    \     List<long> nextCell28 = new List<long>();\n        List<long> nextCell29\
    \ = new List<long>();\n        List<long> nextCell30 = new List<long>();\n   \
    \     List<long> nextCell31 = new List<long>();\n        List<long> nextCell32\
    \ = new List<long>();\n        List<long> nextCell33 = new List<long>();\n   \
    \     List<long> nextCell34 = new List<long>();\n        List<long> nextCell35\
    \ = new List<long>();\n        List<long> nextCell36 = new List<long>();\n   \
    \     List<long> nextCell37 = new List<long>();\n        List<long> nextCell38\
    \ = new List<long>();\n        List<long> nextCell39 = new List<long>();\n   \
    \     List<long> nextCell40 = new ", "        List<long> result = new List<long>();\n\
    \        List<long> lst_A = new List<long>();\n        List<long> lst_B = new\
    \ List<long>();\n        List<long> lst_C = new List<long>();\n        List<long>\
    \ lst_D = new List<long>();\n        List<long> lst_E = new List<long>();\n  \
    \      List<long> lst_F = new List<long>();\n        List<long> lst_G = new List<long>();\n\
    \        List<long> lst_H = new List<long>();\n        List<long> lst_I = new\
    \ List<long>();\n        List<long> lst_J = new List<long>();\n        List<long>\
    \ lst_K = new List<long>();\n        List<long> lst_L = new List<long>();\n  \
    \      List<long> lst_M = new List<long>();\n        List<long> lst_N = new List<long>();\n\
    \        List<long> lst_O = new List<long>();\n        List<long> lst_P = new\
    \ List<long>();\n        List<long> lst_Q = new List<long>();\n        List<long>\
    \ lst_R = new List<long>();\n        List<long> lst_S = new List<long>();\n  \
    \      List<long> lst_T = new List<long>();\n        List<long> lst_U = new List<long>();\n\
    \        List<long> lst_V = new List<long>();\n        List<long> lst_W = new\
    \ List<long>();\n        List<long> lst_X = new List<long>();\n        List<long>\
    \ lst_Y = new List<long>();\n        List<long> lst_Z = new List<long>();\n  \
    \      List<long> lst_AA = new List<long>();\n        List<long> lst_AB = new\
    \ List<long>();\n        List<long> lst_AC = new List<long>();\n        List<long>\
    \ lst_AD = new List<long>();\n        List<long> lst_AE = new List<long>();\n\
    \        List<long> lst_AF = new List<long>();\n        List<long> lst_AG = new\
    \ List<long>();\n        List<long> lst_AH = new List<long>();\n        List<long>\
    \ lst_AI = new List<long>();\n        List<long> lst_AJ = new List<long>();\n\
    \        List<long> lst_AK = new List<long>();\n        List<long> lst_AL = new\
    \ List<long>();\n        List<long> lst_AM = new List<long>();\n        List<long>\
    \ lst_AN = new List<long>();\n        List<long> lst_AO = new List<long>();\n\
    \        List<long> lst_AP = new List<", "        List<long> ret = new List<long>();\n\
    \        List<long> lst_A = new List<long>();\n        List<long> lst_B = new\
    \ List<long>();\n        List<long> lst_C = new List<long>();\n        List<long>\
    \ lst_D = new List<long>();\n        List<long> lst_E = new List<long>();\n  \
    \      List<long> lst_F = new List<long>();\n        List<long> lst_G = new List<long>();\n\
    \        List<long> lst_H = new List<long>();\n        List<long> lst_I = new\
    \ List<long>();\n        List<long> lst_J = new List<long>();\n        List<long>\
    \ lst_K = new List<long>();\n        List<long> lst_L = new List<long>();\n  \
    \      List<long> lst_M = new List<long>();\n        List<long> lst_N = new List<long>();\n\
    \        List<long> lst_O = new List<long>();\n        List<long> lst_P = new\
    \ List<long>();\n        List<long> lst_Q = new List<long>();\n        List<long>\
    \ lst_R = new List<long>();\n        List<long> lst_S = new List<long>();\n  \
    \      List<long> lst_T = new List<long>();\n        List<long> lst_U = new List<long>();\n\
    \        List<long> lst_V = new List<long>();\n        List<long> lst_W = new\
    \ List<long>();\n        List<long> lst_X = new List<long>();\n        List<long>\
    \ lst_Y = new List<long>();\n        List<long> lst_Z = new List<long>();\n  \
    \      List<long> lst_A1 = new List<long>();\n        List<long> lst_B1 = new\
    \ List<long>();\n        List<long> lst_C1 = new List<long>();\n        List<long>\
    \ lst_D1 = new List<long>();\n        List<long> lst_E1 = new List<long>();\n\
    \        List<long> lst_F1 = new List<long>();\n        List<long> lst_G1 = new\
    \ List<long>();\n        List<long> lst_H1 = new List<long>();\n        List<long>\
    \ lst_I1 = new List<long>();\n        List<long> lst_J1 = new List<long>();\n\
    \        List<long> lst_K1 = new List<long>();\n        List<long> lst_L1 = new\
    \ List<long>();\n        List<long> lst_M1 = new List<long>();\n        List<long>\
    \ lst_N1 = new List<long>();\n        List<long> lst_O1 = ", "        List<long>\
    \ ret = new List<long>();\n        List<long> lst_A = new List<long>();\n    \
    \    List<long> lst_B = new List<long>();\n        List<long> lst_C = new List<long>();\n\
    \        List<long> lst_D = new List<long>();\n        List<long> lst_E = new\
    \ List<long>();\n        List<long> lst_F = new List<long>();\n        List<long>\
    \ lst_G = new List<long>();\n        List<long> lst_H = new List<long>();\n  \
    \      List<long> lst_I = new List<long>();\n        List<long> lst_J = new List<long>();\n\
    \        List<long> lst_K = new List<long>();\n        List<long> lst_L = new\
    \ List<long>();\n        List<long> lst_M = new List<long>();\n        List<long>\
    \ lst_N = new List<long>();\n        List<long> lst_O = new List<long>();\n  \
    \      List<long> lst_P = new List<long>();\n        List<long> lst_Q = new List<long>();\n\
    \        List<long> lst_R = new List<long>();\n        List<long> lst_S = new\
    \ List<long>();\n        List<long> lst_T = new List<long>();\n        List<long>\
    \ lst_U = new List<long>();\n        List<long> lst_V = new List<long>();\n  \
    \      List<long> lst_W = new List<long>();\n        List<long> lst_X = new List<long>();\n\
    \        List<long> lst_Y = new List<long>();\n        List<long> lst_Z = new\
    \ List<long>();\n        List<long> lst_AA = new List<long>();\n        List<long>\
    \ lst_AB = new List<long>();\n        List<long> lst_AC = new List<long>();\n\
    \        List<long> lst_AD = new List<long>();\n        List<long> lst_AE = new\
    \ List<long>();\n        List<long> lst_AF = new List<long>();\n        List<long>\
    \ lst_AG = new List<long>();\n        List<long> lst_AH = new List<long>();\n\
    \        List<long> lst_AI = new List<long>();\n        List<long> lst_AJ = new\
    \ List<long>();\n        List<long> lst_AK = new List<long>();\n        List<long>\
    \ lst_AL = new List<long>();\n        List<long> lst_AM = new List<long>();\n\
    \        List<long> lst_AN = new List<long>();\n        List<long> lst_AO = new\
    \ List<long>();\n        List<long> lst_AP = new List<", "        List<long> result\
    \ = new List<long>();\n        List<long> lst_A = new List<long>();\n        List<long>\
    \ lst_B = new List<long>();\n        List<long> lst_C = new List<long>();\n  \
    \      List<long> lst_D = new List<long>();\n        List<long> lst_E = new List<long>();\n\
    \        List<long> lst_F = new List<long>();\n        List<long> lst_G = new\
    \ List<long>();\n        List<long> lst_H = new List<long>();\n        List<long>\
    \ lst_I = new List<long>();\n        List<long> lst_J = new List<long>();\n  \
    \      List<long> lst_K = new List<long>();\n        List<long> lst_L = new List<long>();\n\
    \        List<long> lst_M = new List<long>();\n        List<long> lst_N = new\
    \ List<long>();\n        List<long> lst_O = new List<long>();\n        List<long>\
    \ lst_P = new List<long>();\n        List<long> lst_Q = new List<long>();\n  \
    \      List<long> lst_R = new List<long>();\n        List<long> lst_S = new List<long>();\n\
    \        List<long> lst_T = new List<long>();\n        List<long> lst_U = new\
    \ List<long>();\n        List<long> lst_V = new List<long>();\n        List<long>\
    \ lst_W = new List<long>();\n        List<long> lst_X = new List<long>();\n  \
    \      List<long> lst_Y = new List<long>();\n        List<long> lst_Z = new List<long>();\n\
    \        List<long> lst_AA = new List<long>();\n        List<long> lst_AB = new\
    \ List<long>();\n        List<long> lst_AC = new List<long>();\n        List<long>\
    \ lst_AD = new List<long>();\n        List<long> lst_AE = new List<long>();\n\
    \        List<long> lst_AF = new List<long>();\n        List<long> lst_AG = new\
    \ List<long>();\n        List<long> lst_AH = new List<long>();\n        List<long>\
    \ lst_AI = new List<long>();\n        List<long> lst_AJ = new List<long>();\n\
    \        List<long> lst_AK = new List<long>();\n        List<long> lst_AL = new\
    \ List<long>();\n        List<long> lst_AM = new List<long>();\n        List<long>\
    \ lst_AN = new List<long>();\n        List<long> lst_AO = new List<long>();\n\
    \        List<long> lst_AP = new List<", "        List<long> result = new List<long>();\n\
    \        List<long> lst_A = new List<long>();\n        List<long> lst_B = new\
    \ List<long>();\n        List<long> lst_C = new List<long>();\n        List<long>\
    \ lst_D = new List<long>();\n        List<long> lst_E = new List<long>();\n  \
    \      List<long> lst_F = new List<long>();\n        List<long> lst_G = new List<long>();\n\
    \        List<long> lst_H = new List<long>();\n        List<long> lst_I = new\
    \ List<long>();\n        List<long> lst_J = new List<long>();\n        List<long>\
    \ lst_K = new List<long>();\n        List<long> lst_L = new List<long>();\n  \
    \      List<long> lst_M = new List<long>();\n        List<long> lst_N = new List<long>();\n\
    \        List<long> lst_O = new List<long>();\n        List<long> lst_P = new\
    \ List<long>();\n        List<long> lst_Q = new List<long>();\n        List<long>\
    \ lst_R = new List<long>();\n        List<long> lst_S = new List<long>();\n  \
    \      List<long> lst_T = new List<long>();\n        List<long> lst_U = new List<long>();\n\
    \        List<long> lst_V = new List<long>();\n        List<long> lst_W = new\
    \ List<long>();\n        List<long> lst_X = new List<long>();\n        List<long>\
    \ lst_Y = new List<long>();\n        List<long> lst_Z = new List<long>();\n  \
    \      List<long> lst_AA = new List<long>();\n        List<long> lst_AB = new\
    \ List<long>();\n        List<long> lst_AC = new List<long>();\n        List<long>\
    \ lst_AD = new List<long>();\n        List<long> lst_AE = new List<long>();\n\
    \        List<long> lst_AF = new List<long>();\n        List<long> lst_AG = new\
    \ List<long>();\n        List<long> lst_AH = new List<long>();\n        List<long>\
    \ lst_AI = new List<long>();\n        List<long> lst_AJ = new List<long>();\n\
    \        List<long> lst_AK = new List<long>();\n        List<long> lst_AL = new\
    \ List<long>();\n        List<long> lst_AM = new List<long>();\n        List<long>\
    \ lst_AN = new List<long>();\n        List<long> lst_AO = new List<long>();\n\
    \        List<long> lst_AP = new List<", "        List<long> result = new List<long>();\n\
    \        List<long> lst_A = new List<long>();\n        List<long> lst_B = new\
    \ List<long>();\n        List<long> lst_C = new List<long>();\n        List<long>\
    \ lst_D = new List<long>();\n        List<long> lst_E = new List<long>();\n  \
    \      List<long> lst_F = new List<long>();\n        List<long> lst_G = new List<long>();\n\
    \        List<long> lst_H = new List<long>();\n        List<long> lst_I = new\
    \ List<long>();\n        List<long> lst_J = new List<long>();\n        List<long>\
    \ lst_K = new List<long>();\n        List<long> lst_L = new List<long>();\n  \
    \      List<long> lst_M = new List<long>();\n        List<long> lst_N = new List<long>();\n\
    \        List<long> lst_O = new List<long>();\n        List<long> lst_P = new\
    \ List<long>();\n        List<long> lst_Q = new List<long>();\n        List<long>\
    \ lst_R = new List<long>();\n        List<long> lst_S = new List<long>();\n  \
    \      List<long> lst_T = new List<long>();\n        List<long> lst_U = new List<long>();\n\
    \        List<long> lst_V = new List<long>();\n        List<long> lst_W = new\
    \ List<long>();\n        List<long> lst_X = new List<long>();\n        List<long>\
    \ lst_Y = new List<long>();\n        List<long> lst_Z = new List<long>();\n  \
    \      List<long> lst_AA = new List<long>();\n        List<long> lst_AB = new\
    \ List<long>();\n        List<long> lst_AC = new List<long>();\n        List<long>\
    \ lst_AD = new List<long>();\n        List<long> lst_AE = new List<long>();\n\
    \        List<long> lst_AF = new List<long>();\n        List<long> lst_AG = new\
    \ List<long>();\n        List<long> lst_AH = new List<long>();\n        List<long>\
    \ lst_AI = new List<long>();\n        List<long> lst_AJ = new List<long>();\n\
    \        List<long> lst_AK = new List<long>();\n        List<long> lst_AL = new\
    \ List<long>();\n        List<long> lst_AM = new List<long>();\n        List<long>\
    \ lst_AN = new List<long>();\n        List<long> lst_AO = new List<long>();\n\
    \        List<long> lst_AP = new List<", "        List<long> result = new List<long>();\n\
    \        List<List<long>> grid2 = new List<List<long>>();\n        List<long>\
    \ grid3 = new List<long>();\n        List<long> grid4 = new List<long>();\n  \
    \      List<long> grid5 = new List<long>();\n        List<long> grid6 = new List<long>();\n\
    \        List<long> grid7 = new List<long>();\n        List<long> grid8 = new\
    \ List<long>();\n        List<long> grid9 = new List<long>();\n        List<long>\
    \ grid10 = new List<long>();\n        List<long> grid11 = new List<long>();\n\
    \        List<long> grid12 = new List<long>();\n        List<long> grid13 = new\
    \ List<long>();\n        List<long> grid14 = new List<long>();\n        List<long>\
    \ grid15 = new List<long>();\n        List<long> grid16 = new List<long>();\n\
    \        List<long> grid17 = new List<long>();\n        List<long> grid18 = new\
    \ List<long>();\n        List<long> grid19 = new List<long>();\n        List<long>\
    \ grid20 = new List<long>();\n        List<long> grid21 = new List<long>();\n\
    \        List<long> grid22 = new List<long>();\n        List<long> grid23 = new\
    \ List<long>();\n        List<long> grid24 = new List<long>();\n        List<long>\
    \ grid25 = new List<long>();\n        List<long> grid26 = new List<long>();\n\
    \        List<long> grid27 = new List<long>();\n        List<long> grid28 = new\
    \ List<long>();\n        List<long> grid29 = new List<long>();\n        List<long>\
    \ grid30 = new List<long>();\n        List<long> grid31 = new List<long>();\n\
    \        List<long> grid32 = new List<long>();\n        List<long> grid33 = new\
    \ List<long>();\n        List<long> grid34 = new List<long>();\n        List<long>\
    \ grid35 = new List<long>();\n        List<long> grid36 = new List<long>();\n\
    \        List<long> grid37 = new List<long>();\n        List<long> grid38 = new\
    \ List<long>();\n        List<long> grid39 = new List<long>();\n        List<long>\
    \ grid40 = new List<long>();\n        List<long> grid41 = new List<long>();\n\
    \        List<long> grid42 = new List<long>();\n        List<long> grid43 = new\
    \ List<long>();\n        List<long> grid44 = new List<long>();\n        List<long>\
    \ grid45 = new List<long>();\n        List<long> grid46 = new List<long", "  \
    \      List<long> result = new List<long>();\n        List<long> lst_A = new List<long>();\n\
    \        List<long> lst_B = new List<long>();\n        List<long> lst_C = new\
    \ List<long>();\n        List<long> lst_D = new List<long>();\n        List<long>\
    \ lst_E = new List<long>();\n        List<long> lst_F = new List<long>();\n  \
    \      List<long> lst_G = new List<long>();\n        List<long> lst_H = new List<long>();\n\
    \        List<long> lst_I = new List<long>();\n        List<long> lst_J = new\
    \ List<long>();\n        List<long> lst_K = new List<long>();\n        List<long>\
    \ lst_L = new List<long>();\n        List<long> lst_M = new List<long>();\n  \
    \      List<long> lst_N = new List<long>();\n        List<long> lst_O = new List<long>();\n\
    \        List<long> lst_P = new List<long>();\n        List<long> lst_Q = new\
    \ List<long>();\n        List<long> lst_R = new List<long>();\n        List<long>\
    \ lst_S = new List<long>();\n        List<long> lst_T = new List<long>();\n  \
    \      List<long> lst_U = new List<long>();\n        List<long> lst_V = new List<long>();\n\
    \        List<long> lst_W = new List<long>();\n        List<long> lst_X = new\
    \ List<long>();\n        List<long> lst_Y = new List<long>();\n        List<long>\
    \ lst_Z = new List<long>();\n        List<long> lst_AA = new List<long>();\n \
    \       List<long> lst_AB = new List<long>();\n        List<long> lst_AC = new\
    \ List<long>();\n        List<long> lst_AD = new List<long>();\n        List<long>\
    \ lst_AE = new List<long>();\n        List<long> lst_AF = new List<long>();\n\
    \        List<long> lst_AG = new List<long>();\n        List<long> lst_AH = new\
    \ List<long>();\n        List<long> lst_AI = new List<long>();\n        List<long>\
    \ lst_AJ = new List<long>();\n        List<long> lst_AK = new List<long>();\n\
    \        List<long> lst_AL = new List<long>();\n        List<long> lst_AM = new\
    \ List<long>();\n        List<long> lst_AN = new List<long>();\n        List<long>\
    \ lst_AO = new List<long>();\n        List<long> lst_AP = new List<", "      \
    \  List<long> list = new List<long>();\n        List<List<long>> grid2 = new List<List<long>>();\n\
    \        List<List<long>> grid3 = new List<List<long>>();\n        List<List<long>>\
    \ grid4 = new List<List<long>>();\n        List<List<long>> grid5 = new List<List<long>>();\n\
    \        List<List<long>> grid6 = new List<List<long>>();\n        List<List<long>>\
    \ grid7 = new List<List<long>>();\n        List<List<long>> grid8 = new List<List<long>>();\n\
    \        List<List<long>> grid9 = new List<List<long>>();\n        List<List<long>>\
    \ grid10 = new List<List<long>>();\n        List<List<long>> grid11 = new List<List<long>>();\n\
    \        List<List<long>> grid12 = new List<List<long>>();\n        List<List<long>>\
    \ grid13 = new List<List<long>>();\n        List<List<long>> grid14 = new List<List<long>>();\n\
    \        List<List<long>> grid15 = new List<List<long>>();\n        List<List<long>>\
    \ grid16 = new List<List<long>>();\n        List<List<long>> grid17 = new List<List<long>>();\n\
    \        List<List<long>> grid18 = new List<List<long>>();\n        List<List<long>>\
    \ grid19 = new List<List<long>>();\n        List<List<long>> grid20 = new List<List<long>>();\n\
    \        List<List<long>> grid21 = new List<List<long>>();\n        List<List<long>>\
    \ grid22 = new List<List<long>>();\n        List<List<long>> grid23 = new List<List<long>>();\n\
    \        List<List<long>> grid24 = new List<List<long>>();\n        List<List<long>>\
    \ grid25 = new List<List<long>>();\n        List<List<long>> grid26 = new List<List<long>>();\n\
    \        List<List<long>> grid27 = new List<List<long>>();\n        List<List<long>>\
    \ grid28 = new List<List<long>>();\n        List<List<long>> grid29 = new List<List<long>>();\n\
    \        List<List<long>> grid30 = new List<List<long>>();\n        List<List<long>>\
    \ grid31 = new List<List<long>>();\n        List<List<long>> grid32 = new List<List<long>>();\n\
    \        List<List<long>> grid33 = new List<List<long>>();\n        List<List<long>>\
    \ grid34 = new List<List<long>>();\n        List<List<long>> grid35 = new List<List<long>>();\n\
    \        List<List<long>> grid36 = new List<List<long>>();\n        List<List<long>>\
    \ grid37 = new List<List<"]
stop_tokens:
- "\n    }\n"

name: HumanEval_120_maximum
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given a list arr of integers and a positive integer k, return\
  \ a sorted list \n    // of length k with the maximum k numbers in arr.\n    //\
  \ Example 1:\n    // >>> Maximum((new List<long>(new long[]{(long)-3L, (long)-4L,\
  \ (long)5L})), (3L))\n    // (new List<long>(new long[]{(long)-4L, (long)-3L, (long)5L}))\n\
  \    // Example 2:\n    // >>> Maximum((new List<long>(new long[]{(long)4L, (long)-4L,\
  \ (long)4L})), (2L))\n    // (new List<long>(new long[]{(long)4L, (long)4L}))\n\
  \    // Example 3:\n    // >>> Maximum((new List<long>(new long[]{(long)-3L, (long)2L,\
  \ (long)1L, (long)2L, (long)-1L, (long)-2L, (long)1L})), (1L))\n    // (new List<long>(new\
  \ long[]{(long)2L}))\n    // Note:\n    // 1. The length of the list will be in\
  \ the range of [1, 1000].\n    // 2. The elements in the list will be in the range\
  \ of [-1000, 1000].\n    // 3. 0 <= k <= len(arr)\n    public static List<long>\
  \ Maximum(List<long> arr, long k) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Maximum((new\
  \ List<long>(new long[]{(long)-3L, (long)-4L, (long)5L})), (3L)).Equals((new List<long>(new\
  \ long[]{(long)-4L, (long)-3L, (long)5L}))));\n    Debug.Assert(Maximum((new List<long>(new\
  \ long[]{(long)4L, (long)-4L, (long)4L})), (2L)).Equals((new List<long>(new long[]{(long)4L,\
  \ (long)4L}))));\n    Debug.Assert(Maximum((new List<long>(new long[]{(long)-3L,\
  \ (long)2L, (long)1L, (long)2L, (long)-1L, (long)-2L, (long)1L})), (1L)).Equals((new\
  \ List<long>(new long[]{(long)2L}))));\n    Debug.Assert(Maximum((new List<long>(new\
  \ long[]{(long)123L, (long)-123L, (long)20L, (long)0L, (long)1L, (long)2L, (long)-3L})),\
  \ (3L)).Equals((new List<long>(new long[]{(long)2L, (long)20L, (long)123L}))));\n\
  \    Debug.Assert(Maximum((new List<long>(new long[]{(long)-123L, (long)20L, (long)0L,\
  \ (long)1L, (long)2L, (long)-3L})), (4L)).Equals((new List<long>(new long[]{(long)0L,\
  \ (long)1L, (long)2L, (long)20L}))));\n    Debug.Assert(Maximum((new List<long>(new\
  \ long[]{(long)5L, (long)15L, (long)0L, (long)3L, (long)-13L, (long)-8L, (long)0L})),\
  \ (7L)).Equals((new List<long>(new long[]{(long)-13L, (long)-8L, (long)0L, (long)0L,\
  \ (long)3L, (long)5L, (long)15L}))));\n    Debug.Assert(Maximum((new List<long>(new\
  \ long[]{(long)-1L, (long)0L, (long)2L, (long)5L, (long)3L, (long)-10L})), (2L)).Equals((new\
  \ List<long>(new long[]{(long)3L, (long)5L}))));\n    Debug.Assert(Maximum((new\
  \ List<long>(new long[]{(long)1L, (long)0L, (long)5L, (long)-7L})), (1L)).Equals((new\
  \ List<long>(new long[]{(long)5L}))));\n    Debug.Assert(Maximum((new List<long>(new\
  \ long[]{(long)4L, (long)-4L})), (2L)).Equals((new List<long>(new long[]{(long)-4L,\
  \ (long)4L}))));\n    Debug.Assert(Maximum((new List<long>(new long[]{(long)-10L,\
  \ (long)10L})), (2L)).Equals((new List<long>(new long[]{(long)-10L, (long)10L}))));\n\
  \    Debug.Assert(Maximum((new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
  \ (long)-23L, (long)243L, (long)-400L, (long)0L})), (0L)).Equals((new List<long>())));\n\
  \    }\n\n}\n"
completions: ["        List<long> res = new List<long>();\n        long max = 0;\n\
    \        long min = 0;\n        long maxIndex = 0;\n        long minIndex = 0;\n\
    \        long maxValue = 0;\n        long minValue = 0;\n        long maxIndex2\
    \ = 0;\n        long minIndex2 = 0;\n        long maxValue2 = 0;\n        long\
    \ minValue2 = 0;\n        long maxIndex3 = 0;\n        long minIndex3 = 0;\n \
    \       long maxValue3 = 0;\n        long minValue3 = 0;\n        long maxIndex4\
    \ = 0;\n        long minIndex4 = 0;\n        long maxValue4 = 0;\n        long\
    \ minValue4 = 0;\n        long maxIndex5 = 0;\n        long minIndex5 = 0;\n \
    \       long maxValue5 = 0;\n        long minValue5 = 0;\n        long maxIndex6\
    \ = 0;\n        long minIndex6 = 0;\n        long maxValue6 = 0;\n        long\
    \ minValue6 = 0;\n        long maxIndex7 = 0;\n        long minIndex7 = 0;\n \
    \       long maxValue7 = 0;\n        long minValue7 = 0;\n        long maxIndex8\
    \ = 0;\n        long minIndex8 = 0;\n        long maxValue8 = 0;\n        long\
    \ minValue8 = 0;\n        long maxIndex9 = 0;\n        long minIndex9 = 0;\n \
    \       long maxValue9 = 0;\n        long minValue9 = 0;\n        long maxIndex10\
    \ = 0;\n        long minIndex10 = 0;\n        long maxValue10 = 0;\n        long\
    \ minValue10 = 0;\n        long maxIndex11 = 0;\n        long minIndex11 = 0;\n\
    \        long maxValue11 = 0;\n        long minValue11 = 0;\n        long maxIndex12\
    \ = 0;\n        long minIndex12 = 0;\n        long maxValue12 = 0;\n        long\
    \ minValue12 = 0;\n        long maxIndex13 = 0;\n        long minIndex13 = 0;\n\
    \        long maxValue13 = 0;\n        long minValue13 = 0;\n        long maxIndex14\
    \ = 0;\n        long minIndex14 = 0;\n        long maxValue14 = 0;\n        long\
    \ minValue14 = 0;\n        long maxIndex15 = 0;\n        long minIndex15 = 0;\n\
    \        long maxValue15 = 0;\n        long minValue15 = 0;\n        long maxIndex16\
    \ = 0;\n        long minIndex16 = 0;\n        long maxValue16 = 0;\n        long\
    \ minValue16 = 0;\n        long maxIndex17 = 0;\n        long minIndex17 = 0;\n\
    \        long maxValue17 = 0;\n        long minValue17 = 0;\n        long maxIndex18\
    \ = 0;\n        long minIndex18 = 0;\n        long maxValue18 = 0;\n        long\
    \ minValue18 = 0;\n        long maxIndex19 = 0;\n        ", "        long max\
    \ = 0;\n        List<long> result = new List<long>();\n        foreach (long i\
    \ in arr) {\n            if (i > max) {\n                max = i;\n          \
    \  }\n        }\n        long temp = 0;\n        long temp2 = 0;\n        long\
    \ temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n        long temp6\
    \ = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long temp9 =\
    \ 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12\
    \ = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15\
    \ = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18\
    \ = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21\
    \ = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24\
    \ = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27\
    \ = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30\
    \ = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33\
    \ = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36\
    \ = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39\
    \ = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42\
    \ = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45\
    \ = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48\
    \ = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51\
    \ = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54\
    \ = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57\
    \ = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60\
    \ = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63\
    \ = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66\
    \ = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69\
    \ = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72\
    \ = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75\
    \ = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78\
    \ = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long ", " \
    \       if (arr.Count < 1 || k < 1 || k > arr.Count) return new List<long>();\n\
    \        long max = 0;\n        List<long> res = new List<long>();\n        long\
    \ cur = arr[0];\n        long maxCur = cur;\n        foreach (long n in arr) {\n\
    \            if (n > maxCur) {\n                maxCur = n;\n                max\
    \ = maxCur;\n            }\n            if (n == cur) {\n                res.Add(maxCur);\n\
    \                maxCur = n;\n            }\n        }\n        if (maxCur > max)\
    \ {\n            max = maxCur;\n        }\n        if (max > k) {\n          \
    \  max = k;\n        }\n        return res.Take(max).ToList();", "        if (arr.Count\
    \ < k) {\n            throw new ArgumentException(\"The length of the list must\
    \ be in the range of [1, 1000]\");\n        }\n        if (k > arr.Count) {\n\
    \            throw new ArgumentException(\"The length of the list must be in the\
    \ range of [1, 1000]\");\n        }\n        List<long> result = new List<long>();\n\
    \        long maxValue = arr.Max();\n        long minValue = arr.Min();\n    \
    \    long maxIndex = arr.FindIndex(x => x > maxValue);\n        long minIndex\
    \ = arr.FindIndex(x => x < minValue);\n        long maxCount = 0;\n        long\
    \ minCount = 0;\n        long maxCountIndex = 0;\n        long minCountIndex =\
    \ 0;\n        long maxCountValue = 0;\n        long minCountValue = 0;\n     \
    \   long maxCountValueIndex = 0;\n        long minCountValueIndex = 0;\n     \
    \   long maxCountValueValue = 0;\n        long minCountValueValue = 0;\n     \
    \   long maxCountValueValueIndex = 0;\n        long minCountValueValueIndex =\
    \ 0;\n        long maxCountValueValueValue = 0;\n        long minCountValueValueValue\
    \ = 0;\n        long maxCountValueValueIndex = 0;\n        long minCountValueValueValue\
    \ = 0;\n        long maxCountValueValueIndex = 0;\n        long minCountValueValueValue\
    \ = 0;\n        long maxCountValueValueIndex = 0;\n        long minCountValueValueValue\
    \ = 0;\n        long maxCountValueValueIndex = 0;\n        long minCountValueValueValue\
    \ = 0;\n        long maxCountValueValueIndex = 0;\n        long minCountValueValueValue\
    \ = 0;\n        long maxCountValueValueIndex = 0;\n        long minCountValueValueValue\
    \ = 0;\n        long maxCountValueValueIndex = 0;\n        long minCountValueValueValue\
    \ = 0;\n        long maxCountValueValueIndex = 0;\n        long minCountValueValueValue\
    \ = 0;\n        long maxCountValueValueIndex = 0;\n        long minCountValueValueValue\
    \ = 0;\n        long maxCountValueValueIndex = 0;\n        long minCountValueValueValue\
    \ = 0;\n        long maxCountValueValueIndex = 0;\n        long minCountValueValueValue\
    \ = 0;\n        long maxCountValueValueIndex = 0;\n        long minCountValueValueValue\
    \ = 0;\n        long maxCountValueValueIndex = 0;\n        long minCountValueValueValue\
    \ = 0;\n        long maxCountValueValueIndex = 0;\n        long minCountValueValueValue\
    \ = 0;\n        long maxCountValueValueIndex = 0;\n        long minCountValueValueValue\
    \ = 0;\n        long maxCountValueValueIndex = 0;\n        long minCountValueValueValue\
    \ = 0;\n        long maxCountValueValueIndex = 0;\n        long minCountValueValueValue",
  "        List<long> res = new List<long>();\n        long max = 0;\n        long\
    \ min = 0;\n        long sum = 0;\n        long count = 0;\n        foreach (long\
    \ i in arr) {\n            sum += i;\n            if (sum > max) {\n         \
    \       max = sum;\n            }\n            if (sum < min) {\n            \
    \    min = sum;\n            }\n            count++;\n        }\n        if (count\
    \ > k) {\n            k = count;\n        }\n        if (k == 1) {\n         \
    \   res.Add(arr[0]);\n            return res;\n        }\n        long mid = max\
    \ / 2;\n        long mid2 = min / 2;\n        long mid3 = mid2 / 2;\n        long\
    \ mid4 = mid3 / 2;\n        long mid5 = mid4 / 2;\n        long mid6 = mid5 /\
    \ 2;\n        long mid7 = mid6 / 2;\n        long mid8 = mid7 / 2;\n        long\
    \ mid9 = mid8 / 2;\n        long mid10 = mid9 / 2;\n        long mid11 = mid10\
    \ / 2;\n        long mid12 = mid11 / 2;\n        long mid13 = mid12 / 2;\n   \
    \     long mid14 = mid13 / 2;\n        long mid15 = mid14 / 2;\n        long mid16\
    \ = mid15 / 2;\n        long mid17 = mid16 / 2;\n        long mid18 = mid17 /\
    \ 2;\n        long mid19 = mid18 / 2;\n        long mid20 = mid19 / 2;\n     \
    \   long mid21 = mid20 / 2;\n        long mid22 = mid21 / 2;\n        long mid23\
    \ = mid22 / 2;\n        long mid24 = mid23 / 2;\n        long mid25 = mid24 /\
    \ 2;\n        long mid26 = mid25 / 2;\n        long mid27 = mid26 / 2;\n     \
    \   long mid28 = mid27 / 2;\n        long mid29 = mid28 / 2;\n        long mid30\
    \ = mid29 / 2;\n        long mid31 = mid30 / 2;\n        long mid32 = mid31 /\
    \ 2;\n        long mid33 = mid32 / 2;\n        long mid34 = mid33 / 2;\n     \
    \   long mid35 = mid34 / 2;\n        long mid36 = mid35 / 2;\n        long mid37\
    \ = mid36 / 2;\n        long mid38 = mid37 / 2;\n        long mid39 = mid38 /\
    \ 2;\n        long mid40 = mid39 / 2;\n        long mid41 = mid40 / 2;\n     \
    \   long mid42 = mid41 / 2;\n        long mid43 = mid4", "        if (k > arr.Count)\
    \ return new List<long>();\n        List<long> result = new List<long>();\n  \
    \      long max = arr[0];\n        long maxIndex = 0;\n        foreach (long i\
    \ in arr) {\n            if (i > max) {\n                max = i;\n          \
    \      maxIndex = i;\n            }\n        }\n        long maxValue = max;\n\
    \        long maxIndex = maxIndex;\n        long maxIndex2 = maxIndex;\n     \
    \   long maxIndex3 = maxIndex;\n        long maxIndex4 = maxIndex;\n        long\
    \ maxIndex5 = maxIndex;\n        long maxIndex6 = maxIndex;\n        long maxIndex7\
    \ = maxIndex;\n        long maxIndex8 = maxIndex;\n        long maxIndex9 = maxIndex;\n\
    \        long maxIndex10 = maxIndex;\n        long maxIndex11 = maxIndex;\n  \
    \      long maxIndex12 = maxIndex;\n        long maxIndex13 = maxIndex;\n    \
    \    long maxIndex14 = maxIndex;\n        long maxIndex15 = maxIndex;\n      \
    \  long maxIndex16 = maxIndex;\n        long maxIndex17 = maxIndex;\n        long\
    \ maxIndex18 = maxIndex;\n        long maxIndex19 = maxIndex;\n        long maxIndex20\
    \ = maxIndex;\n        long maxIndex21 = maxIndex;\n        long maxIndex22 =\
    \ maxIndex;\n        long maxIndex23 = maxIndex;\n        long maxIndex24 = maxIndex;\n\
    \        long maxIndex25 = maxIndex;\n        long maxIndex26 = maxIndex;\n  \
    \      long maxIndex27 = maxIndex;\n        long maxIndex28 = maxIndex;\n    \
    \    long maxIndex29 = maxIndex;\n        long maxIndex30 = maxIndex;\n      \
    \  long maxIndex31 = maxIndex;\n        long maxIndex32 = maxIndex;\n        long\
    \ maxIndex33 = maxIndex;\n        long maxIndex34 = maxIndex;\n        long maxIndex35\
    \ = maxIndex;\n        long maxIndex36 = maxIndex;\n        long maxIndex37 =\
    \ maxIndex;\n        long maxIndex38 = maxIndex;\n        long maxIndex39 = maxIndex;\n\
    \        long maxIndex40 = maxIndex;\n        long maxIndex41 = maxIndex;\n  \
    \      long maxIndex42 = maxIndex;\n        long maxIndex43 = maxIndex;\n    \
    \    long maxIndex44 = maxIndex;\n        long maxIndex45 = maxIndex;\n      \
    \  long maxIndex46 = maxIndex;\n        long maxIndex47 = maxIndex;\n        long\
    \ maxIndex48 = maxIndex;\n        long maxIndex49 = maxIndex;\n        long maxIndex50\
    \ = maxIndex;\n        long maxIndex51 = maxIndex;\n        ", "        List<long>\
    \ result = new List<long>();\n        long max = 0;\n        long min = 0;\n \
    \       long sum = 0;\n        long count = 0;\n        long temp = 0;\n     \
    \   long temp2 = 0;\n        long temp3 = 0;\n        foreach (long i in arr)\
    \ {\n            sum += i;\n            if (sum > k) {\n                max =\
    \ sum;\n                min = i;\n                count = 1;\n               \
    \ sum = 0;\n            } else if (sum < k) {\n                max = sum;\n  \
    \              min = i;\n                count = 1;\n                sum = 0;\n\
    \            } else {\n                count++;\n                sum += i;\n \
    \           }\n        }\n        temp = max - min;\n        sum = 0;\n      \
    \  foreach (long i in arr) {\n            sum += i;\n            if (sum > k)\
    \ {\n                max = sum;\n                min = i;\n                count\
    \ = 1;\n                sum = 0;\n            } else if (sum < k) {\n        \
    \        max = sum;\n                min = i;\n                count = 1;\n  \
    \              sum = 0;\n            } else {\n                count++;\n    \
    \            sum += i;\n            }\n        }\n        temp = max - min;\n\
    \        sum = 0;\n        foreach (long i in arr) {\n            sum += i;\n\
    \            if (sum > k) {\n                max = sum;\n                min =\
    \ i;\n                count = 1;\n                sum = 0;\n            } else\
    \ if (sum < k) {\n                max = sum;\n                min = i;\n     \
    \           count = 1;\n                sum = 0;\n            } else {\n     \
    \           count++;\n                sum += i;\n            }\n        }\n  \
    \      temp = max - min;\n        sum = 0;\n        foreach (long i in arr) {\n\
    \            sum += i;\n            if (sum > k) {\n                max = sum;\n\
    \                min = i;\n                count = 1;\n                sum = 0;\n\
    \            } else if (sum < k) {\n                max = sum;\n             \
    \   min = i;\n                count = 1;\n                sum = 0;\n         \
    \   } else {\n                count++;\n                sum += i;\n          \
    \  }\n        }\n        temp = max - min;\n        sum = 0;\n        foreach\
    \ (long i in arr) {\n            sum += i;\n            if (sum > k) {\n     \
    \           max = sum;\n                min = i;\n                count = 1;\n\
    \                sum = 0;\n            } else if (sum < k) {\n               \
    \ max = sum;\n                min = i;\n                count = 1;\n         \
    \       sum = 0;\n            } else {\n                count++;\n           \
    \     sum += i;\n            }\n        }\n        temp = max - min;\n       \
    \ sum = 0;\n        foreach (long i in arr) {\n            sum += i;\n       \
    \     if (sum > k) {\n                max = sum;\n                min = i;\n \
    \               count = 1;\n                sum = 0;\n            } else if (sum\
    \ < k) {\n                max = sum;\n                min = i;\n             \
    \   count = 1;\n                sum = 0;\n            } else {\n             \
    \   count++;\n", "        List<long> result = new List<long>();\n        long\
    \ max = 0;\n        long min = 0;\n        long maxIndex = 0;\n        long minIndex\
    \ = 0;\n        long maxVal = 0;\n        long minVal = 0;\n        long maxIndex2\
    \ = 0;\n        long minIndex2 = 0;\n        long maxVal2 = 0;\n        long minVal2\
    \ = 0;\n        long maxIndex3 = 0;\n        long minIndex3 = 0;\n        long\
    \ maxVal3 = 0;\n        long minVal3 = 0;\n        long maxIndex4 = 0;\n     \
    \   long minIndex4 = 0;\n        long maxVal4 = 0;\n        long minVal4 = 0;\n\
    \        long maxIndex5 = 0;\n        long minIndex5 = 0;\n        long maxVal5\
    \ = 0;\n        long minVal5 = 0;\n        long maxIndex6 = 0;\n        long minIndex6\
    \ = 0;\n        long maxVal6 = 0;\n        long minVal6 = 0;\n        long maxIndex7\
    \ = 0;\n        long minIndex7 = 0;\n        long maxVal7 = 0;\n        long minVal7\
    \ = 0;\n        long maxIndex8 = 0;\n        long minIndex8 = 0;\n        long\
    \ maxVal8 = 0;\n        long minVal8 = 0;\n        long maxIndex9 = 0;\n     \
    \   long minIndex9 = 0;\n        long maxVal9 = 0;\n        long minVal9 = 0;\n\
    \        long maxIndex10 = 0;\n        long minIndex10 = 0;\n        long maxVal10\
    \ = 0;\n        long minVal10 = 0;\n        long maxIndex11 = 0;\n        long\
    \ minIndex11 = 0;\n        long maxVal11 = 0;\n        long minVal11 = 0;\n  \
    \      long maxIndex12 = 0;\n        long minIndex12 = 0;\n        long maxVal12\
    \ = 0;\n        long minVal12 = 0;\n        long maxIndex13 = 0;\n        long\
    \ minIndex13 = 0;\n        long maxVal13 = 0;\n        long minVal13 = 0;\n  \
    \      long maxIndex14 = 0;\n        long minIndex14 = 0;\n        long maxVal14\
    \ = 0;\n        long minVal14 = 0;\n        long maxIndex15 = 0;\n        long\
    \ minIndex15 = 0;\n        long maxVal15 = 0;\n        long minVal15 = 0;\n  \
    \      long maxIndex16 = 0;\n        long minIndex16 = 0;\n        long maxVal16\
    \ = 0;\n        long minVal16 = 0;\n        long maxIndex17 = 0;\n        long\
    \ minIndex17 = 0;\n        long maxVal17 = 0;\n        long minVal17 = 0;\n  \
    \      long maxIndex18 = 0;\n        long minIndex18 = 0;\n        long maxVal18\
    \ = 0;\n        long minVal18 = 0;\n        long maxIndex19 = 0;\n        ", " \
    \       if (k > arr.Count) return new List<long>();\n        if (k == 0) return\
    \ arr;\n        List<long> result = new List<long>();\n        long max = 0;\n\
    \        long min = 0;\n        long maxIndex = 0;\n        long minIndex = 0;\n\
    \        long maxVal = arr[0];\n        long minVal = arr[0];\n        long maxCount\
    \ = 0;\n        long minCount = 0;\n        bool isMax = true;\n        bool isMin\
    \ = true;\n        bool isMaxOrMin = true;\n        bool isMaxOrMinOrMax = true;\n\
    \        bool isMaxOrMinOrMaxOrMin = true;\n        bool isMaxOrMinOrMaxOrMinOrMax\
    \ = true;\n        bool isMaxOrMinOrMaxOrMinOrMaxOrMin = true;\n        bool isMaxOrMinOrMaxOrMinOrMaxOrMinOrMax\
    \ = true;\n        bool isMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMin = true;\n   \
    \     bool isMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMax = true;\n        bool\
    \ isMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMin = true;\n        bool isMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMax\
    \ = true;\n        bool isMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMin\
    \ = true;\n        bool isMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMax\
    \ = true;\n        bool isMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMin\
    \ = true;\n        bool isMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMax\
    \ = true;\n        bool isMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMin\
    \ = true;\n        bool isMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMax\
    \ = true;\n        bool isMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMinOrMaxOrMin\
    \ = true;\n        bool isMaxOrMinOrMaxOrMinOrMaxOr", "        if (k > arr.Count)\
    \ return new List<long>();\n        List<long> res = new List<long>();\n     \
    \   long max = 0;\n        long maxIndex = 0;\n        for (int i = 0; i < arr.Count;\
    \ i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n   \
    \             maxIndex = i;\n            }\n        }\n        long maxValue =\
    \ max;\n        long maxIndex = maxIndex;\n        for (int i = 0; i < arr.Count;\
    \ i++) {\n            if (arr[i] == maxValue) {\n                res.Add(arr[maxIndex]);\n\
    \                maxIndex++;\n            }\n        }\n        return res;",
  "        List<long> res = new List<long>();\n        long max = 0;\n        long\
    \ min = arr.Min();\n        long mid = min + (max - min) / 2;\n        long mid2\
    \ = mid + (max - min) / 2;\n        long mid3 = mid2 + (max - min) / 2;\n    \
    \    long mid4 = mid3 + (max - min) / 2;\n        long mid5 = mid4 + (max - min)\
    \ / 2;\n        long mid6 = mid5 + (max - min) / 2;\n        long mid7 = mid6\
    \ + (max - min) / 2;\n        long mid8 = mid7 + (max - min) / 2;\n        long\
    \ mid9 = mid8 + (max - min) / 2;\n        long mid10 = mid9 + (max - min) / 2;\n\
    \        long mid11 = mid10 + (max - min) / 2;\n        long mid12 = mid11 + (max\
    \ - min) / 2;\n        long mid13 = mid12 + (max - min) / 2;\n        long mid14\
    \ = mid13 + (max - min) / 2;\n        long mid15 = mid14 + (max - min) / 2;\n\
    \        long mid16 = mid15 + (max - min) / 2;\n        long mid17 = mid16 + (max\
    \ - min) / 2;\n        long mid18 = mid17 + (max - min) / 2;\n        long mid19\
    \ = mid18 + (max - min) / 2;\n        long mid20 = mid19 + (max - min) / 2;\n\
    \        long mid21 = mid20 + (max - min) / 2;\n        long mid22 = mid21 + (max\
    \ - min) / 2;\n        long mid23 = mid22 + (max - min) / 2;\n        long mid24\
    \ = mid23 + (max - min) / 2;\n        long mid25 = mid24 + (max - min) / 2;\n\
    \        long mid26 = mid25 + (max - min) / 2;\n        long mid27 = mid26 + (max\
    \ - min) / 2;\n        long mid28 = mid27 + (max - min) / 2;\n        long mid29\
    \ = mid28 + (max - min) / 2;\n        long mid30 = mid29 + (max - min) / 2;\n\
    \        long mid31 = mid30 + (max - min) / 2;\n        long mid32 = mid31 + (max\
    \ - min) / 2;\n        long mid33 = mid32 + (max - min) / 2;\n        long mid34\
    \ = mid33 + (max - min) / 2;\n        long mid35 = mid34 + (max - min) / 2;\n\
    \        long mid36 = mid35 + (max - min) / 2;\n        long mid37 = mid36 + (max\
    \ - min) / 2;\n        long mid38 = mid37 + (max - min) / 2;\n        long mid39\
    \ = mid38 + (max - min", "        List<long> result = new List<long>();\n    \
    \    long max = 0;\n        long min = 0;\n        long maxIndex = 0;\n      \
    \  long minIndex = 0;\n        long maxValue = arr[0];\n        long minValue\
    \ = arr[0];\n        bool isMax = true;\n        bool isMin = true;\n        long\
    \ index = 0;\n        long value = arr[0];\n        long maxCount = 0;\n     \
    \   long minCount = 0;\n        long maxCountIndex = 0;\n        long minCountIndex\
    \ = 0;\n        long maxCountValue = arr[0];\n        long minCountValue = arr[0];\n\
    \        long maxCountIndexValue = 0;\n        long minCountIndexValue = 0;\n\
    \        long maxCountValueCount = 0;\n        long minCountValueCount = 0;\n\
    \        long maxCountIndexValueCount = 0;\n        long minCountIndexValueCount\
    \ = 0;\n        long maxCountValueCountCount = 0;\n        long minCountValueCountCount\
    \ = 0;\n        long maxCountIndexValueCountCount = 0;\n        long minCountIndexValueCountCount\
    \ = 0;\n        long maxCountValueCountCountCount = 0;\n        long minCountValueCountCountCount\
    \ = 0;\n        long maxCountIndexValueCountCount = 0;\n        long minCountIndexValueCountCount\
    \ = 0;\n        long maxCountValueCountCountCount = 0;\n        long minCountValueCountCountCount\
    \ = 0;\n        long maxCountIndexValueCountCount = 0;\n        long minCountIndexValueCountCount\
    \ = 0;\n        long maxCountValueCountCountCount = 0;\n        long minCountValueCountCountCount\
    \ = 0;\n        long maxCountIndexValueCountCount = 0;\n        long minCountIndexValueCountCount\
    \ = 0;\n        long maxCountValueCountCountCount = 0;\n        long minCountValueCountCountCount\
    \ = 0;\n        long maxCountIndexValueCountCount = 0;\n        long minCountIndexValueCountCount\
    \ = 0;\n        long maxCountValueCountCountCount = 0;\n        long minCountValueCountCountCount\
    \ = 0;\n        long maxCountIndexValueCountCount = 0;\n        long minCountIndexValueCountCount\
    \ = 0;\n        long maxCountValueCountCountCount = 0;\n        long minCountValueCountCountCount\
    \ = 0;\n        long maxCountIndexValueCountCount = 0;\n        long minCountIndexValueCountCount\
    \ = 0;\n        long maxCountValueCountCountCount = 0;\n        long minCountValueCountCountCount\
    \ = 0;\n        long maxCountIndexValueCountCount = 0;\n        long minCountIndexValueCountCount\
    \ = 0;\n        long maxCountValueCountCountCount = 0;\n        long minCountValueCountCountCount\
    \ = 0;\n        long maxCountIndexValueCountCount = 0;\n        long min", " \
    \       if (k > arr.Count) return new List<long>();\n        if (k == 0) return\
    \ arr;\n        List<long> res = new List<long>();\n        long max = 0;\n  \
    \      long maxIndex = 0;\n        long cur = arr[0];\n        long maxValue =\
    \ cur;\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > cur) {\n                max = Math.Max(max, cur);\n                maxIndex\
    \ = i;\n            }\n            cur = arr[i];\n        }\n        max = Math.Max(max,\
    \ cur);\n        res.Add(max);\n        if (maxIndex < arr.Count - 1) {\n    \
    \        long nextMax = arr[maxIndex + 1];\n            if (nextMax > max) {\n\
    \                max = nextMax;\n                maxIndex = maxIndex + 1;\n  \
    \          }\n        }\n        res.Add(max);\n        return res;", "      \
    \  List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ cur = 0;\n        foreach (long i in arr) {\n            if (cur > max) {\n\
    \                max = cur;\n            }\n            cur = i;\n        }\n\
    \        long curMax = 0;\n        long curMaxIndex = 0;\n        foreach (long\
    \ i in arr) {\n            if (cur > curMax) {\n                curMax = cur;\n\
    \                curMaxIndex = i;\n            }\n            cur = i;\n     \
    \   }\n        long curMaxIndex2 = curMaxIndex;\n        long curMaxIndex3 = curMaxIndex;\n\
    \        long curMaxIndex4 = curMaxIndex;\n        long curMaxIndex5 = curMaxIndex;\n\
    \        long curMaxIndex6 = curMaxIndex;\n        long curMaxIndex7 = curMaxIndex;\n\
    \        long curMaxIndex8 = curMaxIndex;\n        long curMaxIndex9 = curMaxIndex;\n\
    \        long curMaxIndex10 = curMaxIndex;\n        long curMaxIndex11 = curMaxIndex;\n\
    \        long curMaxIndex12 = curMaxIndex;\n        long curMaxIndex13 = curMaxIndex;\n\
    \        long curMaxIndex14 = curMaxIndex;\n        long curMaxIndex15 = curMaxIndex;\n\
    \        long curMaxIndex16 = curMaxIndex;\n        long curMaxIndex17 = curMaxIndex;\n\
    \        long curMaxIndex18 = curMaxIndex;\n        long curMaxIndex19 = curMaxIndex;\n\
    \        long curMaxIndex20 = curMaxIndex;\n        long curMaxIndex21 = curMaxIndex;\n\
    \        long curMaxIndex22 = curMaxIndex;\n        long curMaxIndex23 = curMaxIndex;\n\
    \        long curMaxIndex24 = curMaxIndex;\n        long curMaxIndex25 = curMaxIndex;\n\
    \        long curMaxIndex26 = curMaxIndex;\n        long curMaxIndex27 = curMaxIndex;\n\
    \        long curMaxIndex28 = curMaxIndex;\n        long curMaxIndex29 = curMaxIndex;\n\
    \        long curMaxIndex30 = curMaxIndex;\n        long curMaxIndex31 = curMaxIndex;\n\
    \        long curMaxIndex32 = curMaxIndex;\n        long curMaxIndex33 = curMaxIndex;\n\
    \        long curMaxIndex34 = curMaxIndex;\n        long curMaxIndex35 = curMaxIndex;\n\
    \        long curMaxIndex36 = curMaxIndex;\n        long curMaxIndex37 = curMaxIndex;\n\
    \        long curMaxIndex38 = curMaxIndex;\n        long curMaxIndex39 = curMaxIndex;\n\
    \        long curMaxIndex40 = curMaxIndex;\n", "        List<long> result = new\
    \ List<long>();\n        long max = 0;\n        long min = 0;\n        long maxIndex\
    \ = 0;\n        long minIndex = 0;\n        long maxValue = arr[0];\n        long\
    \ minValue = arr[0];\n        bool isMax = true;\n        bool isMin = true;\n\
    \        bool isMaxIndex = true;\n        bool isMinIndex = true;\n        bool\
    \ isMaxValue = true;\n        bool isMinValue = true;\n        bool isMaxIndexValue\
    \ = true;\n        bool isMinIndexValue = true;\n        bool isMaxIndexMin =\
    \ true;\n        bool isMinIndexMin = true;\n        bool isMaxIndexMax = true;\n\
    \        bool isMinIndexMax = true;\n        bool isMaxIndexMinIndex = true;\n\
    \        bool isMinIndexMinIndex = true;\n        bool isMaxIndexMaxIndex = true;\n\
    \        bool isMinIndexMaxIndex = true;\n        bool isMaxIndexMinIndexValue\
    \ = true;\n        bool isMinIndexMinIndexValue = true;\n        bool isMaxIndexMaxIndexValue\
    \ = true;\n        bool isMinIndexMaxIndexValue = true;\n        bool isMaxIndexMinIndexMin\
    \ = true;\n        bool isMinIndexMinIndexMin = true;\n        bool isMaxIndexMaxIndexMin\
    \ = true;\n        bool isMinIndexMaxIndexMin = true;\n        bool isMaxIndexMinIndexMax\
    \ = true;\n        bool isMinIndexMinIndexMax = true;\n        bool isMaxIndexMaxIndexMax\
    \ = true;\n        bool isMinIndexMinIndexMax = true;\n        bool isMaxIndexMinIndexMaxValue\
    \ = true;\n        bool isMinIndexMinIndexMaxValue = true;\n        bool isMaxIndexMaxIndexMaxValue\
    \ = true;\n        bool isMinIndexMaxIndexMaxValue = true;\n        bool isMaxIndexMinIndexMaxMin\
    \ = true;\n        bool isMinIndexMinIndexMaxMin = true;\n        bool isMaxIndexMaxIndexMaxMin\
    \ = true;\n        bool isMinIndexMaxIndexMaxMin = true;\n        bool isMaxIndexMinIndexMaxMin\
    \ = true;\n        bool isMaxIndexMaxIndexMaxMin = true;\n        bool isMinIndexMaxIndexMaxMin\
    \ = true;\n        bool isMaxIndexMinIndexMaxMin = true;\n        bool isMaxIndexMaxIndexMaxMin\
    \ = true;\n        bool isMinIndexMaxIndexMaxMin = true;\n        bool isMaxIndexMinIndexMaxMin\
    \ = true;\n        bool isMaxIndexMaxIndexMaxMin = true;\n        bool isMinIndexMaxIndexMaxMin\
    \ = true;\n        bool isMaxIndexMinIndexMaxMin = true;\n        bool isMaxIndexMaxIndexMaxMin\
    \ = true;\n        bool isMinIndexMaxIndexMaxMin = true;\n        bool ", "  \
    \      if (k > arr.Count) return new List<long>();\n        List<long> res = new\
    \ List<long>();\n        long max = 0;\n        long min = 0;\n        foreach\
    \ (long i in arr) {\n            if (max < i) {\n                max = i;\n  \
    \          }\n            if (min > i) {\n                min = i;\n         \
    \   }\n        }\n        long mid = min + (max - min) / 2;\n        long mid2\
    \ = mid / 2;\n        long mid3 = mid / 3;\n        long mid4 = mid / 4;\n   \
    \     long mid5 = mid / 5;\n        long mid6 = mid / 6;\n        long mid7 =\
    \ mid / 7;\n        long mid8 = mid / 8;\n        long mid9 = mid / 9;\n     \
    \   long mid10 = mid / 10;\n        long mid11 = mid / 11;\n        long mid12\
    \ = mid / 12;\n        long mid13 = mid / 13;\n        long mid14 = mid / 14;\n\
    \        long mid15 = mid / 15;\n        long mid16 = mid / 16;\n        long\
    \ mid17 = mid / 17;\n        long mid18 = mid / 18;\n        long mid19 = mid\
    \ / 19;\n        long mid20 = mid / 20;\n        long mid21 = mid / 21;\n    \
    \    long mid22 = mid / 22;\n        long mid23 = mid / 23;\n        long mid24\
    \ = mid / 24;\n        long mid25 = mid / 25;\n        long mid26 = mid / 26;\n\
    \        long mid27 = mid / 27;\n        long mid28 = mid / 28;\n        long\
    \ mid29 = mid / 29;\n        long mid30 = mid / 30;\n        long mid31 = mid\
    \ / 31;\n        long mid32 = mid / 32;\n        long mid33 = mid / 33;\n    \
    \    long mid34 = mid / 34;\n        long mid35 = mid / 35;\n        long mid36\
    \ = mid / 36;\n        long mid37 = mid / 37;\n        long mid38 = mid / 38;\n\
    \        long mid39 = mid / 39;\n        long mid40 = mid / 40;\n        long\
    \ mid41 = mid / 41;\n        long mid42 = mid / 42;\n        long mid43 = mid\
    \ / 43;\n        long mid44 = mid / 44;\n        long mid45 = mid / 45;\n    \
    \    long mid46 = mid / 46;\n        ", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long min = 0;\n        long sum = 0;\n       \
    \ long maxSum = 0;\n        long minSum = 0;\n        long sumOfSquares = 0;\n\
    \        long maxSumOfSquares = 0;\n        long minSumOfSquares = 0;\n      \
    \  long maxSumOfSquares = 0;\n        long minSumOfSquares = 0;\n        long\
    \ maxSumOfSquares = 0;\n        long minSumOfSquares = 0;\n        long maxSumOfSquares\
    \ = 0;\n        long minSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n\
    \        long minSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n      \
    \  long minSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long\
    \ minSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long minSumOfSquares\
    \ = 0;\n        long maxSumOfSquares = 0;\n        long minSumOfSquares = 0;\n\
    \        long maxSumOfSquares = 0;\n        long minSumOfSquares = 0;\n      \
    \  long maxSumOfSquares = 0;\n        long minSumOfSquares = 0;\n        long\
    \ maxSumOfSquares = 0;\n        long minSumOfSquares = 0;\n        long maxSumOfSquares\
    \ = 0;\n        long minSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n\
    \        long minSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n      \
    \  long minSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long\
    \ minSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long minSumOfSquares\
    \ = 0;\n        long maxSumOfSquares = 0;\n        long minSumOfSquares = 0;\n\
    \        long maxSumOfSquares = 0;\n        long minSumOfSquares = 0;\n      \
    \  long maxSumOfSquares = 0;\n        long minSumOfSquares = 0;\n        long\
    \ maxSumOfSquares = 0;\n        long minSumOfSquares = 0;\n        long maxSumOfSquares\
    \ = 0;\n        long minSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n\
    \        long minSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n      \
    \  long minSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long\
    \ minSumOfSquares = 0;\n        long maxSumOfSquares = 0;\n        long minSumOfSquares\
    \ = 0;\n        long maxSumOfSquares = 0;\n        long minSumOfSquares = 0;\n\
    \        long maxSumOfSquares = 0;\n        long minSumOfSquares = 0;\n      \
    \  long maxSumOfSquares = 0;\n        long minSumOfSquares = 0;\n        long\
    \ maxSum", "        List<long> result = new List<long>();\n        long max =\
    \ 0;\n        long maxIndex = 0;\n        long maxValue = arr[0];\n        long\
    \ maxValueIndex = -1;\n        foreach (long i in arr) {\n            if (i >\
    \ maxValue) {\n                maxValue = i;\n                maxValueIndex =\
    \ i;\n            }\n            if (i == maxValue) {\n                maxIndex++;\n\
    \            }\n        }\n        long mid = maxIndex / 2;\n        long midValue\
    \ = arr[mid];\n        long midValueIndex = arr[mid];\n        long midValueIndex\
    \ = arr[mid];\n        long midValueIndex = arr[mid];\n        long midValueIndex\
    \ = arr[mid];\n        long midValueIndex = arr[mid];\n        long midValueIndex\
    \ = arr[mid];\n        long midValueIndex = arr[mid];\n        long midValueIndex\
    \ = arr[mid];\n        long midValueIndex = arr[mid];\n        long midValueIndex\
    \ = arr[mid];\n        long midValueIndex = arr[mid];\n        long midValueIndex\
    \ = arr[mid];\n        long midValueIndex = arr[mid];\n        long midValueIndex\
    \ = arr[mid];\n        long midValueIndex = arr[mid];\n        long midValueIndex\
    \ = arr[mid];\n        long midValueIndex = arr[mid];\n        long midValueIndex\
    \ = arr[mid];\n        long midValueIndex = arr[mid];\n        long midValueIndex\
    \ = arr[mid];\n        long midValueIndex = arr[mid];\n        long midValueIndex\
    \ = arr[mid];\n        long midValueIndex = arr[mid];\n        long midValueIndex\
    \ = arr[mid];\n        long midValueIndex = arr[mid];\n        long midValueIndex\
    \ = arr[mid];\n        long midValueIndex = arr[mid];\n        long midValueIndex\
    \ = arr[mid];\n        long midValueIndex = arr[mid];\n        long midValueIndex\
    \ = arr[mid];\n        long midValueIndex = arr[mid];\n        long midValueIndex\
    \ = arr[mid];\n        long midValueIndex = arr[mid];\n        long midValueIndex\
    \ = arr[mid];\n        long midValueIndex = arr[mid];\n        long midValueIndex\
    \ = arr[mid];\n        long midValueIndex = arr[mid];\n        long midValueIndex\
    \ = arr[mid];\n        long midValueIndex = arr[mid];\n        long midValueIndex\
    \ = arr[mid];\n        long midValueIndex = arr[mid];\n        long midValueIndex\
    \ = arr[mid];\n        long midValueIndex = arr[mid];\n        long midValueIndex\
    \ = arr[mid];\n        long midValueIndex = arr[mid];\n        long midValueIndex\
    \ = arr[mid];\n        long midValueIndex = arr[mid", "        if (k > arr.Count)\
    \ return new List<long>();\n        if (k == 0) return arr;\n        List<long>\
    \ res = new List<long>();\n        long max = 0;\n        long min = 0;\n    \
    \    long mid = 0;\n        long maxIndex = 0;\n        long minIndex = 0;\n \
    \       bool isMax = true;\n        bool isMin = true;\n        long maxVal =\
    \ 0;\n        long minVal = 0;\n        long midVal = 0;\n        long maxMidVal\
    \ = 0;\n        long minMidVal = 0;\n        long maxMidIndex = 0;\n        long\
    \ minMidIndex = 0;\n        long maxMidMax = 0;\n        long minMidMax = 0;\n\
    \        long maxMidMin = 0;\n        long minMidMin = 0;\n        long maxMidMid\
    \ = 0;\n        long minMidMid = 0;\n        long maxMidMaxIndex = 0;\n      \
    \  long minMidMaxIndex = 0;\n        long maxMidMinIndex = 0;\n        long minMidMinIndex\
    \ = 0;\n        long maxMidMidIndex = 0;\n        long minMidMidIndex = 0;\n \
    \       long maxMidMaxVal = 0;\n        long minMidMaxVal = 0;\n        long maxMidMinVal\
    \ = 0;\n        long minMidMinVal = 0;\n        long maxMidMidVal = 0;\n     \
    \   long minMidMidVal = 0;\n        long maxMidMaxIndex = 0;\n        long minMidMaxIndex\
    \ = 0;\n        long maxMidMinIndex = 0;\n        long minMidMinIndex = 0;\n \
    \       long maxMidMidIndex = 0;\n        long minMidMidIndex = 0;\n        long\
    \ maxMidMaxVal = 0;\n        long minMidMaxVal = 0;\n        long maxMidMinVal\
    \ = 0;\n        long minMidMinVal = 0;\n        long maxMidMidVal = 0;\n     \
    \   long minMidMidVal = 0;\n        long maxMidMaxIndex = 0;\n        long minMidMaxIndex\
    \ = 0;\n        long maxMidMinIndex = 0;\n        long minMidMinIndex = 0;\n \
    \       long maxMidMidIndex = 0;\n        long minMidMidIndex = 0;\n        long\
    \ maxMidMaxVal = 0;\n        long minMidMaxVal = 0;\n        long maxMidMinVal\
    \ = 0;\n        long minMidMinVal = 0;\n        long maxMidMidVal = 0;\n     \
    \   long minMidMidVal = 0;\n        long maxMidMaxIndex = 0;\n        long minMidMaxIndex\
    \ = 0;\n        long maxMidMinIndex = 0;\n        long minMidMinIndex = 0;\n \
    \       long maxMidMidIndex = 0;\n        long minMidMidIndex = 0;\n        long\
    \ maxMidMaxVal = 0;\n        long minMidMaxVal = 0;\n        long maxMid", " \
    \       List<long> result = new List<long>();\n        long max = 0;\n       \
    \ long min = 0;\n        long maxIndex = 0;\n        long minIndex = 0;\n    \
    \    long maxValue = arr[0];\n        long minValue = arr[0];\n        bool isMax\
    \ = true;\n        bool isMin = true;\n        long maxIndex = arr[0];\n     \
    \   long minIndex = arr[0];\n        long maxValue = arr[0];\n        long minValue\
    \ = arr[0];\n        bool isMax = true;\n        bool isMin = true;\n        long\
    \ maxIndex = arr[0];\n        long minIndex = arr[0];\n        long maxValue =\
    \ arr[0];\n        long minValue = arr[0];\n        bool isMax = true;\n     \
    \   bool isMin = true;\n        long maxIndex = arr[0];\n        long minIndex\
    \ = arr[0];\n        long maxValue = arr[0];\n        long minValue = arr[0];\n\
    \        bool isMax = true;\n        bool isMin = true;\n        long maxIndex\
    \ = arr[0];\n        long minIndex = arr[0];\n        long maxValue = arr[0];\n\
    \        long minValue = arr[0];\n        bool isMax = true;\n        bool isMin\
    \ = true;\n        long maxIndex = arr[0];\n        long minIndex = arr[0];\n\
    \        long maxValue = arr[0];\n        long minValue = arr[0];\n        bool\
    \ isMax = true;\n        bool isMin = true;\n        long maxIndex = arr[0];\n\
    \        long minIndex = arr[0];\n        long maxValue = arr[0];\n        long\
    \ minValue = arr[0];\n        bool isMax = true;\n        bool isMin = true;\n\
    \        long maxIndex = arr[0];\n        long minIndex = arr[0];\n        long\
    \ maxValue = arr[0];\n        long minValue = arr[0];\n        bool isMax = true;\n\
    \        bool isMin = true;\n        long maxIndex = arr[0];\n        long minIndex\
    \ = arr[0];\n        long maxValue = arr[0];\n        long minValue = arr[0];\n\
    \        bool isMax = true;\n        bool isMin = true;\n        long maxIndex\
    \ = arr[0];\n        long minIndex = arr[0];\n        long maxValue = arr[0];\n\
    \        long minValue = arr[0];\n        bool isMax = true;\n        bool isMin\
    \ = true;\n        long maxIndex = arr[0];\n        long minIndex = arr[0];\n\
    \        long maxValue = arr[0];\n        long minValue = arr[0];\n        bool\
    \ isMax = true;\n        bool isMin = true;\n        long maxIndex = arr[0];\n\
    \        long minIndex = arr[0];\n        long maxValue = arr[0];\n        long\
    \ minValue = arr[0];\n        bool isMax = true;\n        bool isMin = true;\n\
    \        long maxIndex = arr[0];\n        long minIndex = arr[0];\n"]
stop_tokens:
- "\n    }\n"

language: cs
name: HumanEval_71_triangle_area
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float side1 = (float)(a * b);\n        float side2 = (float)(b\
    \ * c);\n        float side3 = (float)(a * c);\n        if (side1 + side2 > side3)\
    \ {\n            area = side1 + side2 - side3;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp57lwe5qe.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float third;\n        float third2;\n   \
    \     float third3;\n        float third4;\n        float third5;\n        float\
    \ third6;\n        float third7;\n        float third8;\n        float third9;\n\
    \        float third10;\n        float third11;\n        float third12;\n    \
    \    float third13;\n        float third14;\n        float third15;\n        float\
    \ third16;\n        float third17;\n        float third18;\n        float third19;\n\
    \        float third20;\n        float third21;\n        float third22;\n    \
    \    float third23;\n        float third24;\n        float third25;\n        float\
    \ third26;\n        float third27;\n        float third28;\n        float third29;\n\
    \        float third30;\n        float third31;\n        float third32;\n    \
    \    float third33;\n        float third34;\n        float third35;\n        float\
    \ third36;\n        float third37;\n        float third38;\n        float third39;\n\
    \        float third40;\n        float third41;\n        float third42;\n    \
    \    float third43;\n        float third44;\n        float third45;\n        float\
    \ third46;\n        float third47;\n        float third48;\n        float third49;\n\
    \        float third50;\n        float third51;\n        float third52;\n    \
    \    float third53;\n        float third54;\n        float third55;\n        float\
    \ third56;\n        float third57;\n        float third58;\n        float third59;\n\
    \        float third60;\n        float third61;\n        float third62;\n    \
    \    float third63;\n        float third64;\n        float third65;\n        float\
    \ third68;\n        float third69;\n        float third70;\n        float third71;\n\
    \        float third72;\n        float third73;\n        float third74;\n    \
    \    float third75;\n        float third76;\n        float third77;\n        float\
    \ third78;\n        float third79;\n        float thir\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqa6gb_f0.cs(99,19): error CS1002: ; expected

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float side4 = side1 +\
    \ side2;\n            float side5 = side3 - side4;\n            float side6 =\
    \ side1 + side3;\n            float side7 = side2 - side4;\n            float\
    \ side8 = side2 + side3;\n            float side9 = side1 - side4;\n         \
    \   float side10 = side1 - side3;\n            float side11 = side2 + side4;\n\
    \            float side12 = side3 - side4;\n            float side13 = side1 +\
    \ side4;\n            float side14 = side2 - side3;\n            float side15\
    \ = side2 + side3;\n            float side16 = side1 - side3;\n            float\
    \ side17 = side1 - side4;\n            float side18 = side2 + side4;\n       \
    \     float side19 = side3 - side4;\n            float side20 = side1 + side3;\n\
    \            float side21 = side2 - side3;\n            float side22 = side1 +\
    \ side4;\n            float side23 = side2 - side4;\n            float side24\
    \ = side1 + side3;\n            float side25 = side2 - side3;\n            float\
    \ side26 = side1 + side4;\n            float side27 = side2 - side4;\n       \
    \     float side28 = side1 + side3;\n            float side29 = side2 - side3;\n\
    \            float side30 = side1 + side4;\n            float side31 = side2 -\
    \ side4;\n            float side32 = side1 + side3;\n            float side33\
    \ = side2 - side3;\n            float side34 = side1 + side4;\n            float\
    \ side35 = side2 - side4;\n            float side36 = side1 + side3;\n       \
    \     float side37 = side2 - side3;\n            float side38 = side1 + side4;\n\
    \            float side39 = side2 - side4;\n            float side40 = side1 +\
    \ side3;\n            float side41 = side2 - side3;\n            float side42\
    \ = side1 + side4;\n            float side43 = side2 - side4;\n            float\
    \ side44 = side1 + side3;\n            float side45 = side2 - side3;\n       \
    \     float side46 = side1 + side4;\n            float side47 = side2 - side4;\n\
    \            float side48 = side1 + side3;\n            float side49 = side2 -\
    \ side3;\n            float side50 = side1 + side4;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_ebrz93q.cs(74,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp_ebrz93q.cs(86,2): error CS1513: } expected

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        if (a < b + c) {\n            area = (a * b) / c;\n    \
    \    }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgnddupyv.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2f;\n        }\n        return area;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c5c350d3c5ad4fb7a1870eec241f4353>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c5c350d3c5ad4fb7a1870eec241f4353>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ sum = a+b+c;\n        if (sum > c) {\n            return -1;\n        }\n  \
    \      float area = Math.Sqrt(Math.Pow((float)sum / 2, 2) - (Math.Pow(a, 2) +\
    \ Math.Pow(b, 2)));\n        return Math.Round(area, 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptvv7ckjj.cs(24,22): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmptvv7ckjj.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        long sum = 0;\n        long sum2 = 0;\n        long sum3\
    \ = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n\
    \        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n    \
    \    long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n     \
    \   long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n      \
    \  long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n       \
    \ long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n        long\
    \ sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long sum25\
    \ = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28 =\
    \ 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n\
    \        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n \
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n  \
    \      long sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n   \
    \     long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n    \
    \    long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n     \
    \   long sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n      \
    \  long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n       \
    \ long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long\
    \ sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n        long sum59\
    \ = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n        long sum62 =\
    \ 0;\n        long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n\
    \        long sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n \
    \       long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n  \
    \      long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n   \
    \     long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n    \
    \    long sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n     \
    \   long sum81 = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n      \
    \  long sum84 = 0;\n        long sum85 = 0;\n        long \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpf1vnzo5f.cs(106,13): error CS1001: Identifier expected

    /tmp/tmpf1vnzo5f.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b);\n        float side2 = (float)(a\
    \ * c);\n        float side3 = (float)(b * c);\n        float sum = side1 + side2\
    \ + side3;\n        if (sum > side3) {\n            area = side3;\n        } else\
    \ {\n            area = sum;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjqe5ytte.cs(30,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float side4 = side1 +\
    \ side2;\n            float side5 = side3 + side4;\n            float side6 =\
    \ side1 + side3;\n            float side7 = side2 + side4;\n            float\
    \ side8 = side5 + side6;\n            float side9 = side7 + side8;\n         \
    \   float side10 = side1 + side2;\n            float side11 = side3 + side4;\n\
    \            float side12 = side5 + side6;\n            float side13 = side7 +\
    \ side8;\n            float side14 = side1 + side3;\n            float side15\
    \ = side2 + side4;\n            float side16 = side5 + side6;\n            float\
    \ side17 = side7 + side8;\n            float side18 = side1 + side2;\n       \
    \     float side19 = side3 + side4;\n            float side20 = side5 + side6;\n\
    \            float side21 = side7 + side8;\n            float side22 = side1 +\
    \ side3;\n            float side23 = side2 + side4;\n            float side24\
    \ = side5 + side6;\n            float side25 = side7 + side8;\n            float\
    \ side26 = side1 + side2;\n            float side27 = side3 + side4;\n       \
    \     float side28 = side5 + side6;\n            float side29 = side7 + side8;\n\
    \            float side30 = side1 + side3;\n            float side31 = side2 +\
    \ side4;\n            float side32 = side5 + side6;\n            float side33\
    \ = side7 + side8;\n            float side34 = side1 + side2;\n            float\
    \ side35 = side3 + side4;\n            float side36 = side5 + side6;\n       \
    \     float side37 = side7 + side8;\n            float side38 = side1 + side3;\n\
    \            float side39 = side2 + side4;\n            float side40 = side5 +\
    \ side6;\n            float side41 = side7 + side8;\n            float side42\
    \ = side1 + side2;\n            float side43 = side3 + side4;\n            float\
    \ side44 = side5 + side6;\n            float side45 = side7 + side8;\n       \
    \     float side46 = side1 + side3;\n            float side47 = side2 + side4;\n\
    \            float side48 = side5 + side\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpf8p3kems.cs(70,40): error CS1002: ; expected

    /tmp/tmpf8p3kems.cs(72,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpf8p3kems.cs(84,2): error CS1513: } expected

    '
  timestamp: 1659804972
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2f;\n        }\n        return area;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c5c350d3c5ad4fb7a1870eec241f4353>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c5c350d3c5ad4fb7a1870eec241f4353>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float side4 = side1 +\
    \ side2;\n            float side5 = side3 - side4;\n            float side6 =\
    \ side1 + side3;\n            float side7 = side2 - side4;\n            float\
    \ side8 = side2 + side3;\n            float side9 = side1 - side4;\n         \
    \   float side10 = side1 - side3;\n            float side11 = side2 + side4;\n\
    \            float side12 = side2 + side3;\n            float side13 = side3 -\
    \ side4;\n            float side14 = side3 - side2;\n            float side15\
    \ = side1 + side4;\n            float side16 = side1 + side2;\n            float\
    \ side17 = side3 - side4;\n            float side18 = side3 - side2;\n       \
    \     float side19 = side1 + side3;\n            float side20 = side2 - side3;\n\
    \            float side21 = side1 + side4;\n            float side22 = side1 +\
    \ side2;\n            float side23 = side3 - side4;\n            float side24\
    \ = side3 - side2;\n            float side25 = side1 + side3;\n            float\
    \ side26 = side2 - side3;\n            float side27 = side1 + side4;\n       \
    \     float side28 = side1 + side2;\n            float side29 = side3 - side4;\n\
    \            float side30 = side3 - side2;\n            float side31 = side1 +\
    \ side3;\n            float side32 = side2 - side3;\n            float side33\
    \ = side1 + side4;\n            float side34 = side1 + side2;\n            float\
    \ side35 = side3 - side4;\n            float side36 = side3 - side2;\n       \
    \     float side37 = side1 + side3;\n            float side38 = side2 - side3;\n\
    \            float side39 = side1 + side4;\n            float side40 = side1 +\
    \ side2;\n            float side41 = side3 - side4;\n            float side42\
    \ = side3 - side2;\n            float side43 = side1 + side3;\n            float\
    \ side44 = side2 - side3;\n            float side45 = side1 + side4;\n       \
    \     float side46 = side1 + side2;\n            float side47 = side3 - side4;\n\
    \            float side48 = side3 - side2;\n            float side49 = side1 +\
    \ side3;\n            float side50 = side2 - side3;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzyg3hbz0.cs(74,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpzyg3hbz0.cs(86,2): error CS1513: } expected

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        long temp;\n        sum = a + b + c;\n   \
    \     if (sum > c) {\n            temp = sum - c;\n            area = Math.Sqrt(temp\
    \ * temp / 2);\n        } else {\n            area = -1;\n        }\n        return\
    \ area;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3ese5tnr.cs(26,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ sum = a + b + c;\n        if (sum > c) {\n            return -1;\n        }\n\
    \        long s = a + b - c;\n        long t = b + c - a;\n        long u = c\
    \ - a;\n        long v = b - a;\n        long w = a + b - c;\n        float area;\n\
    \        if (s == 0) {\n            area = (float)(u * v);\n        } else if\
    \ (t == 0) {\n            area = (float)(u * w);\n        } else if (u == 0) {\n\
    \            area = (float)(v * w);\n        } else {\n            area = (float)(v\
    \ * t);\n        }\n        return Math.Round(area, 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxwucu4le.cs(39,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ sum = a + b + c;\n        if (sum > c) {\n            return -1;\n        }\n\
    \        long sum2 = a + b - c;\n        if (sum2 > c) {\n            return -1;\n\
    \        }\n        long sum3 = a - b - c;\n        if (sum3 > c) {\n        \
    \    return -1;\n        }\n        return (float)Math.Sqrt(Math.Pow(sum, 2) +\
    \ Math.Pow(sum2, 2) + Math.Pow(sum3, 2));\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <89515bf88b264b4b9f277a444d76d6ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <89515bf88b264b4b9f277a444d76d6ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = (a + b + c) / 2;\n        if (sum > c) {\n\
    \            area = -1;\n        } else if (sum > a) {\n            area = b *\
    \ c / 2;\n        } else if (sum > b) {\n            area = a * c / 2;\n     \
    \   } else {\n            area = a * b;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyqe0alyp.cs(31,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        float sum = (a + b + c) / 2;\n        if (sum > c) {\n  \
    \          area = -1;\n        }\n        else {\n            area = sum * sum\
    \ / 2;\n        }\n        return Math.Round(area, 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1t9yq_p3.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2.0f;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn2zx4e_4.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        sum = (a + b + c) / 2;\n        if (sum >\
    \ c) {\n            area = -1;\n        } else {\n            area = (float)Math.Sqrt(Math.Pow(sum,\
    \ 2) - (Math.Pow(a, 2) + Math.Pow(b, 2)));\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpydk_psyc.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        long sum = a+b+c;\n        if (sum > c) {\n            area\
    \ = -1;\n        } else {\n            area = Math.Sqrt(Math.Pow((sum-a), 2) +\
    \ Math.Pow((sum-b), 2) + Math.Pow((sum-c), 2));\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp22u_9y7q.cs(25,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp22u_9y7q.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2.0f;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn2zx4e_4.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        sum = (a + b + c) / 2;\n        if (sum >\
    \ c) {\n            area = -1;\n        } else {\n            area = (float)(Math.Sqrt(Math.Pow(sum\
    \ - c, 2) + Math.Pow(a - b, 2) + Math.Pow(b - a, 2)));\n        }\n        return\
    \ Math.Round(area, 2);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw044_jqg.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        long sum = a + b + c;\n        if (sum > c) {\n         \
    \   area = -1;\n        } else {\n            float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n            float side2 = (float)Math.Sqrt(Math.Pow(c,\
    \ 2) - Math.Pow(sum, 2));\n            area = side1 * side2;\n        }\n    \
    \    return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6cb_gp_3.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n          \
    \  area = (a * b * c) / 2;\n        } else {\n            area = -1;\n       \
    \ }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwbo_r37t.cs(26,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = 0.5f * Math.Sqrt(a * b + c * c);\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp83__azsa.cs(22,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp83__azsa.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / ((a * b) + (b * c) + (c * a));\n        }\n   \
    \     return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptcdji3u_.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if (a + b > c) {\n            area = (a * b) / c;\n  \
    \      }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqppu9wky.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float side4 = side1 +\
    \ side2;\n            float side5 = side3 - side4;\n            float side6 =\
    \ side1 + side3;\n            float side7 = side2 - side4;\n            float\
    \ side8 = side2 + side3;\n            float side9 = side1 - side4;\n         \
    \   float side10 = side1 - side3;\n            float side11 = side2 + side4;\n\
    \            float side12 = side2 + side3;\n            float side13 = side3 -\
    \ side4;\n            float side14 = side3 - side2;\n            float side15\
    \ = side1 + side4;\n            float side16 = side1 + side3;\n            float\
    \ side17 = side2 - side4;\n            float side18 = side2 + side4;\n       \
    \     float side19 = side3 - side4;\n            float side20 = side3 - side2;\n\
    \            float side21 = side1 + side5;\n            float side22 = side1 +\
    \ side3;\n            float side23 = side2 - side5;\n            float side24\
    \ = side2 + side5;\n            float side25 = side3 - side5;\n            float\
    \ side26 = side3 + side4;\n            float side27 = side3 - side2;\n       \
    \     float side28 = side1 + side5;\n            float side29 = side1 + side3;\n\
    \            float side30 = side2 - side5;\n            float side31 = side2 +\
    \ side5;\n            float side32 = side3 - side5;\n            float side33\
    \ = side3 + side4;\n            float side34 = side3 - side2;\n            float\
    \ side35 = side1 + side5;\n            float side36 = side1 + side3;\n       \
    \     float side37 = side2 - side5;\n            float side38 = side2 + side5;\n\
    \            float side39 = side3 - side5;\n            float side40 = side3 +\
    \ side4;\n            float side41 = side3 - side2;\n            float side42\
    \ = side1 + side5;\n            float side43 = side1 + side3;\n            float\
    \ side44 = side2 - side5;\n            float side45 = side2 + side5;\n       \
    \     float side46 = side3 - side5;\n            float side47 = side3 + side4;\n\
    \            float side48 = side3 - side2;\n            float side49 = side1 +\
    \ side5;\n            float side50 = side1 + side3;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxy6c2le5.cs(74,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpxy6c2le5.cs(86,2): error CS1513: } expected

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float side1 = (float)(a * b) / c;\n        float side2\
    \ = (float)(a * c) / b;\n        float side3 = (float)(b * c) / a;\n        if\
    \ (side1 + side2 > side3) {\n            area = Math.Round(side1 * side2 * side3,\
    \ 2);\n        }\n        return area;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz4bgop7k.cs(25,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        long sum2;\n        long sum3;\n        sum\
    \ = a+b+c;\n        sum2 = a*a+b*b+c*c;\n        sum3 = sum*sum;\n        if (sum2\
    \ > sum3) {\n            area = sum/2;\n        } else {\n            area = -1;\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9ees286a.cs(32,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float side1 = (float)(a+b+c)/2;\n       \
    \ float side2 = (float)(a+b+c)/2;\n        float side3 = (float)(a+b+c)/2;\n \
    \       sum = side1 + side2 + side3;\n        if (sum > side3) {\n           \
    \ area = side1;\n        } else {\n            area = -1;\n        }\n       \
    \ return Math.Round(area, 2);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3kz9utvn.cs(31,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n      \
    \      area = (a * b * c) / (a + b + c);\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpenvt1779.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2f;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpm77hgzv_.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n      \
    \      area = (a * b * c) / 2;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6en6weay.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n          \
    \  area = (a * b) / c;\n        } else {\n            area = -1;\n        }\n\
    \        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0yz7ybu3.cs(26,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        long sum = a+b+c;\n        if (sum > c) {\n            area\
    \ = -1;\n        }\n        else {\n            area = Math.Sqrt(Math.Pow((Math.Pow(a,\
    \ 2)) + (Math.Pow(b, 2)) + (Math.Pow(c, 2)), 0.5));\n        }\n        return\
    \ Math.Round(area, 2);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0eq_jr6a.cs(26,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp0eq_jr6a.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        if (a + b > c) {\n            area = (a * b) / c;\n    \
    \    }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp197_9l0v.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        float side1 = (float)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b,\
    \ 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c, 2));\n\
    \        float side3 = (float)Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2));\n  \
    \      float sideSum = side1 + side2 + side3;\n        if (sideSum > 0) {\n  \
    \          area = side1 / sideSum;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj9ew9pv4.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)Math.Sqrt(sum);\n            float side2 = (float)Math.Sqrt(sum\
    \ - side1);\n            float side3 = (float)Math.Sqrt(sum - side1 - side2);\n\
    \            area = side1 * side2 * side3;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyie_i3ac.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2));\n\
    \        float side2 = (float)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c, 2));\n  \
    \      float side3 = (float)Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2));\n    \
    \    float sum = side1 + side2 + side3;\n        if (sum > side3) {\n        \
    \    area = side3;\n        } else {\n            area = sum;\n        }\n   \
    \     return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmvfdldco.cs(30,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        float sum = (a + b + c) / 2;\n        if (a > b + c) {\n\
    \            area = sum * sum;\n        } else if (b > a + c) {\n            area\
    \ = sum * sum;\n        } else if (c > a + b) {\n            area = sum * sum;\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjs2ev17k.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n          \
    \  area = (a * b * c) / 2;\n        } else {\n            area = -1;\n       \
    \ }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwbo_r37t.cs(26,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a + b + c;\n        if (sum > c) {\n      \
    \      area = -1L;\n        } else {\n            float side1 = (float)Math.Sqrt(a\
    \ * a + b * b);\n            float side2 = (float)Math.Sqrt(c * c + a * b);\n\
    \            float side3 = (float)Math.Sqrt(c * c + b * b);\n            float\
    \ side4 = (float)Math.Sqrt(a * a + c * c);\n            area = side1 * side2 *\
    \ side3 / side4;\n        }\n        return Math.Round(area, 2);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiqb4kj78.cs(31,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float side1 = (float)(a+b+c)/2.0f;\n        float side2\
    \ = (float)(a+b+c)/2.0f;\n        float side3 = (float)(a+b+c)/2.0f;\n       \
    \ float side4 = (float)(a+b+c)/2.0f;\n        float side5 = side1 + side2;\n \
    \       float side6 = side1 + side3;\n        float side7 = side2 + side3;\n \
    \       float side8 = side1 + side4;\n        float side9 = side2 + side4;\n \
    \       float side10 = side3 + side4;\n        float side11 = side1 + side5;\n\
    \        float side12 = side1 + side6;\n        float side13 = side2 + side6;\n\
    \        float side14 = side3 + side6;\n        float side15 = side4 + side6;\n\
    \        float side16 = side1 + side7;\n        float side17 = side2 + side7;\n\
    \        float side18 = side3 + side7;\n        float side19 = side4 + side7;\n\
    \        float side20 = side5 + side7;\n        float side21 = side1 + side8;\n\
    \        float side22 = side2 + side8;\n        float side23 = side3 + side8;\n\
    \        float side24 = side4 + side8;\n        float side25 = side5 + side8;\n\
    \        float side26 = side1 + side9;\n        float side27 = side2 + side9;\n\
    \        float side28 = side3 + side9;\n        float side29 = side4 + side9;\n\
    \        float side30 = side5 + side9;\n        float side31 = side1 + side10;\n\
    \        float side32 = side2 + side10;\n        float side33 = side3 + side10;\n\
    \        float side34 = side4 + side10;\n        float side35 = side5 + side10;\n\
    \        float side36 = side1 + side11;\n        float side37 = side2 + side11;\n\
    \        float side38 = side3 + side11;\n        float side39 = side4 + side11;\n\
    \        float side40 = side5 + side11;\n        float side41 = side1 + side12;\n\
    \        float side42 = side2 + side12;\n        float side43 = side3 + side12;\n\
    \        float side44 = side4 + side12;\n        float side45 = side5 + side12;\n\
    \        float side46 = side1 + side13;\n        float side47 = side2 + side13;\n\
    \        float side48 = side3 + side13;\n        float side49 = side4 + side\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1txd5753.cs(69,36): error CS1002: ; expected

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b) / c;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmbk_4cj1.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        float side1 = (float)(a * b) / c;\n        float side2 =\
    \ (float)((b * c) / a);\n        float side3 = (float)((c * a) / b);\n       \
    \ if (side1 > side2 && side1 > side3) {\n            area = side1;\n        }\
    \ else if (side2 > side1 && side2 > side3) {\n            area = side2;\n    \
    \    } else {\n            area = side3;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4j1e0y0c.cs(31,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)Math.Sqrt(sum);\n            float side2 = (float)Math.Sqrt(sum-side1);\n\
    \            float side3 = (float)Math.Sqrt(sum-side1-side2);\n            area\
    \ = side1*side2*side3;\n        }\n        return Math.Round(area, 2);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzx5m34s8.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ sum = a + b + c;\n        if (sum > c) {\n            sum = sum - c;\n     \
    \   }\n        return sum / 2;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c91d5a8e56a4b5185fccb1cb681e573>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9c91d5a8e56a4b5185fccb1cb681e573>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = (long)Math.Pow(a, 2) + Math.Pow(b, 2) + Math.Pow(c,\
    \ 2);\n        if (sum > 0) {\n            float sum2 = (float)Math.Sqrt(sum);\n\
    \            float sum3 = Math.Sqrt(sum2);\n            float sum4 = sum3 / 2;\n\
    \            float sum5 = sum4 / 2;\n            float sum6 = sum5 / 2;\n    \
    \        float sum7 = sum6 / 2;\n            float sum8 = sum7 / 2;\n        \
    \    float sum9 = sum8 / 2;\n            float sum10 = sum9 / 2;\n           \
    \ float sum11 = sum10 / 2;\n            float sum12 = sum11 / 2;\n           \
    \ float sum13 = sum12 / 2;\n            float sum14 = sum13 / 2;\n           \
    \ float sum15 = sum14 / 2;\n            float sum16 = sum15 / 2;\n           \
    \ float sum17 = sum16 / 2;\n            float sum18 = sum17 / 2;\n           \
    \ float sum19 = sum18 / 2;\n            float sum20 = sum19 / 2;\n           \
    \ float sum21 = sum20 / 2;\n            float sum22 = sum21 / 2;\n           \
    \ float sum23 = sum22 / 2;\n            float sum24 = sum23 / 2;\n           \
    \ float sum25 = sum24 / 2;\n            float sum26 = sum25 / 2;\n           \
    \ float sum27 = sum26 / 2;\n            float sum28 = sum27 / 2;\n           \
    \ float sum29 = sum28 / 2;\n            float sum30 = sum29 / 2;\n           \
    \ float sum31 = sum30 / 2;\n            float sum32 = sum31 / 2;\n           \
    \ float sum33 = sum32 / 2;\n            float sum34 = sum33 / 2;\n           \
    \ float sum35 = sum34 / 2;\n            float sum36 = sum35 / 2;\n           \
    \ float sum37 = sum36 / 2;\n            float sum38 = sum37 / 2;\n           \
    \ float sum39 = sum38 / 2;\n            float sum40 = sum39 / 2;\n           \
    \ float sum41 = sum40 / 2;\n            float sum42 = sum41 / 2;\n           \
    \ float sum43 = sum42 / 2;\n            float sum44 = sum43 / 2;\n           \
    \ float sum45 = sum44 / 2;\n            float sum46 = sum45 / 2;\n           \
    \ float sum47 = sum46 / 2;\n            float sum48 = sum47 / 2;\n           \
    \ float sum49 = sum48 / 2;\n            float sum50 = sum49\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp72s2y4mc.cs(71,32): error CS1002: ; expected

    /tmp/tmp72s2y4mc.cs(73,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp72s2y4mc.cs(85,2): error CS1513: } expected

    '
  timestamp: 1659804972
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n     \
    \       area = (a * b) / c;\n        }\n        return area;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7374146cdab947ef9443c7ad74c4e7a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7374146cdab947ef9443c7ad74c4e7a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpinowp1up.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ sum = a + b + c;\n        if (sum < a) sum = a;\n        if (sum < b) sum =\
    \ b;\n        if (sum < c) sum = c; \n        return Math.Sqrt(sum * (sum - sum)\
    \ / 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpuak4tviq.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b);\n        float side2 = (float)(b\
    \ * c);\n        float side3 = (float)(a * c);\n        float sideSum = side1\
    \ + side2 + side3;\n        if (sideSum > side3) {\n            area = sideSum\
    \ / 2;\n        } else {\n            area = -1;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt3oypeyx.cs(30,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a;\n        sum += b;\n        sum += c;\n\
    \        if (sum > c) {\n            area = sum * 0.5f;\n        }\n        return\
    \ Math.Round(area, 2);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4dwezu7x.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a+b+c)/2;\n        float side2 = (float)(a-b+c)/2;\n\
    \        float side3 = (float)(a-b-c)/2;\n        float side4 = (float)(a+b+c)/2;\n\
    \        float side5 = Math.Sqrt(side1*side1 + side2*side2 + side3*side3 + side4*side4);\n\
    \        float side6 = Math.Sqrt(side1*side1 + side2*side2 + side3*side3 + side4*side4);\n\
    \        float side7 = Math.Sqrt(side1*side1 + side2*side2 + side3*side3 + side4*side4);\n\
    \        float side8 = Math.Sqrt(side1*side1 + side2*side2 + side3*side3 + side4*side4);\n\
    \        float side9 = side1 + side2 + side3 + side4 + side5 + side6 + side7 +\
    \ side8;\n        float side10 = side1 + side2 + side3 + side4 + side5 + side6\
    \ + side7 + side8;\n        float side11 = side1 + side2 + side3 + side4 + side5\
    \ + side6 + side7 + side8;\n        float side12 = side1 + side2 + side3 + side4\
    \ + side5 + side6 + side7 + side8;\n        float side13 = side1 + side2 + side3\
    \ + side4 + side5 + side6 + side7 + side8;\n        float side14 = side1 + side2\
    \ + side3 + side4 + side5 + side6 + side7 + side8;\n        float side15 = side1\
    \ + side2 + side3 + side4 + side5 + side6 + side7 + side8;\n        float side16\
    \ = side1 + side2 + side3 + side4 + side5 + side6 + side7 + side8;\n        float\
    \ side17 = side1 + side2 + side3 + side4 + side5 + side6 + side7 + side8;\n  \
    \      float side18 = side1 + side2 + side3 + side4 + side5 + side6 + side7 +\
    \ side8;\n        float side19 = side1 + side2 + side3 + side4 + side5 + side6\
    \ + side7 + side8;\n        float side20 = side1 + side2 + side3 + side4 + side5\
    \ + side6 + side7 + side8;\n        float side21 = side1 + side2 + side3 + side4\
    \ + side5 + side6 + side7 + side8;\n        float side22 = side1 + side2 + side3\
    \ + side4 + side5 + side6 + side7 + side8;\n        float side23 = side1 + side\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplhwc2acn.cs(43,36): error CS1002: ; expected

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / (a + b + c);\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmaayl6y9.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n      \
    \      area = (a * b) / c;\n        }\n        return Math.Round(area, 2);\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwpeffd67.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2.0f;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn2zx4e_4.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2f;\n        }\n        return area;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c5c350d3c5ad4fb7a1870eec241f4353>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c5c350d3c5ad4fb7a1870eec241f4353>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        long sum = a+b+c;\n        if (sum > 0) {\n            float\
    \ side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n       \
    \     float side3 = (float)(c/sum);\n            float side4 = side1 + side2;\n\
    \            float side5 = side3 - side4;\n            float side6 = side1 + side3;\n\
    \            float side7 = side2 + side3;\n            float side8 = side5 + side6;\n\
    \            float side9 = side7 - side8;\n            float side10 = side5 +\
    \ side6;\n            float side11 = side9 - side10;\n            float side12\
    \ = side9 - side10;\n            float side13 = side7 - side10;\n            float\
    \ side14 = side13 + side12;\n            float side15 = side13 - side14;\n   \
    \         float side16 = side13 - side14;\n            float side17 = side15 +\
    \ side16;\n            float side18 = side15 - side16;\n            float side19\
    \ = side17 + side18;\n            float side20 = side17 - side18;\n          \
    \  float side21 = side19 + side20;\n            float side22 = side19 - side20;\n\
    \            float side23 = side21 + side22;\n            float side24 = side21\
    \ - side22;\n            float side25 = side23 + side24;\n            float side26\
    \ = side23 - side24;\n            float side27 = side25 + side26;\n          \
    \  float side28 = side25 - side26;\n            float side29 = side27 + side28;\n\
    \            float side30 = side27 - side28;\n            float side31 = side29\
    \ + side30;\n            float side32 = side29 - side30;\n            float side33\
    \ = side31 + side32;\n            float side34 = side31 - side32;\n          \
    \  float side35 = side33 + side34;\n            float side36 = side33 - side34;\n\
    \            float side37 = side35 + side36;\n            float side38 = side35\
    \ - side36;\n            float side39 = side37 + side38;\n            float side40\
    \ = side37 - side38;\n            float side41 = side39 + side40;\n          \
    \  float side42 = side39 - side40;\n            float side43 = side41 + side42;\n\
    \            float side44 = side41 - side42;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphd7s1h20.cs(68,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmphd7s1h20.cs(80,2): error CS1513: } expected

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float side4 = side1 +\
    \ side2;\n            float side5 = side3 - side4;\n            float side6 =\
    \ side1 + side3;\n            float side7 = side2 - side4;\n            float\
    \ side8 = side2 + side3;\n            float side9 = side1 - side4;\n         \
    \   float side10 = side1 - side3;\n            float side11 = side2 + side4;\n\
    \            float side12 = side3 - side4;\n            float side13 = side1 +\
    \ side2;\n            float side14 = side3 - side1;\n            float side15\
    \ = side2 + side3;\n            float side16 = side3 - side2;\n            float\
    \ side17 = side1 + side3;\n            float side18 = side2 - side3;\n       \
    \     float side19 = side1 + side4;\n            float side20 = side2 - side4;\n\
    \            float side21 = side3 - side1;\n            float side22 = side3 -\
    \ side2;\n            float side23 = side1 + side4;\n            float side24\
    \ = side2 - side3;\n            float side25 = side1 + side2;\n            float\
    \ side26 = side2 - side1;\n            float side27 = side3 + side4;\n       \
    \     float side28 = side4 - side3;\n            float side29 = side1 + side3;\n\
    \            float side30 = side2 + side3;\n            float side31 = side3 -\
    \ side2;\n            float side32 = side1 + side2;\n            float side33\
    \ = side2 + side3;\n            float side34 = side3 - side1;\n            float\
    \ side35 = side3 + side2;\n            float side36 = side4 - side2;\n       \
    \     float side37 = side1 + side3;\n            float side38 = side2 - side3;\n\
    \            float side39 = side1 + side4;\n            float side40 = side2 -\
    \ side4;\n            float side41 = side3 - side1;\n            float side42\
    \ = side3 - side2;\n            float side43 = side1 + side4;\n            float\
    \ side44 = side2 - side3;\n            float side45 = side1 + side2;\n       \
    \     float side46 = side2 + side3;\n            float side47 = side3 - side1;\n\
    \            float side48 = side3 + side2;\n            float side49 = side4 +\
    \ side3;\n            float side50 = side1 - side2;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_pdf4tdm.cs(74,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp_pdf4tdm.cs(86,2): error CS1513: } expected

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        long sum = (a + b + c) / 2;\n        if (sum > c) {\n   \
    \         area = -1;\n        } else {\n            area = Math.Sqrt(Math.Pow(sum,\
    \ 2) / 2);\n        }\n        return Math.Round(area, 2);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsmu02x_b.cs(25,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpsmu02x_b.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n      \
    \      area = (a * b * c) / 2;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6en6weay.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)Math.Sqrt(sum);\n            float side2 = (float)Math.Sqrt(sum\
    \ - side1);\n            float side3 = (float)Math.Sqrt(sum - side1 - side2);\n\
    \            area = side1 * side2 * side3;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyie_i3ac.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2.0f;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn2zx4e_4.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n      \
    \      area = (a * b) / c;\n        }\n        return Math.Round(area, 2);\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwpeffd67.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float side4 = (float)((side1+side2)/2);\n\
    \            float side5 = (float)((side1+side3)/2);\n            float side6\
    \ = (float)((side2+side3)/2);\n            float side7 = (float)((side4+side5)/2);\n\
    \            float side8 = (float)((side4+side6)/2);\n            float side9\
    \ = (float)((side5+side6)/2);\n            float side10 = (float)((side7+side8)/2);\n\
    \            float side11 = (float)((side7+side9)/2);\n            float side12\
    \ = (float)((side8+side9)/2);\n            float side13 = (float)((side10+side11)/2);\n\
    \            float side14 = (float)((side10+side12)/2);\n            float side15\
    \ = (float)((side11+side12)/2);\n            float side16 = (float)((side13+side14)/2);\n\
    \            float side17 = (float)((side13+side15)/2);\n            float side18\
    \ = (float)((side14+side15)/2);\n            float side19 = (float)((side16+side17)/2);\n\
    \            float side20 = (float)((side16+side18)/2);\n            float side21\
    \ = (float)((side17+side18)/2);\n            float side22 = (float)((side19+side20)/2);\n\
    \            float side23 = (float)((side19+side21)/2);\n            float side24\
    \ = (float)((side20+side21)/2);\n            float side25 = (float)((side21+side22)/2);\n\
    \            float side26 = (float)((side23+side24)/2);\n            float side27\
    \ = (float)((side23+side25)/2);\n            float side28 = (float)((side24+side25)/2);\n\
    \            float side29 = (float)((side26+side27)/2);\n            float side30\
    \ = (float)((side26+side28)/2);\n            float side31 = (float)((side27+side28)/2);\n\
    \            float side32 = (float)((side29+side30)/2);\n            float side33\
    \ = (float)((side29+side31)/2);\n            float side34 = (float)((side30+side3\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp05zqkaif.cs(56,49): error CS1026: ) expected

    /tmp/tmp05zqkaif.cs(56,49): error CS1002: ; expected

    /tmp/tmp05zqkaif.cs(58,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp05zqkaif.cs(70,2): error CS1513: } expected

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a + b + c;\n        if (sum > c) {\n      \
    \      area = -1L;\n        } else {\n            float side1 = (float)(a * a\
    \ + b * b + c * c - sum * sum);\n            float side2 = (float)(a * b + c *\
    \ c - a * sum);\n            float side3 = (float)(a * c + b * sum - b * c);\n\
    \            area = Math.Sqrt(side1 * side1 + side2 * side2 + side3 * side3);\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpe_596pm6.cs(28,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpe_596pm6.cs(30,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b) / c;\n        float side2 = (float)((b\
    \ * c) / a);\n        float side3 = (float)((c * a) / b);\n        if (side1 >\
    \ side2 && side1 > side3) {\n            area = side1;\n        } else if (side2\
    \ > side1 && side2 > side3) {\n            area = side2;\n        } else {\n \
    \           area = side3;\n        }\n        return Math.Round(area, 2);\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpy3ez433k.cs(31,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float side4 = (float)(a+b+c)/sum;\n\
    \            float side5 = (float)(a+b+c+b)/sum;\n            float side6 = (float)(a+b+c+b+c)/sum;\n\
    \            float side7 = (float)(a+b+c+b+c+a)/sum;\n            float side8\
    \ = (float)(a+b+c+b+c+a+b)/sum;\n            float side9 = (float)(a+b+c+b+c+a+b+c)/sum;\n\
    \            float side10 = (float)(a+b+c+b+c+a+b+c+a)/sum;\n            float\
    \ side11 = (float)(a+b+c+b+c+a+b+c+a+b)/sum;\n            float side12 = (float)(a+b+c+b+c+a+b+c+a+b+c)/sum;\n\
    \            float side13 = (float)(a+b+c+b+c+a+b+c+a+b+c+a)/sum;\n          \
    \  float side14 = (float)(a+b+c+b+c+a+b+c+a+b+c+a+b)/sum;\n            float side15\
    \ = (float)(a+b+c+b+c+a+b+c+a+b+c+a+b+c)/sum;\n            float side16 = (float)(a+b+c+b+c+a+b+c+a+b+c+a+b+c+a)/sum;\n\
    \            float side17 = (float)(a+b+c+b+c+a+b+c+a+b+c+a+b+c+a+b)/sum;\n  \
    \          float side18 = (float)(a+b+c+b+c+a+b+c+a+b+c+a+b+c+a+b+c)/sum;\n  \
    \          float side19 = (float)(a+b+c+b+c+a+b+c+a+b+c+a+b+c+a+b+c+a)/sum;\n\
    \            float side20 = (float)(a+b+\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp81abbfiz.cs(42,40): error CS1525: Invalid expression term ''}''

    /tmp/tmp81abbfiz.cs(42,40): error CS1026: ) expected

    /tmp/tmp81abbfiz.cs(42,40): error CS1002: ; expected

    /tmp/tmp81abbfiz.cs(44,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp81abbfiz.cs(56,2): error CS1513: } expected

    '
  timestamp: 1659804973
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        sum = (a + b + c) / 2;\n        if (sum >\
    \ c) {\n            area = -1;\n        } else {\n            area = (float)Math.Sqrt(Math.Pow(sum,\
    \ 2) - (Math.Pow(a, 2) + Math.Pow(b, 2)));\n        }\n        return area;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f13f06d00b6c48218d2140e56f53a185>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f13f06d00b6c48218d2140e56f53a185>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        float side1, side2, side3;\n        side1\
    \ = (float)Math.Sqrt(a * a + b * b);\n        side2 = (float)Math.Sqrt(a * a +\
    \ c * c);\n        side3 = (float)Math.Sqrt(b * b + c * c);\n        sum = a +\
    \ b + c;\n        if (sum > side3) {\n            area = side1;\n        } else\
    \ {\n            area = side2;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc1efqlwq.cs(32,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        float side1 = (float)(a * b);\n        float side2 = (float)(a\
    \ * c);\n        float side3 = (float)(b * c);\n        if (side1 + side2 > side3)\
    \ {\n            area = side1;\n        } else {\n            area = side2;\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_pwah1nn.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n     \
    \       area = (a * b) / c;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppcjtsiwb.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ d = a + b + c;\n        if (d > long.MaxValue) {\n            return -1L;\n\
    \        }\n        long e = Math.Sqrt(d);\n        long f = Math.Sqrt(a * a +\
    \ b * b + c * c);\n        long g = Math.Sqrt(a * a + c * c);\n        long h\
    \ = Math.Sqrt(b * b + c * c);\n        long i = Math.Sqrt(a * b + c * c);\n  \
    \      long j = Math.Sqrt(a * a + b * b + c * c);\n        long k = Math.Sqrt(a\
    \ * a + b * b + c * c);\n        long l = Math.Sqrt(a * a + c * c);\n        long\
    \ m = Math.Sqrt(a * b + c * c);\n        long n = Math.Sqrt(a * a + b * b + c\
    \ * c);\n        long o = Math.Sqrt(a * a + b * b + c * c);\n        long p =\
    \ Math.Sqrt(a * a + c * c);\n        long q = Math.Sqrt(b * b + c * c);\n    \
    \    long r = Math.Sqrt(a * b + c * c);\n        long s = Math.Sqrt(a * a + b\
    \ * b + c * c);\n        long t = Math.Sqrt(a * a + b * b + c * c);\n        long\
    \ u = Math.Sqrt(a * a + c * c);\n        long v = Math.Sqrt(b * b + c * c);\n\
    \        long w = Math.Sqrt(a * b + c * c);\n        long x = Math.Sqrt(a * a\
    \ + b * b + c * c);\n        long y = Math.Sqrt(a * a + b * b + c * c);\n    \
    \    long z = Math.Sqrt(a * a + c * c);\n        long A = Math.Sqrt(a * b + c\
    \ * c);\n        long B = Math.Sqrt(a * a + b * b + c * c);\n        long C =\
    \ Math.Sqrt(a * a + b * b + c * c);\n        long D = Math.Sqrt(a * a + c * c);\n\
    \        long E = Math.Sqrt(b * b + c * c);\n        long F = Math.Sqrt(a * b\
    \ + c * c);\n        long G = Math.Sqrt(a * a + b * b + c * c);\n        long\
    \ H = Math.Sqrt(a * a + b * b + c * c);\n        long I = Math.Sqrt(a * a + c\
    \ * c);\n        long J = Math.Sqrt(b * b + c * c);\n        long K = Math.Sqrt(\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt1ghmgtg.cs(56,28): error CS1026: ) expected

    /tmp/tmpt1ghmgtg.cs(56,28): error CS1002: ; expected

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        long sum2;\n        long sum3;\n        long\
    \ sum4;\n        long sum5;\n        long sum6;\n        long sum7;\n        long\
    \ sum8;\n        long sum9;\n        long sum10;\n        long sum11;\n      \
    \  long sum12;\n        long sum13;\n        long sum14;\n        long sum15;\n\
    \        long sum16;\n        long sum17;\n        long sum18;\n        long sum19;\n\
    \        long sum20;\n        long sum21;\n        long sum22;\n        long sum23;\n\
    \        long sum24;\n        long sum25;\n        long sum26;\n        long sum27;\n\
    \        long sum28;\n        long sum29;\n        long sum30;\n        long sum31;\n\
    \        long sum32;\n        long sum33;\n        long sum34;\n        long sum35;\n\
    \        long sum36;\n        long sum37;\n        long sum38;\n        long sum39;\n\
    \        long sum40;\n        long sum41;\n        long sum42;\n        long sum43;\n\
    \        long sum44;\n        long sum45;\n        long sum46;\n        long sum47;\n\
    \        long sum48;\n        long sum49;\n        long sum50;\n        long sum51;\n\
    \        long sum52;\n        long sum53;\n        long sum54;\n        long sum55;\n\
    \        long sum56;\n        long sum57;\n        long sum58;\n        long sum59;\n\
    \        long sum60;\n        long sum61;\n        long sum62;\n        long sum63;\n\
    \        long sum64;\n        long sum65;\n        long sum66;\n        long sum67;\n\
    \        long sum68;\n        long sum69;\n        long sum70;\n        long sum71;\n\
    \        long sum72;\n        long sum73;\n        long sum74;\n        long sum75;\n\
    \        long sum76;\n        long sum77;\n        long sum78;\n        long sum79;\n\
    \        long sum80;\n        long sum81;\n        long sum82;\n        long sum83;\n\
    \        long sum84;\n        long sum85;\n        long sum86;\n        long sum87;\n\
    \        long sum88;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk85omj8b.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmpk85omj8b.cs(21,14): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmpk85omj8b.cs(22,14): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmpk85omj8b.cs(23,14): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmpk85omj8b.cs(24,14): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmpk85omj8b.cs(25,14): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmpk85omj8b.cs(26,14): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmpk85omj8b.cs(27,14): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmpk85omj8b.cs(28,14): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmpk85omj8b.cs(29,14): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmpk85omj8b.cs(30,14): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmpk85omj8b.cs(31,14): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmpk85omj8b.cs(32,14): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmpk85omj8b.cs(33,14): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmpk85omj8b.cs(34,14): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmpk85omj8b.cs(35,14): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmpk85omj8b.cs(36,14): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmpk85omj8b.cs(37,14): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmpk85omj8b.cs(38,14): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmpk85omj8b.cs(39,14): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmpk85omj8b.cs(40,14): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float side4 = side1 +\
    \ side2;\n            float side5 = side3 - side4;\n            float side6 =\
    \ side1 + side3;\n            float side7 = side2 - side4;\n            float\
    \ side8 = side2 + side3;\n            float side9 = side1 - side4;\n         \
    \   float side10 = side1 - side3;\n            float side11 = side2 + side4;\n\
    \            float side12 = side2 + side5;\n            float side13 = side3 -\
    \ side4;\n            float side14 = side3 - side5;\n            float side15\
    \ = side3 - side6;\n            float side16 = side4 - side5;\n            float\
    \ side17 = side4 - side6;\n            float side18 = side4 - side7;\n       \
    \     float side19 = side5 - side6;\n            float side20 = side5 - side7;\n\
    \            float side21 = side6 - side7;\n            float side22 = side6 -\
    \ side8;\n            float side23 = side7 - side8;\n            float side24\
    \ = side7 - side9;\n            float side25 = side8 - side9;\n            float\
    \ side26 = side9 - side10;\n            float side27 = side9 - side11;\n     \
    \       float side28 = side10 - side11;\n            float side29 = side11 - side12;\n\
    \            float side30 = side11 - side13;\n            float side31 = side12\
    \ - side13;\n            float side32 = side12 - side14;\n            float side33\
    \ = side13 - side14;\n            float side34 = side13 - side15;\n          \
    \  float side35 = side14 - side15;\n            float side36 = side14 - side16;\n\
    \            float side37 = side15 - side16;\n            float side38 = side15\
    \ - side17;\n            float side39 = side16 - side17;\n            float side40\
    \ = side16 - side18;\n            float side41 = side17 - side18;\n          \
    \  float side42 = side17 - side19;\n            float side43 = side18 - side19;\n\
    \            float side44 = side18 - side20;\n            float side45 = side19\
    \ - side20;\n            float side46 = side19 - side21;\n            float side47\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpss2uhasb.cs(69,25): error CS1002: ; expected

    /tmp/tmpss2uhasb.cs(71,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpss2uhasb.cs(83,2): error CS1513: } expected

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2f;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpm77hgzv_.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ ab = a + b;\n        long bc = b + c;\n        long ac = a + c;\n        long\
    \ abc = ab + bc;\n        long acb = ac + b;\n        long abcc = abc + acb;\n\
    \        long acbc = acb + c;\n        long abcca = abcc + acbc;\n        long\
    \ abccaa = abcca;\n        long abccaab = abccaa + abcca;\n        long abccaabc\
    \ = abccaab + abcca;\n        long abccaabcb = abccaabc;\n        long abccaabcba\
    \ = abccaabcb + (abccaabc + abcca);\n        long abccaabcbac = abccaabcba;\n\
    \        long abccaabcbacbc = abccaabcbac * abcca;\n        long abccaabcbacbcba\
    \ = abccaabcbacbc * abcca;\n        long abccaabcbacbcbac = abccaabcbacbcba *\
    \ abcca;\n        long abccaabcbacbcbacb = abccaabcbacbcbac * abcca;\n       \
    \ long abccaabcbacbcbacba = abccaabcbacbcbacba * abcca;\n        long abccaabcbacbcbacbacb\
    \ = abccaabcbacbcbacbac * abcca;\n        long abccaabcbacbcbacbacba = abccaabcbacbcbacbacba\
    \ * abcca;\n        long abccaabcbacbcbacbacbacb = abccaabcbacbcbacbacbacba *\
    \ abcca;\n        long abccaabcbacbcbacbacbacba = abccaabcbacbcbacbacbacba * abcca;\n\
    \        long abccaabcbacbcbacbacbacbacb = abccaabcbacbcbacbacbacbacba * abcca;\n\
    \        long abccaabcbacbcbacbacbacbacba = abccaabcbacbcbacbacbacbacba * abcca;\n\
    \        long abccaabcbacbcbacbacbacbacbacb = abccaabcbacbcbacbacbacbacbacba *\
    \ abcca;\n        long abccaabcbacbcbacbacbacbacbacba = abccaabcbacbcbacbacbacbacbacba\
    \ * abcca;\n        long abccaabcbacbcbacbacbacbacbacbacb = abccaabcbacbcbacbacbacbacbacbacba\
    \ * abc\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8prd_yg4.cs(47,88): error CS1002: ; expected

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float side1sqr = side1*side1;\n\
    \            float side2sqr = side2*side2;\n            float side3sqr = side3*side3;\n\
    \            float side1sqrt = Math.Sqrt(side1sqr);\n            float side2sqrt\
    \ = Math.Sqrt(side2sqr);\n            float side3sqrt = Math.Sqrt(side3sqr);\n\
    \            float area1 = side1sqr*side2sqr;\n            float area2 = side1sqr*side3sqr;\n\
    \            float area3 = side2sqr*side3sqr;\n            float area1sqr = area1*area1;\n\
    \            float area2sqr = area2*area2;\n            float area3sqr = area3*area3;\n\
    \            float area1sqrt = Math.Sqrt(area1sqr);\n            float area2sqrt\
    \ = Math.Sqrt(area2sqr);\n            float area3sqrt = Math.Sqrt(area3sqr);\n\
    \            float area1 = Math.Abs(area1);\n            float area2 = Math.Abs(area2);\n\
    \            float area3 = Math.Abs(area3);\n            float area1sqrt = Math.Sqrt(area1sqr);\n\
    \            float area2sqrt = Math.Sqrt(area2sqr);\n            float area3sqrt\
    \ = Math.Sqrt(area3sqr);\n            float area1 = Math.Abs(area1);\n       \
    \     float area2 = Math.Abs(area2);\n            float area3 = Math.Abs(area3);\n\
    \            float area1sqrt = Math.Sqrt(area1sqr);\n            float area2sqrt\
    \ = Math.Sqrt(area2sqr);\n            float area3sqrt = Math.Sqrt(area3sqr);\n\
    \            float area1 = Math.Abs(area1);\n            float area2 = Math.Abs(area2);\n\
    \            float area3 = Math.Abs(area3);\n            float area1sqrt = Math.Sqrt(area1sqr);\n\
    \            float area2sqrt = Math.Sqrt(area2sqr);\n            float area3sqrt\
    \ = Math.Sqrt(area3sqr);\n            float area1 = Math.Abs(area1);\n       \
    \     float area2 = Math.Abs(area2);\n            float area3 = Math.Abs(area3);\n\
    \            float area1sqrt = Math.Sqrt(\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu3btss0f.cs(62,41): error CS1026: ) expected

    /tmp/tmpu3btss0f.cs(62,41): error CS1002: ; expected

    /tmp/tmpu3btss0f.cs(64,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpu3btss0f.cs(76,2): error CS1513: } expected

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ ab = a + b;\n        long ac = a + c;\n        long bc = b + c;\n        long\
    \ abc = ab + bc;\n        long acb = ac + bc;\n        long abbc = ab + bc;\n\
    \        long acbb = ac + bb;\n        long abbbc = ab + bbc;\n        long acbba\
    \ = ac + bba;\n        long abbcab = ab + bcab;\n        long acbbca = ac + bbca;\n\
    \        long abbcabc = ab + bcabc;\n        long acbbacb = ac + bbacb;\n    \
    \    long abbcabcd = ab + bcabcd;\n        long acbbacbb = ac + bbacbb;\n    \
    \    long abbcabcdb = ab + bcabcdb;\n        long acbbacbbc = ac + bbacbbc;\n\
    \        long abbcabcdbc = ab + bcabcdbc;\n        long acbbacbbcd = ac + bbacbbcd;\n\
    \        long abbcabcdbcd = ab + bcabcdbcd;\n        long acbbacbbcde = ac + bbacbbcdde;\n\
    \        long abbcabcdbcdef = ab + bcabcdbcdef;\n        long acbbacbbcdefg =\
    \ ac + bbacbbcddefg;\n        long abbcabcdbcdefgh = ab + bcabcdbcdefgh;\n   \
    \     long acbbacbbcdefghi = ac + bbacbbcddefghi;\n        long abbcabcdbcdefghij\
    \ = ab + bcabcdbcdefghij;\n        long acbbacbbcdefghijk = ac + bbacbbcddefghijk;\n\
    \        long abbcabcdbcdefghijkl = ab + bcabcdbcdefghijkl;\n        long acbbacbbcdefghijklm\
    \ = ac + bbacbbcddefghijklm; \n        long abbcabcdbcdefghijklmn = ab + bcabcdbcdefghijkln;\n\
    \        long acbbacbbcdefghijklmno = ac + bbacbbcddefghijklno;\n        long\
    \ abbcabcdbcdefghijklmno = \n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdxyderop.cs(51,38): error CS1525: Invalid expression term ''}''

    /tmp/tmpdxyderop.cs(51,38): error CS1002: ; expected

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        float sum = (a + b + c) / 2;\n        if (sum > c) {\n \
    \           area = sum * sum;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4cobqxih.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n          \
    \  area = (float)(a * b * c);\n            area = Math.Round(area, 2);\n     \
    \   } else {\n            area = -1;\n        }\n        return area;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzt15o6lr.cs(23,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b) / c;\n        float side2 = (float)((b\
    \ * c) / a);\n        float side3 = (float)((c * a) / b);\n        if (side1 +\
    \ side2 > side3) {\n            area = side1;\n        } else {\n            area\
    \ = side2;\n        }\n        return Math.Round(area, 2);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7f7_c28x.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b) / c;\n        }\n        return Math.Round(area, 2, MidpointRounding.AwayFromZero);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpeg2vxhs2.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float side4 = side1 +\
    \ side2;\n            float side5 = side3 - side4;\n            float side6 =\
    \ side1 + side3;\n            float side7 = side2 - side4;\n            float\
    \ side8 = side2 + side3;\n            float side9 = side1 - side4;\n         \
    \   float side10 = side1 - side3;\n            float side11 = side2 + side4;\n\
    \            float side12 = side3 - side4;\n            float side13 = side1 +\
    \ side4;\n            float side14 = side2 - side3;\n            float side15\
    \ = side2 + side3;\n            float side16 = side1 - side4;\n            float\
    \ side17 = side1 - side3;\n            float side18 = side2 + side4;\n       \
    \     float side19 = side3 - side4;\n            float side20 = side1 + side4;\n\
    \            float side21 = side2 - side3;\n            float side22 = side2 +\
    \ side3;\n            float side23 = side1 - side4;\n            float side24\
    \ = side1 - side3;\n            float side25 = side2 + side4;\n            float\
    \ side26 = side3 - side4;\n            float side27 = side1 + side4;\n       \
    \     float side28 = side2 - side3;\n            float side29 = side2 + side3;\n\
    \            float side30 = side1 - side4;\n            float side31 = side1 -\
    \ side3;\n            float side32 = side2 + side4;\n            float side33\
    \ = side3 - side4;\n            float side34 = side1 + side4;\n            float\
    \ side35 = side2 - side3;\n            float side36 = side2 + side3;\n       \
    \     float side37 = side1 - side4;\n            float side38 = side1 - side3;\n\
    \            float side39 = side2 + side4;\n            float side40 = side3 -\
    \ side4;\n            float side41 = side1 + side4;\n            float side42\
    \ = side2 - side3;\n            float side43 = side2 + side3;\n            float\
    \ side44 = side1 - side4;\n            float side45 = side1 - side3;\n       \
    \     float side46 = side2 + side4;\n            float side47 = side3 - side4;\n\
    \            float side48 = side1 + side4;\n            float side49 = side2 -\
    \ side3;\n            float side50 = side2 + side3;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4jemrl2w.cs(74,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp4jemrl2w.cs(86,2): error CS1513: } expected

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  sum = (a + b + c) / 2;\n        sum2 = sum * sum;\n        sum3 = sum2 * sum;\n\
    \        if (sum3 > sum2) {\n            area = sum * .5f;\n        } else {\n\
    \            area = -1;\n        }\n        return Math.Round(area, 2);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplcnt6btr.cs(32,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b);\n        float side2 = (float)(a\
    \ * c);\n        float side3 = (float)(b * c);\n        float sum = (side1 + side2\
    \ + side3);\n        if (sum > side3) {\n            area = side1;\n        }\
    \ else {\n            area = -1;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpms78xeri.cs(30,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ sum = a + b + c;\n        if (sum > c) {\n            sum = sum - c;\n     \
    \   }\n        return Convert.ToSingle(sum) / 2;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <877db6cc0939443a922661e726016f6d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <877db6cc0939443a922661e726016f6d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n          \
    \  area = (a * b) / c;\n        } else {\n            area = -1;\n        }\n\
    \        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0yz7ybu3.cs(26,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        long temp;\n        long sum2;\n        long\
    \ sum3;\n        long sum4;\n        long sum5;\n        long sum6;\n        long\
    \ sum7;\n        long sum8;\n        long sum9;\n        long sum10;\n       \
    \ long sum11;\n        long sum12;\n        long sum13;\n        long sum14;\n\
    \        long sum15;\n        long sum16;\n        long sum17;\n        long sum18;\n\
    \        long sum19;\n        long sum20;\n        long sum21;\n        long sum22;\n\
    \        long sum23;\n        long sum24;\n        long sum25;\n        long sum26;\n\
    \        long sum27;\n        long sum28;\n        long sum29;\n        long sum30;\n\
    \        long sum31;\n        long sum32;\n        long sum33;\n        long sum34;\n\
    \        long sum35;\n        long sum36;\n        long sum37;\n        long sum38;\n\
    \        long sum39;\n        long sum40;\n        long sum41;\n        long sum42;\n\
    \        long sum43;\n        long sum44;\n        long sum45;\n        long sum46;\n\
    \        long sum47;\n        long sum48;\n        long sum49;\n        long sum50;\n\
    \        long sum51;\n        long sum52;\n        long sum53;\n        long sum54;\n\
    \        long sum55;\n        long sum56;\n        long sum57;\n        long sum58;\n\
    \        long sum59;\n        long sum60;\n        long sum61;\n        long sum62;\n\
    \        long sum63;\n        long sum64;\n        long sum65;\n        long sum66;\n\
    \        long sum67;\n        long sum68;\n        long sum69;\n        long sum70;\n\
    \        long sum71;\n        long sum72;\n        long sum73;\n        long sum74;\n\
    \        long sum75;\n        long sum76;\n        long sum77;\n        long sum78;\n\
    \        long sum79;\n        long sum80;\n        long sum81;\n        long sum82;\n\
    \        long sum83;\n        long sum84;\n        long sum85;\n        long sum86;\n\
    \        long sum87;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1aiyqnud.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp1aiyqnud.cs(21,14): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp1aiyqnud.cs(22,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmp1aiyqnud.cs(23,14): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp1aiyqnud.cs(24,14): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp1aiyqnud.cs(25,14): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp1aiyqnud.cs(26,14): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp1aiyqnud.cs(27,14): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp1aiyqnud.cs(28,14): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp1aiyqnud.cs(29,14): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp1aiyqnud.cs(30,14): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp1aiyqnud.cs(31,14): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp1aiyqnud.cs(32,14): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp1aiyqnud.cs(33,14): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp1aiyqnud.cs(34,14): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp1aiyqnud.cs(35,14): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp1aiyqnud.cs(36,14): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp1aiyqnud.cs(37,14): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp1aiyqnud.cs(38,14): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp1aiyqnud.cs(39,14): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp1aiyqnud.cs(40,14): warning CS0168: The variable ''sum19'' is declared
    but never used

    /'
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        sum = (a + b + c) / 2;\n        if (sum >\
    \ c) {\n            area = -1;\n        } else {\n            area = (float)Math.Sqrt(Math.Pow(sum,\
    \ 2) - (Math.Pow(a, 2) + Math.Pow(b, 2)));\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgloqgk80.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        sum = (a + b + c) / 2;\n        if (sum >\
    \ c) {\n            area = -1;\n        } else {\n            area = (float)Math.Sqrt(Math.Pow(sum,\
    \ 2) / 2);\n        }\n        return Math.Round(area, 2);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiboui3um.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b);\n        float side2 = (float)(b\
    \ * c);\n        float side3 = (float)(a * c);\n        float sum = side1 + side2\
    \ + side3;\n        if (sum > side3)\n            area = sum / 2;\n        else\n\
    \            area = -1;\n        return Math.Round(area, 2);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpezorwx5n.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum;\n        long temp;\n        long temp2;\n \
    \       long temp3;\n        long temp4;\n        long temp5;\n        long temp6;\n\
    \        long temp7;\n        long temp8;\n        long temp9;\n        long temp10;\n\
    \        long temp11;\n        long temp12;\n        long temp13;\n        long\
    \ temp14;\n        long temp15;\n        long temp16;\n        long temp17;\n\
    \        long temp18;\n        long temp19;\n        long temp20;\n        long\
    \ temp21;\n        long temp22;\n        long temp23;\n        long temp24;\n\
    \        long temp25;\n        long temp26;\n        long temp27;\n        long\
    \ temp28;\n        long temp29;\n        long temp30;\n        long temp31;\n\
    \        long temp32;\n        long temp33;\n        long temp34;\n        long\
    \ temp35;\n        long temp36;\n        long temp37;\n        long temp38;\n\
    \        long temp39;\n        long temp40;\n        long temp41;\n        long\
    \ temp42;\n        long temp43;\n        long temp44;\n        long temp45;\n\
    \        long temp46;\n        long temp47;\n        long temp48;\n        long\
    \ temp49;\n        long temp50;\n        long temp51;\n        long temp52;\n\
    \        long temp53;\n        long temp54;\n        long temp55;\n        long\
    \ temp56;\n        long temp57;\n        long temp58;\n        long temp59;\n\
    \        long temp60;\n        long temp61;\n        long temp62;\n        long\
    \ temp63;\n        long temp64;\n        long temp65;\n        long temp66;\n\
    \        long temp67;\n        long temp68;\n        long temp69;\n        long\
    \ temp70;\n        long temp71;\n        long temp72;\n        long temp73;\n\
    \        long temp74;\n        long temp75;\n        long temp76;\n        long\
    \ temp77;\n        long temp78;\n        long temp79;\n        long temp80;\n\
    \        long temp81;\n        long temp82;\n        long temp83;\n        long\
    \ temp84;\n        long temp85;\n        long temp86;\n        long temp87;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt8ap96p0.cs(20,15): warning CS0219: The variable ''area'' is assigned
    but its value is never used

    /tmp/tmpt8ap96p0.cs(21,14): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmpt8ap96p0.cs(22,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmpt8ap96p0.cs(23,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmpt8ap96p0.cs(24,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmpt8ap96p0.cs(25,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmpt8ap96p0.cs(26,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmpt8ap96p0.cs(27,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmpt8ap96p0.cs(28,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmpt8ap96p0.cs(29,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmpt8ap96p0.cs(30,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmpt8ap96p0.cs(31,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmpt8ap96p0.cs(32,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmpt8ap96p0.cs(33,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmpt8ap96p0.cs(34,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmpt8ap96p0.cs(35,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmpt8ap96p0.cs(36,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmpt8ap96p0.cs(37,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmpt8ap96p0.cs(38,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmpt8ap96p0.cs(39,14): warning CS0168: The variable ''temp18'' is declared
    but never used

    /tmp/tmpt8ap96p0.cs(40,14): warning CS0168: The variable ''temp1'
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float side1 = (float)(a * a + b * b - c * c);\n      \
    \  float side2 = (float)(a * b + c * c - a * b);\n        float side3 = (float)(a\
    \ * c + b * b - a * c);\n        if (side1 > side2 && side1 > side3) {\n     \
    \       area = side1;\n        } else if (side2 > side1 && side2 > side3) {\n\
    \            area = side2;\n        } else if (side3 > side1 && side3 > side2)\
    \ {\n            area = side3;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9_kdm7cc.cs(31,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        long sum = a+b+c;\n        if (sum > 0) {\n            float\
    \ side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n       \
    \     float side3 = (float)(c/sum);\n            float side4 = side1 + side2;\n\
    \            float side5 = side3 + side4;\n            area = Math.Sqrt(side5*side5);\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpftnvf0oz.cs(28,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpftnvf0oz.cs(30,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float side1 = (float)(a+b+c)/2.0f;\n        float side2\
    \ = (float)(a+b+c)/2.0f;\n        float side3 = (float)(a+b+c)/2.0f;\n       \
    \ float side4 = side1 + side2;\n        float side5 = side1 + side3;\n       \
    \ float side6 = side2 + side3;\n        float side7 = side1 + side4;\n       \
    \ float side8 = side2 + side4;\n        float side9 = side3 + side4;\n       \
    \ float side10 = side1 + side5;\n        float side11 = side2 + side5;\n     \
    \   float side12 = side3 + side5;\n        float side13 = side4 + side5;\n   \
    \     float side14 = side1 + side6;\n        float side15 = side2 + side6;\n \
    \       float side16 = side3 + side6;\n        float side17 = side4 + side6;\n\
    \        float side18 = side5 + side6;\n        float side19 = side1 + side7;\n\
    \        float side20 = side2 + side7;\n        float side21 = side3 + side7;\n\
    \        float side22 = side4 + side7;\n        float side23 = side5 + side7;\n\
    \        float side24 = side1 + side8;\n        float side25 = side2 + side8;\n\
    \        float side26 = side3 + side8;\n        float side27 = side4 + side8;\n\
    \        float side28 = side5 + side8;\n        float side29 = side1 + side9;\n\
    \        float side30 = side2 + side9;\n        float side31 = side3 + side9;\n\
    \        float side32 = side4 + side9;\n        float side33 = side5 + side9;\n\
    \        float side34 = side1 + side10;\n        float side35 = side2 + side10;\n\
    \        float side36 = side3 + side10;\n        float side37 = side4 + side10;\n\
    \        float side38 = side5 + side10;\n        float side39 = side1 + side11;\n\
    \        float side40 = side2 + side11;\n        float side41 = side3 + side11;\n\
    \        float side42 = side4 + side11;\n        float side43 = side5 + side11;\n\
    \        float side44 = side1 + side12;\n        float side45 = side2 + side12;\n\
    \        float side46 = side3 + side12;\n        float side47 = side4 + side12;\n\
    \        float side48 = side5 + side12;\n        float side49 = side1 + side13;\n\
    \        float side\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcmfhajfo.cs(70,19): error CS1002: ; expected

    '
  timestamp: 1659804973
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n     \
    \       area = (a * b) / c;\n        }\n        return area;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7374146cdab947ef9443c7ad74c4e7a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7374146cdab947ef9443c7ad74c4e7a2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        long temp;\n        sum = a+b+c;\n       \
    \ if (sum > 0) {\n            temp = sum / 2;\n            area = Math.Sqrt(Math.Pow(temp,\
    \ 2)/2);\n        }\n        else {\n            area = -1;\n        }\n     \
    \   return area;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn5jtmcqw.cs(26,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        if (a + b > c) {\n            area = (a * b) / c;\n    \
    \    }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp197_9l0v.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float third;\n        float fourth;\n   \
    \     float fifth;\n        float sixth;\n        float seventh;\n        float\
    \ eighth;\n        float ninth;\n        float tenth;\n        float eleventh;\n\
    \        float twelfth;\n        float thirteenth;\n        float fourteenth;\n\
    \        float fifteenth;\n        float sixteenth;\n        float seventeenth;\n\
    \        float eighteenth;\n        float nineteenth;\n        float twentieth;\n\
    \        float twentyfirst;\n        float twentysecond;\n        float twentythird;\n\
    \        float twentyfourth;\n        float twentyfifth;\n        float twentysixth;\n\
    \        float twentyseventh;\n        float twentyeighth;\n        float twentyninth;\n\
    \        float thirtieth;\n        float thirtyfirst;\n        float thirtysecond;\n\
    \        float thirtythird;\n        float thirtyfourth;\n        float thirtyfifth;\n\
    \        float thirtysixth;\n        float thirtyseventh;\n        float thirtyeighth;\n\
    \        float thirtyninth;\n        float fortieth;\n        float fortyfirst;\n\
    \        float fortysecond;\n        float fortythird;\n        float fortyfourth;\n\
    \        float fortyfifth;\n        float fortysixth;\n        float fortyseventh;\n\
    \        float fortyeighth;\n        float fortyninth;\n        float fiftieth;\n\
    \        float fiftyfirst;\n        float fiftysecond;\n        float fiftythird;\n\
    \        float fiftyfourth;\n        float fiftyfifth;\n        float fiftysixth;\n\
    \        float fiftyseventh;\n        float fiftyeighth;\n        float fiftyninth;\n\
    \        float sixtieth;\n        float sixtyfirst;\n        float sixtysecond;\n\
    \        float sixtythird;\n        float sixtyfourth;\n        float sixtyfifth;\n\
    \        float sixtysixth;\n        float sixtyseventh;\n        \n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5fgdmv2m.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp5fgdmv2m.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp5fgdmv2m.cs(22,15): warning CS0168: The variable ''third'' is declared
    but never used

    /tmp/tmp5fgdmv2m.cs(23,15): warning CS0168: The variable ''fourth'' is declared
    but never used

    /tmp/tmp5fgdmv2m.cs(24,15): warning CS0168: The variable ''fifth'' is declared
    but never used

    /tmp/tmp5fgdmv2m.cs(25,15): warning CS0168: The variable ''sixth'' is declared
    but never used

    /tmp/tmp5fgdmv2m.cs(26,15): warning CS0168: The variable ''seventh'' is declared
    but never used

    /tmp/tmp5fgdmv2m.cs(27,15): warning CS0168: The variable ''eighth'' is declared
    but never used

    /tmp/tmp5fgdmv2m.cs(28,15): warning CS0168: The variable ''ninth'' is declared
    but never used

    /tmp/tmp5fgdmv2m.cs(29,15): warning CS0168: The variable ''tenth'' is declared
    but never used

    /tmp/tmp5fgdmv2m.cs(30,15): warning CS0168: The variable ''eleventh'' is declared
    but never used

    /tmp/tmp5fgdmv2m.cs(31,15): warning CS0168: The variable ''twelfth'' is declared
    but never used

    /tmp/tmp5fgdmv2m.cs(32,15): warning CS0168: The variable ''thirteenth'' is declared
    but never used

    /tmp/tmp5fgdmv2m.cs(33,15): warning CS0168: The variable ''fourteenth'' is declared
    but never used

    /tmp/tmp5fgdmv2m.cs(34,15): warning CS0168: The variable ''fifteenth'' is declared
    but never used

    /tmp/tmp5fgdmv2m.cs(35,15): warning CS0168: The variable ''sixteenth'' is declared
    but never used

    /tmp/tmp5fgdmv2m.cs(36,15): warning CS0168: The variable ''seventeenth'' is declared
    but never used

    /tmp/tmp5fgdmv2m.cs(37,15): warning CS0168: The variable ''eighteenth'' is declared
    but never used

    /tmp/tmp5fgdmv2m.cs(38,15): warning CS0168: The variable ''nineteenth'' is declared
    but never used

    /tmp/tmp5fgdmv2m.cs(39,15): warning CS0168: The variable ''twentieth'' is declared
    but never used

    /tmp/tmp5fgdmv2m.cs(40,15): warning C'
  timestamp: 1659804974
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2f;\n        }\n        return area;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c5c350d3c5ad4fb7a1870eec241f4353>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c5c350d3c5ad4fb7a1870eec241f4353>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b) / c;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmbk_4cj1.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2.0f;\n        }\n        return area;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <357244dfd2784126869329dc1d328dd1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <357244dfd2784126869329dc1d328dd1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b) / c;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmbk_4cj1.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ sum = a + b + c;\n        if (sum > c) {\n            return -1;\n        }\n\
    \        float area = (float)(a * b) / sum;\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp62jw_x_m.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = (a + b + c) / 2;\n        if (sum > c) {\n\
    \            area = -1;\n        }\n        else {\n            area = Math.Sqrt(Math.Pow(sum,\
    \ 2.0f) / 2.0f);\n        }\n        return Math.Round(area, 2);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv32q1hwh.cs(26,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpv32q1hwh.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2.0f;\n        }\n        return Math.Round(area,\
    \ 2, MidpointRounding.AwayFromZero);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpft4dtu5f.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2.0f;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn2zx4e_4.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        if (a + b > c) {\n            area = (a * b) / c;\n    \
    \    }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp197_9l0v.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        float sum2;\n        float sum3;\n       \
    \ float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjz9exxt5.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmpjz9exxt5.cs(21,14): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmpjz9exxt5.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmpjz9exxt5.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmpjz9exxt5.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmpjz9exxt5.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmpjz9exxt5.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmpjz9exxt5.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmpjz9exxt5.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmpjz9exxt5.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmpjz9exxt5.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmpjz9exxt5.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmpjz9exxt5.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmpjz9exxt5.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmpjz9exxt5.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmpjz9exxt5.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmpjz9exxt5.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmpjz9exxt5.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmpjz9exxt5.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmpjz9exxt5.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmpjz9exxt5.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        long sum = a+b+c;\n        if (sum > c) {\n            area\
    \ = -1;\n        } else {\n            float side1 = (float)(a/sum);\n       \
    \     float side2 = (float)(b/sum);\n            float side3 = (float)(c/sum);\n\
    \            float side4 = (float)(a+b+c)/sum;\n            float side5 = Math.Sqrt(Math.Pow(side1,2)\
    \ + Math.Pow(side2,2) + Math.Pow(side3,2));\n            area = Math.Sqrt(Math.Pow(side4,2)\
    \ - Math.Pow(side5,2));\n        }\n        return Math.Round(area, 2);\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxze8lpki.cs(29,27): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpxze8lpki.cs(30,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpxze8lpki.cs(32,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ sum = (a + b + c) / 2;\n        if (sum > c) {\n            return -1;\n   \
    \     }\n        float area = Math.Sqrt(Math.Pow(sum, 2) - Math.Pow(a, 2) + Math.Pow(b,\
    \ 2));\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq8zy0n6f.cs(24,22): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpq8zy0n6f.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n     \
    \       area = (a * b * c) / 2;\n        }\n        return area;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821a7fc9fe4b40ee94935c1e28a72ed4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821a7fc9fe4b40ee94935c1e28a72ed4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        long sum = (a + b + c) / 2;\n        if (sum > c) {\n  \
    \          area = sum * sum;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk_7sjyop.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b) / c;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmbk_4cj1.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2));\n\
    \        float side2 = (float)Math.Sqrt(Math.Pow(c, 2) + Math.Pow(b, 2));\n  \
    \      float side3 = (float)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c, 2));\n    \
    \    float side4 = (float)Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2));\n      \
    \  float side5 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2) + Math.Pow(c, 2));\n\
    \        float side6 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c, 2) + Math.Pow(b,\
    \ 2));\n        float side7 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(a,\
    \ 2));\n        float side8 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(a,\
    \ 2) + Math.Pow(c, 2));\n        float side9 = Math.Sqrt(Math.Pow(c, 2) + Math.Pow(a,\
    \ 2) + Math.Pow(b, 2) + Math.Pow(a, 2));\n        float side10 = Math.Sqrt(Math.Pow(c,\
    \ 2) + Math.Pow(a, 2) + Math.Pow(b, 2) + Math.Pow(a, 2) + Math.Pow(c, 2));\n \
    \       float side11 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2) + Math.Pow(c,\
    \ 2) + Math.Pow(a, 2) + Math.Pow(b, 2));\n        float side12 = Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(a, 2) + Math.Pow(b, 2) + Math.Pow(c,\
    \ 2));\n        float side13 = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(a,\
    \ 2) + Math.Pow(b, 2) + Math.Pow(a, 2) + Math.Pow(c, 2));\n        float side14\
    \ = Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(a, 2) + Math.Pow(b, 2)\
    \ + Math.Pow(a, 2) + Math.Pow(c, 2) + Math.Pow(b, 2));\n        float side15 =\
    \ Math.Sqrt(Math.Pow(c, 2) + Math.Pow(a, 2) + Math.Pow(b, 2) + Math.Pow(a, 2)\
    \ + Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(b, 2) + Math.Pow(a, 2));\n    \
    \    float side16 = Math.Sqrt(Math.Pow(c, 2) + Math.Pow(a, 2) + Math.Pow(b, 2)\
    \ + Math.Pow(a, 2) + Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow(b, 2) + Math.Pow(a,\
    \ 2) + Math.Pow(c, 2));\n        float side17 = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b,\
    \ 2) + Math.Pow(c, 2) + Math.Pow(a, 2) + Math.Pow(b, 2) + Math.Pow(a, 2) + Math.Pow(c,\
    \ 2) + Math.Pow(b, 2) + Math.Pow(a, 2) + Math.Pow(c, 2));\n        float side18\
    \ = Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2) + Math.Pow(c, 2) + Math.Pow\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkwu_23j3.cs(38,93): error CS1026: ) expected

    /tmp/tmpkwu_23j3.cs(38,93): error CS1002: ; expected

    '
  timestamp: 1659804974
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        float side1 = (float)(a * Math.Sqrt(a * b));\n        float\
    \ side2 = (float)(b * Math.Sqrt(a * b));\n        float side3 = (float)(c * Math.Sqrt(a\
    \ * b));\n        if (side1 + side2 > side3) {\n            area = side1;\n  \
    \      }\n        return area;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <862b61732e7343f1b87b4fd4f0c95dc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <862b61732e7343f1b87b4fd4f0c95dc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float side4 = side1 +\
    \ side2;\n            float side5 = side3 - side4;\n            float side6 =\
    \ side1 + side3;\n            float side7 = side5 - side6;\n            float\
    \ side8 = side7 + side4;\n            float side9 = side8 - side1;\n         \
    \   float side10 = side9 + side3;\n            float side11 = side10 - side2;\n\
    \            float side12 = side11 + side4;\n            float side13 = side12\
    \ - side3;\n            float side14 = side13 + side5;\n            float side15\
    \ = side14 - side6;\n            float side16 = side15 + side7;\n            float\
    \ side17 = side16 - side8;\n            float side18 = side17 + side9;\n     \
    \       float side19 = side18 - side10;\n            float side20 = side19 + side11;\n\
    \            float side21 = side20 - side12;\n            float side22 = side21\
    \ + side13;\n            float side23 = side22 - side14;\n            float side24\
    \ = side23 + side15;\n            float side25 = side24 - side16;\n          \
    \  float side26 = side25 + side17;\n            float side27 = side26 - side18;\n\
    \            float side28 = side27 + side19;\n            float side29 = side28\
    \ - side20;\n            float side30 = side29 + side21;\n            float side31\
    \ = side30 - side22;\n            float side32 = side31 + side23;\n          \
    \  float side33 = side32 - side24;\n            float side34 = side33 + side25;\n\
    \            float side35 = side34 - side26;\n            float side36 = side35\
    \ + side27;\n            float side37 = side36 - side28;\n            float side38\
    \ = side37 + side29;\n            float side39 = side38 - side30;\n          \
    \  float side40 = side39 + side31;\n            float side41 = side40 - side32;\n\
    \            float side42 = side41 + side33;\n            float side43 = side42\
    \ - side34;\n            float side44 = side43 + side35;\n            float side45\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpskasc_jh.cs(67,25): error CS1002: ; expected

    /tmp/tmpskasc_jh.cs(69,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpskasc_jh.cs(81,2): error CS1513: } expected

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float side1 = (float)(a * b);\n        float side2 = (float)(b\
    \ * c);\n        float side3 = (float)(a * c);\n        float sideSum = side1\
    \ + side2 + side3;\n        if (sideSum > side3) {\n            area = sideSum\
    \ / 2.0f;\n        }\n        return Math.Round(area, 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpplmmk10g.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  sum = (float)(a+b+c);\n        sum2 = (float)(Math.Sqrt(sum));\n        sum3\
    \ = (float)(Math.Sqrt(sum2));\n        area = sum3 / 2;\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjinq2k3b.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        long sumOfTwoSides;\n        long sumOfThreeSides;\n\
    \        sumOfTwoSides = a + b;\n        sumOfThreeSides = a + c + b;\n      \
    \  if (sumOfTwoSides > sumOfThreeSides) {\n            sumOfTwoSides = sumOfThreeSides;\n\
    \        }\n        area = (float)Math.Sqrt(sumOfTwoSides * sumOfTwoSides - sumOfThreeSides\
    \ * sumOfThreeSides);\n        return Math.Round(area, 2);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8_nv34gw.cs(30,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp8_nv34gw.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float side4 = side1 +\
    \ side2;\n            float side5 = side3 - side4;\n            float side6 =\
    \ side1 + side3;\n            float side7 = side2 - side4;\n            float\
    \ side8 = side2 + side3;\n            float side9 = side1 - side4;\n         \
    \   float side10 = side1 - side3;\n            float side11 = side2 + side4;\n\
    \            float side12 = side3 - side4;\n            float side13 = side1 +\
    \ side4;\n            float side14 = side3 - side2;\n            float side15\
    \ = side1 + side2;\n            float side16 = side3 - side1;\n            float\
    \ side17 = side2 + side3;\n            float side18 = side2 + side4;\n       \
    \     float side19 = side3 - side3;\n            float side20 = side1 + side4;\n\
    \            float side21 = side1 + side3;\n            float side22 = side2 -\
    \ side3;\n            float side23 = side1 + side2;\n            float side24\
    \ = side3 - side1;\n            float side25 = side2 + side3;\n            float\
    \ side26 = side2 + side4;\n            float side27 = side3 - side2;\n       \
    \     float side28 = side1 + side4;\n            float side29 = side1 + side3;\n\
    \            float side30 = side2 - side3;\n            float side31 = side1 +\
    \ side2;\n            float side32 = side3 - side1;\n            float side33\
    \ = side2 + side3;\n            float side34 = side2 + side4;\n            float\
    \ side35 = side3 - side2;\n            float side36 = side1 + side4;\n       \
    \     float side37 = side1 + side3;\n            float side38 = side2 - side3;\n\
    \            float side39 = side1 + side2;\n            float side40 = side3 -\
    \ side1;\n            float side41 = side2 + side3;\n            float side42\
    \ = side2 + side4;\n            float side43 = side3 - side2;\n            float\
    \ side44 = side1 + side4;\n            float side45 = side1 + side3;\n       \
    \     float side46 = side2 - side3;\n            float side47 = side1 + side2;\n\
    \            float side48 = side3 - side1;\n            float side49 = side2 +\
    \ side3;\n            float side50 = side2 + side4;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmvwl09ej.cs(74,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpmvwl09ej.cs(86,2): error CS1513: } expected

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ d = b - a;\n        long e = c - b;\n        long f = d - e;\n        if (f\
    \ < 0)\n            return -1L;\n        long g = Math.Sqrt(f * f + d * d + e\
    \ * e);\n        return Math.Round(g / (float) 2, MidpointRounding.AwayFromZero);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzd7u7w_y.cs(25,18): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpzd7u7w_y.cs(26,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float third;\n        float third2;\n   \
    \     float third3;\n        float third4;\n        float third5;\n        float\
    \ third6;\n        float third7;\n        float third8;\n        float third9;\n\
    \        float third10;\n        float third11;\n        float third12;\n    \
    \    float third13;\n        float third14;\n        float third15;\n        float\
    \ third16;\n        float third17;\n        float third18;\n        float third19;\n\
    \        float third20;\n        float third21;\n        float third22;\n    \
    \    float third23;\n        float third24;\n        float third25;\n        float\
    \ third26;\n        float third27;\n        float third28;\n        float third29;\n\
    \        float third30;\n        float third31;\n        float third32;\n    \
    \    float third33;\n        float third34;\n        float third35;\n        float\
    \ third36;\n        float third37;\n        float third38;\n        float third39;\n\
    \        float third40;\n        float third41;\n        float third42;\n    \
    \    float third43;\n        float third44;\n        float third45;\n        float\
    \ third46;\n        float third47;\n        float third48;\n        float third49;\n\
    \        float third50;\n        float third51;\n        float third52;\n    \
    \    float third53;\n        float third54;\n        float third55;\n        float\
    \ third56;\n        float third57;\n        float third58;\n        float third59;\n\
    \        float third60;\n        float third61;\n        float third62;\n    \
    \    float third63;\n        float third64;\n        float third65;\n        float\
    \ third68;\n        float third69;\n        float third70;\n        float third71;\n\
    \        float third72;\n        float third73;\n        float third74;\n    \
    \    float third75;\n        float third76;\n        float third77;\n        float\
    \ third78;\n        float third79;\n        float thir\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqa6gb_f0.cs(99,19): error CS1002: ; expected

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float third;\n        float third2;\n   \
    \     float third3;\n        float third4;\n        float third5;\n        float\
    \ third6;\n        float third7;\n        float third8;\n        float third9;\n\
    \        float third10;\n        float third11;\n        float third12;\n    \
    \    float third13;\n        float third14;\n        float third15;\n        float\
    \ third16;\n        float third17;\n        float third18;\n        float third19;\n\
    \        float third20;\n        float third21;\n        float third22;\n    \
    \    float third23;\n        float third24;\n        float third25;\n        float\
    \ third26;\n        float third27;\n        float third28;\n        float third29;\n\
    \        float third30;\n        float third31;\n        float third32;\n    \
    \    float third33;\n        float third34;\n        float third35;\n        float\
    \ third36;\n        float third37;\n        float third38;\n        float third39;\n\
    \        float third40;\n        float third41;\n        float third42;\n    \
    \    float third43;\n        float third44;\n        float third45;\n        float\
    \ third46;\n        float third47;\n        float third48;\n        float third49;\n\
    \        float third50;\n        float third51;\n        float third52;\n    \
    \    float third53;\n        float third54;\n        float third55;\n        float\
    \ third56;\n        float third57;\n        float third58;\n        float third59;\n\
    \        float third60;\n        float third61;\n        float third62;\n    \
    \    float third63;\n        float third64;\n        float third65;\n        float\
    \ third66;\n        float third67;\n        float third68;\n        float third69;\n\
    \        float third70;\n        float third71;\n        float third72;\n    \
    \    float third73;\n        float third74;\n        float third75;\n        float\
    \ third76;\n        float third77;\n        float \n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpokye8vhc.cs(99,14): error CS1001: Identifier expected

    /tmp/tmpokye8vhc.cs(99,14): error CS1002: ; expected

    '
  timestamp: 1659804974
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n     \
    \       area = (a * b * c) / 2;\n        }\n        return area;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821a7fc9fe4b40ee94935c1e28a72ed4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821a7fc9fe4b40ee94935c1e28a72ed4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        long temp;\n        sum = a+b+c;\n       \
    \ if (sum > 0) {\n            temp = sum;\n            while (temp > 0) {\n  \
    \              temp = temp / 2;\n            }\n            area = temp * temp;\n\
    \        } else {\n            area = -1;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpaywh9f3u.cs(33,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float side4 = side1 +\
    \ side2;\n            float side5 = side3 - side4;\n            float side6 =\
    \ side1 + side3;\n            float side7 = side2 + side3;\n            float\
    \ side8 = side5 + side6;\n            float side9 = side7 - side8;\n         \
    \   float side10 = side5 + side6;\n            float side11 = side7 + side8;\n\
    \            float side12 = side9 + side10;\n            float side13 = side11\
    \ - side12;\n            float side14 = side13 + side12;\n            float side15\
    \ = side13 - side14;\n            float side16 = side15 + side14;\n          \
    \  float side17 = side16 - side15;\n            float side18 = side17 + side15;\n\
    \            float side19 = side18 - side17;\n            float side20 = side19\
    \ + side17;\n            float side21 = side20 - side19;\n            float side22\
    \ = side21 - side20;\n            float side23 = side22 - side21;\n          \
    \  float side24 = side23 + side22;\n            float side25 = side24 - side23;\n\
    \            float side26 = side25 + side24;\n            float side27 = side26\
    \ - side25;\n            float side28 = side27 + side26;\n            float side29\
    \ = side28 - side27;\n            float side30 = side29 + side28;\n          \
    \  float side31 = side30 - side29;\n            float side32 = side31 - side30;\n\
    \            float side33 = side32 - side31;\n            float side34 = side33\
    \ + side32;\n            float side35 = side34 - side33;\n            float side36\
    \ = side35 + side34;\n            float side37 = side36 - side35;\n          \
    \  float side38 = side37 + side36;\n            float side39 = side38 - side37;\n\
    \            float side40 = side39 + side38;\n            float side41 = side40\
    \ - side39;\n            float side42 = side41 - side40;\n            float side43\
    \ = side42 + side41;\n            float side44 = side43 - side42;\n\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfoenqx80.cs(69,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpfoenqx80.cs(81,2): error CS1513: } expected

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a+b+c)/2;\n        float side2 = (float)(a+b+c)/2;\n\
    \        float side3 = (float)(a+b+c)/2;\n        float side4 = (float)(a+b+c)/2;\n\
    \        float side5 = side1 + side2 + side3;\n        float side6 = side1 + side2\
    \ + side3;\n        float side7 = side1 + side2 + side3;\n        float side8\
    \ = side1 + side2 + side3;\n        float side9 = side1 + side2 + side3;\n   \
    \     float side10 = side1 + side2 + side3;\n        float side11 = side1 + side2\
    \ + side3;\n        float side12 = side1 + side2 + side3;\n        float side13\
    \ = side1 + side2 + side3;\n        float side14 = side1 + side2 + side3;\n  \
    \      float side15 = side1 + side2 + side3;\n        float side16 = side1 + side2\
    \ + side3;\n        float side17 = side1 + side2 + side3;\n        float side18\
    \ = side1 + side2 + side3;\n        float side19 = side1 + side2 + side3;\n  \
    \      float side20 = side1 + side2 + side3;\n        float side21 = side1 + side2\
    \ + side3;\n        float side22 = side1 + side2 + side3;\n        float side23\
    \ = side1 + side2 + side3;\n        float side24 = side1 + side2 + side3;\n  \
    \      float side25 = side1 + side2 + side3;\n        float side26 = side1 + side2\
    \ + side3;\n        float side27 = side1 + side2 + side3;\n        float side28\
    \ = side1 + side2 + side3;\n        float side29 = side1 + side2 + side3;\n  \
    \      float side30 = side1 + side2 + side3;\n        float side31 = side1 + side2\
    \ + side3;\n        float side32 = side1 + side2 + side3;\n        float side33\
    \ = side1 + side2 + side3;\n        float side34 = side1 + side2 + side3;\n  \
    \      float side35 = side1 + side2 + side3;\n        float side36 = side1 + side2\
    \ + side3;\n        float side37 = side1 + side2 + side3;\n        float side38\
    \ = side1 + side2 + side3;\n        float side39 = side1 + side2 + side3;\n  \
    \      float side40 = side1 + side2 + side3;\n        float side41 = side1 + side2\
    \ + side3;\n        float side42 = side1 + side2 + side3;\n        float side\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkldb9hu3.cs(63,19): error CS1002: ; expected

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = (long)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b,\
    \ 2) + Math.Pow(c, 2));\n        if (sum > c) {\n            area = sum * 0.5f;\n\
    \        }\n        return area;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fcfb65cbe3aa464285603e9a1047b24d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fcfb65cbe3aa464285603e9a1047b24d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        float sum = (a + b + c) / 2;\n        if (sum > c) {\n \
    \           area = sum * sum;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4cobqxih.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  sum = (a + b + c) / 2;\n        sum2 = Math.Sqrt(sum);\n        sum3 = sum2\
    \ * sum2;\n        if (sum3 >= a + b && sum3 >= a + c && sum3 >= b + c) {\n  \
    \          area = sum * 0.5f;\n        } else {\n            area = -1;\n    \
    \    }\n        return area;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5gl45ya6.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = (long)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b,\
    \ 2) + Math.Pow(c, 2));\n        if (sum > 0) {\n            float side1 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(b, 2));\n            float side2 = (float)Math.Sqrt(Math.Pow(c,\
    \ 2) - Math.Pow(a, 2));\n            float side3 = (float)Math.Sqrt(Math.Pow(c,\
    \ 2) - Math.Pow(b, 2));\n            area = Math.Round(side1 * side2 * side3,\
    \ 2);\n        }\n        return area;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpndd3erqy.cs(26,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        long sum = a+b+c;\n        if (sum > 0) {\n            float\
    \ side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n       \
    \     float side3 = (float)(c/sum);\n            area = Math.Sqrt(side1*side1\
    \ + side2*side2 + side3*side3);\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgjkh8rva.cs(26,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpgjkh8rva.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ sum = a + b + c;\n        if (sum > c) {\n            return -1;\n        }\n\
    \        float area = Math.Sqrt(Math.Pow(sum, 2.0f) / 2.0f);\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_7pbo2ri.cs(24,22): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp_7pbo2ri.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        float sum = 0;\n        float sum2 = 0;\n        float sum3\
    \ = 0;\n        float sum4 = 0;\n        float sum5 = 0;\n        float sum6 =\
    \ 0;\n        float sum7 = 0;\n        float sum8 = 0;\n        float sum9 = 0;\n\
    \        float sum10 = 0;\n        float sum11 = 0;\n        float sum12 = 0;\n\
    \        float sum13 = 0;\n        float sum14 = 0;\n        float sum15 = 0;\n\
    \        float sum16 = 0;\n        float sum17 = 0;\n        float sum18 = 0;\n\
    \        float sum19 = 0;\n        float sum20 = 0;\n        float sum21 = 0;\n\
    \        float sum22 = 0;\n        float sum23 = 0;\n        float sum24 = 0;\n\
    \        float sum25 = 0;\n        float sum26 = 0;\n        float sum27 = 0;\n\
    \        float sum28 = 0;\n        float sum29 = 0;\n        float sum30 = 0;\n\
    \        float sum31 = 0;\n        float sum32 = 0;\n        float sum33 = 0;\n\
    \        float sum34 = 0;\n        float sum35 = 0;\n        float sum36 = 0;\n\
    \        float sum37 = 0;\n        float sum38 = 0;\n        float sum39 = 0;\n\
    \        float sum40 = 0;\n        float sum41 = 0;\n        float sum42 = 0;\n\
    \        float sum43 = 0;\n        float sum44 = 0;\n        float sum45 = 0;\n\
    \        float sum46 = 0;\n        float sum47 = 0;\n        float sum48 = 0;\n\
    \        float sum49 = 0;\n        float sum50 = 0;\n        float sum51 = 0;\n\
    \        float sum52 = 0;\n        float sum53 = 0;\n        float sum54 = 0;\n\
    \        float sum55 = 0;\n        float sum56 = 0;\n        float sum57 = 0;\n\
    \        float sum58 = 0;\n        float sum59 = 0;\n        float sum60 = 0;\n\
    \        float sum61 = 0;\n        float sum62 = 0;\n        float sum63 = 0;\n\
    \        float sum64 = 0;\n        float sum65 = 0;\n        float sum66 = 0;\n\
    \        float sum67 = 0;\n        float sum68 = 0;\n        float sum69 = 0;\n\
    \        float sum70 = 0;\n        float sum71 = 0;\n        float sum72 = 0;\n\
    \        float sum73 = 0;\n        float sum74 = 0;\n        float sum75 = 0;\n\
    \        float sum76 = 0;\n        float sum77 = 0;\n        float sum78 = 0;\n\
    \        float sum79 = 0;\n        float sum80 = 0;\n        float sum81 = 0;\n\
    \        float sum82 = 0;\n        float sum83 = 0;\n        float sum84 = 0;\n\
    \        float sum85 = 0;\n        float \n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphji8h53n.cs(106,14): error CS1001: Identifier expected

    /tmp/tmphji8h53n.cs(106,14): error CS1002: ; expected

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > c) {\n          \
    \  area = -1L;\n        }\n        else {\n            float side1 = (float)(a/sum);\n\
    \            float side2 = (float)(b/sum);\n            float side3 = (float)(c/sum);\n\
    \            float area1 = side1*side1;\n            float area2 = side2*side2;\n\
    \            float area3 = side3*side3;\n            float area4 = Math.Sqrt(area1+area2+area3);\n\
    \            area = Math.Round(area4, 2);\n        }\n        return area;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi9fdh7on.cs(32,27): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpi9fdh7on.cs(33,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n      \
    \      area = (a * b) / c;\n        }\n        return Math.Round(area, 2);\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwpeffd67.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum = a + b + c;\n        if (sum > c) {\n            area\
    \ = -1;\n        } else {\n            area = Math.Sqrt(Math.Pow(sum, 2) / 2);\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnto28jb3.cs(25,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpnto28jb3.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        long temp;\n        sum = a + b + c;\n   \
    \     if (sum > c) {\n            temp = sum - c;\n            area = temp * temp\
    \ / 2;\n        } else {\n            area = -1;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxigi0nzd.cs(30,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = (a + b + c) / 2;\n        if (sum > c) {\n\
    \            area = -1L;\n        } else if (sum > b) {\n            area = ((float)(b\
    \ * b)) / 2;\n        } else if (sum > a) {\n            area = ((float)(b * b))\
    \ / 2;\n        } else {\n            area = ((float)(b * b)) / 2;\n        }\n\
    \        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpssi3qwk3.cs(31,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n     \
    \       float s = (a + b + c) / 2;\n            float area = Math.Sqrt(s * (s\
    \ - a) * (s - b) * (s - c));\n        }\n        return area;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn75hsuns.cs(23,19): error CS0136: A local or parameter named ''area''
    cannot be declared in this scope because that name is used in an enclosing local
    scope to define a local or parameter

    /tmp/tmpn75hsuns.cs(23,26): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b) / c;\n        float side2 = (float)(a\
    \ * c) / b;\n        float side3 = (float)(b * c) / a;\n        if (side1 + side2\
    \ > side3) {\n            area = side1;\n        } else {\n            area =\
    \ side2;\n        }\n        return Math.Round(area, 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu47xzt79.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpinowp1up.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = (long)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b,\
    \ 2) + Math.Pow(c, 2));\n        if (sum > 0) {\n            area = sum * 0.5f;\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp58mg1cjl.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        sum = (long)(a * b + c * c);\n        if (sum\
    \ > 0) {\n            area = Math.Sqrt(sum);\n        } else {\n            area\
    \ = -1;\n        }\n        return Math.Round(area, 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt5ohrnr1.cs(24,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpt5ohrnr1.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if (a + b > c) {\n            area = (a * b) / c;\n  \
    \      }\n        return Math.Round(area, 2, MidpointRounding.AwayFromZero);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4xbgv0gi.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n      \
    \      area = (a * b) / c;\n        }\n        return Math.Round(area, 2);\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwpeffd67.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a;\n        sum += b;\n        sum += c;\n\
    \        if (sum > c) {\n            area = sum * 0.5f;\n        }\n        return\
    \ Math.Round(area, 2);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4dwezu7x.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float area1 = side1*side1;\n\
    \            float area2 = side2*side2;\n            float area3 = side3*side3;\n\
    \            float area4 = Math.Sqrt(area1+area2+area3);\n            area = Math.Round(area4,\
    \ 2);\n        }\n        return area;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc4ck381r.cs(29,27): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpc4ck381r.cs(30,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2.0f;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn2zx4e_4.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ d = b - a;\n        long e = c - b;\n        long f = d - e;\n        if (f\
    \ > 0)\n            return (float)(a * e * f + b * d * f + c * d * e);\n     \
    \   else\n            return (float)(-1L);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <55cea9a90032456284bf6eeb577c7662>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <55cea9a90032456284bf6eeb577c7662>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float sideSum = side1\
    \ + side2 + side3;\n            if (sideSum > 0) {\n                area = Math.Round(sideSum\
    \ * sideSum * sideSum, 2);\n            }\n        }\n        return area;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxt5cyukf.cs(28,24): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > c) {\n          \
    \  area = (a+b+c) / 2.0f;\n        }\n        else if (sum > b) {\n          \
    \  area = (a+b) / 2.0f;\n        }\n        else if (sum > a) {\n            area\
    \ = (a) / 2.0f;\n        }\n        return Math.Round(area, 2);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx_ybx6sj.cs(31,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b) / c;\n        float side2 = (float)(a\
    \ * c) / b;\n        float side3 = (float)(b * c) / a;\n        float sum = (side1\
    \ + side2 + side3);\n        if (sum > 0) {\n            area = Math.Round(sum\
    \ * 100) / 100;\n        } else {\n            area = -1;\n        }\n       \
    \ return area;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpoyekj_s6.cs(26,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ d = b - a;\n        long e = c - b;\n        long f = d - e;\n        long g\
    \ = Math.Sqrt(f * f + d * d + e * e);\n        return Math.Round(g / (float) 2,\
    \ MidpointRounding.AwayFromZero);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr3elo552.cs(23,18): error CS0266: Cannot implicitly convert type ''double''
    to ''long''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpr3elo552.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        long sumOfTwoSides;\n        long sumOfThreeSides;\n\
    \        sumOfTwoSides = a + b;\n        sumOfThreeSides = a + c + b;\n      \
    \  if (sumOfTwoSides > sumOfThreeSides) {\n            area = sumOfTwoSides *\
    \ 0.5f;\n        } else {\n            area = sumOfThreeSides * 0.5f;\n      \
    \  }\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqffxzpm_.cs(31,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpqffxzpm_.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b);\n        float side2 = (float)(b\
    \ * c);\n        float side3 = (float)(a * c);\n        float sideSum = side1\
    \ + side2 + side3;\n        if (sideSum > side3) {\n            area = sideSum\
    \ / 2;\n        } else {\n            area = -1;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt3oypeyx.cs(30,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if (a + b > c) {\n            area = (a * b) / c;\n  \
    \      }\n        return Math.Round(area, 2, MidpointRounding.AwayFromZero);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4xbgv0gi.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        float sum = (a + b + c) / 2;\n        if (a >= b + c) {\n\
    \            area = sum * Math.Sqrt(a + b + c);\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpavdgtcp0.cs(23,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpavdgtcp0.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float sum = 0.0f;\n        float side1 = (float)(a * Math.Sqrt(a\
    \ * a + b * b));\n        float side2 = (float)(b * Math.Sqrt(a * a + b * b));\n\
    \        float side3 = (float)(c * Math.Sqrt(a * a + b * b));\n        float side4\
    \ = side1 + side2;\n        float side5 = side2 + side3;\n        float side6\
    \ = side3 + side4;\n        float side7 = side4 + side5;\n        float side8\
    \ = side5 + side6;\n        float side9 = side6 + side7;\n        float side10\
    \ = side7 + side8;\n        float side11 = side8 + side9;\n        float side12\
    \ = side9 + side10;\n        float side13 = side10 + side11;\n        float side14\
    \ = side11 + side12;\n        float side15 = side12 + side13;\n        float side16\
    \ = side13 + side14;\n        float side17 = side14 + side15;\n        float side18\
    \ = side15 + side16;\n        float side19 = side16 + side17;\n        float side20\
    \ = side17 + side18;\n        float side21 = side18 + side19;\n        float side22\
    \ = side19 + side20;\n        float side23 = side20 + side21;\n        float side24\
    \ = side21 + side22;\n        float side25 = side22 + side23;\n        float side26\
    \ = side23 + side24;\n        float side27 = side24 + side25;\n        float side28\
    \ = side25 + side26;\n        float side29 = side26 + side27;\n        float side30\
    \ = side27 + side28;\n        float side31 = side28 + side29;\n        float side32\
    \ = side29 + side30;\n        float side33 = side30 + side31;\n        float side34\
    \ = side31 + side32;\n        float side35 = side32 + side33;\n        float side36\
    \ = side33 + side34;\n        float side37 = side34 + side35;\n        float side38\
    \ = side35 + side36;\n        float side39 = side36 + side37;\n        float side40\
    \ = side37 + side38;\n        float side41 = side38 + side39;\n        float side42\
    \ = side39 + side40;\n        float side43 = side\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5yj66qkl.cs(64,28): error CS1002: ; expected

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float side1 = (float)(a+b+c)/2.0f;\n        float side2\
    \ = (float)(a+b+c)/2.0f;\n        float side3 = (float)(a+b+c)/2.0f;\n       \
    \ float side4 = (float)(a+b+c)/2.0f;\n        float side5 = side1 + side2;\n \
    \       float side6 = side1 + side3;\n        float side7 = side2 + side3;\n \
    \       float side8 = side1 + side4;\n        float side9 = side2 + side4;\n \
    \       float side10 = side3 + side4;\n        float side11 = side1 + side5;\n\
    \        float side12 = side1 + side6;\n        float side13 = side2 + side6;\n\
    \        float side14 = side3 + side6;\n        float side15 = side1 + side7;\n\
    \        float side16 = side1 + side8;\n        float side17 = side2 + side8;\n\
    \        float side18 = side3 + side8;\n        float side19 = side1 + side9;\n\
    \        float side20 = side2 + side9;\n        float side21 = side3 + side9;\n\
    \        float side22 = side4 + side9;\n        float side23 = side1 + side10;\n\
    \        float side24 = side2 + side10;\n        float side25 = side3 + side10;\n\
    \        float side26 = side4 + side10;\n        float side27 = side5 + side10;\n\
    \        float side28 = side1 + side11;\n        float side29 = side2 + side11;\n\
    \        float side30 = side3 + side11;\n        float side31 = side4 + side11;\n\
    \        float side32 = side5 + side11;\n        float side33 = side1 + side12;\n\
    \        float side34 = side2 + side12;\n        float side35 = side3 + side12;\n\
    \        float side36 = side4 + side12;\n        float side37 = side5 + side12;\n\
    \        float side38 = side1 + side13;\n        float side39 = side2 + side13;\n\
    \        float side40 = side3 + side13;\n        float side41 = side4 + side13;\n\
    \        float side42 = side5 + side13;\n        float side43 = side1 + side14;\n\
    \        float side44 = side2 + side14;\n        float side45 = side3 + side14;\n\
    \        float side46 = side4 + side14;\n        float side47 = side5 + side14;\n\
    \        float side48 = side1 + side15;\n        float side49 = side2 + side15;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp911cfeqc.cs(20,15): warning CS0219: The variable ''area'' is assigned
    but its value is never used

    /tmp/tmp911cfeqc.cs(19,25): error CS0161: ''Problem.TriangleArea(long, long, long)'':
    not all code paths return a value

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b);\n        float side2 = (float)(b\
    \ * c);\n        float side3 = (float)(a * c);\n        float sum = side1 + side2\
    \ + side3;\n        if (sum > side3) {\n            area = side3;\n        } else\
    \ {\n            area = sum;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyusvmfp3.cs(30,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n      \
    \      area = (a * b * c) / (a + b + c);\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpenvt1779.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b);\n        float side2 = (float)(a\
    \ * c);\n        float side3 = (float)(b * c);\n        float sideSum = side1\
    \ + side2 + side3;\n        if (sideSum > side3) {\n            area = sideSum\
    \ / 2;\n        } else {\n            area = -1;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpatno0qg_.cs(30,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float side1 = (float)(a * b) / c;\n        float side2 = (float)((b\
    \ * c) / a);\n        float side3 = (float)((c * a) / b);\n        float sum =\
    \ (side1 + side2 + side3);\n        if (sum > 0) {\n            area = Math.Round(sum\
    \ * 100) / 100;\n        } else {\n            area = -1;\n        }\n       \
    \ return area;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmp5memf8.cs(26,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2f;\n        }\n        return area;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c5c350d3c5ad4fb7a1870eec241f4353>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c5c350d3c5ad4fb7a1870eec241f4353>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b) / c;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmbk_4cj1.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpinowp1up.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)(a/sum);\n            float side2 = (float)(b/sum);\n\
    \            float side3 = (float)(c/sum);\n            float side4 = side1 +\
    \ side2;\n            float side5 = side3 - side4;\n            float side6 =\
    \ side1 + side3;\n            float side7 = side2 + side3;\n            float\
    \ side8 = side5 + side6;\n            float side9 = side7 - side8;\n         \
    \   float side10 = side5 + side6;\n            float side11 = side7 + side8;\n\
    \            float side12 = side9 - side10;\n            float side13 = side9\
    \ + side10;\n            float side14 = side11 - side12;\n            float side15\
    \ = side11 + side12;\n            float side16 = side13 - side14;\n          \
    \  float side17 = side13 + side14;\n            float side18 = side15 - side16;\n\
    \            float side19 = side15 + side16;\n            float side20 = side17\
    \ - side18;\n            float side21 = side17 + side18;\n            float side22\
    \ = side19 - side20;\n            float side23 = side19 + side20;\n          \
    \  float side24 = side21 - side22;\n            float side25 = side21 + side22;\n\
    \            float side26 = side23 - side25;\n            float side27 = side23\
    \ + side25;\n            float side28 = side26 - side27;\n            float side29\
    \ = side26 + side27;\n            float side30 = side28 - side29;\n          \
    \  float side31 = side28 + side29;\n            float side32 = side30 - side31;\n\
    \            float side33 = side30 + side31;\n            float side34 = side32\
    \ - side33;\n            float side35 = side32 + side33;\n            float side36\
    \ = side35 - side34;\n            float side37 = side35 + side34;\n          \
    \  float side38 = side37 - side36;\n            float side39 = side37 + side36;\n\
    \            float side40 = side38 - side39;\n            float side41 = side38\
    \ + side39;\n            float side42 = side41 - side42;\n            float side43\
    \ = side41 + side42;\n            float side44 = side43 - side44;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7qqvl4g0.cs(68,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp7qqvl4g0.cs(80,2): error CS1513: } expected

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ sum = a+b+c;\n        if (sum > c) {\n            return -1;\n        }\n  \
    \      long d = b - c;\n        long e = d - a;\n        long f = a + b;\n   \
    \     long g = f - c;\n        long h = g - a;\n        long i = h + c;\n    \
    \    long j = i - b;\n        long k = j - a;\n        long l = k + c;\n     \
    \   long m = l - b;\n        long n = m - a;\n        long o = n + c;\n      \
    \  long p = o - b;\n        long q = p - a;\n        long r = q + c;\n       \
    \ long s = r - b;\n        long t = s - a;\n        long u = t - c;\n        long\
    \ v = u + c;\n        long w = v - b;\n        long x = w - a;\n        long y\
    \ = x - c;\n        long z = y + c;\n        long a = z - b;\n        long b =\
    \ a - c;\n        long c = b - a;\n        long d = c - b;\n        long e = d\
    \ - c;\n        long f = e - d;\n        long g = f - e;\n        long h = g -\
    \ f;\n        long i = h - g;\n        long j = i - h;\n        long k = j - i;\n\
    \        long l = k - j;\n        long m = l - k;\n        long n = m - l;\n \
    \       long o = n - m;\n        long p = o - n;\n        long q = p - o;\n  \
    \      long r = q - p;\n        long s = r - q;\n        long t = s - r;\n   \
    \     long u = t - s;\n        long v = u + s;\n        long w = v - t;\n    \
    \    long x = w - v;\n        long y = x - w;\n        long z = y + w;\n     \
    \   long a = z - z;\n        long b = a - z;\n        long c = b - a;\n      \
    \  long d = c - b;\n        long e = d - c;\n        long f = e - d;\n       \
    \ long g = f - e;\n        long h = g - f;\n        long i = h - g;\n        long\
    \ j = i - h;\n        long k = j - i;\n        long l = k - j;\n        long m\
    \ = l - k;\n        long n = m - l;\n        long o = n - m;\n        long p =\
    \ o - n;\n        long q = p - o;\n        long r = q - p;\n        long s = r\
    \ - q;\n        long t = s - r;\n        long u = t - s;\n        long v = u +\
    \ s;\n        long w = v - t;\n        long x = w - v;\n        long y = x - w;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphgcbopuh.cs(20,20): error CS0841: Cannot use local variable ''a'' before
    it is declared

    /tmp/tmphgcbopuh.cs(20,22): error CS0841: Cannot use local variable ''b'' before
    it is declared

    /tmp/tmphgcbopuh.cs(20,24): error CS0841: Cannot use local variable ''c'' before
    it is declared

    /tmp/tmphgcbopuh.cs(21,19): error CS0841: Cannot use local variable ''c'' before
    it is declared

    /tmp/tmphgcbopuh.cs(24,18): error CS0841: Cannot use local variable ''b'' before
    it is declared

    /tmp/tmphgcbopuh.cs(24,22): error CS0841: Cannot use local variable ''c'' before
    it is declared

    /tmp/tmphgcbopuh.cs(25,22): error CS0841: Cannot use local variable ''a'' before
    it is declared

    /tmp/tmphgcbopuh.cs(26,18): error CS0841: Cannot use local variable ''a'' before
    it is declared

    /tmp/tmphgcbopuh.cs(26,22): error CS0841: Cannot use local variable ''b'' before
    it is declared

    /tmp/tmphgcbopuh.cs(27,22): error CS0841: Cannot use local variable ''c'' before
    it is declared

    /tmp/tmphgcbopuh.cs(28,22): error CS0841: Cannot use local variable ''a'' before
    it is declared

    /tmp/tmphgcbopuh.cs(29,22): error CS0841: Cannot use local variable ''c'' before
    it is declared

    /tmp/tmphgcbopuh.cs(30,22): error CS0841: Cannot use local variable ''b'' before
    it is declared

    /tmp/tmphgcbopuh.cs(31,22): error CS0841: Cannot use local variable ''a'' before
    it is declared

    /tmp/tmphgcbopuh.cs(32,22): error CS0841: Cannot use local variable ''c'' before
    it is declared

    /tmp/tmphgcbopuh.cs(33,22): error CS0841: Cannot use local variable ''b'' before
    it is declared

    /tmp/tmphgcbopuh.cs(34,22): error CS0841: Cannot use local variable ''a'' before
    it is declared

    /tmp/tmphgcbopuh.cs(35,22): error CS0841: Cannot use local variable ''c'' before
    it is declared

    /tmp/tmphgcbopuh.cs(36,22): error CS0841: Cannot use local variable ''b'' before
    it is declared

    /tmp/tmphgcbopuh.cs(37,22): error CS0841: Cannot use local variable ''a'' before
    it is declared

    /tmp/tmphgcbopuh.cs(38,22): error CS0841:'
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)Math.Sqrt(sum);\n            float side2 = (float)Math.Sqrt(sum\
    \ - side1);\n            float side3 = (float)Math.Sqrt(sum - side1 - side2);\n\
    \            area = side1 * side2 * side3;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyie_i3ac.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        sum = (long)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b,\
    \ 2) + Math.Pow(c, 2));\n        if (sum > 0) {\n            area = sum * 0.5f;\n\
    \        }\n        else {\n            area = -1;\n        }\n        return\
    \ Math.Round(area, 2);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxfudr5sv.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        long\
    \ sum = a+b+c;\n        if (sum > c) {\n            return -1;\n        }\n  \
    \      float area = (a*b*c)/(float)sum;\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz5f_znpf.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        long sum = a+b+c;\n        if (sum > 0) {\n          \
    \  float side1 = (float)Math.Sqrt(sum);\n            float side2 = (float)Math.Sqrt(sum\
    \ - side1);\n            float side3 = (float)Math.Sqrt(sum - side1 - side2);\n\
    \            area = side1 * side2 * side3;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyie_i3ac.cs(28,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n      \
    \      area = (a * b) / c;\n        }\n        return Math.Round(area, 2);\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwpeffd67.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804973
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        long sum = a+b+c;\n        if (sum > 0) {\n            area\
    \ = Math.Sqrt(Math.Pow((float)(a-b), 2.0f) + Math.Pow((float)(a-c), 2.0f) + Math.Pow((float)(b-c),\
    \ 2.0f));\n        }\n        return Math.Round(area, 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7ptm4jh8.cs(23,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmp7ptm4jh8.cs(25,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        float side1 = (float)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b,\
    \ 2));\n        float side2 = (float)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(c, 2));\n\
    \        float side3 = (float)Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c, 2));\n  \
    \      if (side1 + side2 > side3) {\n            area = side1 * side2 * 0.5f;\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqhgj4e66.cs(27,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n      \
    \      area = (a * b * c) / 2;\n        }\n        return Math.Round(area, 2);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6en6weay.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        float side1 = (float)(a * b);\n        float side2 = (float)(a\
    \ * c);\n        float side3 = (float)(b * c);\n        if (side1 + side2 > side3)\
    \ {\n            area = side1 + side2;\n        } else {\n            area = side3;\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_e8gteo4.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        long sum2;\n        long sum3;\n        sum\
    \ = (long)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2));\n        sum2 = (long)(Math.Pow(c,\
    \ 2) - Math.Pow(sum, 2));\n        sum3 = (long)Math.Pow(sum2, 2);\n        if\
    \ (sum3 > 0)\n            area = sum / sum3;\n        else\n            area =\
    \ -1;\n        return Math.Round(area, 2);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfp7e_9u3.cs(31,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0.0f;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n   \
    \         area = (a * b * c) / 2f;\n        }\n        return Math.Round(area,\
    \ 2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpm77hgzv_.cs(24,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804972
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        float side1 = (float)(a * b) / c;\n        float side2 =\
    \ (float)(b * c) / a;\n        float side3 = (float)(c * a) / b;\n        if (side1\
    \ + side2 > side3) {\n            area = Math.Round(side1, 2);\n        } else\
    \ {\n            area = Math.Round(side2, 2);\n        }\n        return area;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcz9ojgbt.cs(25,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    /tmp/tmpcz9ojgbt.cs(27,20): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = 0;\n        long sum = a + b + c;\n        if (sum > c) {\n         \
    \   area = -1;\n        } else if (sum > b) {\n            area = sum - c;\n \
    \       } else if (sum > a) {\n            area = c - b;\n        }\n        return\
    \ Math.Round(area, 2);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp06fyqd9v.cs(29,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area = -1;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n     \
    \       area = (a * b * c) / 2;\n        }\n        return area;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L),\
    \ (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821a7fc9fe4b40ee94935c1e28a72ed4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <821a7fc9fe4b40ee94935c1e28a72ed4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659804974
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        float side1, side2, side3;\n        side1\
    \ = (float)Math.Sqrt(Math.Pow(a, 2) + Math.Pow(b, 2));\n        side2 = (float)Math.Sqrt(Math.Pow(a,\
    \ 2) + Math.Pow(c, 2));\n        side3 = (float)Math.Sqrt(Math.Pow(b, 2) + Math.Pow(c,\
    \ 2));\n        sum = a + b + c;\n        if (sum > side3) {\n            area\
    \ = side1;\n        } else {\n            area = side2;\n        }\n        return\
    \ Math.Round(area, 2);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L))\
    \ == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L),\
    \ (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphiemos8p.cs(32,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        if ((a + b > c) && (a + c > b) && (b + c > a)) {\n          \
    \  area = (float)(a * b * c / 2);\n        } else {\n            area = -1;\n\
    \        }\n        return Math.Round(area, 2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L)) == (6.0f));\n\
    \    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n    Debug.Assert(TriangleArea((4L),\
    \ (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L), (2L), (2L)) ==\
    \ (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n    Debug.Assert(TriangleArea((2L),\
    \ (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L), (1L), (1L))\
    \ == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) == (float)-1L);\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpft7zlzpf.cs(26,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        long sum;\n        long temp;\n        sum = (a + b + c) / 2;\n\
    \        if (sum > c) {\n            temp = sum;\n            sum = c;\n     \
    \       c = temp;\n        }\n        if (sum < a) {\n            temp = sum;\n\
    \            sum = a;\n            a = temp;\n        }\n        if (sum < b)\
    \ {\n            temp = sum;\n            sum = b;\n            b = temp;\n  \
    \      }\n        area = (float)Math.Sqrt(Math.Pow(sum, 2) - (Math.Pow(a, 2) +\
    \ Math.Pow(b, 2)));\n        return Math.Round(area, 2);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L), (4L), (5L))\
    \ == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L), (2L), (3L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L)) == (16.25f));\n\
    \    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((1L),\
    \ (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L), (2L), (10L)) ==\
    \ (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8euubbg4.cs(40,16): error CS0266: Cannot implicitly convert type ''double''
    to ''float''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659804975
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given the lengths of the three sides of a triangle. Return\
    \ the area of\n    // the triangle rounded to 2 decimal points if the three sides\
    \ form a valid triangle. \n    // Otherwise return -1\n    // Three sides make\
    \ a valid triangle when the sum of any two sides is greater \n    // than the\
    \ third side.\n    // Example:\n    // >>> TriangleArea((3L), (4L), (5L))\n  \
    \  // (6.0f)\n    // >>> TriangleArea((1L), (2L), (10L))\n    // (float)-1L\n\
    \    public static float TriangleArea(long a, long b, long c) {\n        float\
    \ area;\n        float sum;\n        float sum2;\n        float sum3;\n      \
    \  float sum4;\n        float sum5;\n        float sum6;\n        float sum7;\n\
    \        float sum8;\n        float sum9;\n        float sum10;\n        float\
    \ sum11;\n        float sum12;\n        float sum13;\n        float sum14;\n \
    \       float sum15;\n        float sum16;\n        float sum17;\n        float\
    \ sum18;\n        float sum19;\n        float sum20;\n        float sum21;\n \
    \       float sum22;\n        float sum23;\n        float sum24;\n        float\
    \ sum25;\n        float sum26;\n        float sum27;\n        float sum28;\n \
    \       float sum29;\n        float sum30;\n        float sum31;\n        float\
    \ sum32;\n        float sum33;\n        float sum34;\n        float sum35;\n \
    \       float sum36;\n        float sum37;\n        float sum38;\n        float\
    \ sum39;\n        float sum40;\n        float sum41;\n        float sum42;\n \
    \       float sum43;\n        float sum44;\n        float sum45;\n        float\
    \ sum46;\n        float sum47;\n        float sum48;\n        float sum49;\n \
    \       float sum50;\n        float sum51;\n        float sum52;\n        float\
    \ sum53;\n        float sum54;\n        float sum55;\n        float sum56;\n \
    \       float sum57;\n        float sum58;\n        float sum59;\n        float\
    \ sum60;\n        float sum61;\n        float sum62;\n        float sum63;\n \
    \       float sum64;\n        float sum65;\n        float sum66;\n        float\
    \ sum67;\n        float sum68;\n        float sum69;\n        float sum70;\n \
    \       float sum71;\n        float sum72;\n        float sum73;\n        float\
    \ sum74;\n        float sum75;\n        float sum76;\n        float sum77;\n \
    \       float sum78;\n        float sum79;\n        float sum80;\n        float\
    \ sum81;\n        float sum82;\n        float sum83;\n        float sum84;\n \
    \       float sum85;\n        float sum86;\n        float sum87;\n        float\
    \ sum88;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(TriangleArea((3L),\
    \ (4L), (5L)) == (6.0f));\n    Debug.Assert(TriangleArea((1L), (2L), (10L)) ==\
    \ (float)-1L);\n    Debug.Assert(TriangleArea((4L), (8L), (5L)) == (8.18f));\n\
    \    Debug.Assert(TriangleArea((2L), (2L), (2L)) == (1.73f));\n    Debug.Assert(TriangleArea((1L),\
    \ (2L), (3L)) == (float)-1L);\n    Debug.Assert(TriangleArea((10L), (5L), (7L))\
    \ == (16.25f));\n    Debug.Assert(TriangleArea((2L), (6L), (3L)) == (float)-1L);\n\
    \    Debug.Assert(TriangleArea((1L), (1L), (1L)) == (0.43f));\n    Debug.Assert(TriangleArea((2L),\
    \ (2L), (10L)) == (float)-1L);\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6vv18ym2.cs(20,15): warning CS0168: The variable ''area'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(21,15): warning CS0168: The variable ''sum'' is declared but
    never used

    /tmp/tmp6vv18ym2.cs(22,15): warning CS0168: The variable ''sum2'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(23,15): warning CS0168: The variable ''sum3'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(24,15): warning CS0168: The variable ''sum4'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(25,15): warning CS0168: The variable ''sum5'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(26,15): warning CS0168: The variable ''sum6'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(27,15): warning CS0168: The variable ''sum7'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(28,15): warning CS0168: The variable ''sum8'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(29,15): warning CS0168: The variable ''sum9'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(30,15): warning CS0168: The variable ''sum10'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(31,15): warning CS0168: The variable ''sum11'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(32,15): warning CS0168: The variable ''sum12'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(33,15): warning CS0168: The variable ''sum13'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(34,15): warning CS0168: The variable ''sum14'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(35,15): warning CS0168: The variable ''sum15'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(36,15): warning CS0168: The variable ''sum16'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(37,15): warning CS0168: The variable ''sum17'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(38,15): warning CS0168: The variable ''sum18'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(39,15): warning CS0168: The variable ''sum19'' is declared
    but never used

    /tmp/tmp6vv18ym2.cs(40,15): warning CS0168: The variable ''sum20'' is declared
    but never used

    '
  timestamp: 1659804972

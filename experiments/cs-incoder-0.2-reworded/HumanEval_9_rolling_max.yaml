name: HumanEval_9_rolling_max
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // From a given list of integers, generate a list of rolling maximum\
  \ element found until given moment\n    // in the sequence.\n    // >>> RollingMax((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L, (long)3L, (long)4L,\
  \ (long)2L})))\n    // (new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
  \ (long)3L, (long)3L, (long)4L, (long)4L}))\n    public static List<long> RollingMax(List<long>\
  \ numbers) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
  \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
  \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
  \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new\
  \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
  \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
  \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
  \    }\n\n}\n"
completions: ["        List<long> result = new List<long>();\n        long max = 0;\n\
    \        long currentMax = 0;\n        long currentMaxIndex = 0;\n        long\
    \ currentMaxValue = numbers[0];\n        bool first = true;\n        foreach (long\
    \ number in numbers) {\n            if (first) {\n                max = number;\n\
    \                currentMax = number;\n                currentMaxIndex = currentMaxValue;\n\
    \                first = false;\n            } else {\n                if (number\
    \ > currentMax) {\n                    currentMax = number;\n                \
    \    currentMaxIndex = currentMaxValue;\n                }\n            }\n  \
    \      }\n        result.Add(currentMax);\n        currentMaxValue = currentMaxIndex;\n\
    \        first = true;\n        foreach (long number in numbers) {\n         \
    \   if (first) {\n                max = number;\n                currentMax =\
    \ number;\n                currentMaxIndex = currentMaxValue;\n              \
    \  first = false;\n            } else {\n                if (number > currentMax)\
    \ {\n                    currentMax = number;\n                    currentMaxIndex\
    \ = currentMaxValue;\n                }\n            }\n        }\n        result.Add(currentMax);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long max = 0;\n        long currentMax = 0;\n        long currentNumber\
    \ = 0;\n        foreach (long number in numbers) {\n            if (number > currentMax)\
    \ {\n                currentMax = number;\n                currentNumber = number;\n\
    \            }\n            if (number == currentMax) {\n                currentNumber++;\n\
    \            }\n            if (number > max) {\n                max = number;\n\
    \            }\n            result.Add(currentNumber);\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long maxValue\
    \ = numbers.Max();\n        long currentMax = maxValue;\n        long currentMaxIndex\
    \ = 0;\n        long currentMaxIndexValue = 0;\n        long currentMaxIndexValue2\
    \ = 0;\n        long currentMaxIndexValue3 = 0;\n        long currentMaxIndexValue4\
    \ = 0;\n        long currentMaxIndexValue5 = 0;\n        long currentMaxIndexValue6\
    \ = 0;\n        long currentMaxIndexValue7 = 0;\n        long currentMaxIndexValue8\
    \ = 0;\n        long currentMaxIndexValue9 = 0;\n        long currentMaxIndexValue10\
    \ = 0;\n        long currentMaxIndexValue11 = 0;\n        long currentMaxIndexValue12\
    \ = 0;\n        long currentMaxIndexValue13 = 0;\n        long currentMaxIndexValue14\
    \ = 0;\n        long currentMaxIndexValue15 = 0;\n        long currentMaxIndexValue16\
    \ = 0;\n        long currentMaxIndexValue17 = 0;\n        long currentMaxIndexValue18\
    \ = 0;\n        long currentMaxIndexValue19 = 0;\n        long currentMaxIndexValue20\
    \ = 0;\n        long currentMaxIndexValue21 = 0;\n        long currentMaxIndexValue22\
    \ = 0;\n        long currentMaxIndexValue23 = 0;\n        long currentMaxIndexValue24\
    \ = 0;\n        long currentMaxIndexValue25 = 0;\n        long currentMaxIndexValue26\
    \ = 0;\n        long currentMaxIndexValue27 = 0;\n        long currentMaxIndexValue28\
    \ = 0;\n        long currentMaxIndexValue29 = 0;\n        long currentMaxIndexValue30\
    \ = 0;\n        long currentMaxIndexValue31 = 0;\n        long currentMaxIndexValue32\
    \ = 0;\n        long currentMaxIndexValue33 = 0;\n        long currentMaxIndexValue34\
    \ = 0;\n        long currentMaxIndexValue35 = 0;\n        long currentMaxIndexValue36\
    \ = 0;\n        long currentMaxIndexValue37 = 0;\n        long currentMaxIndexValue38\
    \ = 0;\n        long currentMaxIndexValue39 = 0;\n        long currentMaxIndexValue40\
    \ = 0;\n        long currentMaxIndexValue41 = 0;\n        long currentMaxIndexValue42\
    \ = 0;\n        long currentMaxIndexValue43 = 0;\n        long currentMaxIndexValue44\
    \ = 0;\n        long currentMaxIndexValue45 = 0;\n        long currentMaxIndexValue46\
    \ = 0;\n        long currentMaxIndexValue47 = 0;\n        long currentMaxIndexValue48\
    \ = 0;\n        long currentMaxIndexValue49 = 0;\n        long currentMaxIndexValue50\
    \ = 0;\n        long currentMaxIndexValue51 = 0;\n        long currentMaxIndexValue52\
    \ = 0;\n        long currentMaxIndexValue53 = 0;\n        long currentMaxIndexValue54",
  "        List<long> result = new List<long>();\n        long maxValue = numbers.Max();\n\
    \        long currentMax = maxValue;\n        long currentMaxIndex = 0;\n    \
    \    long currentMaxIndexValue = 0;\n        long currentMaxIndexValue2 = 0;\n\
    \        long currentMaxIndexValue3 = 0;\n        long currentMaxIndexValue4 =\
    \ 0;\n        long currentMaxIndexValue5 = 0;\n        long currentMaxIndexValue6\
    \ = 0;\n        long currentMaxIndexValue7 = 0;\n        long currentMaxIndexValue8\
    \ = 0;\n        long currentMaxIndexValue9 = 0;\n        long currentMaxIndexValue10\
    \ = 0;\n        long currentMaxIndexValue11 = 0;\n        long currentMaxIndexValue12\
    \ = 0;\n        long currentMaxIndexValue13 = 0;\n        long currentMaxIndexValue14\
    \ = 0;\n        long currentMaxIndexValue15 = 0;\n        long currentMaxIndexValue16\
    \ = 0;\n        long currentMaxIndexValue17 = 0;\n        long currentMaxIndexValue18\
    \ = 0;\n        long currentMaxIndexValue19 = 0;\n        long currentMaxIndexValue20\
    \ = 0;\n        long currentMaxIndexValue21 = 0;\n        long currentMaxIndexValue22\
    \ = 0;\n        long currentMaxIndexValue23 = 0;\n        long currentMaxIndexValue24\
    \ = 0;\n        long currentMaxIndexValue25 = 0;\n        long currentMaxIndexValue26\
    \ = 0;\n        long currentMaxIndexValue27 = 0;\n        long currentMaxIndexValue28\
    \ = 0;\n        long currentMaxIndexValue29 = 0;\n        long currentMaxIndexValue30\
    \ = 0;\n        long currentMaxIndexValue31 = 0;\n        long currentMaxIndexValue32\
    \ = 0;\n        long currentMaxIndexValue33 = 0;\n        long currentMaxIndexValue34\
    \ = 0;\n        long currentMaxIndexValue35 = 0;\n        long currentMaxIndexValue36\
    \ = 0;\n        long currentMaxIndexValue37 = 0;\n        long currentMaxIndexValue38\
    \ = 0;\n        long currentMaxIndexValue39 = 0;\n        long currentMaxIndexValue40\
    \ = 0;\n        long currentMaxIndexValue41 = 0;\n        long currentMaxIndexValue42\
    \ = 0;\n        long currentMaxIndexValue43 = 0;\n        long currentMaxIndexValue44\
    \ = 0;\n        long currentMaxIndexValue45 = 0;\n        long currentMaxIndexValue46\
    \ = 0;\n        long currentMaxIndexValue47 = 0;\n        long currentMaxIndexValue48\
    \ = 0;\n        long currentMaxIndexValue49 = 0;\n        long currentMaxIndexValue50\
    \ = 0;\n        long currentMaxIndexValue51 = 0;\n        long currentMaxIndexValue52\
    \ = 0;\n        long currentMaxIndexValue53 = 0;\n        long currentMaxIndexValue54",
  "        List<long> result = new List<long>();\n        long maxValue = numbers.Max();\n\
    \        long currentMax = maxValue;\n        long currentSum = 0;\n        long\
    \ currentSumOfSquares = 0;\n        long currentSumOfProducts = 0;\n        long\
    \ currentSumOfProductsOfSquares = 0;\n        long currentSumOfProductsOfProducts\
    \ = 0;\n        long currentSumOfProductsOfProductsOfSquares = 0;\n        long\
    \ currentSumOfProductsOfProductsOfProducts = 0;\n        long currentSumOfProductsOfProductsOfProductsOfSquares\
    \ = 0;\n        long currentSumOfProductsOfProductsOfProductsOfProducts = 0;\n\
    \        long currentSumOfProductsOfProductsOfProductsOfProductsOfSquares = 0;\n\
    \        long currentSumOfProductsOfProductsOfProductsOfProductsOfProducts = 0;\n\
    \        long currentSumOfProductsOfProductsOfProductsOfProductsOfProductsOfSquares\
    \ = 0;\n        long currentSumOfProductsOfProductsOfProductsOfProductsOfProductsOfProducts\
    \ = 0;\n        long currentSumOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfSquares\
    \ = 0;\n        long currentSumOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfProducts\
    \ = 0;\n        long currentSumOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfSquares\
    \ = 0;\n        long currentSumOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfProducts\
    \ = 0;\n        long currentSumOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfSquares\
    \ = 0;\n        long currentSumOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfProducts\
    \ = 0;\n        long currentSumOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfSquares\
    \ = 0;\n        long currentSumOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfProducts\
    \ = 0;\n        long currentSumOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfProductsOfSquares\
    \ = 0;\n        long currentSumOfProductsOfProductsOfProduct", "        List<long>\
    \ result = new List<long>();\n        long max = 0;\n        long current = numbers.First();\n\
    \        long sum = 0;\n        foreach (long n in numbers) {\n            sum\
    \ += n;\n            if (sum > max) {\n                max = sum;\n          \
    \  }\n            if (sum == current) {\n                result.Add(n);\n    \
    \        }\n            current = n;\n        }\n        return result;", "  \
    \      List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ currentMax = 0;\n        long currentMaxIndex = 0;\n        foreach (long number\
    \ in numbers) {\n            currentMax = number;\n            currentMaxIndex\
    \ = 0;\n            while (currentMaxIndex < result.Count && currentMax < result[currentMaxIndex])\
    \ {\n                currentMax = result[currentMaxIndex];\n                currentMaxIndex++;\n\
    \            }\n            result.Insert(currentMaxIndex, number);\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long maxValue = numbers.Max();\n        long currentMax = maxValue;\n  \
    \      long currentSum = 0;\n        long currentCount = 0;\n        foreach (long\
    \ number in numbers) {\n            currentSum += number;\n            if (currentSum\
    \ > currentMax) {\n                currentMax = currentSum;\n                currentCount\
    \ = 1;\n            } else if (currentSum == currentMax) {\n                currentCount++;\n\
    \            }\n            result.Add(currentMax);\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long max =\
    \ 0;\n        long currentMax = 0;\n        long currentNumber = 0;\n        foreach\
    \ (long number in numbers) {\n            currentNumber = number;\n          \
    \  currentMax = number;\n            while (currentNumber != 0) {\n          \
    \      currentMax = Math.Max(currentMax, currentNumber);\n                currentNumber\
    \ = currentNumber / 2;\n            }\n            result.Add(currentMax);\n \
    \       }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long maxValue = numbers.Max();\n        long currentMaxValue = maxValue;\n\
    \        long currentMaxIndex = -1;\n        long currentMaxIndexValue = numbers.Max();\n\
    \        long currentMaxIndexValue = numbers.Max();\n        long currentMaxIndexValue\
    \ = numbers.Max();\n        long currentMaxIndexValue = numbers.Max();\n     \
    \   long currentMaxIndexValue = numbers.Max();\n        long currentMaxIndexValue\
    \ = numbers.Max();\n        long currentMaxIndexValue = numbers.Max();\n     \
    \   long currentMaxIndexValue = numbers.Max();\n        long currentMaxIndexValue\
    \ = numbers.Max();\n        long currentMaxIndexValue = numbers.Max();\n     \
    \   long currentMaxIndexValue = numbers.Max();\n        long currentMaxIndexValue\
    \ = numbers.Max();\n        long currentMaxIndexValue = numbers.Max();\n     \
    \   long currentMaxIndexValue = numbers.Max();\n        long currentMaxIndexValue\
    \ = numbers.Max();\n        long currentMaxIndexValue = numbers.Max();\n     \
    \   long currentMaxIndexValue = numbers.Max();\n        long currentMaxIndexValue\
    \ = numbers.Max();\n        long currentMaxIndexValue = numbers.Max();\n     \
    \   long currentMaxIndexValue = numbers.Max();\n        long currentMaxIndexValue\
    \ = numbers.Max();\n        long currentMaxIndexValue = numbers.Max();\n     \
    \   long currentMaxIndexValue = numbers.Max();\n        long currentMaxIndexValue\
    \ = numbers.Max();\n        long currentMaxIndexValue = numbers.Max();\n     \
    \   long currentMaxIndexValue = numbers.Max();\n        long currentMaxIndexValue\
    \ = numbers.Max();\n        long currentMaxIndexValue = numbers.Max();\n     \
    \   long currentMaxIndexValue = numbers.Max();\n        long currentMaxIndexValue\
    \ = numbers.Max();\n        long currentMaxIndexValue = numbers.Max();\n     \
    \   long currentMaxIndexValue = numbers.Max();\n        long currentMaxIndexValue\
    \ = numbers.Max();\n        long currentMaxIndexValue = numbers.Max();\n     \
    \   long currentMaxIndexValue = numbers.Max();\n        long currentMaxIndexValue\
    \ = numbers.Max();\n        long currentMaxIndexValue = numbers.Max();\n     \
    \   long currentMaxIndexValue = numbers.Max();\n        long currentMaxIndexValue\
    \ = numbers.Max();\n        long currentMaxIndexValue = numbers.Max();\n     \
    \   long currentMaxIndexValue = numbers.Max();\n        long currentMaxIndexValue\
    \ = numbers.Max();\n        long currentMaxIndexValue = numbers.Max();\n     \
    \   long currentMaxIndexValue = numbers.Max();\n        long currentMaxIndexValue\
    \ = numbers.Max();\n        long currentMaxIndexValue = numbers.Max();\n     \
    \   long currentMaxIndexValue = numbers.Max();\n        long currentMaxIndexValue\
    \ = numbers.Max();", "        List<long> result = new List<long>();\n        long\
    \ maxValue = numbers.Max();\n        long currentMax = maxValue;\n        long\
    \ currentMaxIndex = 0;\n        long currentMaxIndexValue = 0;\n        long currentMaxIndexValue2\
    \ = 0;\n        long currentMaxIndexValue3 = 0;\n        long currentMaxIndexValue4\
    \ = 0;\n        long currentMaxIndexValue5 = 0;\n        long currentMaxIndexValue6\
    \ = 0;\n        long currentMaxIndexValue7 = 0;\n        long currentMaxIndexValue8\
    \ = 0;\n        long currentMaxIndexValue9 = 0;\n        long currentMaxIndexValue10\
    \ = 0;\n        long currentMaxIndexValue11 = 0;\n        long currentMaxIndexValue12\
    \ = 0;\n        long currentMaxIndexValue13 = 0;\n        long currentMaxIndexValue14\
    \ = 0;\n        long currentMaxIndexValue15 = 0;\n        long currentMaxIndexValue16\
    \ = 0;\n        long currentMaxIndexValue17 = 0;\n        long currentMaxIndexValue18\
    \ = 0;\n        long currentMaxIndexValue19 = 0;\n        long currentMaxIndexValue20\
    \ = 0;\n        long currentMaxIndexValue21 = 0;\n        long currentMaxIndexValue22\
    \ = 0;\n        long currentMaxIndexValue23 = 0;\n        long currentMaxIndexValue24\
    \ = 0;\n        long currentMaxIndexValue25 = 0;\n        long currentMaxIndexValue26\
    \ = 0;\n        long currentMaxIndexValue27 = 0;\n        long currentMaxIndexValue28\
    \ = 0;\n        long currentMaxIndexValue29 = 0;\n        long currentMaxIndexValue30\
    \ = 0;\n        long currentMaxIndexValue31 = 0;\n        long currentMaxIndexValue32\
    \ = 0;\n        long currentMaxIndexValue33 = 0;\n        long currentMaxIndexValue34\
    \ = 0;\n        long currentMaxIndexValue35 = 0;\n        long currentMaxIndexValue36\
    \ = 0;\n        long currentMaxIndexValue37 = 0;\n        long currentMaxIndexValue38\
    \ = 0;\n        long currentMaxIndexValue39 = 0;\n        long currentMaxIndexValue40\
    \ = 0;\n        long currentMaxIndexValue41 = 0;\n        long currentMaxIndexValue42\
    \ = 0;\n        long currentMaxIndexValue43 = 0;\n        long currentMaxIndexValue44\
    \ = 0;\n        long currentMaxIndexValue45 = 0;\n        long currentMaxIndexValue46\
    \ = 0;\n        long currentMaxIndexValue47 = 0;\n        long currentMaxIndexValue48\
    \ = 0;\n        long currentMaxIndexValue49 = 0;\n        long currentMaxIndexValue50\
    \ = 0;\n        long currentMaxIndexValue51 = 0;\n        long currentMaxIndexValue52\
    \ = 0;\n        long currentMaxIndexValue53 = 0;\n        long currentMaxIndexValue54",
  "        List<long> result = new List<long>();\n        long maxValue = numbers.Max();\n\
    \        long currentMax = maxValue;\n        long currentMaxIndex = 0;\n    \
    \    long currentMaxIndexValue = 0;\n        long currentMaxIndexValue2 = 0;\n\
    \        long currentMaxIndexValue3 = 0;\n        long currentMaxIndexValue4 =\
    \ 0;\n        long currentMaxIndexValue5 = 0;\n        long currentMaxIndexValue6\
    \ = 0;\n        long currentMaxIndexValue7 = 0;\n        long currentMaxIndexValue8\
    \ = 0;\n        long currentMaxIndexValue9 = 0;\n        long currentMaxIndexValue10\
    \ = 0;\n        long currentMaxIndexValue11 = 0;\n        long currentMaxIndexValue12\
    \ = 0;\n        long currentMaxIndexValue13 = 0;\n        long currentMaxIndexValue14\
    \ = 0;\n        long currentMaxIndexValue15 = 0;\n        long currentMaxIndexValue16\
    \ = 0;\n        long currentMaxIndexValue17 = 0;\n        long currentMaxIndexValue18\
    \ = 0;\n        long currentMaxIndexValue19 = 0;\n        long currentMaxIndexValue20\
    \ = 0;\n        long currentMaxIndexValue21 = 0;\n        long currentMaxIndexValue22\
    \ = 0;\n        long currentMaxIndexValue23 = 0;\n        long currentMaxIndexValue24\
    \ = 0;\n        long currentMaxIndexValue25 = 0;\n        long currentMaxIndexValue26\
    \ = 0;\n        long currentMaxIndexValue27 = 0;\n        long currentMaxIndexValue28\
    \ = 0;\n        long currentMaxIndexValue29 = 0;\n        long currentMaxIndexValue30\
    \ = 0;\n        long currentMaxIndexValue31 = 0;\n        long currentMaxIndexValue32\
    \ = 0;\n        long currentMaxIndexValue33 = 0;\n        long currentMaxIndexValue34\
    \ = 0;\n        long currentMaxIndexValue35 = 0;\n        long currentMaxIndexValue36\
    \ = 0;\n        long currentMaxIndexValue37 = 0;\n        long currentMaxIndexValue38\
    \ = 0;\n        long currentMaxIndexValue39 = 0;\n        long currentMaxIndexValue40\
    \ = 0;\n        long currentMaxIndexValue41 = 0;\n        long currentMaxIndexValue42\
    \ = 0;\n        long currentMaxIndexValue43 = 0;\n        long currentMaxIndexValue44\
    \ = 0;\n        long currentMaxIndexValue45 = 0;\n        long currentMaxIndexValue46\
    \ = 0;\n        long currentMaxIndexValue47 = 0;\n        long currentMaxIndexValue48\
    \ = 0;\n        long currentMaxIndexValue49 = 0;\n        long currentMaxIndexValue50\
    \ = 0;\n        long currentMaxIndexValue51 = 0;\n        long currentMaxIndexValue52\
    \ = 0;\n        long currentMaxIndexValue53 = 0;\n        long currentMaxIndexValue54",
  "        List<long> result = new List<long>();\n        long maxValue = numbers.Max();\n\
    \        long currentMaxValue = maxValue;\n        long currentMaxIndex = 0;\n\
    \        long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n   \
    \     long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n      \
    \  long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n        long\
    \ currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n        long currentMaxIndexValue\
    \ = numbers.ElementAt(currentMaxIndex);\n        long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n\
    \        long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n   \
    \     long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n      \
    \  long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n        long\
    \ currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n        long currentMaxIndexValue\
    \ = numbers.ElementAt(currentMaxIndex);\n        long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n\
    \        long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n   \
    \     long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n      \
    \  long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n        long\
    \ currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n        long currentMaxIndexValue\
    \ = numbers.ElementAt(currentMaxIndex);\n        long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n\
    \        long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n   \
    \     long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n      \
    \  long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n        long\
    \ currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n        long currentMaxIndexValue\
    \ = numbers.ElementAt(currentMaxIndex);\n        long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n\
    \        long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n   \
    \     long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n      \
    \  long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n        long\
    \ currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n        long currentMaxIndexValue\
    \ = numbers.ElementAt(currentMaxIndex);\n        long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n\
    \        long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n   \
    \     long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n      \
    \  long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n        long\
    \ currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n        long currentMaxIndexValue\
    \ = numbers.ElementAt(currentMaxIndex);\n        long currentMaxIndexValue = numbers.ElementAt(currentMaxIndex);\n\
    \        long currentMaxIndexValue = numbers.ElementAt(currentMax", "        List<long>\
    \ result = new List<long>();\n        long max = 0;\n        long currentMax =\
    \ 0;\n        long currentNumber = numbers.First();\n        foreach (long number\
    \ in numbers) {\n            if (number > currentNumber) {\n                currentMax\
    \ = currentNumber;\n                currentNumber = number;\n            }\n \
    \           else if (number == currentNumber) {\n                currentMax =\
    \ currentNumber;\n            }\n            else if (number < currentNumber)\
    \ {\n                currentMax = currentNumber;\n                currentNumber\
    \ = number;\n            }\n            else {\n                currentMax = currentNumber;\n\
    \                currentNumber = number;\n            }\n            result.Add(currentMax);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = 0;\n        long currentMax = 0;\n        long currentSum\
    \ = 0;\n        long sum = 0;\n        long count = 0;\n        foreach (long\
    \ number in numbers) {\n            currentSum += number;\n            if (currentSum\
    \ > max) {\n                max = currentSum;\n                currentMax = number;\n\
    \            }\n            sum += number;\n            count++;\n        }\n\
    \        if (count > 0) {\n            currentMax = currentSum / count;\n    \
    \        result.Add(currentMax);\n        }\n        return result;", "      \
    \  List<long> result = new List<long>();\n        long max = 0;\n        long\
    \ currentMax = numbers.First();\n        foreach (long number in numbers) {\n\
    \            if (number > currentMax) {\n                result.Add(currentMax);\n\
    \                max = currentMax;\n                currentMax = number;\n   \
    \         }\n            else {\n                max = Math.Max(max, number);\n\
    \                currentMax = Math.Max(currentMax, number);\n            }\n \
    \       }\n        result.Add(currentMax);\n        return result;", "       \
    \ List<long> result = new List<long>();\n        long max = 0;\n        long currentMax\
    \ = 0;\n        long currentSum = 0;\n        long sum = 0;\n        long currentSum2\
    \ = 0;\n        long currentSum3 = 0;\n        long currentSum4 = 0;\n       \
    \ long currentSum5 = 0;\n        long currentSum6 = 0;\n        long currentSum7\
    \ = 0;\n        long currentSum8 = 0;\n        long currentSum9 = 0;\n       \
    \ long currentSum10 = 0;\n        long currentSum11 = 0;\n        long currentSum12\
    \ = 0;\n        long currentSum13 = 0;\n        long currentSum14 = 0;\n     \
    \   long currentSum15 = 0;\n        long currentSum16 = 0;\n        long currentSum17\
    \ = 0;\n        long currentSum18 = 0;\n        long currentSum19 = 0;\n     \
    \   long currentSum20 = 0;\n        long currentSum21 = 0;\n        long currentSum22\
    \ = 0;\n        long currentSum23 = 0;\n        long currentSum24 = 0;\n     \
    \   long currentSum25 = 0;\n        long currentSum26 = 0;\n        long currentSum27\
    \ = 0;\n        long currentSum28 = 0;\n        long currentSum29 = 0;\n     \
    \   long currentSum30 = 0;\n        long currentSum31 = 0;\n        long currentSum32\
    \ = 0;\n        long currentSum33 = 0;\n        long currentSum34 = 0;\n     \
    \   long currentSum35 = 0;\n        long currentSum36 = 0;\n        long currentSum37\
    \ = 0;\n        long currentSum38 = 0;\n        long currentSum39 = 0;\n     \
    \   long currentSum40 = 0;\n        long currentSum41 = 0;\n        long currentSum42\
    \ = 0;\n        long currentSum43 = 0;\n        long currentSum44 = 0;\n     \
    \   long currentSum45 = 0;\n        long currentSum46 = 0;\n        long currentSum47\
    \ = 0;\n        long currentSum48 = 0;\n        long currentSum49 = 0;\n     \
    \   long currentSum50 = 0;\n        long currentSum51 = 0;\n        long currentSum52\
    \ = 0;\n        long currentSum53 = 0;\n        long currentSum54 = 0;\n     \
    \   long currentSum55 = 0;\n        long currentSum56 = 0;\n        long currentSum57\
    \ = 0;\n        long currentSum58 = 0;\n        long currentSum59 = 0;\n     \
    \   long currentSum60 = 0;\n        long currentSum61 = 0;\n        long currentSum62\
    \ = 0;\n        long currentSum63 = 0;\n        long currentSum64 = 0;\n     \
    \   long currentSum65 = 0;\n        long currentSum66 = 0;\n        long currentSum67\
    \ = 0;\n        long currentSum68 = 0;\n        long currentSum69 = 0;\n     \
    \   long currentSum70 = 0;\n        ", "        List<long> result = new List<long>();\n\
    \        long maxValue = numbers.Max();\n        long currentMax = maxValue;\n\
    \        long currentMaxIndex = -1;\n        long currentMaxValue = numbers.ElementAt(0);\n\
    \        long currentMaxIndexValue = numbers.ElementAt(0);\n        bool isMax\
    \ = true;\n        bool isMaxIndex = true;\n        bool isMaxValue = true;\n\
    \        bool isMaxIndexValue = true;\n        bool isMaxIndexValueAndMaxValue\
    \ = true;\n        bool isMaxIndexValueAndMaxValueAndMaxValue = true;\n      \
    \  bool isMaxIndexValueAndMaxValueAndMaxValueAndMaxValue = true;\n        bool\
    \ isMaxIndexValueAndMaxValueAndMaxValueAndMaxValueAndMaxValue = true;\n      \
    \  bool isMaxIndexValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValue\
    \ = true;\n        bool isMaxIndexValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValue\
    \ = true;\n        bool isMaxIndexValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValue\
    \ = true;\n        bool isMaxIndexValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValue\
    \ = true;\n        bool isMaxIndexValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValue\
    \ = true;\n        bool isMaxIndexValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValue\
    \ = true;\n        bool isMaxIndexValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValue\
    \ = true;\n        bool isMaxIndexValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValue\
    \ = true;\n        bool isMaxIndexValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValue\
    \ = true;\n        bool isMaxIndexValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValueAndMaxValue\
    \ = true;\n", "        List<long> result = new List<long>();\n        long max\
    \ = 0;\n        long currentMax = 0;\n        long currentNumber = 0;\n      \
    \  foreach (long number in numbers) {\n            if (number > currentMax) {\n\
    \                currentMax = number;\n                currentNumber = number;\n\
    \            }\n            else if (number == currentMax) {\n               \
    \ currentNumber++;\n            }\n            else {\n                result.Add(currentMax);\n\
    \                currentMax = number;\n                currentNumber = number;\n\
    \            }\n        }\n        result.Add(currentMax);\n        return result;",
  "        List<long> result = new List<long>();\n        long maxValue = numbers.Max();\n\
    \        long currentMax = maxValue;\n        long currentMaxIndex = 0;\n    \
    \    long currentMaxIndexInResult = 0;\n        long currentMaxIndexInResultInResult\
    \ = 0;\n        long currentMaxIndexInResultInResultInResult = 0;\n        long\
    \ currentMaxIndexInResultInResultInResultInResult = 0;\n        long currentMaxIndexInResultInResultInResultInResultInResult\
    \ = 0;\n        long currentMaxIndexInResultInResultInResultInResultInResultInResult\
    \ = 0;\n        long currentMaxIndexInResultInResultInResultInResultInResultInResultInResult\
    \ = 0;\n        long currentMaxIndexInResultInResultInResultInResultInResultInResultInResultInResult\
    \ = 0;\n        long currentMaxIndexInResultInResultInResultInResultInResultInResultInResultInResult\
    \ = 0;\n        long currentMaxIndexInResultInResultInResultInResultInResultInResultInResultInResult\
    \ = 0;\n        long currentMaxIndexInResultInResultInResultInResultInResultInResultInResultInResultInResult\
    \ = 0;\n        long currentMaxIndexInResultInResultInResultInResultInResultInResultInResultInResultInResult\
    \ = 0;\n        long currentMaxIndexInResultInResultInResultInResultInResultInResultInResultInResultInResult\
    \ = 0;\n        long currentMaxIndexInResultInResultInResultInResultInResultInResultInResultInResultInResult\
    \ = 0;\n        long currentMaxIndexInResultInResultInResultInResultInResultInResultInResultInResultInResult\
    \ = 0;\n        long currentMaxIndexInResultInResultInResultInResultInResultInResultInResultInResultInResult\
    \ = 0;\n        long currentMaxIndexInResultInResultInResultInResultInResultInResultInResultInResultInResult\
    \ = 0;\n        long currentMaxIndexInResultInResultInResultInResultInResultInResultInResultInResultInResult\
    \ = 0;\n        long currentMaxIndexInResultInResultInResultInResultInResultInResultInResultInResultInResult\
    \ = 0;\n        long currentMaxIndexInResultInResultInResultInResultInResultInResultInResultInResultInResult\
    \ = 0;\n        long currentMaxIndexInResultInResultInResultInResultInResultInResultInResultInResultInResult\
    \ = 0;\n        long currentMaxIndexInResultInResultInResultInResultInResultInResultInResultInResultInResult\
    \ = 0;\n        long currentMaxIndex"]
stop_tokens:
- "\n    }\n"

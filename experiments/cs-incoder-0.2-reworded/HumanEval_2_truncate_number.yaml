name: HumanEval_2_truncate_number
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given a positive floating point number, it can be decomposed\
  \ into\n    // and integer part (largest integer smaller than given number) and\
  \ decimals\n    // (leftover part always smaller than 1).\n    // Return the decimal\
  \ part of the number.\n    // >>> TruncateNumber((3.5f))\n    // (0.5f)\n    public\
  \ static float TruncateNumber(float number) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(TruncateNumber((3.5f))\
  \ == (0.5f));\n    Debug.Assert(TruncateNumber((1.25f)) == (0.25f));\n    Debug.Assert(TruncateNumber((123.0f))\
  \ == (0.0f));\n    }\n\n}\n"
completions: ["        float truncatedNumber = number;\n        float integerPart\
    \ = 0;\n        float decimalPart = 0;\n        float decimalMultiplier = 1;\n\
    \        while (truncatedNumber != 0) {\n            integerPart += truncatedNumber\
    \ % 10;\n            truncatedNumber = truncatedNumber / 10;\n        }\n    \
    \    while (truncatedNumber != 0) {\n            decimalPart += truncatedNumber\
    \ * decimalMultiplier;\n            truncatedNumber = truncatedNumber / 10;\n\
    \            decimalMultiplier *= 10;\n        }\n        return decimalPart;",
  "        float integerPart = number;\n        float decimalPart = 1;\n        while\
    \ (decimalPart < 1) {\n            integerPart *= 10;\n            decimalPart\
    \ *= 10;\n        }\n        return integerPart;", "        float result = number;\n\
    \        float integerPart = 0;\n        float decimalPart = 0;\n        while\
    \ (result != 0) {\n            result /= 10;\n            integerPart += result;\n\
    \        }\n        while (result != 1) {\n            result *= 10;\n       \
    \     decimalPart += result;\n        }\n        return decimalPart;", "     \
    \   float truncatedNumber = number;\n        float integerPart = 0;\n        float\
    \ decimalPart = 0;\n        while (truncatedNumber != 0) {\n            truncatedNumber\
    \ = truncatedNumber / 10;\n            integerPart++;\n        }\n        while\
    \ (truncatedNumber != 0) {\n            truncatedNumber = truncatedNumber * 10;\n\
    \            decimalPart++;\n        }\n        return (decimalPart / integerPart);",
  "        float truncatedNumber = number;\n        int integerPart = (int)truncatedNumber;\n\
    \        float decimalPart = truncatedNumber - integerPart;\n        return decimalPart;",
  "        float integerPart = number;\n        float decimalPart = number - integerPart;\n\
    \        return decimalPart;", "        float truncatedNumber = number;\n    \
    \    int integerPart = (int)truncatedNumber;\n        float decimalPart = truncatedNumber\
    \ - integerPart;\n        return decimalPart;", "        float integerPart = number;\n\
    \        float decimalPart = number - integerPart;\n        return decimalPart;",
  "        float intPart;\n        float decimalPart;\n        float temp;\n     \
    \   float temp2;\n        float temp3;\n        float temp4;\n        float temp5;\n\
    \        float temp6;\n        float temp7;\n        float temp8;\n        float\
    \ temp9;\n        float temp10;\n        float temp11;\n        float temp12;\n\
    \        float temp13;\n        float temp14;\n        float temp15;\n       \
    \ float temp16;\n        float temp17;\n        float temp18;\n        float temp19;\n\
    \        float temp20;\n        float temp21;\n        float temp22;\n       \
    \ float temp23;\n        float temp24;\n        float temp25;\n        float temp26;\n\
    \        float temp27;\n        float temp28;\n        float temp29;\n       \
    \ float temp30;\n        float temp31;\n        float temp32;\n        float temp33;\n\
    \        float temp34;\n        float temp35;\n        float temp36;\n       \
    \ float temp37;\n        float temp38;\n        float temp39;\n        float temp40;\n\
    \        float temp41;\n        float temp42;\n        float temp43;\n       \
    \ float temp44;\n        float temp45;\n        float temp46;\n        float temp47;\n\
    \        float temp48;\n        float temp49;\n        float temp50;\n       \
    \ float temp51;\n        float temp52;\n        float temp53;\n        float temp54;\n\
    \        float temp55;\n        float temp56;\n        float temp57;\n       \
    \ float temp58;\n        float temp59;\n        float temp60;\n        float temp61;\n\
    \        float temp62;\n        float temp63;\n        float temp64;\n       \
    \ float temp65;\n        float temp66;\n        float temp67;\n        float temp68;\n\
    \        float temp69;\n        float temp70;\n        float temp71;\n       \
    \ float temp72;\n        float temp73;\n        float temp74;\n        float temp75;\n\
    \        float temp76;\n        float temp77;\n        float temp78;\n       \
    \ float temp79;\n        float temp80;\n        float temp81;\n        float temp82;\n\
    \        float temp83;\n        float temp84;\n        float temp85;\n       \
    \ float temp86;\n        float temp87", "        float truncatedNumber = number;\n\
    \        float integerPart = 0;\n        float decimalPart = 0;\n        while\
    \ (truncatedNumber != 0) {\n            truncatedNumber = truncatedNumber / 10;\n\
    \            integerPart++;\n        }\n        truncatedNumber = truncatedNumber\
    \ / 10;\n        decimalPart = truncatedNumber;\n        return decimalPart;",
  "        float truncatedNumber = number;\n        float integerPart = truncatedNumber;\n\
    \        while (integerPart > 1) {\n            truncatedNumber = truncatedNumber\
    \ / 10;\n            integerPart = truncatedNumber;\n        }\n        return\
    \ truncatedNumber;", "        float truncatedNumber = number;\n        float integerPart;\n\
    \        float decimalPart;\n        float temp;\n        float temp2;\n     \
    \   float temp3;\n        float temp4;\n        float temp5;\n        float temp6;\n\
    \        float temp7;\n        float temp8;\n        float temp9;\n        float\
    \ temp10;\n        float temp11;\n        float temp12;\n        float temp13;\n\
    \        float temp14;\n        float temp15;\n        float temp16;\n       \
    \ float temp17;\n        float temp18;\n        float temp19;\n        float temp20;\n\
    \        float temp21;\n        float temp22;\n        float temp23;\n       \
    \ float temp24;\n        float temp25;\n        float temp26;\n        float temp27;\n\
    \        float temp28;\n        float temp29;\n        float temp30;\n       \
    \ float temp31;\n        float temp32;\n        float temp33;\n        float temp34;\n\
    \        float temp35;\n        float temp36;\n        float temp37;\n       \
    \ float temp38;\n        float temp39;\n        float temp40;\n        float temp41;\n\
    \        float temp42;\n        float temp43;\n        float temp44;\n       \
    \ float temp45;\n        float temp46;\n        float temp47;\n        float temp48;\n\
    \        float temp49;\n        float temp50;\n        float temp51;\n       \
    \ float temp52;\n        float temp53;\n        float temp54;\n        float temp55;\n\
    \        float temp56;\n        float temp57;\n        float temp58;\n       \
    \ float temp59;\n        float temp60;\n        float temp61;\n        float temp62;\n\
    \        float temp63;\n        float temp64;\n        float temp65;\n       \
    \ float temp66;\n        float temp67;\n        float temp68;\n        float temp69;\n\
    \        float temp70;\n        float temp71;\n        float temp72;\n       \
    \ float temp73;\n        float temp74;\n        float temp75;\n        float temp76;\n\
    \        float temp77;\n        float temp78;\n        float temp79;\n       \
    \ float temp80;\n        float temp81;\n        float temp82;\n        float temp83;\n\
    \        float temp84;\n        float temp85;\n        float temp", "        float\
    \ integerPart = number;\n        float decimalPart = number - integerPart;\n \
    \       return decimalPart;", "        float integerPart = number;\n        float\
    \ decimalPart = number - integerPart;\n        return decimalPart;", "       \
    \ float integerPart = number;\n        float decimalPart = number - integerPart;\n\
    \        if (decimalPart > 1) {\n            integerPart += 1;\n            decimalPart\
    \ -= 1;\n        }\n        return integerPart;", "        float fraction = number\
    \ - Math.Floor(number);\n        return fraction;", "        float integerPart\
    \ = (float)Math.Truncate(number);\n        float decimalPart = number - integerPart;\n\
    \        return decimalPart;", "        float truncated = number;\n        float\
    \ remainder;\n        do {\n            truncated = truncated * 10;\n        \
    \    remainder = truncated % 1;\n            truncated = truncated / 1;\n    \
    \    } while (remainder != 0);\n        return truncated;", "        float intPart\
    \ = number;\n        float decimalPart = number - intPart;\n        return decimalPart;",
  "        float truncatedNumber = number;\n        float integerPart = truncatedNumber\
    \ - TruncateNumber(truncatedNumber);\n        float decimalPart = truncatedNumber\
    \ - TruncateNumber(truncatedNumber);\n        return decimalPart;"]
stop_tokens:
- "\n    }\n"

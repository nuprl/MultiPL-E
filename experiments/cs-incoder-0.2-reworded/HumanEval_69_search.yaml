name: HumanEval_69_search
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // You are given a non-empty list of positive integers. Return\
  \ the greatest integer that is greater than \n    // zero, and has a frequency greater\
  \ than or equal to the value of the integer itself. \n    // The frequency of an\
  \ integer is the number of times it appears in the list.\n    // If no such a value\
  \ exist, return -1.\n    // Examples:\n    // >>> Search((new List<long>(new long[]{(long)4L,\
  \ (long)1L, (long)2L, (long)2L, (long)3L, (long)1L})))\n    // (2L)\n    // >>>\
  \ Search((new List<long>(new long[]{(long)1L, (long)2L, (long)2L, (long)3L, (long)3L,\
  \ (long)3L, (long)4L, (long)4L, (long)4L})))\n    // (3L)\n    // >>> Search((new\
  \ List<long>(new long[]{(long)5L, (long)5L, (long)4L, (long)4L, (long)4L})))\n \
  \   // (-1L)\n    public static long Search(List<long> lst) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)5L, (long)5L, (long)5L, (long)5L, (long)1L}))) ==\
  \ (1L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)4L, (long)1L,\
  \ (long)4L, (long)1L, (long)4L, (long)4L}))) == (4L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)3L, (long)3L}))) == (-1L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)8L, (long)8L, (long)8L, (long)8L, (long)8L, (long)8L,\
  \ (long)8L, (long)8L}))) == (8L));\n    Debug.Assert(Search((new List<long>(new\
  \ long[]{(long)2L, (long)3L, (long)3L, (long)2L, (long)2L}))) == (2L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)2L, (long)7L, (long)8L, (long)8L, (long)4L, (long)8L,\
  \ (long)7L, (long)3L, (long)9L, (long)6L, (long)5L, (long)10L, (long)4L, (long)3L,\
  \ (long)6L, (long)7L, (long)1L, (long)7L, (long)4L, (long)10L, (long)8L, (long)1L})))\
  \ == (1L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)3L, (long)2L,\
  \ (long)8L, (long)2L}))) == (2L));\n    Debug.Assert(Search((new List<long>(new\
  \ long[]{(long)6L, (long)7L, (long)1L, (long)8L, (long)8L, (long)10L, (long)5L,\
  \ (long)8L, (long)5L, (long)3L, (long)10L}))) == (1L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)8L, (long)8L, (long)3L, (long)6L, (long)5L, (long)6L,\
  \ (long)4L}))) == (-1L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)6L,\
  \ (long)9L, (long)6L, (long)7L, (long)1L, (long)4L, (long)7L, (long)1L, (long)8L,\
  \ (long)8L, (long)9L, (long)8L, (long)10L, (long)10L, (long)8L, (long)4L, (long)10L,\
  \ (long)4L, (long)10L, (long)1L, (long)2L, (long)9L, (long)5L, (long)7L, (long)9L})))\
  \ == (1L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)1L, (long)9L,\
  \ (long)10L, (long)1L, (long)3L}))) == (1L));\n    Debug.Assert(Search((new List<long>(new\
  \ long[]{(long)6L, (long)9L, (long)7L, (long)5L, (long)8L, (long)7L, (long)5L, (long)3L,\
  \ (long)7L, (long)5L, (long)10L, (long)10L, (long)3L, (long)6L, (long)10L, (long)2L,\
  \ (long)8L, (long)6L, (long)5L, (long)4L, (long)9L, (long)5L, (long)3L, (long)10L})))\
  \ == (5L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)1L}))) ==\
  \ (1L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)8L, (long)8L,\
  \ (long)10L, (long)6L, (long)4L, (long)3L, (long)5L, (long)8L, (long)2L, (long)4L,\
  \ (long)2L, (long)8L, (long)4L, (long)6L, (long)10L, (long)4L, (long)2L, (long)1L,\
  \ (long)10L, (long)2L, (long)1L, (long)1L, (long)5L}))) == (4L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)2L, (long)10L, (long)4L, (long)8L, (long)2L, (long)10L,\
  \ (long)5L, (long)1L, (long)2L, (long)9L, (long)5L, (long)5L, (long)6L, (long)3L,\
  \ (long)8L, (long)6L, (long)4L, (long)10L}))) == (2L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)1L, (long)6L, (long)10L, (long)1L, (long)6L, (long)9L,\
  \ (long)10L, (long)8L, (long)6L, (long)8L, (long)7L, (long)3L}))) == (1L));\n  \
  \  Debug.Assert(Search((new List<long>(new long[]{(long)9L, (long)2L, (long)4L,\
  \ (long)1L, (long)5L, (long)1L, (long)5L, (long)2L, (long)5L, (long)7L, (long)7L,\
  \ (long)7L, (long)3L, (long)10L, (long)1L, (long)5L, (long)4L, (long)2L, (long)8L,\
  \ (long)4L, (long)1L, (long)9L, (long)10L, (long)7L, (long)10L, (long)2L, (long)8L,\
  \ (long)10L, (long)9L, (long)4L}))) == (4L));\n    Debug.Assert(Search((new List<long>(new\
  \ long[]{(long)2L, (long)6L, (long)4L, (long)2L, (long)8L, (long)7L, (long)5L, (long)6L,\
  \ (long)4L, (long)10L, (long)4L, (long)6L, (long)3L, (long)7L, (long)8L, (long)8L,\
  \ (long)3L, (long)1L, (long)4L, (long)2L, (long)2L, (long)10L, (long)7L}))) == (4L));\n\
  \    Debug.Assert(Search((new List<long>(new long[]{(long)9L, (long)8L, (long)6L,\
  \ (long)10L, (long)2L, (long)6L, (long)10L, (long)2L, (long)7L, (long)8L, (long)10L,\
  \ (long)3L, (long)8L, (long)2L, (long)6L, (long)2L, (long)3L, (long)1L}))) == (2L));\n\
  \    Debug.Assert(Search((new List<long>(new long[]{(long)5L, (long)5L, (long)3L,\
  \ (long)9L, (long)5L, (long)6L, (long)3L, (long)2L, (long)8L, (long)5L, (long)6L,\
  \ (long)10L, (long)10L, (long)6L, (long)8L, (long)4L, (long)10L, (long)7L, (long)7L,\
  \ (long)10L, (long)8L}))) == (-1L));\n    Debug.Assert(Search((new List<long>(new\
  \ long[]{(long)10L}))) == (-1L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)9L,\
  \ (long)7L, (long)7L, (long)2L, (long)4L, (long)7L, (long)2L, (long)10L, (long)9L,\
  \ (long)7L, (long)5L, (long)7L, (long)2L}))) == (2L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)5L, (long)4L, (long)10L, (long)2L, (long)1L, (long)1L,\
  \ (long)10L, (long)3L, (long)6L, (long)1L, (long)8L}))) == (1L));\n    Debug.Assert(Search((new\
  \ List<long>(new long[]{(long)7L, (long)9L, (long)9L, (long)9L, (long)3L, (long)4L,\
  \ (long)1L, (long)5L, (long)9L, (long)1L, (long)2L, (long)1L, (long)1L, (long)10L,\
  \ (long)7L, (long)5L, (long)6L, (long)7L, (long)6L, (long)7L, (long)7L, (long)6L})))\
  \ == (1L));\n    Debug.Assert(Search((new List<long>(new long[]{(long)3L, (long)10L,\
  \ (long)10L, (long)9L, (long)2L}))) == (-1L));\n    }\n\n}\n"
completions: ["        long maxVal = -1;\n        long maxFreq = -1;\n        foreach\
    \ (var item in lst) {\n            if (item == 0) {\n                continue;\n\
    \            }\n            long freq = lst.Count(x => x == item);\n         \
    \   if (freq > maxFreq) {\n                maxFreq = freq;\n                maxVal\
    \ = item;\n            }\n        }\n        return maxVal;", "        long max\
    \ = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n          \
    \  freq++;\n            if (i > max) {\n                max = i;\n           \
    \ }\n        }\n        if (freq > 0) {\n            max = Math.Max(max, freq);\n\
    \        }\n        return max;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            freq++;\n            if (freq\
    \ > i) {\n                max = i;\n                freq = i;\n            }\n\
    \        }\n        return max;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        foreach (long i in lst) {\n            long freq = lst.Count(x\
    \ => x == i);\n            if (freq >= maxFreq) {\n                maxFreq = freq;\n\
    \                maxVal = i;\n            }\n        }\n        return maxVal;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            if (i > max) {\n                max = i;\n                freq\
    \ = 1;\n            }\n            else if (freq < i) {\n                freq++;\n\
    \            }\n        }\n        if (max > 0) {\n            return max;\n \
    \       }\n        return -1;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (var item in lst) {\n            freq++;\n            if (item\
    \ > max) {\n                max = item;\n            }\n        }\n        if\
    \ (freq > 0) {\n            long maxFreq = freq;\n            foreach (var item\
    \ in lst) {\n                if (item == max) {\n                    maxFreq--;\n\
    \                }\n            }\n            if (maxFreq > 0) {\n          \
    \      return max;\n            }\n        }\n        return -1;", "        long\
    \ max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n      \
    \      freq++;\n            if (i > max) {\n                max = i;\n       \
    \     }\n            if (freq > i) {\n                freq = i;\n            }\n\
    \        }\n        return max;", "        long max = -1;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            freq++;\n            if (freq\
    \ > max) {\n                max = freq;\n            }\n        }\n        return\
    \ max;", "        long maxVal = -1;\n        long maxFreq = -1;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            freq++;\n        \
    \    if (freq > maxFreq) {\n                maxFreq = freq;\n                maxVal\
    \ = i;\n            }\n        }\n        return maxVal;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        long curVal = lst[0];\n        long\
    \ curFreq = lst[0];\n        for (int i = 1; i < lst.Count; i++) {\n         \
    \   if (lst[i] > curVal) {\n                if (curFreq >= curVal) {\n       \
    \             maxFreq = curFreq;\n                    maxVal = curVal;\n     \
    \           }\n                curFreq = lst[i];\n                curVal = lst[i];\n\
    \            } else if (lst[i] == curVal) {\n                curFreq++;\n    \
    \        }\n        }\n        if (curFreq >= curVal) {\n            maxFreq =\
    \ curFreq;\n            maxVal = curVal;\n        }\n        return maxVal;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach (long val\
    \ in lst) {\n            if (val > 0) {\n                long freq = lst.Count(x\
    \ => x == val);\n                if (freq >= maxFreq) {\n                    maxFreq\
    \ = freq;\n                    maxVal = val;\n                }\n            }\n\
    \        }\n        return maxVal;", "        long maxVal = -1;\n        long\
    \ maxFreq = -1;\n        foreach (long val in lst) {\n            if (val > 0)\
    \ {\n                long freq = lst.Count(x => x == val);\n                if\
    \ (freq >= maxFreq) {\n                    maxFreq = freq;\n                 \
    \   maxVal = val;\n                }\n            }\n        }\n        return\
    \ maxVal;", "        long max = -1;\n        long maxFreq = -1;\n        foreach\
    \ (long i in lst) {\n            long freq = lst.Count(x => x == i);\n       \
    \     if (freq > maxFreq) {\n                maxFreq = freq;\n               \
    \ max = i;\n            }\n        }\n        return max;", "        long max\
    \ = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n          \
    \  freq++;\n            if (i > max) {\n                max = i;\n           \
    \ }\n            if (freq > i) {\n                freq = i;\n            }\n \
    \       }\n        return max;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq++;\n            if (freq\
    \ > i) {\n                max = i;\n                freq = i;\n            }\n\
    \        }\n        return max;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        foreach (long val in lst) {\n            long freq = lst.Count(x\
    \ => x == val);\n            if (freq > maxFreq) {\n                maxFreq =\
    \ freq;\n                maxVal = val;\n            }\n        }\n        return\
    \ maxVal;", "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach\
    \ (long i in lst) {\n            long freq = lst.Count(x => x == i);\n       \
    \     if (freq > maxFreq) {\n                maxFreq = freq;\n               \
    \ maxVal = i;\n            }\n        }\n        return maxVal;", "        long\
    \ max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n      \
    \      freq++;\n            if (i > max) {\n                max = i;\n       \
    \     }\n        }\n        if (freq > 0) {\n            foreach (long i in lst)\
    \ {\n                if (i == max) {\n                    if (freq > i) {\n  \
    \                      max = i;\n                    }\n                }\n  \
    \          }\n        }\n        return max;", "        long maxVal = -1;\n  \
    \      long maxFreq = -1;\n        foreach (var item in lst) {\n            long\
    \ freq = lst.Count(x => x == item);\n            if (freq > maxFreq) {\n     \
    \           maxFreq = freq;\n                maxVal = item;\n            }\n \
    \       }\n        return maxVal;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        foreach (long i in lst) {\n            if (maxFreq < i) maxFreq\
    \ = i;\n            if (maxVal < i) maxVal = i;\n        }\n        if (maxFreq\
    \ > maxVal) return maxVal;\n        return -1;", "        long max = 0;\n    \
    \    long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \ }\n        if (freq >= max) {\n            return -1;\n        }\n        return\
    \ max;", "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach\
    \ (long i in lst) {\n            if (maxFreq < i && maxVal < i) {\n          \
    \      maxVal = i;\n                maxFreq = i;\n            }\n        }\n \
    \       return maxVal;", "        long max = 0;\n        long maxFreq = 0;\n \
    \       foreach (long i in lst) {\n            if (i > max) {\n              \
    \  max = i;\n                maxFreq = 1;\n            }\n            else if\
    \ (i > max && i > maxFreq) {\n                maxFreq = i;\n            }\n  \
    \      }\n        if (maxFreq > 0) {\n            return max;\n        }\n   \
    \     return -1;", "        long maxVal = -1;\n        long maxFreq = -1;\n  \
    \      foreach (long val in lst) {\n            long freq = lst.Count(x => x ==\
    \ val);\n            if (freq > maxFreq) {\n                maxFreq = freq;\n\
    \                maxVal = val;\n            }\n        }\n        return maxVal;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach (var item\
    \ in lst) {\n            long freq = lst.Count(x => x == item);\n            if\
    \ (freq > maxFreq) {\n                maxFreq = freq;\n                maxVal\
    \ = item;\n            }\n        }\n        return maxVal;", "        long max\
    \ = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n          \
    \  freq++;\n            if (i > max) {\n                max = i;\n           \
    \ }\n            if (freq > i) {\n                freq = i;\n            }\n \
    \       }\n        if (max < 0) {\n            return -1;\n        }\n       \
    \ return max;", "        long max = 0;\n        long freq = 0;\n        foreach\
    \ (long i in lst) {\n            freq++;\n            if (i > max) {\n       \
    \         max = i;\n            }\n        }\n        if (freq >= max) {\n   \
    \         return -1;\n        }\n        return max;", "        long max = 0;\n\
    \        long freq = 0;\n        foreach (long i in lst) {\n            if (i\
    \ > max) {\n                max = i;\n            }\n            freq++;\n   \
    \     }\n        if (freq >= max) {\n            return -1;\n        }\n     \
    \   return max;", "        long max = 0;\n        long freq = 0;\n        foreach\
    \ (long i in lst) {\n            freq++;\n            if (i > max) {\n       \
    \         max = i;\n            }\n            if (freq > i) {\n             \
    \   freq = i;\n            }\n        }\n        return max;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        foreach (var item in lst) {\n   \
    \         if (item > maxVal) {\n                maxVal = item;\n             \
    \   maxFreq = lst[lstIndex];\n            }\n            lstIndex++;\n       \
    \ }\n        return maxVal;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        long currFreq = 0;\n        foreach (long val in lst) {\n   \
    \         currFreq++;\n            if (currFreq > maxFreq) {\n               \
    \ maxFreq = currFreq;\n                maxVal = val;\n            }\n        }\n\
    \        return maxVal;", "        long max = 0;\n        long freq = 0;\n   \
    \     foreach (long i in lst) {\n            freq++;\n            if (freq > max)\
    \ {\n                max = freq;\n            }\n        }\n        if (freq >\
    \ max) {\n            return -1;\n        }\n        return max;", "        long\
    \ max = -1;\n        long freq = 0;\n        foreach (long i in lst) {\n     \
    \       freq++;\n            if (freq > max) {\n                max = freq;\n\
    \            }\n        }\n        return max;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        foreach (long val in lst) {\n           \
    \ long freq = lst.Count(x => x == val);\n            if (freq >= maxFreq) {\n\
    \                maxFreq = freq;\n                maxVal = val;\n            }\n\
    \        }\n        return maxVal;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (long i in lst) {\n            freq++;\n            if\
    \ (i > max) {\n                max = i;\n                freq = freq - 1;\n  \
    \          }\n        }\n        if (freq >= 0) {\n            return max;\n \
    \       }\n        return -1;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        foreach (long val in lst) {\n            if (val > 0) {\n   \
    \             long freq = lst.Count(x => x == val);\n                if (freq\
    \ >= maxFreq) {\n                    maxFreq = freq;\n                    maxVal\
    \ = val;\n                }\n            }\n        }\n        return maxVal;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach (long val\
    \ in lst) {\n            long freq = lst.Count(x => x == val);\n            if\
    \ (freq > maxFreq) {\n                maxFreq = freq;\n                maxVal\
    \ = val;\n            }\n        }\n        return maxVal;", "        long max\
    \ = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n          \
    \  freq++;\n            if (i > max) {\n                max = i;\n           \
    \ }\n            if (freq > i) {\n                freq = i;\n            }\n \
    \       }\n        return max;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (var item in lst) {\n            freq++;\n            if (item\
    \ > max) {\n                max = item;\n            }\n        }\n        if\
    \ (freq > 0) {\n            max = Math.Max(max, freq);\n        }\n        return\
    \ max;", "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach\
    \ (long i in lst) {\n            if (maxFreq < i) maxFreq = i;\n            if\
    \ (maxVal < i) maxVal = i;\n        }\n        if (maxFreq == -1) return -1;\n\
    \        return maxVal;", "        long max = 0;\n        long freq = 0;\n   \
    \     foreach (long i in lst) {\n            freq++;\n            if (freq > max)\
    \ {\n                max = freq;\n            }\n        }\n        if (max >\
    \ 0) {\n            foreach (long i in lst) {\n                if (freq >= i)\
    \ {\n                    freq--;\n                }\n            }\n        }\n\
    \        return max;", "        long maxVal = -1;\n        long maxFreq = -1;\n\
    \        long currFreq = 0;\n        foreach (long val in lst) {\n           \
    \ currFreq++;\n            if (currFreq > maxFreq) {\n                maxFreq\
    \ = currFreq;\n                maxVal = val;\n            }\n        }\n     \
    \   return maxVal;", "        long maxVal = -1;\n        long maxFreq = -1;\n\
    \        foreach (long val in lst) {\n            if (val > 0) {\n           \
    \     long freq = lst.Count(x => x == val);\n                if (freq >= maxFreq)\
    \ {\n                    maxFreq = freq;\n                    maxVal = val;\n\
    \                }\n            }\n        }\n        return maxVal;", "     \
    \   long max = 0;\n        long maxFreq = 0;\n        foreach (long i in lst)\
    \ {\n            long freq = lst.Count(x => x == i);\n            if (freq > maxFreq)\
    \ {\n                max = i;\n                maxFreq = freq;\n            }\n\
    \        }\n        return max;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            if (i > 0) freq++;\n    \
    \        if (freq > max) max = freq;\n        }\n        return max > 0 ? max\
    \ : -1;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            if (freq > 0) {\n                if (freq >= i) {\n\
    \                    max = i;\n                    freq--;\n                }\n\
    \            }\n            else {\n                max = i;\n               \
    \ freq++;\n            }\n        }\n        return max;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        foreach (long val in lst) {\n   \
    \         if (val > 0) {\n                long freq = lst.Count(x => x == val);\n\
    \                if (freq >= maxFreq) {\n                    maxFreq = freq;\n\
    \                    maxVal = val;\n                }\n            }\n       \
    \ }\n        return maxVal;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq++;\n            if (i > max)\
    \ {\n                max = i;\n            }\n            if (freq > i) {\n  \
    \              freq = i;\n            }\n        }\n        return max;", "  \
    \      long maxVal = -1;\n        long maxFreq = -1;\n        foreach (long val\
    \ in lst) {\n            long freq = lst.Count(x => x == val);\n            if\
    \ (freq > maxFreq) {\n                maxFreq = freq;\n                maxVal\
    \ = val;\n            }\n        }\n        return maxVal;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        foreach (long val in lst) {\n   \
    \         if (val > 0) {\n                long freq = lst.Count(x => x == val);\n\
    \                if (freq >= maxFreq) {\n                    maxFreq = freq;\n\
    \                    maxVal = val;\n                }\n            }\n       \
    \ }\n        return maxVal;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        long currFreq = -1;\n        foreach (long val in lst) {\n  \
    \          if (val > 0) {\n                currFreq = lst.Count(x => x == val);\n\
    \                if (currFreq > maxFreq) {\n                    maxFreq = currFreq;\n\
    \                    maxVal = val;\n                }\n            }\n       \
    \ }\n        return maxVal;", "        long max = -1;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq++;\n            if (freq\
    \ > max) {\n                max = freq;\n            }\n        }\n        if\
    \ (max > 0) {\n            foreach (long i in lst) {\n                if (i ==\
    \ max) {\n                    return max;\n                }\n            }\n\
    \        }\n        return -1;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        foreach (long i in lst) {\n            long freq = lst.Count(x\
    \ => x == i);\n            if (freq >= maxFreq) {\n                maxFreq = freq;\n\
    \                maxVal = i;\n            }\n        }\n        return maxVal;",
  "        long max = 0;\n        long maxCount = 0;\n        long maxFreq = 0;\n\
    \        foreach (long i in lst) {\n            long count = lst.Count(x => x\
    \ == i);\n            if (count > maxCount) {\n                max = i;\n    \
    \            maxCount = count;\n                maxFreq = count;\n           \
    \ }\n        }\n        if (maxCount == 0) {\n            return -1;\n       \
    \ }\n        return max;", "        long max = 0;\n        long freq = 0;\n  \
    \      foreach (long i in lst) {\n            if (i > 0 && freq > 0) {\n     \
    \           freq--;\n            }\n            if (freq > 0) {\n            \
    \    max = Math.Max(max, i);\n                freq++;\n            }\n       \
    \ }\n        return max;", "        long max = 0;\n        long freq = 0;\n  \
    \      foreach (long i in lst) {\n            freq += i;\n            if (freq\
    \ > max) {\n                max = freq;\n            }\n        }\n        return\
    \ max;", "        long maxVal = -1;\n        long maxFreq = -1;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            freq++;\n        \
    \    if (freq > maxFreq) {\n                maxFreq = freq;\n                maxVal\
    \ = i;\n            }\n        }\n        return maxVal;", "        long max =\
    \ 0;\n        long freq = 0;\n        foreach (var item in lst) {\n          \
    \  freq += 1;\n            if (freq > max) {\n                max = freq;\n  \
    \          }\n        }\n        return max > 0 ? max : -1;", "        long max\
    \ = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n          \
    \  freq++;\n            if (i > max) {\n                max = i;\n           \
    \ }\n        }\n        if (freq > 0) {\n            max = max / freq;\n     \
    \   }\n        return max;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq++;\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        if (freq >= max)\
    \ {\n            return max;\n        }\n        long max2 = 0;\n        long\
    \ freq2 = 0;\n        foreach (long i in lst) {\n            freq2++;\n      \
    \      if (freq2 >= freq) {\n                max2 = i;\n            }\n      \
    \  }\n        return max2;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        foreach (long i in lst) {\n            if (maxFreq < 1 || maxFreq\
    \ > i.GetHashCode()) {\n                maxFreq = i.GetHashCode();\n         \
    \       maxVal = i;\n            }\n        }\n        return maxVal;", "    \
    \    long max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n\
    \            freq++;\n            if (i > max) {\n                max = i;\n \
    \           }\n        }\n        if (freq > 0) {\n            max = max / freq;\n\
    \        }\n        return max;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        foreach (long i in lst) {\n            if (maxFreq < i && maxVal\
    \ < i) {\n                maxVal = i;\n                maxFreq = i;\n        \
    \    }\n            else if (maxFreq == i && maxVal < i) {\n                maxVal\
    \ = i;\n                maxFreq = i;\n            }\n            else if (maxFreq\
    \ == i && maxVal == i) {\n                maxFreq++;\n            }\n        }\n\
    \        return maxVal;", "        long max = 0;\n        long freq = 0;\n   \
    \     foreach (long i in lst) {\n            freq++;\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        if (freq > 0)\
    \ {\n            max = freq > max ? freq : max;\n        }\n        return max;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        long curVal = lst[0];\n\
    \        long curFreq = 1;\n        foreach (long val in lst) {\n            if\
    \ (val == curVal) {\n                curFreq++;\n            } else {\n      \
    \          if (curFreq > maxFreq) {\n                    maxFreq = curFreq;\n\
    \                    maxVal = curVal;\n                }\n                curVal\
    \ = val;\n                curFreq = 1;\n            }\n        }\n        if (curFreq\
    \ > maxFreq) {\n            maxFreq = curFreq;\n            maxVal = curVal;\n\
    \        }\n        return maxVal;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (long i in lst) {\n            freq++;\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        if\
    \ (freq > 0) {\n            long res = -1;\n            foreach (long i in lst)\
    \ {\n                if (i == max) {\n                    res = i;\n         \
    \           break;\n                }\n            }\n            return res;\n\
    \        }\n        return -1;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        foreach (long i in lst) {\n            if (maxFreq < i) maxFreq\
    \ = i;\n            if (maxVal < i) maxVal = i;\n        }\n        if (maxFreq\
    \ > maxVal) return maxVal;\n        return maxFreq;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        foreach (long val in lst) {\n           \
    \ if (val > 0) {\n                long freq = lst.Count(x => x == val);\n    \
    \            if (freq >= maxFreq) {\n                    maxFreq = freq;\n   \
    \                 maxVal = val;\n                }\n            }\n        }\n\
    \        return maxVal;", "        long max = 0;\n        long freq = 0;\n   \
    \     foreach (long i in lst) {\n            freq++;\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        if (freq > 0)\
    \ {\n            foreach (long i in lst) {\n                if (i == max) {\n\
    \                    freq--;\n                }\n            }\n        }\n  \
    \      return max;", "        long max = 0;\n        long freq = 0;\n        foreach\
    \ (var item in lst) {\n            freq += item;\n            if (freq > max)\
    \ {\n                max = freq;\n            }\n        }\n        return max;",
  "        long max = 0;\n        long freq = 0;\n        foreach (var item in lst)\
    \ {\n            freq++;\n            if (item > max) {\n                max =\
    \ item;\n            }\n        }\n        if (freq >= max) {\n            return\
    \ -1;\n        }\n        return max;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (long i in lst) {\n            freq++;\n            if\
    \ (i > max) {\n                max = i;\n            }\n            if (freq >\
    \ i) {\n                freq = i;\n            }\n        }\n        return max;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \            }\n            if (freq > i) {\n                freq = i;\n     \
    \       }\n        }\n        return max;", "        long max = -1;\n        long\
    \ freq = 0;\n        foreach (var item in lst) {\n            if (item == 0) continue;\n\
    \            freq++;\n            if (freq > max) {\n                max = item;\n\
    \            }\n        }\n        return max;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        long freq = -1;\n        foreach (var item\
    \ in lst) {\n            freq++;\n            if (freq > maxFreq) {\n        \
    \        maxFreq = freq;\n                maxVal = item;\n            }\n    \
    \    }\n        return maxVal;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (var item in lst) {\n            freq += 1;\n            if (freq\
    \ > item.Value) {\n                max = item;\n                freq = item.Value;\n\
    \            }\n        }\n        if (max > 0)\n            return max;\n   \
    \     return -1;", "        long max = 0;\n        long freq = 0;\n        foreach\
    \ (long i in lst) {\n            freq++;\n            if (i > max) {\n       \
    \         max = i;\n            }\n            if (freq > i) {\n             \
    \   freq = i;\n            }\n        }\n        return max;", "        long max\
    \ = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n          \
    \  freq++;\n            if (freq > i) {\n                max = i;\n          \
    \      freq = i;\n            }\n        }\n        return max;", "        long\
    \ maxVal = -1;\n        long maxFreq = -1;\n        foreach (long val in lst)\
    \ {\n            long freq = lst.Count(x => x == val);\n            if (freq >\
    \ maxFreq) {\n                maxFreq = freq;\n                maxVal = val;\n\
    \            }\n        }\n        return maxVal;", "        long max = 0;\n \
    \       long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \ }\n        if (freq >= max) {\n            return -1;\n        }\n        return\
    \ max;", "        long max = 0;\n        long freq = 0;\n        foreach (var\
    \ item in lst) {\n            freq++;\n            if (item > max) {\n       \
    \         max = item;\n            }\n        }\n        if (freq > 0) {\n   \
    \         foreach (var item in lst) {\n                if (item == max) {\n  \
    \                  freq--;\n                }\n            }\n        }\n    \
    \    return (freq > 0) ? max : -1;", "        long maxVal = -1;\n        long\
    \ maxFreq = -1;\n        foreach (long i in lst) {\n            long freq = lst.Count(x\
    \ => x == i);\n            if (freq > maxFreq) {\n                maxFreq = freq;\n\
    \                maxVal = i;\n            }\n        }\n        return maxVal;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \            }\n        }\n        if (freq > 0) {\n            long maxfreq =\
    \ freq;\n            foreach (long i in lst) {\n                if (freq > maxfreq)\
    \ {\n                    maxfreq = freq;\n                }\n                freq--;\n\
    \            }\n            return max;\n        }\n        return -1;", "   \
    \     long max = 0;\n        long maxFreq = 0;\n        long maxVal = -1;\n  \
    \      foreach (long i in lst) {\n            if (i > max) {\n               \
    \ max = i;\n                maxFreq = 1;\n            } else if (i > max) {\n\
    \                maxFreq++;\n            }\n            if (maxFreq > maxVal)\
    \ {\n                maxVal = maxFreq;\n            }\n        }\n        return\
    \ maxVal;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            if (i > 0) freq++;\n            if (freq > max) max\
    \ = freq;\n        }\n        return max > 0 ? max : -1;", "        long max =\
    \ 0;\n        long freq = 0;\n        foreach (var item in lst) {\n          \
    \  freq++;\n            if (item > max) {\n                max = item;\n     \
    \       }\n        }\n        if (freq >= max) {\n            return max;\n  \
    \      }\n        long max2 = 0;\n        long freq2 = 0;\n        foreach (var\
    \ item in lst) {\n            freq2++;\n            if (item > max2) {\n     \
    \           max2 = item;\n            }\n        }\n        if (freq2 >= max2)\
    \ {\n            return max2;\n        }\n        long max3 = 0;\n        long\
    \ freq3 = 0;\n        foreach (var item in lst) {\n            freq3++;\n    \
    \        if (item > max3) {\n                max3 = item;\n            }\n   \
    \     }\n        if (freq3 >= max3) {\n            return max3;\n        }\n \
    \       return -1;", "        long maxVal = -1;\n        long maxFreq = -1;\n\
    \        foreach (long val in lst) {\n            if (val > 0) {\n           \
    \     long freq = lst.Count(x => x == val);\n                if (freq >= maxFreq)\
    \ {\n                    maxFreq = freq;\n                    maxVal = val;\n\
    \                }\n            }\n        }\n        return maxVal;", "     \
    \   long maxVal = -1;\n        long maxFreq = -1;\n        long currFreq = -1;\n\
    \        foreach (long val in lst) {\n            currFreq = GetFreq(val, lst);\n\
    \            if (currFreq > maxFreq) {\n                maxFreq = currFreq;\n\
    \                maxVal = val;\n            }\n        }\n        return maxVal;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \            }\n        }\n        if (freq > 0) {\n            long maxfreq =\
    \ freq;\n            foreach (long i in lst) {\n                if (freq > maxfreq)\
    \ {\n                    maxfreq = freq;\n                }\n                freq--;\n\
    \            }\n            return max;\n        }\n        return -1;", "   \
    \     long max = -1;\n        long maxCount = 0;\n        long maxFreq = 0;\n\
    \        foreach (long i in lst) {\n            long freq = lst.Count(x => x ==\
    \ i);\n            if (freq > maxFreq) {\n                maxFreq = freq;\n  \
    \              max = i;\n                maxCount = freq;\n            } else\
    \ if (freq == maxFreq) {\n                if (freq > maxCount) {\n           \
    \         maxFreq = freq;\n                    max = i;\n                    maxCount\
    \ = freq;\n                }\n            }\n        }\n        return max;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach (long val\
    \ in lst) {\n            if (val > 0) {\n                long freq = lst.Count(x\
    \ => x == val);\n                if (freq >= maxFreq) {\n                    maxFreq\
    \ = freq;\n                    maxVal = val;\n                }\n            }\n\
    \        }\n        return maxVal;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (var item in lst) {\n            freq++;\n           \
    \ if (item > max) {\n                max = item;\n            }\n        }\n \
    \       if (freq > 0) {\n            max = Math.Max(max, lst[freq - 1]);\n   \
    \     }\n        return max;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq++;\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        if (freq >= max)\
    \ {\n            return -1;\n        }\n        return max;", "        long max\
    \ = 0;\n        long maxFreq = 0;\n        foreach (long i in lst) {\n       \
    \     long freq = lst.Count(x => x == i);\n            if (freq >= maxFreq) {\n\
    \                max = i;\n                maxFreq = freq;\n            }\n  \
    \      }\n        return max;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (var item in lst) {\n            if (item > 0 && item == freq)\
    \ {\n                max = Math.Max(max, item);\n            }\n            freq++;\n\
    \        }\n        return max;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (long i in lst) {\n            freq++;\n            if (i\
    \ > max) {\n                max = i;\n            }\n        }\n        if (freq\
    \ > 0) {\n            long res = -1;\n            foreach (long i in lst) {\n\
    \                if (i == max) {\n                    res = i;\n             \
    \       break;\n                }\n            }\n            return res;\n  \
    \      }\n        return -1;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            if (i > 0) freq++;\n         \
    \   if (freq > max) max = freq;\n        }\n        return max > 0 ? max : -1;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            if (i > 0) freq++;\n            if (freq > max) max = freq;\n\
    \        }\n        if (max > 0) return max;\n        return -1;", "        long\
    \ max = 0;\n        long freq = 0;\n        foreach (var item in lst) {\n    \
    \        freq++;\n            if (item > max) {\n                max = item;\n\
    \            }\n        }\n        if (freq > 0) {\n            foreach (var item\
    \ in lst) {\n                if (item == max) {\n                    if (freq\
    \ > item.Value) {\n                        max = item;\n                    }\n\
    \                }\n            }\n        }\n        return max;", "        long\
    \ maxVal = -1;\n        long maxFreq = -1;\n        foreach (long val in lst)\
    \ {\n            long freq = lst.Count(x => x == val);\n            if (freq >\
    \ maxFreq) {\n                maxFreq = freq;\n                maxVal = val;\n\
    \            }\n        }\n        return maxVal;", "        long max = 0;\n \
    \       long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (freq > i) {\n                max = i;\n                freq =\
    \ freq - i;\n            }\n        }\n        return max;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        foreach (long val in lst) {\n   \
    \         long freq = lst.Count(x => x == val);\n            if (freq > maxFreq)\
    \ {\n                maxFreq = freq;\n                maxVal = val;\n        \
    \    }\n        }\n        return maxVal;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            if (freq > 0) {\n\
    \                if (freq >= i) {\n                    freq = freq - i;\n    \
    \            } else {\n                    freq = 0;\n                }\n    \
    \        } else {\n                freq = i;\n            }\n            if (freq\
    \ > max) {\n                max = freq;\n            }\n        }\n        return\
    \ max;", "        long maxVal = -1;\n        long maxFreq = -1;\n        long\
    \ currVal = lst[0];\n        long currFreq = lst[0];\n        foreach (long val\
    \ in lst) {\n            if (val > 0) {\n                currFreq++;\n       \
    \         if (currFreq > currVal) {\n                    currVal = val;\n    \
    \                currFreq = val;\n                }\n            }\n        }\n\
    \        if (currFreq > maxFreq) {\n            maxFreq = currFreq;\n        \
    \    maxVal = currVal;\n        }\n        return maxVal;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        foreach (long val in lst) {\n   \
    \         long freq = lst.Count(x => x == val);\n            if (freq > maxFreq)\
    \ {\n                maxFreq = freq;\n                maxVal = val;\n        \
    \    }\n        }\n        return maxVal;", "        long maxVal = -1;\n     \
    \   long maxFreq = -1;\n        foreach (long i in lst) {\n            long freq\
    \ = lst.Count(x => x == i);\n            if (freq >= maxFreq) {\n            \
    \    maxFreq = freq;\n                maxVal = i;\n            }\n        }\n\
    \        return maxVal;", "        long max = 0;\n        long freq = 0;\n   \
    \     foreach (long i in lst) {\n            if (i > 0) freq++;\n            if\
    \ (freq > max) max = freq;\n        }\n        if (max > 0) return max;\n    \
    \    return -1;", "        long max = 0;\n        long freq = 0;\n        foreach\
    \ (long i in lst) {\n            freq++;\n            if (freq > max) {\n    \
    \            max = freq;\n            }\n            if (freq == i) {\n      \
    \          freq--;\n            }\n        }\n        return max;", "        long\
    \ maxVal = -1;\n        long maxFreq = -1;\n        foreach (long val in lst)\
    \ {\n            if (val > 0) {\n                long freq = lst.Count(x => x\
    \ == val);\n                if (freq >= maxFreq) {\n                    maxFreq\
    \ = freq;\n                    maxVal = val;\n                }\n            }\n\
    \        }\n        return maxVal;", "        long maxVal = -1;\n        long\
    \ maxFreq = -1;\n        foreach (long i in lst) {\n            long freq = lst.Count(x\
    \ => x == i);\n            if (freq >= maxFreq) {\n                maxFreq = freq;\n\
    \                maxVal = i;\n            }\n        }\n        return maxVal;",
  "        long max = 0;\n        long maxCount = 0;\n        foreach (var item in\
    \ lst) {\n            if (item > max) {\n                max = item;\n       \
    \         maxCount = 1;\n            }\n            else if (item == max) {\n\
    \                maxCount++;\n            }\n        }\n        if (maxCount ==\
    \ 0) {\n            return -1;\n        }\n        long maxCount2 = 0;\n     \
    \   foreach (var item in lst) {\n            if (item == max) {\n            \
    \    maxCount2++;\n            }\n        }\n        if (maxCount2 > maxCount)\
    \ {\n            return -1;\n        }\n        return max;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        foreach (var item in lst) {\n   \
    \         long freq = lst.Count(x => x == item);\n            if (freq > maxFreq)\
    \ {\n                maxFreq = freq;\n                maxVal = item;\n       \
    \     }\n        }\n        return maxVal;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            freq++;\n        \
    \    if (i > max) {\n                max = i;\n            }\n        }\n    \
    \    if (freq >= max) {\n            return max;\n        }\n        long res\
    \ = -1;\n        foreach (long i in lst) {\n            if (i > max) {\n     \
    \           long temp = max;\n                max = i;\n                if (freq\
    \ > temp) {\n                    res = temp;\n                }\n            }\n\
    \        }\n        return res;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        foreach (var item in lst) {\n            if (item == 0) {\n \
    \               continue;\n            }\n            long freq = lst.Count(x\
    \ => x == item);\n            if (freq >= maxFreq) {\n                maxFreq\
    \ = freq;\n                maxVal = item;\n            }\n        }\n        return\
    \ maxVal;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            freq++;\n            if (i > max) {\n             \
    \   max = i;\n            }\n        }\n        if (freq >= max) {\n         \
    \   return -1;\n        }\n        return max;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        foreach (long val in lst) {\n           \
    \ if (val > 0) {\n                long freq = lst.Count(x => x == val);\n    \
    \            if (freq >= maxFreq) {\n                    maxFreq = freq;\n   \
    \                 maxVal = val;\n                }\n            }\n        }\n\
    \        return maxVal;", "        long maxVal = -1;\n        long maxFreq = -1;\n\
    \        foreach (long i in lst) {\n            long freq = lst.Count(x => x ==\
    \ i);\n            if (freq > maxFreq) {\n                maxFreq = freq;\n  \
    \              maxVal = i;\n            }\n        }\n        return maxVal;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach (var item\
    \ in lst) {\n            long freq = lst.Count(i => i == item);\n            if\
    \ (freq > maxFreq) {\n                maxFreq = freq;\n                maxVal\
    \ = item;\n            }\n        }\n        return maxVal;", "        long max\
    \ = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n          \
    \  if (freq > 0) {\n                if (freq >= i) {\n                    freq\
    \ = freq - i;\n                } else {\n                    freq = 0;\n     \
    \           }\n            } else {\n                freq = i;\n            }\n\
    \            if (freq > max) {\n                max = freq;\n            }\n \
    \       }\n        return max;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            if (i > 0) freq++;\n         \
    \   if (freq > max) {\n                max = freq;\n            }\n        }\n\
    \        if (max > 0) return max;\n        return -1;", "        long max = 0;\n\
    \        long freq = 0;\n        foreach (long i in lst) {\n            if (i\
    \ > 0) freq++;\n            if (freq > max) {\n                max = freq;\n \
    \           }\n        }\n        if (max > 0) return max;\n        return -1;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (freq > max) {\n                max =\
    \ freq;\n            }\n        }\n        if (freq > max) {\n            return\
    \ -1;\n        }\n        return max;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (long i in lst) {\n            freq++;\n            if\
    \ (i > max) {\n                max = i;\n            }\n            if (freq >\
    \ i) {\n                freq = i;\n            }\n        }\n        return max;",
  "        long max = 0;\n        long freq = 0;\n        foreach (var item in lst)\
    \ {\n            freq++;\n            if (item > max) {\n                max =\
    \ item;\n            }\n        }\n        if (freq >= max) {\n            return\
    \ -1;\n        }\n        return max;", "        long maxVal = -1;\n        long\
    \ maxFreq = -1;\n        foreach (long i in lst) {\n            long freq = lst.Count(x\
    \ => x == i);\n            if (freq >= maxFreq) {\n                maxFreq = freq;\n\
    \                maxVal = i;\n            }\n        }\n        return maxVal;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            if (i > 0) freq++;\n            if (freq > max) max = freq;\n\
    \        }\n        if (max > 0) return max;\n        return -1;", "        long\
    \ max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n      \
    \      freq++;\n            if (freq > i) {\n                max = i;\n      \
    \          freq = freq - i;\n            }\n        }\n        if (max > 0)\n\
    \            return max;\n        return -1;", "        long max = 0;\n      \
    \  long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n  \
    \          if (i > max) {\n                max = i;\n            }\n        }\n\
    \        if (freq > 0) {\n            long max2 = max;\n            long max3\
    \ = (long)Math.Pow(max, 2);\n            long max4 = (long)Math.Pow(max, 3);\n\
    \            long max5 = (long)Math.Pow(max, 4);\n            long max6 = (long)Math.Pow(max,\
    \ 5);\n            long max7 = (long)Math.Pow(max, 6);\n            long max8\
    \ = (long)Math.Pow(max, 7);\n            long max9 = (long)Math.Pow(max, 8);\n\
    \            long max10 = (long)Math.Pow(max, 9);\n            long max11 = (long)Math.Pow(max,\
    \ 10);\n            long max12 = (long)Math.Pow(max, 11);\n            long max13\
    \ = (long)Math.Pow(max, 12);\n            long max14 = (long)Math.Pow(max, 13);\n\
    \            long max15 = (long)Math.Pow(max, 14);\n            long max16 = (long)Math.Pow(max,\
    \ 15);\n            long max17 = (long)Math.Pow(max, 16);\n            long max18\
    \ = (long)Math.Pow(max, 17);\n            long max19 = (long)Math.Pow(max, 18);\n\
    \            long max20 = (long)Math.Pow(max, 19);\n            long max21 = (long)Math.Pow(max,\
    \ 20);\n            long max22 = (long)Math.Pow(max, 21);\n            long max23\
    \ = (long)Math.Pow(max, 22);\n            long max24 = (long)Math.Pow(max, 23);\n\
    \            long max25 = (long)Math.Pow(max, 24);\n            long max26 = (long)Math.Pow(max,\
    \ 25);\n            long max27 = (long)Math.Pow(max, 26);\n            long max28\
    \ = (long)Math.Pow(max, 27);\n            long max29 = (long)Math.Pow(max, 28);\n\
    \            long max30 = (long)Math.Pow(max, 29);\n            long max31 = (long)Math.Pow(max,\
    \ 30);\n            long max32 = (long)Math.Pow(max, 31);\n            long max33\
    \ = (long)Math.Pow(max, 32);\n            long max34 = (long)Math.Pow(max, 33);\n\
    \            long max35 = (long)Math.Pow(max, 34);\n            long max36 = (long)Math.Pow(max,\
    \ 35);\n            long max37 = (long)Math.Pow(max, 36);\n            long max38\
    \ = (long)Math.Pow(max, 37);\n            long max39 = (long)Math.Pow(max, 38);\n",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq += i;\n            if (freq > max) {\n                max\
    \ = freq;\n            }\n        }\n        return max;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        long currVal = lst[0];\n        long\
    \ currFreq = 1;\n        for (int i = 1; i < lst.Count; i++) {\n            if\
    \ (lst[i] > currVal) {\n                currFreq++;\n            }\n         \
    \   if (currFreq > maxFreq) {\n                maxFreq = currFreq;\n         \
    \       maxVal = currVal;\n            }\n            currVal = lst[i];\n    \
    \        currFreq = 1;\n        }\n        return maxVal;", "        long max\
    \ = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n          \
    \  if (i > 0 && freq > 0) {\n                freq--;\n            }\n        \
    \    if (freq > 0) {\n                max = Math.Max(max, i);\n            }\n\
    \            freq++;\n        }\n        return max > 0 ? max : -1;", "      \
    \  long max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n\
    \            if (i > 0) freq++;\n            if (freq > max) max = freq;\n   \
    \     }\n        if (max > 0) return max;\n        return -1;", "        long\
    \ max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n      \
    \      freq++;\n            if (i > max) {\n                max = i;\n       \
    \     }\n            if (freq > i) {\n                freq = i;\n            }\n\
    \        }\n        return max;", "        long max = 0;\n        long freq =\
    \ 0;\n        foreach (var item in lst) {\n            freq++;\n            if\
    \ (item > max) {\n                max = item;\n            }\n        }\n    \
    \    if (freq >= max) {\n            return -1;\n        }\n        return max;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (freq > i) {\n                max = i;\n\
    \                freq = i;\n            }\n        }\n        return max;", " \
    \       long maxVal = -1;\n        long maxFreq = -1;\n        foreach (long val\
    \ in lst) {\n            if (val > 0) {\n                long freq = lst.Count(x\
    \ => x == val);\n                if (freq >= maxFreq) {\n                    maxFreq\
    \ = freq;\n                    maxVal = val;\n                }\n            }\n\
    \        }\n        return maxVal;", "        long maxVal = -1;\n        long\
    \ maxFreq = -1;\n        foreach (long i in lst) {\n            long freq = lst.Count(x\
    \ => x == i);\n            if (freq > maxFreq) {\n                maxFreq = freq;\n\
    \                maxVal = i;\n            }\n        }\n        return maxVal;",
  "        long max = 0;\n        long freq = 0;\n        foreach (var item in lst)\
    \ {\n            freq++;\n            if (item > max) {\n                max =\
    \ item;\n            }\n            if (freq > item) {\n                freq =\
    \ item;\n            }\n        }\n        return max;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        long curVal = lst[0];\n        long\
    \ curFreq = lst[0];\n        for (int i = 1; i < lst.Count; i++) {\n         \
    \   if (lst[i] > curVal) {\n                curVal = lst[i];\n               \
    \ curFreq = lst[i];\n            } else if (lst[i] == curVal) {\n            \
    \    curFreq++;\n            }\n            if (curFreq > maxFreq) {\n       \
    \         maxFreq = curFreq;\n                maxVal = curVal;\n            }\n\
    \        }\n        return maxVal;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (var item in lst) {\n            freq++;\n           \
    \ if (item > max) {\n                max = item;\n            }\n        }\n \
    \       if (freq > 0) {\n            max = Math.Max(max, freq);\n        }\n \
    \       return max;", "        long max = -1;\n        long maxFreq = -1;\n  \
    \      foreach (long i in lst) {\n            if (maxFreq < lstFrequency(i)) {\n\
    \                max = i;\n                maxFreq = lstFrequency(i);\n      \
    \      }\n        }\n        return max;", "        long max = -1;\n        long\
    \ freq = 0;\n        foreach (var item in lst) {\n            if (item == 0) {\n\
    \                continue;\n            }\n            freq++;\n            if\
    \ (freq > max) {\n                max = item;\n            }\n        }\n    \
    \    return max;", "        long max = 0;\n        long freq = 0;\n        foreach\
    \ (long i in lst) {\n            freq++;\n            if (i > max) {\n       \
    \         max = i;\n            }\n            if (freq > i) {\n             \
    \   freq = i;\n            }\n        }\n        return max;", "        long max\
    \ = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n          \
    \  freq++;\n            if (freq > i) {\n                max = i;\n          \
    \      freq = i;\n            }\n        }\n        return max;", "        long\
    \ max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n      \
    \      freq += i;\n            if (freq > max) {\n                max = freq;\n\
    \            }\n        }\n        return max;", "        long max = 0;\n    \
    \    long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \     if (freq > i) {\n                freq = i;\n            }\n        }\n \
    \       return max;", "        long max = 0;\n        long freq = 0;\n       \
    \ foreach (var item in lst) {\n            freq++;\n            if (item > max)\
    \ {\n                max = item;\n            }\n            if (item == max)\
    \ {\n                freq++;\n            }\n        }\n        return (freq >\
    \ max) ? -1 : max;", "        long max = 0;\n        long freq = 0;\n        foreach\
    \ (long i in lst) {\n            freq++;\n            if (i > max) {\n       \
    \         max = i;\n            }\n        }\n        if (freq >= max) {\n   \
    \         return max;\n        }\n        long max2 = 0;\n        long freq2 =\
    \ 0;\n        foreach (long i in lst) {\n            freq2++;\n            if\
    \ (freq2 >= freq) {\n                max2 = i;\n            }\n        }\n   \
    \     return max2;", "        long max = 0;\n        long freq = 0;\n        foreach\
    \ (long i in lst) {\n            freq++;\n            if (i > max) {\n       \
    \         max = i;\n            }\n        }\n        if (freq > 0) {\n      \
    \      long maxfreq = freq;\n            foreach (long i in lst) {\n         \
    \       if (freq > maxfreq) {\n                    maxfreq = freq;\n         \
    \       }\n                freq--;\n            }\n            return max;\n \
    \       }\n        return -1;", "        long max = -1;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq += i;\n            if (freq\
    \ > max) {\n                max = freq;\n            }\n        }\n        return\
    \ max;", "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach\
    \ (long i in lst) {\n            if (maxFreq < i) maxFreq = i;\n            if\
    \ (maxVal < i) maxVal = i;\n        }\n        return maxVal;", "        long\
    \ maxVal = -1;\n        long maxFreq = -1;\n        foreach (long val in lst)\
    \ {\n            if (val > 0) {\n                long freq = lst.Count(x => x\
    \ == val);\n                if (freq >= maxFreq) {\n                    maxFreq\
    \ = freq;\n                    maxVal = val;\n                }\n            }\n\
    \        }\n        return maxVal;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (long i in lst) {\n            freq++;\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        if\
    \ (freq > 0) {\n            long max = lst[0];\n            long freq = lst[0];\n\
    \            foreach (long i in lst) {\n                if (i > max) {\n     \
    \               max = i;\n                }\n                freq++;\n       \
    \     }\n            if (freq >= freq) {\n                return max;\n      \
    \      }\n        }\n        return -1;", "        long maxVal = -1;\n       \
    \ long maxFreq = -1;\n        foreach (long val in lst) {\n            if (val\
    \ > 0) {\n                long freq = lst.Count(x => x == val);\n            \
    \    if (freq > maxFreq) {\n                    maxFreq = freq;\n            \
    \        maxVal = val;\n                }\n            }\n        }\n        return\
    \ maxVal;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            freq++;\n            if (freq > i) {\n            \
    \    max = i;\n                freq = freq - i;\n            }\n        }\n  \
    \      return max;", "        long maxVal = -1;\n        long maxFreq = -1;\n\
    \        foreach (long val in lst) {\n            if (val > 0) {\n           \
    \     long freq = lst.Count(x => x == val);\n                if (freq >= val)\
    \ {\n                    maxVal = val;\n                    maxFreq = freq;\n\
    \                }\n            }\n        }\n        return maxVal;", "     \
    \   long max = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n\
    \            if (i > 0)\n                freq++;\n            if (freq > i)\n\
    \                max = i;\n        }\n        return max;", "        long maxVal\
    \ = -1;\n        long maxFreq = -1;\n        long currFreq = 0;\n        foreach\
    \ (long val in lst) {\n            currFreq++;\n            if (currFreq > maxFreq)\
    \ {\n                maxFreq = currFreq;\n                maxVal = val;\n    \
    \        }\n        }\n        return maxVal;", "        long max = 0;\n     \
    \   long freq = 0;\n        foreach (var item in lst) {\n            freq++;\n\
    \            if (item > max) {\n                max = item;\n            }\n \
    \       }\n        if (freq >= max) {\n            return -1;\n        }\n   \
    \     return max;", "        long max = -1;\n        long freq = 0;\n        foreach\
    \ (long i in lst) {\n            freq++;\n            if (freq > max) {\n    \
    \            max = freq;\n            }\n        }\n        return max;", "  \
    \      long maxVal = -1;\n        long maxFreq = -1;\n        foreach (long val\
    \ in lst) {\n            long freq = lst.Count(x => x == val);\n            if\
    \ (freq > maxFreq) {\n                maxFreq = freq;\n                maxVal\
    \ = val;\n            }\n        }\n        return maxVal;", "        long max\
    \ = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n          \
    \  freq++;\n            if (i > max) {\n                max = i;\n           \
    \ }\n            if (freq > i) {\n                freq = i;\n            }\n \
    \       }\n        return max;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (var item in lst) {\n            freq++;\n            if (item\
    \ > max) {\n                max = item;\n            }\n            if (freq >\
    \ item) {\n                freq = item;\n            }\n        }\n        return\
    \ max;", "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach\
    \ (long val in lst) {\n            long freq = lst.Count(x => x == val);\n   \
    \         if (freq > maxFreq) {\n                maxFreq = freq;\n           \
    \     maxVal = val;\n            }\n        }\n        return maxVal;", "    \
    \    long max = 0;\n        long freq = 0;\n        foreach (var item in lst)\
    \ {\n            freq++;\n            if (item > max) {\n                max =\
    \ item;\n            }\n        }\n        if (freq > 0) {\n            long res\
    \ = -1;\n            foreach (var item in lst) {\n                if (item ==\
    \ max) {\n                    res = item;\n                    break;\n      \
    \          }\n            }\n            return res;\n        }\n        return\
    \ -1;", "        long maxVal = -1;\n        long maxFreq = -1;\n        long currFreq\
    \ = 0;\n        foreach (long i in lst) {\n            if (currFreq < i) {\n \
    \               currFreq = i;\n            }\n            if (currFreq > maxFreq)\
    \ {\n                maxFreq = currFreq;\n                maxVal = i;\n      \
    \      }\n        }\n        return maxVal;", "        long max = 0;\n       \
    \ long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n   \
    \         if (freq > max) {\n                max = freq;\n            }\n    \
    \    }\n        if (max > 0) {\n            foreach (long i in lst) {\n      \
    \          if (freq > i) {\n                    freq--;\n                }\n \
    \           }\n        }\n        return max;", "        long maxVal = -1;\n \
    \       long maxFreq = -1;\n        foreach (var item in lst) {\n            long\
    \ freq = lst.Count(i => i == item);\n            if (freq >= maxFreq) {\n    \
    \            maxFreq = freq;\n                maxVal = item;\n            }\n\
    \        }\n        return maxVal;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (long i in lst) {\n            freq++;\n            if\
    \ (freq > i) {\n                max = i;\n                freq = freq - i;\n \
    \           }\n        }\n        return max;", "        long max = 0;\n     \
    \   long freq = 0;\n        foreach (long i in lst) {\n            freq += i;\n\
    \            if (freq > max) {\n                max = freq;\n            }\n \
    \       }\n        return max;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        long currVal = lst[0];\n        long currFreq = lst[0];\n   \
    \     foreach (long val in lst) {\n            if (val == currVal) {\n       \
    \         currFreq++;\n            } else {\n                if (currFreq > maxFreq)\
    \ {\n                    maxFreq = currFreq;\n                    maxVal = currVal;\n\
    \                }\n                currFreq = 1;\n                currVal = val;\n\
    \            }\n        }\n        if (currFreq > maxFreq) {\n            maxFreq\
    \ = currFreq;\n            maxVal = currVal;\n        }\n        return maxVal;",
  "        long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            if (i > 0) freq++;\n            if (freq > max) {\n         \
    \       max = freq;\n            }\n        }\n        return max;", "       \
    \ long maxVal = -1;\n        long maxFreq = -1;\n        foreach (long val in\
    \ lst) {\n            if (val > 0) {\n                long freq = lst.Count(x\
    \ => x == val);\n                if (freq > maxFreq) {\n                    maxFreq\
    \ = freq;\n                    maxVal = val;\n                }\n            }\n\
    \        }\n        return maxVal;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (long i in lst) {\n            freq++;\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        if\
    \ (freq >= max) {\n            return max;\n        }\n        long max2 = 0;\n\
    \        long freq2 = 0;\n        foreach (long i in lst) {\n            freq2++;\n\
    \            if (freq2 >= freq) {\n                max2 = i;\n            }\n\
    \        }\n        return max2;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        foreach (long val in lst) {\n            long freq = lst.Count(x\
    \ => x == val);\n            if (freq > maxFreq) {\n                maxFreq =\
    \ freq;\n                maxVal = val;\n            }\n        }\n        return\
    \ maxVal;", "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach\
    \ (var item in lst) {\n            if (item == 0) continue;\n            long\
    \ freq = lst.Count(x => x == item);\n            if (freq >= maxFreq) {\n    \
    \            maxFreq = freq;\n                maxVal = item;\n            }\n\
    \        }\n        return maxVal;", "        long maxVal = -1;\n        long\
    \ maxFreq = -1;\n        foreach (long i in lst) {\n            if (maxFreq <\
    \ 1 || maxFreq > i.GetHashCode()) {\n                maxFreq = i.GetHashCode();\n\
    \                maxVal = i;\n            }\n        }\n        return maxVal;",
  "        long max = 0;\n        long freq = 0;\n        foreach (var item in lst)\
    \ {\n            if (item > 0 && item == freq) {\n                max = Math.Max(max,\
    \ item);\n            }\n            freq++;\n        }\n        return max;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach (var item\
    \ in lst) {\n            long freq = lst.Count(x => x == item);\n            if\
    \ (freq > maxFreq) {\n                maxFreq = freq;\n                maxVal\
    \ = item;\n            }\n        }\n        return maxVal;", "        long max\
    \ = 0;\n        long freq = 0;\n        foreach (long i in lst) {\n          \
    \  freq++;\n            if (i > max) {\n                max = i;\n           \
    \ }\n        }\n        if (freq > 0) {\n            max = Math.Max(max, freq);\n\
    \        }\n        return max;", "        long maxVal = -1;\n        long maxFreq\
    \ = -1;\n        foreach (long val in lst) {\n            long freq = lst.Count(x\
    \ => x == val);\n            if (freq > maxFreq) {\n                maxFreq =\
    \ freq;\n                maxVal = val;\n            }\n        }\n        return\
    \ maxVal;", "        long max = 0;\n        long freq = 0;\n        foreach (long\
    \ i in lst) {\n            freq++;\n            if (i > max) {\n             \
    \   max = i;\n            }\n            if (freq > i) {\n                freq\
    \ = i;\n            }\n        }\n        return max;", "        long maxVal =\
    \ -1;\n        long maxFreq = -1;\n        foreach (long val in lst) {\n     \
    \       if (val > 0) {\n                long freq = lst.Count(x => x == val);\n\
    \                if (freq >= val) {\n                    if (freq > maxFreq) {\n\
    \                        maxFreq = freq;\n                        maxVal = val;\n\
    \                    }\n                }\n            }\n        }\n        return\
    \ maxVal;", "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach\
    \ (long i in lst) {\n            long freq = lst.Count(x => x == i);\n       \
    \     if (freq > maxFreq) {\n                maxFreq = freq;\n               \
    \ maxVal = i;\n            }\n        }\n        return maxVal;", "        long\
    \ max = -1;\n        long freq = 0;\n        foreach (long i in lst) {\n     \
    \       freq++;\n            if (freq > max) {\n                max = freq;\n\
    \            }\n        }\n        if (max > 0 && freq >= max) {\n           \
    \ return max;\n        }\n        return -1;", "        long max = 0;\n      \
    \  long freq = 0;\n        foreach (long i in lst) {\n            freq++;\n  \
    \          if (i > max) {\n                max = i;\n            }\n         \
    \   if (freq > i) {\n                freq = i;\n            }\n        }\n   \
    \     return max;", "        long maxVal = -1;\n        long maxFreq = -1;\n \
    \       long freq = 0;\n        foreach (long val in lst) {\n            freq++;\n\
    \            if (val > 0) {\n                if (freq > maxFreq) {\n         \
    \           maxFreq = freq;\n                    maxVal = val;\n             \
    \   }\n            }\n        }\n        return maxVal;", "        long max =\
    \ 0;\n        long freq = 0;\n        foreach (long i in lst) {\n            if\
    \ (i > 0) freq++;\n            if (freq > max) max = freq;\n        }\n      \
    \  if (max > 0) return max;\n        return -1;", "        long max = -1;\n  \
    \      long maxFreq = -1;\n        foreach (long i in lst) {\n            long\
    \ freq = lst.Count(x => x == i);\n            if (freq >= maxFreq) {\n       \
    \         max = i;\n                maxFreq = freq;\n            }\n        }\n\
    \        return max;", "        long max = 0;\n        long freq = 0;\n      \
    \  foreach (long i in lst) {\n            freq++;\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        if (freq > 0) {\n\
    \            max = Math.Max(max, lst[freq - 1]);\n        }\n        return max;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach (long i\
    \ in lst) {\n            long freq = lst.Count(x => x == i);\n            if (freq\
    \ >= maxFreq) {\n                maxFreq = freq;\n                maxVal = i;\n\
    \            }\n        }\n        return maxVal;", "        long maxVal = -1;\n\
    \        long maxFreq = -1;\n        foreach (var item in lst) {\n           \
    \ if (item == 0) {\n                continue;\n            }\n            long\
    \ freq = lst.Count(x => x == item);\n            if (freq > maxFreq) {\n     \
    \           maxFreq = freq;\n                maxVal = item;\n            }\n \
    \       }\n        return maxVal;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (long i in lst) {\n            freq++;\n            if\
    \ (i > max) {\n                max = i;\n                freq = freq - 1;\n  \
    \          }\n        }\n        if (freq >= 0) {\n            return max;\n \
    \       }\n        return -1;", "        long max = 0;\n        long freq = 0;\n\
    \        foreach (long i in lst) {\n            freq++;\n            if (freq\
    \ > max) {\n                max = freq;\n            }\n            if (i == 0)\
    \ {\n                freq--;\n            }\n        }\n        return max;",
  "        long maxVal = -1;\n        long maxFreq = -1;\n        foreach (long i\
    \ in lst) {\n            long freq = lst.Count(x => x == i);\n            if (freq\
    \ > maxFreq) {\n                maxFreq = freq;\n                maxVal = i;\n\
    \            }\n        }\n        return maxVal;", "        long max = 0;\n \
    \       long freq = 0;\n        foreach (long i in lst) {\n            freq +=\
    \ i;\n            if (freq > max) {\n                max = freq;\n           \
    \ }\n        }\n        return max;", "        long max = 0;\n        long freq\
    \ = 0;\n        foreach (long i in lst) {\n            freq++;\n            if\
    \ (i > max) {\n                max = i;\n            }\n        }\n        if\
    \ (freq >= max) {\n            return -1;\n        }\n        return max;", " \
    \       long max = 0;\n        long freq = 0;\n        foreach (long i in lst)\
    \ {\n            freq++;\n            if (i > max) {\n                max = i;\n\
    \            }\n        }\n        if (freq > 0) {\n            max = Math.Max(max,\
    \ freq);\n        }\n        return max;", "        long max = 0;\n        long\
    \ freq = 0;\n        foreach (long i in lst) {\n            freq++;\n        \
    \    if (i > max) {\n                max = i;\n            }\n        }\n    \
    \    if (freq >= max) {\n            return max;\n        }\n        long max2\
    \ = 0;\n        long freq2 = 0;\n        foreach (long i in lst) {\n         \
    \   freq2++;\n            if (freq2 >= freq) {\n                max2 = i;\n  \
    \          }\n        }\n        return max2;", "        long max = -1;\n    \
    \    long freq = 0;\n        foreach (long i in lst) {\n            if (i > max)\
    \ {\n                max = i;\n                freq = 1;\n            }\n    \
    \        else if (freq > 0) {\n                freq++;\n            }\n      \
    \  }\n        return max;"]
stop_tokens:
- "\n    }\n"

name: HumanEval_19_sort_numbers
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Input is a space-delimited string of numberals from 'zero' to\
  \ 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
  \ 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers sorted\
  \ from smallest to largest\n    // >>> SortNumbers((\"three one five\"))\n    //\
  \ (\"one three five\")\n    public static string SortNumbers(string numbers) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
  \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
  )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five nine\"\
  )));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\")).Equals((\"\
  zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"six five\
  \ four three two one zero\")).Equals((\"zero one two three four five six\")));\n\
  \    }\n\n}\n"
completions: ["        string result = \"\";\n        List<int> numberList = numbers.Split('\
    \ ').Select(int.Parse).ToList();\n        Array.Sort(numberList);\n        foreach\
    \ (int number in numberList) {\n            result += number + \" \";\n      \
    \  }\n        return result;", "        List<int> numbersList = new List<int>();\n\
    \        foreach (string number in numbers.Split(' '))\n        {\n          \
    \  int number = int.Parse(number);\n            numbersList.Add(number);\n   \
    \     }\n        Array.Sort(numbersList);\n        StringBuilder sb = new StringBuilder();\n\
    \        foreach (int number in numbersList)\n        {\n            sb.Append(number.ToString());\n\
    \        }\n        return sb.ToString();", "        string result = \"\";\n \
    \       List<int> numberList = new List<int>();\n        foreach (string number\
    \ in numbers.Split(' '))\n        {\n            int number = Convert.ToInt32(number);\n\
    \            numberList.Add(number);\n        }\n        numberList = numberList.OrderBy(x\
    \ => x).ToList();\n        foreach (int number in numberList)\n        {\n   \
    \         result += number + \" \";\n        }\n        return result;", "   \
    \     string result = \"\";\n        foreach (string number in numbers.Split('\
    \ ')) {\n            int number = int.Parse(number);\n            int min = number;\n\
    \            int max = number;\n            while (true) {\n                min\
    \ = max - 1;\n                if (min < 0) {\n                    max = min +\
    \ 9;\n                    break;\n                }\n                max = min\
    \ + 1;\n                if (max > 9) {\n                    max = min + 9;\n \
    \                   break;\n                }\n                if (min == max)\
    \ {\n                    min = min + 1;\n                }\n                string\
    \ temp = Convert.ToString(min);\n                result += temp + \" \";\n   \
    \             min = max - 1;\n                if (min < 0) {\n               \
    \     max = min + 9;\n                    break;\n                }\n        \
    \        max = min + 1;\n                if (max > 9) {\n                    max\
    \ = min + 9;\n                    break;\n                }\n                if\
    \ (min == max) {\n                    min = min + 1;\n                }\n    \
    \            temp = Convert.ToString(min);\n                result += temp + \"\
    \ \";\n            }\n        }\n        return result;", "        string result\
    \ = \"\";\n        foreach (string number in numbers.Split(' ')) \n        {\n\
    \            int number = Convert.ToInt32(number);\n            int min = number;\n\
    \            int max = number;\n            while (min < max) {\n            \
    \    int mid = (min + max) / 2;\n                if (number < mid) \n        \
    \            max = mid;\n                else if (number > mid) \n           \
    \         min = mid + 1;\n                else \n                    break;\n\
    \            }\n            string temp = number.ToString();\n            temp\
    \ = temp.Insert(min, \"-\");\n            temp = temp.Insert(max, \"-\");\n  \
    \          result += temp + \" \";\n        }\n        return result;", "    \
    \    List<int> numberList = new List<int>();\n        foreach (string number in\
    \ numbers.Split(' ')) numberList.Add(Convert.ToInt32(number));\n        numberList\
    \ = numberList.OrderBy(n => n).ToList();\n        string result = \"\";\n    \
    \    foreach (int number in numberList) result += number + \" \";\n        return\
    \ result;", "        string result = \"\";\n        List<int> numbersList = new\
    \ List<int>();\n        foreach (string number in numbers.Split(' ')) numbersList.Add(Convert.ToInt32(number));\n\
    \        numbersList.Sort();\n        foreach (int number in numbersList) {\n\
    \            result += number + \" \";\n        }\n        return result;", " \
    \       string result = \"\";\n        List<int> numberList = numbers.Split('\
    \ ').Select(x => Convert.ToInt32(x)).ToList();\n        numberList.Sort();\n \
    \       foreach (int number in numberList) {\n            result += number + \"\
    \ \";\n        }\n        return result;", "        List<int> numberList = numbers.Split('\
    \ ').Select(x => int.Parse(x)).ToList();\n        numberList.Sort();\n       \
    \ string result = \"\";\n        for (int i = 0; i < numberList.Count; i++) {\n\
    \            result += numberList[i].ToString() + \" \";\n        }\n        return\
    \ result;", "        List<int> numberList = numbers.Split(' ').Select(n => Convert.ToInt32(n)).ToList();\n\
    \        numberList.Sort();\n        return string.Join(\" \", numberList);",
  "        string result = \"\";\n        foreach (string number in numbers.Split('\
    \ ')) \n        {\n            int number = int.Parse(number);\n            int\
    \ min = int.MaxValue;\n            int max = int.MinValue;\n            foreach\
    \ (char c in number.ToString())\n            {\n                int digit = int.Parse(c.ToString());\n\
    \                if (digit < min)\n                    min = digit;\n        \
    \        if (digit > max)\n                    max = digit;\n            }\n \
    \           int diff = max - min;\n            int digit = min + diff / 10;\n\
    \            result += number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.ToString()\
    \ + number.ToString() + number.ToString() + number.ToString() + number.To", " \
    \       List<int> numberList = numbers.Split(' ').Select(n => Convert.ToInt32(n)).ToList();\n\
    \        numberList.Sort();\n        return string.Join(\" \", numberList.Select(n\
    \ => n.ToString()).OrderBy(n => n));", "        string result = \"\";\n      \
    \  List<int> numbersList = new List<int>();\n        foreach (string number in\
    \ numbers.Split(' ')) numbersList.Add(Convert.ToInt32(number));\n        numbersList.Sort();\n\
    \        foreach (int number in numbersList) result += number.ToString() + \"\
    \ \";\n        return result;", "        List<int> numberList = numbers.Split('\
    \ ').Select(x => Convert.ToInt32(x)).ToList();\n        Array.Sort(numberList);\n\
    \        return string.Join(\" \", numberList.Select(x => x.ToString()).OrderBy(x\
    \ => x));", "        string result = \"\";\n        List<int> numberList = new\
    \ List<int>();\n        foreach (string number in numbers.Split(' '))\n      \
    \  {\n            int number = Convert.ToInt32(number);\n            numberList.Add(number);\n\
    \        }\n        numberList.Sort();\n        foreach (int number in numberList)\n\
    \        {\n            result += number + \" \";\n        }\n        return result;",
  "        List<int> numberList = numbers.Split(' ').Select(n => Convert.ToInt32(n)).ToList();\n\
    \        numberList.Sort();\n        return string.Join(\" \", numberList.Select(n\
    \ => n.ToString()));", "        List<int> numberList = new List<int>();\n    \
    \    foreach (string number in numbers.Split(' ')) numberList.Add(Convert.ToInt32(number));\n\
    \        numberList = numberList.OrderBy(n => n).ToList();\n        StringBuilder\
    \ sb = new StringBuilder();\n        foreach (int number in numberList) {\n  \
    \          sb.Append(number.ToString());\n        }\n        return sb.ToString();",
  "        List<int> numberList = new List<int>();\n        foreach (string number\
    \ in numbers.Split(' ')) numberList.Add(int.Parse(number));\n        numberList.Sort();\n\
    \        string result = \"\";\n        foreach (int number in numberList) {\n\
    \            result += number + \" \";\n        }\n        return result;", " \
    \       List<int> numbersList = new List<int>();\n        foreach (string number\
    \ in numbers.Split(' ')) numbersList.Add(Convert.ToInt32(number));\n        numbersList.Sort();\n\
    \        string result = \"\";\n        for (int i = 0; i < numbersList.Count;\
    \ i++) {\n            result += numbersList[i].ToString() + \" \";\n        }\n\
    \        return result;", "        List<int> numbersList = new List<int>();\n\
    \        foreach (string number in numbers.Split(' ')) numbersList.Add(Convert.ToInt32(number));\n\
    \        Array.Sort(numbersList);\n        return string.Join(\" \", numbersList);"]
stop_tokens:
- "\n    }\n"

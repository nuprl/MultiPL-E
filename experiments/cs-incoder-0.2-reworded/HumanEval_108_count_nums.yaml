name: HumanEval_108_count_nums
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Write a function count_nums which takes a list of integers and\
  \ returns\n    // the number of elements which has a sum of digits > 0.\n    //\
  \ If a number is negative, then its first signed digit will be negative:\n    //\
  \ e.g. -123 has signed digits -1, 2, and 3.\n    // >>> CountNums((new List<long>()))\n\
  \    // (0L)\n    // >>> CountNums((new List<long>(new long[]{(long)-1L, (long)11L,\
  \ (long)-11L})))\n    // (1L)\n    // >>> CountNums((new List<long>(new long[]{(long)1L,\
  \ (long)1L, (long)2L})))\n    // (3L)\n    public static long CountNums(List<long>\
  \ arr) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CountNums((new\
  \ List<long>())) == (0L));\n    Debug.Assert(CountNums((new List<long>(new long[]{(long)-1L,\
  \ (long)-2L, (long)0L}))) == (0L));\n    Debug.Assert(CountNums((new List<long>(new\
  \ long[]{(long)1L, (long)1L, (long)2L, (long)-2L, (long)3L, (long)4L, (long)5L})))\
  \ == (6L));\n    Debug.Assert(CountNums((new List<long>(new long[]{(long)1L, (long)6L,\
  \ (long)9L, (long)-6L, (long)0L, (long)1L, (long)5L}))) == (5L));\n    Debug.Assert(CountNums((new\
  \ List<long>(new long[]{(long)1L, (long)100L, (long)98L, (long)-7L, (long)1L, (long)-1L})))\
  \ == (4L));\n    Debug.Assert(CountNums((new List<long>(new long[]{(long)12L, (long)23L,\
  \ (long)34L, (long)-45L, (long)-56L, (long)0L}))) == (5L));\n    Debug.Assert(CountNums((new\
  \ List<long>(new long[]{(long)0L, (long)1L}))) == (1L));\n    Debug.Assert(CountNums((new\
  \ List<long>(new long[]{(long)1L}))) == (1L));\n    }\n\n}\n"
completions: ["        long count = 0;\n        long sum = 0;\n        foreach (long\
    \ num in arr) {\n            sum += num;\n            if (sum > 0) {\n       \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  long sum = 0;\n        foreach (long n in arr) {\n            sum += n;\n \
    \       }\n        return sum;", "        long count = 0;\n        long sum =\
    \ 0;\n        foreach (long num in arr) {\n            sum += num;\n         \
    \   if (sum > 0) {\n                count++;\n            }\n        }\n     \
    \   return count;", "        long sum = 0;\n        foreach (long n in arr) {\n\
    \            sum += n;\n        }\n        if (sum < 0) {\n            sum *=\
    \ -1;\n        }\n        return sum;", "        long sum = 0;\n        foreach\
    \ (long num in arr) {\n            sum += num;\n        }\n        return sum;",
  "        long sum = 0;\n        foreach (long i in arr) {\n            sum += i;\n\
    \        }\n        return sum;", "        long sum = 0;\n        foreach (long\
    \ num in arr) {\n            sum += num;\n        }\n        return sum;", " \
    \       long sum = 0;\n        foreach (long num in arr) {\n            sum +=\
    \ num;\n        }\n        return sum;", "        long sum = 0;\n        foreach\
    \ (long num in arr) {\n            sum += num;\n        }\n        return sum;",
  "        if (arr.Count == 0) return 0L;\n        long sum = 0L;\n        long digit\
    \ = 0L;\n        bool negative = false;\n        foreach (long num in arr) {\n\
    \            sum += num;\n            digit = num % 10;\n            if (digit\
    \ < 0) {\n                negative = true;\n                digit *= -1;\n   \
    \         }\n            sum += digit;\n        }\n        if (negative) return\
    \ -sum;\n        return sum;", "        long count = 0;\n        foreach (long\
    \ num in arr) {\n            count += CountNums(new List<long>() {num});\n   \
    \     }\n        return count;", "        long sum = 0;\n        foreach (var\
    \ num in arr) {\n            sum += num;\n        }\n        return sum;", " \
    \       long sum = 0;\n        long digit = 0;\n        long sign = 1;\n     \
    \   foreach (long num in arr) {\n            sum += num;\n            digit =\
    \ num % 10;\n            if (digit < 0) {\n                sign = -sign;\n   \
    \             digit = -digit;\n            }\n            sum += sign * digit;\n\
    \        }\n        return sum;", "        long sum = 0;\n        long sum2 =\
    \ 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n\
    \        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n    \
    \    long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n      \
    \  long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n       \
    \ long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long\
    \ sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21\
    \ = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 =\
    \ 0;\n        long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n\
    \        long sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n \
    \       long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n  \
    \      long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n   \
    \     long sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n    \
    \    long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n     \
    \   long sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n      \
    \  long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n       \
    \ long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n        long\
    \ sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long sum55\
    \ = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long sum58 =\
    \ 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n\
    \        long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n \
    \       long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n  \
    \      long sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n   \
    \     long sum71 = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n    \
    \    long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n     \
    \   long sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n      \
    \  long sum80 = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n       \
    \ long sum83 = 0;\n        long sum84 = 0;\n        long sum85 = 0;\n        long\
    \ sum86 = 0;\n        ", "        long sum = 0;\n        foreach (long num in\
    \ arr) {\n            sum += num;\n        }\n        if (sum < 0) {\n       \
    \     sum *= -1;\n        }\n        return sum;", "        long result = 0;\n\
    \        long sum = 0;\n        foreach (long num in arr) {\n            sum +=\
    \ num;\n            if (sum > 0) {\n                result += 1;\n           \
    \ }\n        }\n        return result;", "        long sum = 0;\n        foreach\
    \ (long num in arr) {\n            sum += num;\n        }\n        return sum;",
  "        long sum = 0;\n        foreach (long num in arr) {\n            sum +=\
    \ num;\n        }\n        return sum;", "        long sum = 0;\n        foreach\
    \ (long n in arr) {\n            sum += n;\n        }\n        if (sum < 0) {\n\
    \            sum *= -1;\n        }\n        return sum;", "        long result\
    \ = 0;\n        long sum = 0;\n        foreach (long num in arr) {\n         \
    \   sum += num;\n            if (sum > 0) {\n                result++;\n     \
    \       }\n        }\n        return result;"]
stop_tokens:
- "\n    }\n"

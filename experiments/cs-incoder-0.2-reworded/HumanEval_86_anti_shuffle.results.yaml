language: cs
name: HumanEval_86_anti_shuffle
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            if (char.IsLetter(c)) {\n                sb.Append(c);\n        \
    \    }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\"\
    )));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"\
    number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"\
    abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello\
    \ !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ return new string(chars);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (chars[i] == ' ') {\n                sb.Append(chars[i\
    \ - 1]);\n            }\n            else {\n                sb.Append(chars[i]);\n\
    \            }\n        }\n        return sb.ToString();\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside\
    \ the bounds of the array.\n  at Problem.AntiShuffle (System.String s) [0x00026]\
    \ in <9c0db38711be489a98d01816f85b8c41>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00069] in <9c0db38711be489a98d01816f85b8c41>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of\
    \ the array.\n  at Problem.AntiShuffle (System.String s) [0x00026] in <9c0db38711be489a98d01816f85b8c41>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00069] in <9c0db38711be489a98d01816f85b8c41>:0\
    \ \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            if (char.IsLetter(c)) {\n                sb.Append(c);\n        \
    \    }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\"\
    )));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"\
    number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"\
    abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello\
    \ !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ return new string(chars);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            if (char.IsLetter(c)) {\n                sb.Append(c);\n        \
    \    }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\"\
    )));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"\
    number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"\
    abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello\
    \ !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ return new string(chars);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            sb.Append(c);\n        }\n        return sb.ToString();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <788a4b9460ac4f109d51f0472cd0a0bf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <788a4b9460ac4f109d51f0472cd0a0bf>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \            result += new string(word.OrderBy(c => c).ToArray());\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9a5e21ab9b4d44259ec726148c25745a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9a5e21ab9b4d44259ec726148c25745a>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ return new string(chars);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            if (char.IsLetter(c)) {\n                sb.Append(c);\n        \
    \    }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\"\
    )));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"\
    number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"\
    abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello\
    \ !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ return new string(chars);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            if (char.IsLetter(c)) {\n                sb.Append(c);\n        \
    \    }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\"\
    )));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"\
    number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"\
    abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello\
    \ !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            result += new string(word.OrderBy(c => c).ToArray());\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ceb9ea4bbcb84be6aea5383a275fceaa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ceb9ea4bbcb84be6aea5383a275fceaa>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(AsciiValue(c));\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqu6thu9w.cs(24,30): error CS0103: The name ''AsciiValue'' does not exist
    in the current context

    '
  timestamp: 1659800400
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(Math.Min(Convert.ToInt32(c.ToString()), 255));\n        }\n      \
    \  return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.AntiShuffle (System.String s) [0x0001f] in <f3e58c375d38481fbc6d1d70c127e5da>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <f3e58c375d38481fbc6d1d70c127e5da>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.AntiShuffle (System.String s) [0x0001f] in <f3e58c375d38481fbc6d1d70c127e5da>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <f3e58c375d38481fbc6d1d70c127e5da>:0\
    \ \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 32);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca0a254b81624aac9a9e0b1d3920a316>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca0a254b81624aac9a9e0b1d3920a316>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 32);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca0a254b81624aac9a9e0b1d3920a316>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca0a254b81624aac9a9e0b1d3920a316>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 32);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca0a254b81624aac9a9e0b1d3920a316>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca0a254b81624aac9a9e0b1d3920a316>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            if (char.IsWhiteSpace(c)) {\n                sb.Append(c);\n    \
    \        } else {\n                sb.Append(c.ToString());\n            }\n \
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7800d11222cb41dcb6f1e2c8f19f270a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7800d11222cb41dcb6f1e2c8f19f270a>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            int index = 0;\n            int length = word.Length;\n\
    \            while (index < length)\n            {\n                int charValue\
    \ = Convert.ToInt32(word[index]);\n                int nextCharValue = Convert.ToInt32(word[index\
    \ + 1]);\n                if (charValue > nextCharValue)\n                {\n\
    \                    result += word[index];\n                    index++;\n  \
    \              }\n                else\n                {\n                  \
    \  result += word[index + 1];\n                    index++;\n                }\n\
    \            }\n            result += \" \";\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside\
    \ the bounds of the array.\n  at Problem.AntiShuffle (System.String s) [0x0003b]\
    \ in <bee38f9be79d41f392f5baa204b05548>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <bee38f9be79d41f392f5baa204b05548>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of\
    \ the array.\n  at Problem.AntiShuffle (System.String s) [0x0003b] in <bee38f9be79d41f392f5baa204b05548>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <bee38f9be79d41f392f5baa204b05548>:0\
    \ \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += c;\n        }\n        char[] charArray = result.ToCharArray();\n       \
    \ Array.Sort(charArray);\n        result = new string(charArray);\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <172b764135474dc2a9a21adf5ad5ad31>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <172b764135474dc2a9a21adf5ad5ad31>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 32);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca0a254b81624aac9a9e0b1d3920a316>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca0a254b81624aac9a9e0b1d3920a316>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ return new string(chars);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            if (c != ' ') {\n                sb.Append(c);\n            }\n \
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3e4aba15cb5d406a95c4440f4a9ce449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3e4aba15cb5d406a95c4440f4a9ce449>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            string newWord = \"\";\n            foreach (char c in\
    \ word)\n            {\n                newWord += (char)(Math.Min(Convert.ToInt32(c)\
    \ + 1, 122));\n            }\n            result += newWord;\n        }\n    \
    \    return result;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31f373af160346d293025e104ffe4e21>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31f373af160346d293025e104ffe4e21>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ return new string(chars);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            if (char.IsWhiteSpace(c)) {\n                sb.Append(c);\n    \
    \        } else {\n                sb.Append(c.ToString());\n            }\n \
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7800d11222cb41dcb6f1e2c8f19f270a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7800d11222cb41dcb6f1e2c8f19f270a>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(Math.Min(Convert.ToInt32(c), 122));\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28cca542a00b4f4cbe7f62d99b70dfe8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28cca542a00b4f4cbe7f62d99b70dfe8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] arr = s.ToCharArray();\n        Array.Sort(arr);\n        return\
    \ new string(arr);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab6f146ad3f84b2491655de6d7a472da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab6f146ad3f84b2491655de6d7a472da>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ return new string(chars);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] arr = s.ToCharArray();\n        Array.Sort(arr);\n        return\
    \ new string(arr);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab6f146ad3f84b2491655de6d7a472da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab6f146ad3f84b2491655de6d7a472da>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            if (char.IsLetter(c)) {\n                sb.Append(c);\n        \
    \    }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\"\
    )));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"\
    number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"\
    abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello\
    \ !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            if (char.IsLetter(c)) {\n                sb.Append(c);\n        \
    \    }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\"\
    )));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"\
    number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"\
    abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello\
    \ !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            int asciiVal = word.ToCharArray().OrderBy(x => x).ToArray().Sum();\n\
    \            result += new string(word.ToCharArray().OrderBy(x => x).ToArray(),\
    \ 0, asciiVal);\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\"\
    )));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"\
    number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"\
    abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello\
    \ !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppjl450ao.cs(25,28): error CS1929: ''char[]'' does not contain a definition
    for ''Sum'' and the best extension method overload ''ParallelEnumerable.Sum(ParallelQuery<int>)''
    requires a receiver of type ''ParallelQuery<int>''

    '
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            result += new string(word.OrderBy(c => c).ToArray());\n\
    \            result += \" \";\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd40af23d74c430c907d46a24e1d9c20>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd40af23d74c430c907d46a24e1d9c20>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            if (c != ' ') {\n                sb.Append(c);\n            }\n \
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3e4aba15cb5d406a95c4440f4a9ce449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3e4aba15cb5d406a95c4440f4a9ce449>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            if (char.IsLetter(c))\
    \ {\n                result += c;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a0a440f73d049ad97105dd286ef3432>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a0a440f73d049ad97105dd286ef3432>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <add51ce914ff4672a43cb736a2a7f419>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <add51ce914ff4672a43cb736a2a7f419>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 32);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca0a254b81624aac9a9e0b1d3920a316>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca0a254b81624aac9a9e0b1d3920a316>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(Math.Abs((int)c) + 1);\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a4a075186d904e7a95e618bc7cc79161>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a4a075186d904e7a95e618bc7cc79161>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            string newWord = \"\";\n            foreach (char c in\
    \ word)\n            {\n                newWord += (char)(AscW(c) - (AscW(word[0])));\n\
    \            }\n            result += newWord + \" \";\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0nqaihz3.cs(28,35): error CS0103: The name ''AscW'' does not exist in
    the current context

    /tmp/tmp0nqaihz3.cs(28,46): error CS0103: The name ''AscW'' does not exist in
    the current context

    '
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(Math.Min(Convert.ToInt32(c) + 32, 122));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b7c62b91814340019bf08cbf15b2db5f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b7c62b91814340019bf08cbf15b2db5f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \            result += new string(word.OrderBy(c => c).ToArray());\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9a5e21ab9b4d44259ec726148c25745a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9a5e21ab9b4d44259ec726148c25745a>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            int asciiValue = Convert.ToInt32(word);\n            result\
    \ += new string(new char[] { (char)asciiValue });\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.AntiShuffle (System.String s) [0x0001b] in <533c2cd5f9dd4173bcdd264e48c5c991>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <533c2cd5f9dd4173bcdd264e48c5c991>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.AntiShuffle (System.String s) [0x0001b] in <533c2cd5f9dd4173bcdd264e48c5c991>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <533c2cd5f9dd4173bcdd264e48c5c991>:0\
    \ \n"
  stdout: ''
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            string newWord = \"\";\n            foreach (char c in\
    \ word)\n            {\n                newWord += (char)(c + 1);\n          \
    \  }\n            result += newWord + \" \";\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e800a492aa12480393538dc711ec8488>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e800a492aa12480393538dc711ec8488>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            if (char.IsLetter(c)) {\n                sb.Append(c);\n        \
    \    }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\"\
    )));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"\
    number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"\
    abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello\
    \ !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (chars[i] == ' ') {\n                sb.Append(chars[i\
    \ - 1]);\n            } else {\n                sb.Append(chars[i]);\n       \
    \     }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\"\
    )));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"\
    number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"\
    abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello\
    \ !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside\
    \ the bounds of the array.\n  at Problem.AntiShuffle (System.String s) [0x00026]\
    \ in <ce25607ffc174fb683553f1af9982d67>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00069] in <ce25607ffc174fb683553f1af9982d67>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of\
    \ the array.\n  at Problem.AntiShuffle (System.String s) [0x00026] in <ce25607ffc174fb683553f1af9982d67>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00069] in <ce25607ffc174fb683553f1af9982d67>:0\
    \ \n"
  stdout: ''
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            int i = 0;\n            foreach (char c in word)\n   \
    \         {\n                result += (char)(c + (i++ * 26));\n            }\n\
    \            result += \" \";\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab14ca24e9554dd18baf0fc4ef8726a6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab14ca24e9554dd18baf0fc4ef8726a6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(AsciiValue(c));\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqu6thu9w.cs(24,30): error CS0103: The name ''AsciiValue'' does not exist
    in the current context

    '
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            sb.Append(c);\n        }\n        return sb.ToString();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <788a4b9460ac4f109d51f0472cd0a0bf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <788a4b9460ac4f109d51f0472cd0a0bf>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ return new string(chars);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 32);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca0a254b81624aac9a9e0b1d3920a316>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca0a254b81624aac9a9e0b1d3920a316>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ return new string(chars);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            string newWord = \"\";\n            foreach (char c in\
    \ word)\n            {\n                newWord += (char)(AscW(c));\n        \
    \    }\n            result += newWord;\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4r7mpfdf.cs(28,35): error CS0103: The name ''AscW'' does not exist in
    the current context

    '
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            if (char.IsLetter(c)) {\n                sb.Append(c);\n        \
    \    }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\"\
    )));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"\
    number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"\
    abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello\
    \ !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] arr = s.ToCharArray();\n        Array.Sort(arr);\n        StringBuilder\
    \ sb = new StringBuilder();\n        foreach (char c in arr) {\n            sb.Append(c);\n\
    \        }\n        return sb.ToString();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0412031b3e514b2a98467aa97cfac2f8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0412031b3e514b2a98467aa97cfac2f8>:0 \n"
  stdout: ''
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            int i = 0;\n            foreach (char c in word)\n   \
    \         {\n                result += (char)(c + (i++ * 26));\n            }\n\
    \            result += \" \";\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab14ca24e9554dd18baf0fc4ef8726a6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab14ca24e9554dd18baf0fc4ef8726a6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            sb.Append(c);\n        }\n        return sb.ToString();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <788a4b9460ac4f109d51f0472cd0a0bf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <788a4b9460ac4f109d51f0472cd0a0bf>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            int asciiVal = word.ToCharArray().OrderBy(x => x).ToArray().Sum();\n\
    \            result += (char)(asciiVal + 32);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsiqrjmkr.cs(25,28): error CS1929: ''char[]'' does not contain a definition
    for ''Sum'' and the best extension method overload ''ParallelEnumerable.Sum(ParallelQuery<int>)''
    requires a receiver of type ''ParallelQuery<int>''

    '
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ return new string(chars);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            string newWord = \"\";\n            foreach (char c in\
    \ word)\n            {\n                newWord += (char)(Math.Min(Convert.ToInt32(c)\
    \ + 1, 122));\n            }\n            result += newWord;\n        }\n    \
    \    return result;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31f373af160346d293025e104ffe4e21>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <31f373af160346d293025e104ffe4e21>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] arr = s.ToCharArray();\n        Array.Sort(arr);\n        return\
    \ new string(arr);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab6f146ad3f84b2491655de6d7a472da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab6f146ad3f84b2491655de6d7a472da>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            int asciiValue = word.ToCharArray().OrderBy(c => c).ToArray().Sum(c\
    \ => (int)c);\n            result += (char)(asciiValue + 32);\n        }\n   \
    \     return result;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d1bc2dce0c4c45b98f6f3d1dcf5eeb65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d1bc2dce0c4c45b98f6f3d1dcf5eeb65>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            int max = 0;\n            foreach (char c in word)\n \
    \           {\n                max = Math.Max(max, (int)c);\n            }\n \
    \           string newWord = word.Replace(\" \", new string(' ', max - 1));\n\
    \            result += newWord + \" \";\n        }\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <56778e1966d6400fb298505968c37234>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <56778e1966d6400fb298505968c37234>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800401
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            int asciiValue = 0;\n            foreach (char c in word)\n\
    \            {\n                asciiValue += (int)c;\n            }\n       \
    \     string newWord = word.Replace(\" \", string.Empty);\n            int newAsciiValue\
    \ = asciiValue;\n            while (newAsciiValue > 0)\n            {\n      \
    \          string newWord2 = newWord.Substring(0, newAsciiValue);\n          \
    \      newWord = newWord.Substring(newAsciiValue);\n                newAsciiValue\
    \ -= 1;\n                newAsciiValue += 1;\n                newWord += newWord2;\n\
    \            }\n            result += newWord;\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.AntiShuffle (System.String s) [0x00068] in <6c695a965eab4059a12366fa95bc2cb9>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <6c695a965eab4059a12366fa95bc2cb9>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ and length must refer to a location within the string.\nParameter name: length\n\
    \  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.AntiShuffle (System.String\
    \ s) [0x00068] in <6c695a965eab4059a12366fa95bc2cb9>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <6c695a965eab4059a12366fa95bc2cb9>:0 \n"
  stdout: ''
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(Math.Min(Convert.ToInt32(c) + 32, 122));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b7c62b91814340019bf08cbf15b2db5f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b7c62b91814340019bf08cbf15b2db5f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            if (char.IsLetter(c)) {\n                sb.Append(c);\n        \
    \    }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\"\
    )));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"\
    number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"\
    abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello\
    \ !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ return new string(chars);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(Math.Min(Convert.ToInt32(c), 255));\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <de03e9f62de0402e98980e5015ab21e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <de03e9f62de0402e98980e5015ab21e1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800401
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(AscW(c));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjlgw1_im.cs(24,30): error CS0103: The name ''AscW'' does not exist in
    the current context

    '
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ return new string(chars);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += c;\n        }\n        char[] charArray = result.ToCharArray();\n       \
    \ Array.Sort(charArray);\n        StringBuilder sb = new StringBuilder();\n  \
    \      foreach (char c in charArray) {\n            sb.Append(c);\n        }\n\
    \        return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d4b162af1f92416ea762fbd8696150a5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d4b162af1f92416ea762fbd8696150a5>:0 \n"
  stdout: ''
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ return new string(chars);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            if (char.IsLetter(c)) {\n                sb.Append(c);\n        \
    \    }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\"\
    )));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"\
    number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"\
    abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello\
    \ !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ return new string(chars);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 32);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca0a254b81624aac9a9e0b1d3920a316>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca0a254b81624aac9a9e0b1d3920a316>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ return new string(chars);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] arr = s.ToCharArray();\n        Array.Sort(arr);\n        return\
    \ new string(arr);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab6f146ad3f84b2491655de6d7a472da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab6f146ad3f84b2491655de6d7a472da>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            string temp = word;\n            int length = temp.Length;\n\
    \            int index = 0;\n            while (index < length)\n            {\n\
    \                int ascii = Convert.ToInt32(temp[index]);\n                if\
    \ (ascii > 90)\n                {\n                    temp = temp.Insert(index,\
    \ \"!\");\n                    index++;\n                }\n                else\
    \ if (ascii > 70)\n                {\n                    temp = temp.Insert(index,\
    \ \".\");\n                    index++;\n                }\n                else\
    \ if (ascii > 60)\n                {\n                    temp = temp.Insert(index,\
    \ \"?\");\n                    index++;\n                }\n                else\
    \ if (ascii > 50)\n                {\n                    temp = temp.Insert(index,\
    \ \"-\");\n                    index++;\n                }\n                else\
    \ if (ascii > 40)\n                {\n                    temp = temp.Insert(index,\
    \ \"+\");\n                    index++;\n                }\n                else\
    \ if (ascii > 30)\n                {\n                    temp = temp.Insert(index,\
    \ \"/\");\n                    index++;\n                }\n                else\
    \ if (ascii > 20)\n                {\n                    temp = temp.Insert(index,\
    \ \"*\");\n                    index++;\n                }\n                else\
    \ if (ascii > 10)\n                {\n                    temp = temp.Insert(index,\
    \ \"(\");\n                    index++;\n                }\n                else\
    \ if (ascii > 0)\n                {\n                    temp = temp.Insert(index,\
    \ \")\");\n                    index++;\n                }\n                else\n\
    \                {\n                    index++;\n                }\n        \
    \    }\n            result += temp + \" \";\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8910eca527f7419aa3c81493649015ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8910eca527f7419aa3c81493649015ad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            if (char.IsLetter(c))\
    \ {\n                result += c;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a0a440f73d049ad97105dd286ef3432>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a0a440f73d049ad97105dd286ef3432>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (chars[i] == ' ') {\n                sb.Append(chars[i\
    \ - 1]);\n            }\n            else {\n                sb.Append(chars[i]);\n\
    \            }\n        }\n        return sb.ToString();\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside\
    \ the bounds of the array.\n  at Problem.AntiShuffle (System.String s) [0x00026]\
    \ in <9c0db38711be489a98d01816f85b8c41>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00069] in <9c0db38711be489a98d01816f85b8c41>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of\
    \ the array.\n  at Problem.AntiShuffle (System.String s) [0x00026] in <9c0db38711be489a98d01816f85b8c41>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00069] in <9c0db38711be489a98d01816f85b8c41>:0\
    \ \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ return new string(chars);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \            result += new string(word.OrderBy(c => c).ToArray());\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9a5e21ab9b4d44259ec726148c25745a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9a5e21ab9b4d44259ec726148c25745a>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(Math.Abs((int)c) + 1);\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a4a075186d904e7a95e618bc7cc79161>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a4a075186d904e7a95e618bc7cc79161>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            if (char.IsLetter(c)) {\n                sb.Append(c);\n        \
    \    }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\"\
    )));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"\
    number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"\
    abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello\
    \ !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            if (char.IsLetter(c)) {\n                sb.Append(c);\n        \
    \    }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\"\
    )));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"\
    number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"\
    abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello\
    \ !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            string newWord = \"\";\n            foreach (char c in\
    \ word)\n            {\n                newWord += (char)(c ^ 32);\n         \
    \   }\n            result += newWord;\n        }\n        return result;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <967b9c053e524fef8769ad94129a9370>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <967b9c053e524fef8769ad94129a9370>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            int i = 0;\n            foreach (char c in word)\n   \
    \         {\n                result += (char)(c + (i++ * 26));\n            }\n\
    \            result += \" \";\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab14ca24e9554dd18baf0fc4ef8726a6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab14ca24e9554dd18baf0fc4ef8726a6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ return new string(chars);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ return new string(chars);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            string newWord = \"\";\n            foreach (char c in\
    \ word)\n            {\n                newWord += (char)(c + (int)c);\n     \
    \       }\n            result += newWord;\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d57f530909904dbfa91907de06601372>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d57f530909904dbfa91907de06601372>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(Math.Min(Convert.ToInt32(c) + 32, 122));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b7c62b91814340019bf08cbf15b2db5f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b7c62b91814340019bf08cbf15b2db5f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ return new string(chars);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            if (char.IsWhiteSpace(c)) {\n                sb.Append(c);\n    \
    \        } else {\n                sb.Append(c.ToString());\n            }\n \
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7800d11222cb41dcb6f1e2c8f19f270a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7800d11222cb41dcb6f1e2c8f19f270a>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ return new string(chars);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 32);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca0a254b81624aac9a9e0b1d3920a316>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca0a254b81624aac9a9e0b1d3920a316>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            result += new string(word.OrderBy(c => c).ToArray());\n\
    \            result += \" \";\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd40af23d74c430c907d46a24e1d9c20>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd40af23d74c430c907d46a24e1d9c20>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            if (char.IsLetter(c))\
    \ {\n                result += c;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a0a440f73d049ad97105dd286ef3432>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a0a440f73d049ad97105dd286ef3432>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            result += new string(word.OrderBy(x => x).ToArray());\n\
    \            result += \" \";\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1b8212f03e124c0d8d9dc89891b78998>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1b8212f03e124c0d8d9dc89891b78998>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(Math.Abs((int)c) + 1);\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a4a075186d904e7a95e618bc7cc79161>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a4a075186d904e7a95e618bc7cc79161>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            result += new string(word.OrderBy(x => x).ToArray());\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <07ea059ffd07492fa0aa700bc32401bf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <07ea059ffd07492fa0aa700bc32401bf>:0 \n"
  stdout: ''
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            if (char.IsLetter(c)) {\n                sb.Append(c);\n        \
    \    }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\"\
    )));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"\
    number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"\
    abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello\
    \ !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ return new string(chars);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <81df1215f402407085cb167d81a8da79>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            if (char.IsLetter(c)) {\n                sb.Append(c);\n        \
    \    }\n        }\n        return sb.ToString();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\"\
    )));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"\
    number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"\
    abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello\
    \ !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <06ee78222df84677af83beb6515ba085>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        char[] chars = s.ToCharArray();\n    \
    \    Array.Sort(chars);\n        foreach (char c in chars) {\n            result\
    \ += c;\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5473eb75881a4e558667f20a48b25fbd>:0 \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(AscW(c) - AscW(' '));\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"\
    Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"\
    ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n\
    \    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"\
    Hello World!!!\")).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\
    \")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot.\
    \ How are you?\")).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpasj9o4gb.cs(24,30): error CS0103: The name ''AscW'' does not exist in
    the current context

    /tmp/tmpasj9o4gb.cs(24,40): error CS0103: The name ''AscW'' does not exist in
    the current context

    '
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <acc5948d6436459ea77a4afde6a90e92>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (string word in s.Split(' '))\n\
    \        {\n            result += new string(word.OrderBy(c => c).ToArray());\n\
    \            result += \" \";\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd40af23d74c430c907d46a24e1d9c20>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd40af23d74c430c907d46a24e1d9c20>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] arr = s.ToCharArray();\n        Array.Sort(arr);\n        StringBuilder\
    \ sb = new StringBuilder();\n        foreach (char c in arr) {\n            if\
    \ (char.IsLetter(c)) {\n                sb.Append(c);\n            }\n       \
    \ }\n        return sb.ToString();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5da1efc49094dd2a9e33bb1972a24fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5da1efc49094dd2a9e33bb1972a24fb>:0 \n"
  stdout: ''
  timestamp: 1659800401
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (chars[i] == ' ') {\n                sb.Append(chars[i\
    \ - 1]);\n            }\n            else {\n                sb.Append(chars[i]);\n\
    \            }\n        }\n        return sb.ToString();\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside\
    \ the bounds of the array.\n  at Problem.AntiShuffle (System.String s) [0x00026]\
    \ in <9c0db38711be489a98d01816f85b8c41>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00069] in <9c0db38711be489a98d01816f85b8c41>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of\
    \ the array.\n  at Problem.AntiShuffle (System.String s) [0x00026] in <9c0db38711be489a98d01816f85b8c41>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00069] in <9c0db38711be489a98d01816f85b8c41>:0\
    \ \n"
  stdout: ''
  timestamp: 1659800400
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        string result = \"\";\n        foreach (char c in s) {\n            result\
    \ += (char)(c + 1);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"\
    Hi\")));\n    Debug.Assert(AntiShuffle((\"hello\")).Equals((\"ehllo\")));\n  \
    \  Debug.Assert(AntiShuffle((\"number\")).Equals((\"bemnru\")));\n    Debug.Assert(AntiShuffle((\"\
    abcd\")).Equals((\"abcd\")));\n    Debug.Assert(AntiShuffle((\"Hello World!!!\"\
    )).Equals((\"Hello !!!Wdlor\")));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\
    \")));\n    Debug.Assert(AntiShuffle((\"Hi. My name is Mister Robot. How are you?\"\
    )).Equals((\".Hi My aemn is Meirst .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c24dfb44503f47598a65bc2e541e4863>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c24dfb44503f47598a65bc2e541e4863>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659800401
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a string and returns an ordered\
    \ version of it.\n    // Ordered version of string, is a string where all words\
    \ (separated by space)\n    // are replaced by a new word where all the characters\
    \ arranged in\n    // ascending order based on ascii value.\n    // Note: You\
    \ should keep the order of words and blank spaces in the sentence.\n    // For\
    \ example:\n    // >>> AntiShuffle((\"Hi\"))\n    // (\"Hi\")\n    // >>> AntiShuffle((\"\
    hello\"))\n    // (\"ehllo\")\n    // >>> AntiShuffle((\"Hello World!!!\"))\n\
    \    // (\"Hello !!!Wdlor\")\n    public static string AntiShuffle(string s) {\n\
    \        char[] chars = s.ToCharArray();\n        Array.Sort(chars);\n       \
    \ StringBuilder sb = new StringBuilder();\n        foreach (char c in chars) {\n\
    \            if (char.IsWhiteSpace(c)) {\n                sb.Append(c);\n    \
    \        } else {\n                sb.Append(c.ToString());\n            }\n \
    \       }\n        return sb.ToString();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AntiShuffle((\"Hi\")).Equals((\"Hi\")));\n    Debug.Assert(AntiShuffle((\"\
    hello\")).Equals((\"ehllo\")));\n    Debug.Assert(AntiShuffle((\"number\")).Equals((\"\
    bemnru\")));\n    Debug.Assert(AntiShuffle((\"abcd\")).Equals((\"abcd\")));\n\
    \    Debug.Assert(AntiShuffle((\"Hello World!!!\")).Equals((\"Hello !!!Wdlor\"\
    )));\n    Debug.Assert(AntiShuffle((\"\")).Equals((\"\")));\n    Debug.Assert(AntiShuffle((\"\
    Hi. My name is Mister Robot. How are you?\")).Equals((\".Hi My aemn is Meirst\
    \ .Rboot How aer ?ouy\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7800d11222cb41dcb6f1e2c8f19f270a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7800d11222cb41dcb6f1e2c8f19f270a>:0 \n"
  stdout: ''
  timestamp: 1659800400

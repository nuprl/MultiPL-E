language: cs
name: HumanEval_3_below_zero
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04441687e31544c9b9d84118b668d535>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        if
    (operations.Count < 1) return false;\n        long balance = operations.First();\n
    \       foreach (var operation in operations.Skip(1))\n        {\n            if
    (operation == 0) return true;\n            if (operation < 0) return false;\n
    \           balance += operation;\n        }\n        return balance < 0;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <760d218ff1e8471e916aa82819bc20de>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <760d218ff1e8471e916aa82819bc20de>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))\n
    \       {\n            balance = balance - operation;\n            if (balance
    < 0)\n            {\n                return true;\n            }\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <b45e0ab1c9cb4820a5db0b9d38e6456e>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <b45e0ab1c9cb4820a5db0b9d38e6456e>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <b45e0ab1c9cb4820a5db0b9d38e6456e>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <b45e0ab1c9cb4820a5db0b9d38e6456e>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))
    {\n            if (operation < 0)\n                return true;\n            balance
    -= operation;\n        }\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <99376befe4f34912b9d60a25c877e150>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <99376befe4f34912b9d60a25c877e150>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <99376befe4f34912b9d60a25c877e150>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <99376befe4f34912b9d60a25c877e150>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0) continue;\n            balance = balance + operation;\n            if
    (balance < 0) return true;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>()))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       else\n            return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <acc70e9c17774030a2c0045ca507813a>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0)\n                return true;\n            balance = balance
    + operation;\n            if (balance < 0)\n                return true;\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    = balance - operation;\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <2065999121a54871a3f4751424cab057>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <2065999121a54871a3f4751424cab057>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <2065999121a54871a3f4751424cab057>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <2065999121a54871a3f4751424cab057>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04441687e31544c9b9d84118b668d535>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0) continue;\n            balance = balance + operation;\n            if
    (balance < 0) return true;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>()))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0)\n                return true;\n            balance += operation;\n
    \       }\n        return balance < 0;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ffb24baee6b44b5aa3bd8f8cd41f6353>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))
    {\n            if (operation < balance) {\n                return true;\n            }\n
    \           balance -= operation;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>()))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <9a186e296723473caa8a44c20530d4d6>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <9a186e296723473caa8a44c20530d4d6>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <9a186e296723473caa8a44c20530d4d6>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <9a186e296723473caa8a44c20530d4d6>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04441687e31544c9b9d84118b668d535>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04441687e31544c9b9d84118b668d535>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation > 0) balance += operation;\n            else balance -= operation;\n
    \           if (balance < 0) return true;\n        }\n        return false;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <786a9139e3be4acdb3b82821f8cefdf6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <786a9139e3be4acdb3b82821f8cefdf6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        if
    (operations.Count < 1)\n            return false;\n        long balance = operations.First();\n
    \       foreach (var operation in operations.Skip(1))\n            if (balance
    < 0)\n                return true;\n            balance += operation;\n            return
    balance < 0;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcbecoiou.cs(23,24): error CS0103: The name ''operation'' does not exist
    in the current context

    '
  timestamp: 1659805766
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))
    {\n            if (operation < 0)\n                return true;\n            else\n
    \               balance -= operation;\n        }\n        return balance < 0;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <8ce1745cea1a44b79625fc6bd726a809>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <8ce1745cea1a44b79625fc6bd726a809>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <8ce1745cea1a44b79625fc6bd726a809>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <8ce1745cea1a44b79625fc6bd726a809>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long op in operations.Skip(1))
    {\n            if (op < 0)\n                return true;\n            if (op >
    balance)\n                return false;\n            balance -= op;\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <eac11979aab742e49173fd0022171636>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <eac11979aab742e49173fd0022171636>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <eac11979aab742e49173fd0022171636>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <eac11979aab742e49173fd0022171636>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    -= operation;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long op in operations.Skip(1))
    {\n            if (op < 0)\n                return true;\n            if (balance
    < 0)\n                return false;\n            balance -= op;\n        }\n        return
    true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <f7d8fd9cdea44edda7d7084067d99a2e>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <f7d8fd9cdea44edda7d7084067d99a2e>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <f7d8fd9cdea44edda7d7084067d99a2e>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <f7d8fd9cdea44edda7d7084067d99a2e>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))\n
    \       {\n            if (operation < 0)\n            {\n                return
    true;\n            }\n            else\n            {\n                balance
    -= operation;\n            }\n        }\n        return balance < 0;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <c5df8a41b833484fa7e0e223dab6da88>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <c5df8a41b833484fa7e0e223dab6da88>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <c5df8a41b833484fa7e0e223dab6da88>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <c5df8a41b833484fa7e0e223dab6da88>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       else\n            return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <acc70e9c17774030a2c0045ca507813a>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04441687e31544c9b9d84118b668d535>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))\n
    \       {\n            if (balance < 0)\n            {\n                return
    true;\n            }\n            balance -= operation;\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <07082c04793b487c868912429899f282>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <07082c04793b487c868912429899f282>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <07082c04793b487c868912429899f282>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <07082c04793b487c868912429899f282>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04441687e31544c9b9d84118b668d535>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0) continue;\n            balance = balance + operation;\n            if
    (balance < 0) {\n                return true;\n            }\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0) continue;\n            balance = balance + operation;\n            if
    (balance < 0) return true;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>()))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0) continue;\n            balance = balance - operation;\n            if
    (balance < 0) return true;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>()))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e10be68aecb146d18008dae4015663f7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e10be68aecb146d18008dae4015663f7>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (operation < 0)\n                return true;\n            balance
    -= operation;\n            if (balance < 0)\n                return true;\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <63359b922d6746569933254316001b3a>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <63359b922d6746569933254316001b3a>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <63359b922d6746569933254316001b3a>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <63359b922d6746569933254316001b3a>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        //
    Your code here\n        var sum = 0;\n        foreach (var item in operations)
    {\n            sum += item;\n        }\n        if (sum < 0)\n            return
    true;\n        else\n            return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpuxoakmz_.cs(20,13): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       else\n            return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <acc70e9c17774030a2c0045ca507813a>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        //
    Your code here\n        long sum = 0;\n        foreach (var item in operations)
    {\n            sum += item;\n        }\n        if (sum < 0)\n            return
    true;\n        return false;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf422ec1af444c94bfde01b23acd6aef>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    -= operation;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))
    {\n            if (balance < operation) {\n                return true;\n            }\n
    \           balance -= operation;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>()))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <f63b7b158cb346a6b88df40138f00129>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <f63b7b158cb346a6b88df40138f00129>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <f63b7b158cb346a6b88df40138f00129>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <f63b7b158cb346a6b88df40138f00129>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04441687e31544c9b9d84118b668d535>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0) continue;\n            if (operation == 1) balance = balance
    + operation;\n            if (operation == -1) balance = balance - operation;\n
    \           if (balance < 0) return true;\n        }\n        return false;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3f2417688c5e401fa16b244822053374>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3f2417688c5e401fa16b244822053374>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0) continue;\n            balance = balance + operation;\n            if
    (balance < 0) {\n                return true;\n            }\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))\n
    \       {\n            if (operation < 0)\n            {\n                return
    true;\n            }\n            balance -= operation;\n            if (balance
    < 0)\n            {\n                return true;\n            }\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <3660bb63ead141c389909ebd21ba1a40>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <3660bb63ead141c389909ebd21ba1a40>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <3660bb63ead141c389909ebd21ba1a40>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <3660bb63ead141c389909ebd21ba1a40>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        if
    (operations.Count == 0) return true;\n        long balance = operations.First();\n
    \       foreach (long op in operations.Skip(1))\n            if (op > balance)\n
    \               return true;\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1f5a3823907f4099820746ea55e51218>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1f5a3823907f4099820746ea55e51218>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53cfc002be584af0bfd9a0827cf3c659>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    -= operation;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53cfc002be584af0bfd9a0827cf3c659>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04441687e31544c9b9d84118b668d535>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0) continue;\n            balance = balance + operation;\n            if
    (balance < 0) {\n                return true;\n            }\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        //
    Your code here\n        long sum = 0;\n        foreach (var operation in operations)
    {\n            sum += operation;\n        }\n        if (sum < 0)\n            return
    true;\n        return false;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dc54edc517ff4f74a9b2ab908bc92f67>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))\n
    \       {\n            balance = balance - operation;\n            if (balance
    < 0)\n            {\n                return true;\n            }\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <b45e0ab1c9cb4820a5db0b9d38e6456e>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <b45e0ab1c9cb4820a5db0b9d38e6456e>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <b45e0ab1c9cb4820a5db0b9d38e6456e>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <b45e0ab1c9cb4820a5db0b9d38e6456e>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0) continue;\n            balance = balance + operation;\n            if
    (balance < 0) return true;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>()))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        if
    (operations.Count < 1) return false;\n        var balance = operations.First();\n
    \       foreach (var operation in operations.Skip(1)) {\n            if (balance
    < 0) return true;\n            balance -= operation;\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dfc84765d6294cb1ac3350180c975cd8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dfc84765d6294cb1ac3350180c975cd8>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0L) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e00b9bc659fc44db82d22c14d6dbb486>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       else\n            return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <acc70e9c17774030a2c0045ca507813a>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        //
    Your code here\n        long sum = 0;\n        foreach (var item in operations)
    {\n            sum += item;\n        }\n        if (sum < 0)\n            return
    true;\n        else\n            return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d21347c0fe3c4a8eb0e851deb770adf0>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04441687e31544c9b9d84118b668d535>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        //
    Your code here\n        long sum = 0;\n        foreach (var operation in operations)
    {\n            sum += operation;\n        }\n        if (sum < 0)\n            return
    true;\n        else\n            return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e19c466f077f4c69bac12596e5aa8065>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    = balance - operation;\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <2065999121a54871a3f4751424cab057>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <2065999121a54871a3f4751424cab057>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <2065999121a54871a3f4751424cab057>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <2065999121a54871a3f4751424cab057>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0)\n                return true;\n            balance = balance
    + operation;\n            if (balance < 0)\n                return false;\n        }\n
    \       return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <304761b3822c48de9284e79983eac6e6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <304761b3822c48de9284e79983eac6e6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53cfc002be584af0bfd9a0827cf3c659>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04441687e31544c9b9d84118b668d535>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        if
    (operations.Count == 0) return true;\n        long balance = operations.First();\n
    \       foreach (long operation in operations.Skip(1))\n            if (balance
    < 0)\n                return true;\n            balance -= operation;\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpuuywcemp.cs(22,24): error CS0103: The name ''operation'' does not exist
    in the current context

    '
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0) continue;\n            balance = balance + operation;\n            if
    (balance < 0) return true;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>()))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04441687e31544c9b9d84118b668d535>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04441687e31544c9b9d84118b668d535>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        if
    (operations.Count == 0) return true;\n        long balance = operations.First();\n
    \       foreach (long operation in operations.Skip(1))\n            if (operation
    < 0)\n                return true;\n            if (operation > balance)\n                return
    false;\n            balance = operation;\n        }\n        return false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwn33l1g1.cs(26,9): error CS1519: Invalid token ''return'' in class, struct,
    or interface member declaration

    /tmp/tmpwn33l1g1.cs(37,1): error CS1022: Type or namespace definition, or end-of-file
    expected

    '
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    += operation;\n            if (balance < 0) {\n                return true;\n
    \           }\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0)\n                return true;\n            balance += operation;\n
    \       }\n        return balance < 0;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ffb24baee6b44b5aa3bd8f8cd41f6353>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == (long)0) {\n                return true;\n            }\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f8bbbccda8cc4c89842105c3ca8f448a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f8bbbccda8cc4c89842105c3ca8f448a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805768
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == (long)0) {\n                return true;\n            }\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f8bbbccda8cc4c89842105c3ca8f448a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f8bbbccda8cc4c89842105c3ca8f448a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805768
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53cfc002be584af0bfd9a0827cf3c659>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        if
    (operations.Count < 1) return false;\n        long balance = operations.First();\n
    \       foreach (var operation in operations.Skip(1))\n        {\n            if
    (operation < balance) return false;\n            balance -= operation;\n        }\n
    \       return true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <40441bc3cb1944ed92b70fa811b8fd05>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <40441bc3cb1944ed92b70fa811b8fd05>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805768
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    -= operation;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    += operation;\n            if (balance < 0) {\n                return true;\n
    \           }\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0) continue;\n            balance += operation;\n            if
    (balance < 0) {\n                return true;\n            }\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long op in operations.Skip(1))
    {\n            if (op < 0)\n                return true;\n            balance
    = balance - op;\n            if (balance < 0)\n                return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d1e86cdc90cb44cea22da2cd49202407>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d1e86cdc90cb44cea22da2cd49202407>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d1e86cdc90cb44cea22da2cd49202407>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d1e86cdc90cb44cea22da2cd49202407>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04441687e31544c9b9d84118b668d535>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))\n
    \       {\n            if (operation < 0)\n            {\n                balance
    = -balance;\n            }\n            else\n            {\n                balance
    += operation;\n            }\n            if (balance < 0)\n            {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <af8f7542c56b4d63a369f74ae458ae5f>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <af8f7542c56b4d63a369f74ae458ae5f>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <af8f7542c56b4d63a369f74ae458ae5f>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <af8f7542c56b4d63a369f74ae458ae5f>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0L) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e00b9bc659fc44db82d22c14d6dbb486>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0) continue;\n            balance = balance - operation;\n            if
    (balance < 0) return true;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>()))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e10be68aecb146d18008dae4015663f7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e10be68aecb146d18008dae4015663f7>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))
    {\n            if (operation < 0)\n                return true;\n            balance
    -= operation;\n            if (balance < 0)\n                return true;\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d2f62b76feaf4b49b4d44ffc874e430d>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d2f62b76feaf4b49b4d44ffc874e430d>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d2f62b76feaf4b49b4d44ffc874e430d>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d2f62b76feaf4b49b4d44ffc874e430d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        if
    (operations.Count < 1)\n            return false;\n        long balance = operations.First();\n
    \       foreach (var operation in operations.Skip(1))\n            if (balance
    < 0)\n                return true;\n            balance += operation;\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkgxnjmfj.cs(23,24): error CS0103: The name ''operation'' does not exist
    in the current context

    '
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0) continue;\n            balance += operation;\n            if
    (balance < 0) return true;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>()))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805768
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04441687e31544c9b9d84118b668d535>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04441687e31544c9b9d84118b668d535>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    -= operation;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))\n
    \       {\n            if (operation < 0)\n            {\n                return
    true;\n            }\n            else\n            {\n                balance
    -= operation;\n            }\n        }\n        return balance < 0;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <c5df8a41b833484fa7e0e223dab6da88>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <c5df8a41b833484fa7e0e223dab6da88>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <c5df8a41b833484fa7e0e223dab6da88>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <c5df8a41b833484fa7e0e223dab6da88>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04441687e31544c9b9d84118b668d535>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53cfc002be584af0bfd9a0827cf3c659>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))
    {\n            if (operation < 0)\n                return true;\n            balance
    -= operation;\n        }\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <99376befe4f34912b9d60a25c877e150>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <99376befe4f34912b9d60a25c877e150>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <99376befe4f34912b9d60a25c877e150>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <99376befe4f34912b9d60a25c877e150>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53cfc002be584af0bfd9a0827cf3c659>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04441687e31544c9b9d84118b668d535>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == (long)0) {\n                return true;\n            }\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f8bbbccda8cc4c89842105c3ca8f448a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f8bbbccda8cc4c89842105c3ca8f448a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805768
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        if
    (operations.Count < 1) return false;\n        long balance = operations.First();\n
    \       foreach (long operation in operations.Skip(1))\n            if (operation
    < 0)\n                return true;\n            if (balance < 0)\n                return
    true;\n            balance = balance - operation;\n        return false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsqfghafj.cs(24,33): error CS0103: The name ''operation'' does not exist
    in the current context

    '
  timestamp: 1659805768
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))
    {\n            if (operation < 0)\n                return true;\n            balance
    = balance - operation;\n            if (balance < 0)\n                return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <b17022c450274ff5a82d8269d687d0c5>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <b17022c450274ff5a82d8269d687d0c5>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <b17022c450274ff5a82d8269d687d0c5>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <b17022c450274ff5a82d8269d687d0c5>:0
    \n"
  stdout: ''
  timestamp: 1659805768
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        if
    (operations.Count == 0) return true;\n        var firstOperation = operations[0];\n
    \       var lastOperation = operations[operations.Count - 1];\n        var firstValue
    = firstOperation < 0L ? 0L : firstOperation;\n        var lastValue = lastOperation
    < 0L ? 0L : lastOperation;\n        return firstValue < 0L || lastValue < 0L;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4900643f8d164665a66370b470478126>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4900643f8d164665a66370b470478126>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805768
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04441687e31544c9b9d84118b668d535>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))\n
    \       {\n            if (balance < 0)\n            {\n                return
    true;\n            }\n            balance = balance - operation;\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <640009b85fdc4592bd41b51d6408bc85>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <640009b85fdc4592bd41b51d6408bc85>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <640009b85fdc4592bd41b51d6408bc85>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <640009b85fdc4592bd41b51d6408bc85>:0
    \n"
  stdout: ''
  timestamp: 1659805768
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))
    {\n            if (operation < 0)\n                return true;\n            balance
    -= operation;\n            if (balance < 0)\n                return true;\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d2f62b76feaf4b49b4d44ffc874e430d>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d2f62b76feaf4b49b4d44ffc874e430d>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d2f62b76feaf4b49b4d44ffc874e430d>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d2f62b76feaf4b49b4d44ffc874e430d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        //
    Your code here\n        long balance = operations.Sum();\n        if (balance
    < 0) {\n            return true;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>()))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <772868c8b2d640d3bc1a087ca207f47f>:0
    \n"
  stdout: ''
  timestamp: 1659805768
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))\n
    \       {\n            if (balance < 0)\n            {\n                return
    true;\n            }\n            balance += operation;\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <363483400d54405aa54f5bb890bb7118>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <363483400d54405aa54f5bb890bb7118>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <363483400d54405aa54f5bb890bb7118>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <363483400d54405aa54f5bb890bb7118>:0
    \n"
  stdout: ''
  timestamp: 1659805768
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        if
    (operations.Count < 1) return false;\n        long balance = operations.First();\n
    \       foreach (var operation in operations.Skip(1)) {\n            if (balance
    < 0) return true;\n            balance -= operation;\n        }\n        return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <20a57e089abd444d8fb65ce8eb776c5e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <20a57e089abd444d8fb65ce8eb776c5e>:0
    \n"
  stdout: ''
  timestamp: 1659805768
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))
    {\n            if (balance < operation) {\n                return true;\n            }\n
    \           balance -= operation;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>()))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <f63b7b158cb346a6b88df40138f00129>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <f63b7b158cb346a6b88df40138f00129>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <f63b7b158cb346a6b88df40138f00129>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <f63b7b158cb346a6b88df40138f00129>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0)\n                return true;\n            else\n                balance
    += operation;\n        }\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f57c6cf98074495ea793084a3f4c83fe>:0
    \n"
  stdout: ''
  timestamp: 1659805768
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04441687e31544c9b9d84118b668d535>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04441687e31544c9b9d84118b668d535>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04441687e31544c9b9d84118b668d535>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (operation < balance) {\n                return true;\n            }\n
    \           balance -= operation;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>()))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <f2018de096804df6a4abeadc1e544309>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <f2018de096804df6a4abeadc1e544309>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <f2018de096804df6a4abeadc1e544309>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <f2018de096804df6a4abeadc1e544309>:0
    \n"
  stdout: ''
  timestamp: 1659805768
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == (long)0) {\n                return true;\n            }\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f8bbbccda8cc4c89842105c3ca8f448a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f8bbbccda8cc4c89842105c3ca8f448a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805768
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == (long)0) {\n                return true;\n            }\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    false;\n            }\n        }\n        return true;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f8bbbccda8cc4c89842105c3ca8f448a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f8bbbccda8cc4c89842105c3ca8f448a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805768
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))
    {\n            if (operation < 0)\n                return true;\n            balance
    -= operation;\n            if (balance < 0)\n                return true;\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d2f62b76feaf4b49b4d44ffc874e430d>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d2f62b76feaf4b49b4d44ffc874e430d>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d2f62b76feaf4b49b4d44ffc874e430d>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d2f62b76feaf4b49b4d44ffc874e430d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53cfc002be584af0bfd9a0827cf3c659>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    -= operation;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53cfc002be584af0bfd9a0827cf3c659>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    -= operation;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long operation in operations.Skip(1))
    {\n            if (operation < 0)\n                return true;\n            balance
    = balance - operation;\n            if (balance < 0)\n                return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <b17022c450274ff5a82d8269d687d0c5>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <b17022c450274ff5a82d8269d687d0c5>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <b17022c450274ff5a82d8269d687d0c5>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <b17022c450274ff5a82d8269d687d0c5>:0
    \n"
  stdout: ''
  timestamp: 1659805768
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        //
    Your code here\n        long balance = operations.Sum();\n        if (balance
    < 0)\n            return true;\n        else\n            return false;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5e61ce75b20a431a9a781d0b40592008>:0
    \n"
  stdout: ''
  timestamp: 1659805768
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        if
    (operations.Count < 1) return true;\n        long balance = operations.First();\n
    \       foreach (var operation in operations.Skip(1)) {\n            if (operation
    < balance) return false;\n            balance -= operation;\n        }\n        return
    true;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <477c9d8a4817459daca9d08313ec5793>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <477c9d8a4817459daca9d08313ec5793>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659805768
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53cfc002be584af0bfd9a0827cf3c659>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (long op in operations.Skip(1))\n
    \           if (op < 0)\n                return true;\n            if (op > balance)\n
    \               return false;\n            balance = balance - op;\n            return
    false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmzgscro8.cs(21,17): error CS0103: The name ''op'' does not exist in the
    current context

    /tmp/tmpmzgscro8.cs(23,33): error CS0103: The name ''op'' does not exist in the
    current context

    '
  timestamp: 1659805768
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            balance
    = balance + operation;\n            if (balance < 0) {\n                return
    true;\n            }\n        }\n        return false;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0)\n                return true;\n            balance = balance
    + operation;\n            if (balance < 0)\n                return true;\n        }\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53cfc002be584af0bfd9a0827cf3c659>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53cfc002be584af0bfd9a0827cf3c659>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = 0;\n        foreach (var operation in operations) {\n            if
    (operation == 0) continue;\n            balance += operation;\n            if
    (balance < 0) return true;\n        }\n        return false;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>()))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659805768
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0) {\n            return true;\n
    \       }\n        return false;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L})))
    == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-4L, (long)5L, (long)6L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (false));\n    Debug.Assert(BelowZero((new List<long>(new
    long[]{(long)1L, (long)-1L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L,
    (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) ==
    (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53cfc002be584af0bfd9a0827cf3c659>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.First();\n        foreach (var operation in operations.Skip(1))
    {\n            if (balance < 0)\n                return true;\n            balance
    -= operation;\n        }\n        return false;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-3L,
    (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.InvalidOperationException: Sequence contains
    no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.InvalidOperationException: Sequence
    contains no elements\n  at System.Linq.Enumerable.First[TSource] (System.Collections.Generic.IEnumerable`1[T]
    source) [0x00010] in <e540098dd111461e919c5863f6975c29>:0 \n  at Problem.BelowZero
    (System.Collections.Generic.List`1[T] operations) [0x00001] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n  at Problem.Main (System.String[] args) [0x00006] in <d0d8e4536d4e45aead2e70ba59d37923>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        if (balance < 0)\n            return true;\n
    \       return false;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(BelowZero((new
    List<long>())) == (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L,
    (long)2L, (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <04441687e31544c9b9d84118b668d535>:0
    \n"
  stdout: ''
  timestamp: 1659805767
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You're given a list of deposit and withdrawal operations on
    a bank account that starts with\n    // zero balance. Your task is to detect if
    at any point the balance of account fallls below zero, and\n    // at that point
    function should return true. Otherwise it should return false.\n    // >>> BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (false)\n    //
    >>> BelowZero((new List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L})))\n
    \   // (true)\n    public static bool BelowZero(List<long> operations) {\n        long
    balance = operations.Sum();\n        return balance < 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(BelowZero((new List<long>())) ==
    (false));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)2L,
    (long)-3L, (long)1L, (long)2L, (long)-3L}))) == (false));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)2L, (long)-4L, (long)5L, (long)6L}))) ==
    (true));\n    Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L,
    (long)2L, (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-4L}))) == (false));\n
    \   Debug.Assert(BelowZero((new List<long>(new long[]{(long)1L, (long)-1L, (long)2L,
    (long)-2L, (long)5L, (long)-5L, (long)4L, (long)-5L}))) == (true));\n    Debug.Assert(BelowZero((new
    List<long>(new long[]{(long)1L, (long)-2L, (long)2L, (long)-2L, (long)5L, (long)-5L,
    (long)4L, (long)-4L}))) == (true));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5054e820e73a4ae98afee25bbade6a8d>:0
    \n"
  stdout: ''
  timestamp: 1659805767

language: cs
name: HumanEval_14_all_prefixes
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(new string[]{str});\n        foreach\
    \ (string prefix in prefixes.Skip(1))\n            prefixes.AddRange(AllPrefixes(prefix).Select(p\
    \ => prefix + p));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3b19e69872c74e808185a002704f66bf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3b19e69872c74e808185a002704f66bf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string s in AllPrefixes(str, new List<string>())) {\n      \
    \      result.Add(s);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7xodxbjn.cs(14,30): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        List<string> prefixes\
    \ = new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str.Substring(0,\
    \ str.Length - 1)));\n        return prefixes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f7f70ef7fb941fe99d24f74f7c3c9b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f7f70ef7fb941fe99d24f74f7c3c9b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null)\n         \
    \   throw new ArgumentNullException(\"str\");\n        List<string> prefixes =\
    \ new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixes(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmdl2x8ob.cs(17,27): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa_dy66l0.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0) return new List<string>();\n        List<string> prefixes = new List<string>();\n\
    \        prefixes.Add(str);\n        foreach (string s in AllPrefixes(str.Substring(1))\
    \ ) {\n            prefixes.Add(s + str.Substring(0, s.Length));\n        }\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3d02ca4677c64f579c4c439669033be0>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index and length must refer to a location\
    \ within the string.\nParameter name: length\n  at System.String.Substring (System.Int32\
    \ startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.AllPrefixes (System.String str) [0x00055] in <3d02ca4677c64f579c4c439669033be0>:0\
    \ \n  at Problem.AllPrefixes (System.String str) [0x00032] in <3d02ca4677c64f579c4c439669033be0>:0\
    \ \n  at Problem.Main (System.String[] args) [0x0001b] in <3d02ca4677c64f579c4c439669033be0>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ and length must refer to a location within the string.\nParameter name: length\n\
    \  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.AllPrefixes (System.String\
    \ str) [0x00055] in <3d02ca4677c64f579c4c439669033be0>:0 \n  at Problem.AllPrefixes\
    \ (System.String str) [0x00032] in <3d02ca4677c64f579c4c439669033be0>:0 \n  at\
    \ Problem.Main (System.String[] args) [0x0001b] in <3d02ca4677c64f579c4c439669033be0>:0\
    \ \n"
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa_dy66l0.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null)\n         \
    \   throw new ArgumentNullException(\"str\");\n        List<string> prefixes =\
    \ new List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdau0_gq7.cs(17,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        List<string> prefixes\
    \ = new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str.Substring(0,\
    \ str.Length - 1)));\n        return prefixes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f7f70ef7fb941fe99d24f74f7c3c9b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f7f70ef7fb941fe99d24f74f7c3c9b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(new List<string>(new string[]{str}));\n\
    \        string prefix = str.Substring(0, 1);\n        prefixes.AddRange(AllPrefixes(prefix));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.AllPrefixes (System.String str) [0x0001d] in <9d46eed7c2f046198353e6774857bad9>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <9d46eed7c2f046198353e6774857bad9>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ and length must refer to a location within the string.\nParameter name: length\n\
    \  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.AllPrefixes (System.String\
    \ str) [0x0001d] in <9d46eed7c2f046198353e6774857bad9>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00001] in <9d46eed7c2f046198353e6774857bad9>:0 \n"
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str, prefixes));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9f_oia47.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa_dy66l0.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        var prefixes = new List<string>();\n\
    \        var prefix = new StringBuilder();\n        foreach (var c in str) {\n\
    \            prefix.Append(c);\n            prefixes.Add(prefix.ToString());\n\
    \            prefix.Remove(0, 1);\n        }\n        return prefixes;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17ef5d1e4df040a3aebd4ea959c61e31>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17ef5d1e4df040a3aebd4ea959c61e31>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        var prefix = new StringBuilder();\n        foreach (var c in str) {\n\
    \            prefix.Append(c);\n            result.Add(prefix.ToString());\n \
    \           prefix.Remove(0, 1);\n        }\n        return result;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0bdced5e79d5491981c7b1602ee50bdf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0bdced5e79d5491981c7b1602ee50bdf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(new List<string>(new string[]{str}));\n\
    \        prefixes.AddRange(AllPrefixes(str.Substring(0, str.Length - 1)));\n \
    \       return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Length cannot\
    \ be less than zero.\nParameter name: length\n  at System.String.Substring (System.Int32\
    \ startIndex, System.Int32 length) [0x00031] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.AllPrefixes (System.String str) [0x00026] in <91427764d6684b9489c2db0673da4bbc>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <91427764d6684b9489c2db0673da4bbc>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Length\
    \ cannot be less than zero.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x00031] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.AllPrefixes (System.String str) [0x00026] in <91427764d6684b9489c2db0673da4bbc>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <91427764d6684b9489c2db0673da4bbc>:0\
    \ \n"
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        foreach (char c in str) {\n            prefixes.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return prefixes;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp20u__nz8.cs(15,58): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null) return new\
    \ List<string>();\n        List<string> result = new List<string>();\n       \
    \ foreach (char c in str) {\n            result.AddRange(AllPrefixes(new string[]\
    \ { c }));\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4g8nu1zj.cs(16,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805355
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        List<string> prefixes\
    \ = new List<string>();\n        prefixes.Add(\"\");\n        foreach (char c\
    \ in str) {\n            prefixes.AddRange(AllPrefixes(c + str));\n        }\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Timeout
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eeb3beb1d349453e882cb5ef8bf1b891>:0 \n"
  stdout: None
  timestamp: 1659805361
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(str.TakeWhile(c => c != '.'));\n\
    \        prefixes.AddRange(AllPrefixes(str.Substring(0, str.Length - 1)));\n \
    \       return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplh21308p.cs(14,27): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.IEnumerable<char>''
    to ''System.Collections.Generic.IEnumerable<string>''

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (char c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1x25jmba.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string prefix in AllPrefixes(str, new List<string>())) {\n \
    \           result.Add(prefix);\n        }\n        return result;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\"\
    )).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new\
    \ List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"\
    asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkyn5es2p.cs(14,35): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        foreach (var c in str) {\n            prefixes.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return prefixes;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp6c_1dyya.cs(15,58): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesRec(str, prefixes));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpux6i6lbs.cs(14,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa_dy66l0.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str, new List<string>(),\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprfpq8uah.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        int len = str.Length;\n\
    \        for (int i = 0; i < len; i++) {\n            prefix = prefix + str[i];\n\
    \            prefixes.Add(prefix);\n        }\n        return prefixes;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c3f88d3f08cd4ad9b573eabbf50ac799>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c3f88d3f08cd4ad9b573eabbf50ac799>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        List<string> prefixes\
    \ = new List<string>();\n        prefixes.Add(\"\");\n        for (int i = 0;\
    \ i < str.Length; i++) {\n            prefixes.Add(prefixes[prefixes.Count - 1]\
    \ + str[i]);\n        }\n        return prefixes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <130152e769a349f3823c0f79e1d3f8d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <130152e769a349f3823c0f79e1d3f8d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa_dy66l0.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa_dy66l0.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix += str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b4eca4d73cbe4e5b8bbda0232a769c1e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b4eca4d73cbe4e5b8bbda0232a769c1e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesRec(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi2xdn249.cs(15,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix += str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b4eca4d73cbe4e5b8bbda0232a769c1e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b4eca4d73cbe4e5b8bbda0232a769c1e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[]{c}));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq_l17fqj.cs(15,54): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str, prefixes));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9f_oia47.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        var result = new List<string>();\n\
    \        var prefixes = AllPrefixesRec(str, 0, result);\n        return prefixes;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp68ugdh0g.cs(16,24): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        var prefixes = new List<string>();\n        prefixes.Add(\"\");\n   \
    \     prefixes.AddRange(AllPrefixesHelper(str, prefixes));\n        return prefixes;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_ow7bozg.cs(16,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null)\n         \
    \   throw new ArgumentNullException(\"str\");\n        List<string> result = new\
    \ List<string>();\n        bool first = true;\n        foreach (char c in str)\
    \ {\n            if (first)\n                first = false;\n            else\n\
    \                result.Add(c.ToString());\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc3b6eea2c024ea2b25208067edf3d69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc3b6eea2c024ea2b25208067edf3d69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        List<string> prefixes = new List<string>();\n        prefixes.Add(\"\"\
    );\n        prefixes.AddRange(AllPrefixes(str, prefixes));\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp79j_44u3.cs(16,27): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa_dy66l0.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string prefix in AllPrefixes(str, new List<string>())) {\n \
    \           result.Add(prefix);\n        }\n        return result;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\"\
    )).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new\
    \ List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"\
    asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkyn5es2p.cs(14,35): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        List<string> prefixes\
    \ = new List<string>();\n        string prefix = \"\";\n        for (int i = 0;\
    \ i < str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a0e22344b1164dfb90c77076baeb2984>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a0e22344b1164dfb90c77076baeb2984>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa_dy66l0.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        int len = str.Length;\n\
    \        for (int i = 0; i < len; i++) {\n            prefix = prefix + str[i];\n\
    \            prefixes.Add(prefix);\n        }\n        return prefixes;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c3f88d3f08cd4ad9b573eabbf50ac799>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c3f88d3f08cd4ad9b573eabbf50ac799>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string s in AllPrefixesRec(str, \"\")) {\n            result.Add(s);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp40nuaz76.cs(14,30): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        string prefix = \"\";\n        foreach (char c in str) {\n          \
    \  prefix = prefix + c;\n            result.Add(prefix);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str, prefixes));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9f_oia47.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var prefixes = new List<string>();\n\
    \        prefixes.AddRange(AllPrefixesHelper(str));\n        return prefixes;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_yc21uik.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(str.Select(c => c.ToString()));\n\
    \        prefixes.AddRange(AllPrefixes(str.Substring(0, str.Length - 1)));\n \
    \       return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Length cannot\
    \ be less than zero.\nParameter name: length\n  at System.String.Substring (System.Int32\
    \ startIndex, System.Int32 length) [0x00031] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.AllPrefixes (System.String str) [0x0003c] in <bff5076439134a829bf5e287f22b985f>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <bff5076439134a829bf5e287f22b985f>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Length\
    \ cannot be less than zero.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x00031] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.AllPrefixes (System.String str) [0x0003c] in <bff5076439134a829bf5e287f22b985f>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <bff5076439134a829bf5e287f22b985f>:0\
    \ \n"
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesRec(str, prefixes));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpux6i6lbs.cs(14,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str, prefixes));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9f_oia47.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        foreach (string prefix in AllPrefixesHelper(str)) {\n\
    \            prefixes.Add(prefix);\n        }\n        return prefixes;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppj7qgg6b.cs(14,35): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        var prefix = new StringBuilder(str);\n        while (prefix.Length >\
    \ 0) {\n            result.Add(prefix.ToString());\n            prefix.Remove(0,\
    \ 1);\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd721920eed044d28783e3f2df6efd6e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bd721920eed044d28783e3f2df6efd6e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str, prefixes));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9f_oia47.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        int len = str.Length;\n\
    \        for (int i = 0; i < len; i++) {\n            prefix = prefix + str[i];\n\
    \            prefixes.Add(prefix);\n        }\n        return prefixes;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c3f88d3f08cd4ad9b573eabbf50ac799>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c3f88d3f08cd4ad9b573eabbf50ac799>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(str.TakeWhile(x => x != '.').Select(x\
    \ => x.ToString()));\n        prefixes.AddRange(AllPrefixes(str.Substring(0, str.Length\
    \ - 1)));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Length cannot\
    \ be less than zero.\nParameter name: length\n  at System.String.Substring (System.Int32\
    \ startIndex, System.Int32 length) [0x00031] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.AllPrefixes (System.String str) [0x00060] in <055c50416089472b8df217e291abae69>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <055c50416089472b8df217e291abae69>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Length\
    \ cannot be less than zero.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x00031] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.AllPrefixes (System.String str) [0x00060] in <055c50416089472b8df217e291abae69>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <055c50416089472b8df217e291abae69>:0\
    \ \n"
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(str.TakeWhile(c => c != '.'));\n\
    \        prefixes.AddRange(str.SkipWhile(c => c != '.').TakeWhile(c => c != '.'));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5cwy0fjb.cs(14,27): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.IEnumerable<char>''
    to ''System.Collections.Generic.IEnumerable<string>''

    /tmp/tmp5cwy0fjb.cs(15,27): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.IEnumerable<char>''
    to ''System.Collections.Generic.IEnumerable<string>''

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        var prefixes = new List<string>();\n        prefixes.Add(\"\");\n   \
    \     prefixes.AddRange(AllPrefixesHelper(str, prefixes));\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjqnmw1on.cs(16,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        var prefix = new List<string>();\n        foreach (var c in str) {\n\
    \            prefix.Add(c);\n            if (prefix.Count > result.Count) {\n\
    \                result = prefix;\n                prefix = new List<string>();\n\
    \            }\n        }\n        if (prefix.Count > result.Count) {\n      \
    \      result = prefix;\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptpxrze_3.cs(16,24): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplwjh89t9.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa_dy66l0.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        List<string> prefixes = new List<string>();\n        prefixes.Add(str);\n\
    \        while (prefixes.Count > 0) {\n            string prefix = prefixes.First();\n\
    \            prefixes.Remove(prefix);\n            result.Add(prefix);\n     \
    \       foreach (string suffix in prefixes) {\n                string newPrefix\
    \ = prefix + suffix;\n                if (newPrefix.Length > str.Length) {\n \
    \                   result.Add(newPrefix);\n                }\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5fd40851a654439a95285915f61f2fad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5fd40851a654439a95285915f61f2fad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(new string[]{str});\n        while\
    \ (prefixes.Count > 1) {\n            prefixes.RemoveAt(0);\n            prefixes.AddRange(prefixes.Where((s)\
    \ => s.Length > prefixes[0].Length).Select(s => s.Substring(0, prefixes[0].Length)));\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9a16af38ea5d45d488801be5f6ce4cf7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9a16af38ea5d45d488801be5f6ce4cf7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        int length = str.Length;\n\
    \        for (int i = 0; i < length; i++) {\n            prefix += str[i];\n \
    \           prefixes.Add(prefix);\n        }\n        return prefixes;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9cb21da098b747d89bded5209a66f917>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9cb21da098b747d89bded5209a66f917>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        int len = str.Length;\n\
    \        for (int i = 0; i < len; i++) {\n            prefix = prefix + str[i];\n\
    \            prefixes.Add(prefix);\n        }\n        return prefixes;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c3f88d3f08cd4ad9b573eabbf50ac799>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c3f88d3f08cd4ad9b573eabbf50ac799>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (char c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1x25jmba.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        var prefix = new StringBuilder();\n        foreach (var c in str) {\n\
    \            if (prefix.Length > 0) {\n                prefix.Append(c);\n   \
    \             result.Add(prefix.ToString());\n                prefix = new StringBuilder();\n\
    \            } else {\n                prefix.Append(c);\n            }\n    \
    \    }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n   \
    \ Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <84e7587478904320b4e3fe437311fae4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <84e7587478904320b4e3fe437311fae4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesRec(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi2xdn249.cs(15,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        string prefix = \"\";\n        foreach (char c in str) {\n          \
    \  prefix = prefix + c;\n            result.Add(prefix);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string s in AllPrefixesHelper(str)) {\n            result.Add(s);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv0kssa2m.cs(14,30): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        string prefix = \"\";\n        foreach (char c in str) {\n          \
    \  prefix = prefix + c;\n            result.Add(prefix);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplwjh89t9.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa_dy66l0.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null)\n         \
    \   throw new ArgumentNullException(\"str\");\n        List<string> result = new\
    \ List<string>();\n        bool first = true;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (first)\n                first = false;\n           \
    \ else\n                result.Add(str.Substring(0, i));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4edd412a3e8042de8c07c4c8e232df5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4edd412a3e8042de8c07c4c8e232df5c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa_dy66l0.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(new List<string>(new string[] { str\
    \ }));\n        prefixes.AddRange(AllPrefixesHelper(str, prefixes));\n       \
    \ return prefixes;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpak08tef0.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        string prefix = \"\";\n        foreach (char c in str) {\n          \
    \  prefix = prefix + c;\n            result.Add(prefix);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplwjh89t9.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string s in AllPrefixesHelper(str)) {\n            result.Add(s);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv0kssa2m.cs(14,30): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null) return new\
    \ List<string>();\n        var result = new List<string>();\n        var prefixes\
    \ = new List<string>();\n        var prefix = new List<string>();\n        foreach\
    \ (var c in str) {\n            prefix.Add(c);\n            if (prefix.Count >\
    \ 1) prefixes.Add(string.Join(\"\", prefix));\n            prefix.Clear();\n \
    \       }\n        prefixes.Add(string.Join(\"\", prefix));\n        foreach (var\
    \ p in prefixes) {\n            result.Add(p);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_qu1y09q.cs(18,24): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var prefixes = new List<string>();\n\
    \        var prefix = new StringBuilder();\n        var currentLength = 1;\n \
    \       foreach (var c in str) {\n            prefix.Append(c);\n            currentLength++;\n\
    \            while (currentLength < str.Length) {\n                prefix.Append(str[currentLength]);\n\
    \                currentLength++;\n            }\n            prefixes.Add(prefix.ToString());\n\
    \            prefix.Clear();\n        }\n        return prefixes;\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\"\
    )).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new\
    \ List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"\
    asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7724c7c07f82433899b4784fafc6fc5e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7724c7c07f82433899b4784fafc6fc5e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805357
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa_dy66l0.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(new List<string>(new string[]{str}));\n\
    \        string prefix = \"\";\n        while (prefixes.Count > 0) {\n       \
    \     prefix = prefixes[prefixes.Count - 1];\n            prefixes.RemoveAt(prefixes.Count\
    \ - 1);\n            foreach (string str2 in prefixes) {\n                string\
    \ newPrefix = prefix + str2;\n                if (newPrefix.Length > str.Length)\
    \ {\n                    prefixes.Add(newPrefix);\n                }\n       \
    \     }\n        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <71a867d4413542e38748c555440cf32c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <71a867d4413542e38748c555440cf32c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805357
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null)\n         \
    \   return null;\n        List<string> result = new List<string>();\n        Stack<string>\
    \ stack = new Stack<string>();\n        foreach (char c in str) {\n          \
    \  stack.Add(c);\n            while (stack.Count > 0) {\n                string\
    \ prefix = stack.Count > 1 ? stack.ToArray()[0] + stack.ToArray()[1] : stack.ToArray()[0];\n\
    \                result.Add(prefix);\n                stack.Pop();\n         \
    \   }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx7g14t9a.cs(18,19): error CS1061: ''Stack<string>'' does not contain a
    definition for ''Add'' and no accessible extension method ''Add'' accepting a
    first argument of type ''Stack<string>'' could be found (are you missing a using
    directive or an assembly reference?)

    '
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string s in AllPrefixesHelper(str)) {\n            result.Add(s);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv0kssa2m.cs(14,30): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa_dy66l0.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null)\n         \
    \   throw new ArgumentNullException(\"str\");\n        List<string> result = new\
    \ List<string>();\n        Stack<string> stack = new Stack<string>();\n      \
    \  foreach (char c in str) {\n            if (stack.Count == 0)\n            \
    \    stack.Push(c);\n            else if (stack.Count == 1)\n                result.Add(stack.Pop());\n\
    \            else {\n                string prefix = stack.Pop();\n          \
    \      while (stack.Count > 0 && stack.Last().StartsWith(prefix))\n          \
    \          prefix = prefix + (char)stack.Pop();\n                result.Add(prefix);\n\
    \                stack.Push(c);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjka4j49h.cs(19,28): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    /tmp/tmpjka4j49h.cs(25,39): error CS0030: Cannot convert type ''string'' to ''char''

    /tmp/tmpjka4j49h.cs(27,28): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa_dy66l0.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        bool isFirst = true;\n        foreach (char c in str) {\n           \
    \ if (isFirst) {\n                isFirst = false;\n                result.Add(c.ToString());\n\
    \            } else {\n                result.Add(c.ToString() + result[result.Count\
    \ - 1]);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <73681c26c38547268c02cb017183e1fd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <73681c26c38547268c02cb017183e1fd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805357
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string s in AllPrefixesHelper(str)) {\n            result.Add(s);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv0kssa2m.cs(14,30): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        List<string> prefixes = new List<string>();\n        prefixes.Add(str);\n\
    \        while (prefixes.Count > 0) {\n            string prefix = prefixes.First();\n\
    \            prefixes.Remove(prefix);\n            result.Add(prefix);\n     \
    \       foreach (string suffix in prefixes) {\n                string newPrefix\
    \ = prefix + suffix;\n                if (newPrefix.Length > str.Length) {\n \
    \                   prefixes.Remove(newPrefix);\n                }\n         \
    \   }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49113977f98a4573be94a0699b7108de>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <49113977f98a4573be94a0699b7108de>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805357
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(str.TakeWhile(x => x != '.').Select(x\
    \ => x.ToString()));\n        prefixes.AddRange(str.TakeWhile(x => x == '.').Select(x\
    \ => x.ToString()));\n        return prefixes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9361d556ce20420889551c12cca9000e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9361d556ce20420889551c12cca9000e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805357
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null) return new\
    \ List<string>();\n        List<string> prefixes = new List<string>();\n     \
    \   prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixes(str, prefixes));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8vj4bc49.cs(16,27): error CS1501: No overload for method ''AllPrefixes''
    takes 2 arguments

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string s in AllPrefixesRec(str, new List<string>(), result))\n\
    \            result.Add(s);\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpne7k8iws.cs(14,30): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str, new List<string>(),\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprfpq8uah.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        bool first = true;\n        foreach (char c in str) {\n            if\
    \ (first) {\n                result.Add(c.ToString());\n                first\
    \ = false;\n            } else {\n                result.Add(c.ToString() + result[result.Count\
    \ - 1]);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7844b525b0634fd39c76d931ae312176>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7844b525b0634fd39c76d931ae312176>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805357
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        List<string> prefixes = new List<string>();\n        prefixes.Add(\"\"\
    );\n        prefixes.AddRange(AllPrefixesHelper(str, prefixes));\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsd8z9tjj.cs(16,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        List<string> prefixes\
    \ = new List<string>();\n        prefixes.Add(str);\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            prefixes.AddRange(AllPrefixes(str.Substring(0,\
    \ i)));\n        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3740faf4ade6419ab7c9e03f6c6a2934>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3740faf4ade6419ab7c9e03f6c6a2934>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805357
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa_dy66l0.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string s in AllPrefixesHelper(str)) {\n            result.Add(s);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv0kssa2m.cs(14,30): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        var prefixes = new List<string>();\n\
    \        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixes(str.Substring(0,\
    \ str.Length - 1)));\n        return prefixes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e36f751719e46c3a57a80d85756fac1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e36f751719e46c3a57a80d85756fac1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805357
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(new List<string>(str.TakeWhile(c\
    \ => c != '.')));\n        prefixes.AddRange(new List<string>(str.TakeWhile(c\
    \ => c == '.')));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_2ohhs8s.cs(14,44): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.IEnumerable<char>''
    to ''int''

    /tmp/tmp_2ohhs8s.cs(15,44): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.IEnumerable<char>''
    to ''int''

    '
  timestamp: 1659805357
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        string prefix = \"\";\n        foreach (char c in str) {\n          \
    \  prefix = prefix + c;\n            result.Add(prefix);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        string prefix = \"\";\n        foreach (char c in str) {\n          \
    \  prefix = prefix + c;\n            result.Add(prefix);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0) return new List<string>();\n        var prefixes = new List<string>();\n\
    \        var prefix = new StringBuilder();\n        foreach (var c in str) {\n\
    \            prefix.Append(c);\n            prefixes.Add(prefix.ToString());\n\
    \            prefix.Remove(0, 1);\n        }\n        return prefixes;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e9b0aca3713c4a24b8121da5d54b5b8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e9b0aca3713c4a24b8121da5d54b5b8c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805357
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa_dy66l0.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null) return null;\n\
    \        List<string> result = new List<string>();\n        string prefix = \"\
    \";\n        for (int i = 0; i < str.Length; i++) {\n            prefix = prefix\
    \ + str[i];\n            result.Add(prefix);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <25756203013c487d8cefd4967eef228e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <25756203013c487d8cefd4967eef228e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805357
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        List<string> prefixes\
    \ = new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str.Substring(0,\
    \ str.Length - 1)));\n        return prefixes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f7f70ef7fb941fe99d24f74f7c3c9b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f7f70ef7fb941fe99d24f74f7c3c9b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(new List<string>() { str });\n  \
    \      while (prefixes.Count > 1) {\n            prefixes.RemoveAt(0);\n     \
    \       prefixes.AddRange(prefixes.Select(prefix => prefix + prefixes[0]));\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d680d09f9d1c487a8883444cb99ec646>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d680d09f9d1c487a8883444cb99ec646>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805357
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(str.TakeWhile(x => x != '.'));\n\
    \        prefixes.AddRange(str.SkipWhile(x => x != '.').TakeWhile(x => x != '.'));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppvx40xpo.cs(14,27): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.IEnumerable<char>''
    to ''System.Collections.Generic.IEnumerable<string>''

    /tmp/tmppvx40xpo.cs(15,27): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.IEnumerable<char>''
    to ''System.Collections.Generic.IEnumerable<string>''

    '
  timestamp: 1659805357
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (var s in str.Split(',')) {\n            result.AddRange(AllPrefixes(s));\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659805362
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str, new List<string>(),\
    \ 0));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiln3y4td.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805357
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str, new List<string>(),\
    \ 0));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiln3y4td.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805357
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(new List<string>(new string[]{str}));\n\
    \        foreach (string prefix in prefixes.Skip(1))\n            prefixes.AddRange(AllPrefixes(prefix));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e430f1e686164f78b0d694131373e8ec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e430f1e686164f78b0d694131373e8ec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805357
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplwjh89t9.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        int len = str.Length;\n\
    \        for (int i = 0; i < len; i++) {\n            prefix = prefix + str[i];\n\
    \            prefixes.Add(prefix);\n        }\n        return prefixes;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c3f88d3f08cd4ad9b573eabbf50ac799>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c3f88d3f08cd4ad9b573eabbf50ac799>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        string prefix = \"\";\n        for (int i = 0; i < str.Length; i++) {\n\
    \            prefix = prefix + str[i];\n            result.Add(prefix);\n    \
    \    }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n   \
    \ Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e0b58bfbd59543e3b6cdb459b2420583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e0b58bfbd59543e3b6cdb459b2420583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805357
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string s in AllPrefixes(str, new List<string>(), str)) {\n \
    \           result.Add(s);\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpf10m91gq.cs(14,30): error CS1501: No overload for method ''AllPrefixes''
    takes 3 arguments

    '
  timestamp: 1659805357
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(str.Select(c => c.ToString()));\n\
    \        prefixes.AddRange(AllPrefixes(str.Substring(0, str.Length - 1)));\n \
    \       return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Length cannot\
    \ be less than zero.\nParameter name: length\n  at System.String.Substring (System.Int32\
    \ startIndex, System.Int32 length) [0x00031] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.AllPrefixes (System.String str) [0x0003c] in <bff5076439134a829bf5e287f22b985f>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <bff5076439134a829bf5e287f22b985f>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Length\
    \ cannot be less than zero.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x00031] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.AllPrefixes (System.String str) [0x0003c] in <bff5076439134a829bf5e287f22b985f>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <bff5076439134a829bf5e287f22b985f>:0\
    \ \n"
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesRec(str, prefixes));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpux6i6lbs.cs(14,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        List<string> prefixes\
    \ = new List<string>();\n        prefixes.Add(str);\n        int len = str.Length;\n\
    \        while (len > 0) {\n            prefixes.Add(str.Substring(0, len));\n\
    \            str = str.Substring(len);\n            len--;\n        }\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d773cb9a28d347c2946d478efbe358a9>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index and length must refer to a location\
    \ within the string.\nParameter name: length\n  at System.String.Substring (System.Int32\
    \ startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.AllPrefixes (System.String str) [0x00034] in <d773cb9a28d347c2946d478efbe358a9>:0\
    \ \n  at Problem.Main (System.String[] args) [0x0001b] in <d773cb9a28d347c2946d478efbe358a9>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ and length must refer to a location within the string.\nParameter name: length\n\
    \  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.AllPrefixes (System.String\
    \ str) [0x00034] in <d773cb9a28d347c2946d478efbe358a9>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x0001b] in <d773cb9a28d347c2946d478efbe358a9>:0 \n"
  stdout: ''
  timestamp: 1659805357
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        List<string> prefixes\
    \ = new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str.Substring(0,\
    \ str.Length - 1)));\n        return prefixes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f7f70ef7fb941fe99d24f74f7c3c9b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f7f70ef7fb941fe99d24f74f7c3c9b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ List<string> { (string)c }));\n        }\n        return result;\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\"\
    )).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new\
    \ List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"\
    asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_6ch8sy9.cs(15,60): error CS0030: Cannot convert type ''char'' to ''string''

    '
  timestamp: 1659805357
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpoar5kstl.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805357
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (var s in str.Split(' '))\n            result.AddRange(AllPrefixes(s));\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659805362
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0) return new List<string>();\n        var prefixes = new List<string>();\n\
    \        var prefix = new StringBuilder(str.Length);\n        prefix.Append(str[0]);\n\
    \        prefixes.Add(prefix.ToString());\n        for (var i = 1; i < str.Length;\
    \ i++) {\n            prefix.Append(str[i]);\n            prefixes.Add(prefix.ToString());\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <20da89b149434a94bdc5438cf1b849fa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <20da89b149434a94bdc5438cf1b849fa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805357
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesRec(str, prefixes));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpux6i6lbs.cs(14,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string s in AllPrefixesHelper(str)) {\n            result.Add(s);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv0kssa2m.cs(14,30): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (char c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1x25jmba.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0)\n            return new List<string>();\n        List<string> prefixes\
    \ = new List<string>();\n        prefixes.Add(str);\n        prefixes.AddRange(AllPrefixes(str.Substring(0,\
    \ str.Length - 1)));\n        return prefixes;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f7f70ef7fb941fe99d24f74f7c3c9b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f7f70ef7fb941fe99d24f74f7c3c9b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str, prefixes));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9f_oia47.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string s in AllPrefixesHelper(str)) {\n            result.Add(s);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv0kssa2m.cs(14,30): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesRec(str, prefixes));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpux6i6lbs.cs(14,27): error CS0103: The name ''AllPrefixesRec'' does not
    exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        string prefix = \"\";\n        int len = str.Length;\n        for (int\
    \ i = 0; i < len; i++) {\n            prefix = prefix + str[i];\n            result.Add(prefix);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c6550ed4409943319c9c40fa5b51357a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c6550ed4409943319c9c40fa5b51357a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805357
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplwjh89t9.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        string prefix = \"\";\n        foreach (char c in str) {\n          \
    \  prefix = prefix + c;\n            result.Add(prefix);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplwjh89t9.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa_dy66l0.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa_dy66l0.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str, prefixes));\n\
    \        return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9f_oia47.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        List<string> prefixes = new List<string>();\n        prefixes.Add(str);\n\
    \        while (prefixes.Count > 0) {\n            string prefix = prefixes.First();\n\
    \            prefixes.Remove(prefix);\n            result.Add(prefix);\n     \
    \       foreach (string suffix in prefixes) {\n                string newPrefix\
    \ = prefix + suffix;\n                if (newPrefix.Length > str.Length) {\n \
    \                   result.Add(newPrefix);\n                }\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5fd40851a654439a95285915f61f2fad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5fd40851a654439a95285915f61f2fad>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.Add(\"\");\n        prefixes.AddRange(AllPrefixesHelper(str,\
    \ prefixes));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx0dwb3k_.cs(15,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        string prefix = \"\";\n        foreach (char c in str) {\n          \
    \  prefix = prefix + c;\n            result.Add(prefix);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        if (str == null || str.Length\
    \ == 0) return new List<string>();\n        var prefixes = new List<string>();\n\
    \        var prefix = new StringBuilder(str.Length);\n        prefix.Append(str[0]);\n\
    \        prefixes.Add(prefix.ToString());\n        foreach (var c in str.Substring(1))\
    \ {\n            prefix.Append(c);\n            prefixes.Add(prefix.ToString());\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6c58d0d496934032ad85a81cb8a8edec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6c58d0d496934032ad85a81cb8a8edec>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805357
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(str.TakeWhile(c => c != '.'));\n\
    \        prefixes.AddRange(AllPrefixes(str.Substring(0, prefixes.Count)));\n \
    \       return prefixes;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps7yp3okr.cs(14,27): error CS1503: Argument 1: cannot convert from ''System.Collections.Generic.IEnumerable<char>''
    to ''System.Collections.Generic.IEnumerable<string>''

    '
  timestamp: 1659805357
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str, new List<string>(),\
    \ 0));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiln3y4td.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805357
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        string prefix = \"\";\n        foreach (char c in str) {\n          \
    \  prefix = prefix + c;\n            result.Add(prefix);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\
    \")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\"\
    )).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\", (string)\"\
    asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"\
    WWW\")).Equals((new List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"\
    WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d91e061fe76746a381eb3673772d6abd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805356
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplwjh89t9.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805356
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        string prefix = \"\";\n        for (int i = 0; i < str.Length; i++) {\n\
    \            prefix = prefix + str[i];\n            result.Add(prefix);\n    \
    \    }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n   \
    \ Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e0b58bfbd59543e3b6cdb459b2420583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e0b58bfbd59543e3b6cdb459b2420583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805357
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        string prefix = \"\";\n        for (int i = 0; i < str.Length; i++) {\n\
    \            prefix = prefix + str[i];\n            result.Add(prefix);\n    \
    \    }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n   \
    \ Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e0b58bfbd59543e3b6cdb459b2420583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e0b58bfbd59543e3b6cdb459b2420583>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805357
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str));\n      \
    \  return prefixes;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n    Debug.Assert(AllPrefixes((\"\
    asdfgh\")).Equals((new List<string>(new string[]{(string)\"a\", (string)\"as\"\
    , (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"asdfgh\"}))));\n\
    \    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new string[]{(string)\"\
    W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa_dy66l0.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805355
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        foreach (char c in str)\
    \ {\n            prefix = prefix + c;\n            prefixes.Add(prefix);\n   \
    \     }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b783a175de34023831c952d21680499>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        Stack<string> stack = new Stack<string>();\n        foreach (char c in\
    \ str) {\n            if (stack.Count == 0) {\n                result.Add(c.ToString());\n\
    \            }\n            else if (stack.Count == 1) {\n                result.Add(c.ToString()\
    \ + stack.Peek());\n            }\n            else {\n                result.Add(c.ToString()\
    \ + stack.Peek());\n                stack.Pop();\n            }\n            stack.Push(c);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphnafkxjg.cs(26,24): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659805357
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        prefixes.AddRange(AllPrefixesHelper(str, new List<string>(),\
    \ 0));\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiln3y4td.cs(14,27): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805357
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string prefix in AllPrefixesHelper(str)) {\n            result.Add(prefix);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfsk50tf8.cs(14,35): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805357
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        string prefix = \"\";\n        for (int i = 0; i <\
    \ str.Length; i++) {\n            prefix = prefix + str[i];\n            prefixes.Add(prefix);\n\
    \        }\n        return prefixes;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5849782cb62f4066819943c556a1309e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659805355
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        foreach (string prefix in AllPrefixesHelper(str)) {\n            result.Add(prefix);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new List<string>())));\n\
    \    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new string[]{(string)\"\
    a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"asdfg\", (string)\"\
    asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new List<string>(new\
    \ string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfsk50tf8.cs(14,35): error CS0103: The name ''AllPrefixesHelper'' does
    not exist in the current context

    '
  timestamp: 1659805357
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        var result = new List<string>();\n\
    \        foreach (var c in str) {\n            result.AddRange(AllPrefixes(new\
    \ List<string> { c }));\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxg5n8gt1.cs(15,60): error CS1950: The best overloaded Add method ''List<string>.Add(string)''
    for the collection initializer has some invalid arguments

    /tmp/tmpxg5n8gt1.cs(15,60): error CS1503: Argument 1: cannot convert from ''char''
    to ''string''

    '
  timestamp: 1659805357
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        foreach (char c in str) {\n            prefixes.AddRange(AllPrefixes(new\
    \ string[]{c}));\n        }\n        return prefixes;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpynjq77tm.cs(15,56): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805357
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> result = new List<string>();\n\
    \        Stack<string> stack = new Stack<string>();\n        foreach (char c in\
    \ str) {\n            stack.Add(c);\n            while (stack.Count > 0 && stack.Peek()\
    \ != c) {\n                result.Add(stack.Pop());\n            }\n         \
    \   stack.Pop();\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0sn_ijoj.cs(16,19): error CS1061: ''Stack<string>'' does not contain a
    definition for ''Add'' and no accessible extension method ''Add'' accepting a
    first argument of type ''Stack<string>'' could be found (are you missing a using
    directive or an assembly reference?)

    /tmp/tmp0sn_ijoj.cs(17,39): error CS0019: Operator ''!='' cannot be applied to
    operands of type ''string'' and ''char''

    '
  timestamp: 1659805357
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return list of all prefixes from shortest to longest of\
    \ the input string\n    // >>> AllPrefixes((\"abc\"))\n    // (new List<string>(new\
    \ string[]{(string)\"a\", (string)\"ab\", (string)\"abc\"}))\n    public static\
    \ List<string> AllPrefixes(string str) {\n        List<string> prefixes = new\
    \ List<string>();\n        foreach (char c in str) {\n            prefixes.AddRange(AllPrefixes(new\
    \ string[] { c }));\n        }\n        return prefixes;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(AllPrefixes((\"\")).Equals((new\
    \ List<string>())));\n    Debug.Assert(AllPrefixes((\"asdfgh\")).Equals((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"as\", (string)\"asd\", (string)\"asdf\", (string)\"\
    asdfg\", (string)\"asdfgh\"}))));\n    Debug.Assert(AllPrefixes((\"WWW\")).Equals((new\
    \ List<string>(new string[]{(string)\"W\", (string)\"WW\", (string)\"WWW\"}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp20u__nz8.cs(15,58): error CS0029: Cannot implicitly convert type ''char''
    to ''string''

    '
  timestamp: 1659805355

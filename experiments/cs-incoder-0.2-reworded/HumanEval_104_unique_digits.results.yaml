language: cs
name: HumanEval_104_unique_digits
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        foreach (long\
    \ i in x) {\n            lastDigitSum += i % 10;\n            if (lastDigitSum\
    \ == lastDigit) {\n                result.Add(i);\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3804029835dd49e69cdabf0cc5915337>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3804029835dd49e69cdabf0cc5915337>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long last = 0;\n        foreach (long i in x) {\n            if (i %\
    \ 2 == 0) {\n                temp = i;\n                last = temp;\n       \
    \     } else {\n                if (last != 0) {\n                    result.Add(last);\n\
    \                }\n                last = temp;\n            }\n        }\n \
    \       if (last != 0) {\n            result.Add(last);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <40c99c4d40814294b7db7edc3889f884>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <40c99c4d40814294b7db7edc3889f884>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long lastDigit\
    \ = 0;\n        long lastDigitCount = 0;\n        long lastDigitCount2 = 0;\n\
    \        long lastDigitCount3 = 0;\n        long lastDigitCount4 = 0;\n      \
    \  long lastDigitCount5 = 0;\n        long lastDigitCount6 = 0;\n        long\
    \ lastDigitCount7 = 0;\n        long lastDigitCount8 = 0;\n        long lastDigitCount9\
    \ = 0;\n        long lastDigitCount10 = 0;\n        long lastDigitCount11 = 0;\n\
    \        long lastDigitCount12 = 0;\n        long lastDigitCount13 = 0;\n    \
    \    long lastDigitCount14 = 0;\n        long lastDigitCount15 = 0;\n        long\
    \ lastDigitCount16 = 0;\n        long lastDigitCount17 = 0;\n        long lastDigitCount18\
    \ = 0;\n        long lastDigitCount19 = 0;\n        long lastDigitCount20 = 0;\n\
    \        long lastDigitCount21 = 0;\n        long lastDigitCount22 = 0;\n    \
    \    long lastDigitCount23 = 0;\n        long lastDigitCount24 = 0;\n        long\
    \ lastDigitCount25 = 0;\n        long lastDigitCount26 = 0;\n        long lastDigitCount27\
    \ = 0;\n        long lastDigitCount28 = 0;\n        long lastDigitCount29 = 0;\n\
    \        long lastDigitCount30 = 0;\n        long lastDigitCount31 = 0;\n    \
    \    long lastDigitCount32 = 0;\n        long lastDigitCount33 = 0;\n        long\
    \ lastDigitCount34 = 0;\n        long lastDigitCount35 = 0;\n        long lastDigitCount36\
    \ = 0;\n        long lastDigitCount37 = 0;\n        long lastDigitCount38 = 0;\n\
    \        long lastDigitCount39 = 0;\n        long lastDigitCount40 = 0;\n    \
    \    long lastDigitCount41 = 0;\n        long lastDigitCount42 = 0;\n        long\
    \ lastDigitCount43 = 0;\n        long lastDigitCount44 = 0;\n        long lastDigitCount45\
    \ = 0;\n        long lastDigitCount46 = 0;\n        long lastDigitCount47 = 0;\n\
    \        long lastDigitCount48 = 0;\n        long lastDigitCount49 = 0;\n    \
    \    long lastDigitCount50 = 0;\n        long lastDigitCount51 = 0;\n        long\
    \ lastDigitCount52 = 0;\n        long lastDigitCount53 = 0;\n        long lastDigitCount54\
    \ = 0;\n        long lastDigitCount55 = 0;\n        long lastDigitCount56 = 0;\n\
    \        long lastDigitCount57 = 0;\n        long lastDigitCount58 = 0;\n    \
    \    long lastDigitCount59 = 0;\n        long lastDigitCount60 = 0;\n        long\
    \ lastDigitCount61 = 0;\n        long lastDigitCount62 = 0;\n        long lastDigitCount\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr39zwuz7.cs(82,28): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        bool flag = false;\n        foreach (long i in\
    \ x) {\n            temp = i;\n            while (temp > 0) {\n              \
    \  sum = sum + temp % 10;\n                temp = temp / 10;\n            }\n\
    \            if (sum % 2 == 0) {\n                flag = true;\n            }\n\
    \            if (flag) {\n                result.Add(i);\n            }\n    \
    \        sum = 0;\n            flag = false;\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b7d1037de12345fbb08bb63361bc550c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b7d1037de12345fbb08bb63361bc550c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long lastDigit\
    \ = 0;\n        long lastDigitCount = 0;\n        foreach (long i in x) {\n  \
    \          if (i % 2 == 0) {\n                lastDigit = i;\n               \
    \ lastDigitCount = 1;\n            } else {\n                if (lastDigitCount\
    \ > 1) {\n                    result.Add(lastDigit);\n                    lastDigitCount\
    \ = 0;\n                }\n            }\n        }\n        if (lastDigitCount\
    \ > 1) {\n            result.Add(lastDigit);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b651bc587a2e4b7c9292723efe50120d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b651bc587a2e4b7c9292723efe50120d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp != 0) {\n                sum += temp % 10;\n        \
    \        temp /= 10;\n            }\n            if (sum % 2 != 0) {\n       \
    \         result.Add(i);\n            }\n        }\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9f6c7237d73e42ca91b73aa4f72b4605>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9f6c7237d73e42ca91b73aa4f72b4605>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long temp = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3facafd69beb4afc8cb22393fe9d9a12>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3facafd69beb4afc8cb22393fe9d9a12>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      bool isEven = false;\n        long max = 0;\n        long min = 0;\n  \
    \      foreach (long i in x) {\n            temp = i;\n            isEven = false;\n\
    \            while (temp > 0) {\n                if (temp % 2 == 0) {\n      \
    \              isEven = true;\n                    break;\n                }\n\
    \                temp = temp / 2;\n            }\n            if (isEven) {\n\
    \                max = Math.Max(max, i);\n                min = Math.Min(min,\
    \ i);\n            }\n        }\n        long count = 0;\n        long tempCount\
    \ = 0;\n        foreach (long i in x) {\n            temp = i;\n            isEven\
    \ = false;\n            while (temp > 0) {\n                if (temp % 2 == 0)\
    \ {\n                    isEven = true;\n                    break;\n        \
    \        }\n                temp = temp / 2;\n            }\n            if (isEven)\
    \ {\n                tempCount++;\n            }\n        }\n        if (tempCount\
    \ != 0) {\n            count = tempCount;\n        }\n        long tempCount2\
    \ = 0;\n        foreach (long i in x) {\n            temp = i;\n            isEven\
    \ = false;\n            while (temp > 0) {\n                if (temp % 2 == 0)\
    \ {\n                    isEven = true;\n                    break;\n        \
    \        }\n                temp = temp / 2;\n            }\n            if (isEven)\
    \ {\n                tempCount2++;\n            }\n        }\n        if (tempCount2\
    \ != 0) {\n            count = tempCount2;\n        }\n        long tempCount3\
    \ = 0;\n        foreach (long i in x) {\n            temp = i;\n            isEven\
    \ = false;\n            while (temp > 0) {\n                if (temp % 2 == 0)\
    \ {\n                    isEven = true;\n                    break;\n        \
    \        }\n                temp = temp / 2;\n            }\n            if (isEven)\
    \ {\n                tempCount3++;\n            }\n        }\n        if (tempCount3\
    \ != 0) {\n            count = tempCount3;\n        }\n        long tempCount4\
    \ = 0;\n        foreach (long i in x) {\n            temp = i;\n            isEven\
    \ = false;\n            while (temp > 0) {\n                if (temp % 2 == 0)\
    \ {\n                    isEven = true;\n                    break;\n        \
    \        }\n                temp = temp / 2;\n            }\n            if (isEven)\
    \ {\n                tempCount4++;\n            }\n        }\n        if (tempCount4\
    \ != 0) {\n            count = tempCount4;\n        }\n        long tempCount5\
    \ = 0;\n        foreach (long i in x) {\n            temp = i;\n            isEven\
    \ = false;\n            while (temp > 0) {\n                if (temp % 2 == 0)\
    \ {\n                    isEven = true;\n                    break;\n        \
    \        }\n                temp = temp / 2;\n            }\n            if (isEven)\
    \ {\n                tempCount5++;\n            }\n        }\n        if (tempCount5\
    \ != 0) {\n            count = tempCount5;\n        }\n        long tempCount6\
    \ = 0;\n        foreach (long \n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8nlb3fhq.cs(130,18): error CS1525: Invalid expression term ''long''

    /tmp/tmp8nlb3fhq.cs(130,22): error CS1515: ''in'' expected

    /tmp/tmp8nlb3fhq.cs(130,22): error CS0230: Type and identifier are both required
    in a foreach statement

    /tmp/tmp8nlb3fhq.cs(130,22): error CS1525: Invalid expression term ''}''

    /tmp/tmp8nlb3fhq.cs(130,22): error CS1026: ) expected

    /tmp/tmp8nlb3fhq.cs(130,22): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        foreach (long\
    \ i in x) {\n            lastDigitSum += i % 10;\n            if (lastDigitSum\
    \ == lastDigit) {\n                result.Add(i);\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3804029835dd49e69cdabf0cc5915337>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3804029835dd49e69cdabf0cc5915337>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long digit;\n        long sum = 0;\n        long count = 0;\n        foreach\
    \ (long i in x) {\n            temp = i;\n            digit = temp / 10;\n   \
    \         while (temp > 0) {\n                sum += digit;\n                count++;\n\
    \                temp = temp / 10;\n            }\n            if (sum % 2 !=\
    \ 0) {\n                result.Add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <309f8127c9e4442b997865fe5bac857c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <309f8127c9e4442b997865fe5bac857c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long lastDigit\
    \ = 0;\n        long lastDigitCount = 0;\n        foreach (long i in x) {\n  \
    \          if (i % 2 == 0) {\n                lastDigit = i;\n               \
    \ lastDigitCount = 1;\n            } else {\n                if (lastDigitCount\
    \ > 1) {\n                    result.Add(lastDigit);\n                    lastDigitCount\
    \ = 0;\n                }\n            }\n        }\n        if (lastDigitCount\
    \ > 1) {\n            result.Add(lastDigit);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b651bc587a2e4b7c9292723efe50120d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b651bc587a2e4b7c9292723efe50120d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum = sum + temp % 10;\n    \
    \            temp = temp / 10;\n            }\n            if (sum % 2 == 0) {\n\
    \                result.Add(i);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4a5061bc363e4895a3e9e8c5e5923ca9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4a5061bc363e4895a3e9e8c5e5923ca9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long lastDigit\
    \ = 0;\n        long lastDigitCount = 0;\n        long lastDigitCount2 = 0;\n\
    \        long lastDigitCount3 = 0;\n        long lastDigitCount4 = 0;\n      \
    \  long lastDigitCount5 = 0;\n        long lastDigitCount6 = 0;\n        long\
    \ lastDigitCount7 = 0;\n        long lastDigitCount8 = 0;\n        long lastDigitCount9\
    \ = 0;\n        long lastDigitCount10 = 0;\n        long lastDigitCount11 = 0;\n\
    \        long lastDigitCount12 = 0;\n        long lastDigitCount13 = 0;\n    \
    \    long lastDigitCount14 = 0;\n        long lastDigitCount15 = 0;\n        long\
    \ lastDigitCount16 = 0;\n        long lastDigitCount17 = 0;\n        long lastDigitCount18\
    \ = 0;\n        long lastDigitCount19 = 0;\n        long lastDigitCount20 = 0;\n\
    \        long lastDigitCount21 = 0;\n        long lastDigitCount22 = 0;\n    \
    \    long lastDigitCount23 = 0;\n        long lastDigitCount24 = 0;\n        long\
    \ lastDigitCount25 = 0;\n        long lastDigitCount26 = 0;\n        long lastDigitCount27\
    \ = 0;\n        long lastDigitCount28 = 0;\n        long lastDigitCount29 = 0;\n\
    \        long lastDigitCount30 = 0;\n        long lastDigitCount31 = 0;\n    \
    \    long lastDigitCount32 = 0;\n        long lastDigitCount33 = 0;\n        long\
    \ lastDigitCount34 = 0;\n        long lastDigitCount35 = 0;\n        long lastDigitCount36\
    \ = 0;\n        long lastDigitCount37 = 0;\n        long lastDigitCount38 = 0;\n\
    \        long lastDigitCount39 = 0;\n        long lastDigitCount40 = 0;\n    \
    \    long lastDigitCount41 = 0;\n        long lastDigitCount42 = 0;\n        long\
    \ lastDigitCount43 = 0;\n        long lastDigitCount44 = 0;\n        long lastDigitCount45\
    \ = 0;\n        long lastDigitCount46 = 0;\n        long lastDigitCount47 = 0;\n\
    \        long lastDigitCount48 = 0;\n        long lastDigitCount49 = 0;\n    \
    \    long lastDigitCount50 = 0;\n        long lastDigitCount51 = 0;\n        long\
    \ lastDigitCount52 = 0;\n        long lastDigitCount53 = 0;\n        long lastDigitCount54\
    \ = 0;\n        long lastDigitCount55 = 0;\n        long lastDigitCount56 = 0;\n\
    \        long lastDigitCount57 = 0;\n        long lastDigitCount58 = 0;\n    \
    \    long lastDigitCount59 = 0;\n        long lastDigitCount60 = 0;\n        long\
    \ lastDigitCount61 = 0;\n        long lastDigitCount62 = 0;\n        long lastDigitCount\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr39zwuz7.cs(82,28): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n        long temp86;\n\
    \        long temp87;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppbc2f5c2.cs(19,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(20,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(21,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(22,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(23,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(24,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(25,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(26,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(27,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(28,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(29,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(30,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(31,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(32,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(33,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(34,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(35,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(36,14): warning CS0168: The variable ''temp18'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(37,14): warning CS0168: The variable ''temp19'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(38,14): warning CS0168: The variable ''temp20'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(39,14): warning CS0168: The variable ''temp21'' is de'
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ lastDigit = sum % 10;\n        long lastSum = sum / 10;\n        bool isEven\
    \ = true;\n        foreach (long i in x) {\n            if (i % 10 != lastDigit)\
    \ {\n                isEven = false;\n                break;\n            }\n\
    \        }\n        if (isEven) {\n            result.Add(lastSum);\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <033e392aa4cd4458b47677b0844d812e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <033e392aa4cd4458b47677b0844d812e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ maxSum = sum;\n        long maxSumIndex = 0;\n        long maxSumDigit = 0;\n\
    \        long maxSumDigitIndex = 0;\n        foreach (long i in x) {\n       \
    \     long digit = i % 10;\n            if (digit == 0) {\n                continue;\n\
    \            }\n            long sumDigit = sum % 10;\n            if (sumDigit\
    \ == 0) {\n                continue;\n            }\n            if (sumDigit\
    \ == digit) {\n                maxSumDigit = digit;\n                maxSumDigitIndex\
    \ = i;\n            }\n            sum += digit;\n        }\n        if (maxSumDigit\
    \ == 0) {\n            return result;\n        }\n        long maxSumDigitDigit\
    \ = maxSumDigit % 10;\n        long maxSumDigitIndex = maxSumIndex % 10;\n   \
    \     long maxSumDigitDigitIndex = maxSumDigitIndex % 10;\n        long maxSumDigitDigitIndexDigit\
    \ = maxSumDigitDigitIndex % 10;\n        if (maxSumDigitDigit == 0) {\n      \
    \      while (maxSumDigitIndex != maxSumDigitIndexDigit) {\n                result.Add(x[maxSumDigitIndex]);\n\
    \                maxSumDigitIndex++;\n            }\n            return result;\n\
    \        }\n        long maxSumDigitDigitDigit = maxSumDigitDigit % 10;\n    \
    \    long maxSumDigitDigitIndex = maxSumDigitIndex % 10;\n        long maxSumDigitDigitIndexDigit\
    \ = maxSumDigitDigitIndex % 10;\n        long maxSumDigitDigitIndexDigitDigit\
    \ = maxSumDigitDigitIndexDigit % 10;\n        if (maxSumDigitDigitDigit == 0)\
    \ {\n            while (maxSumDigitIndex != maxSumDigitIndexDigit) {\n       \
    \         result.Add(x[maxSumDigitIndex]);\n                maxSumDigitIndex++;\n\
    \            }\n            while (maxSumDigitDigitIndex != maxSumDigitDigitIndexDigit)\
    \ {\n                result.Add(x[maxSumDigitDigitIndex]);\n                maxSumDigitDigitIndex++;\n\
    \            }\n            return result;\n        }\n        long maxSumDigitDigitDigitDigit\
    \ = maxSumDigitDigitDigit % 10;\n        long maxSumDigitDigitIndexDigit = maxSumDigitDigitIndex\
    \ % 10;\n        long maxSumDigitDigitIndexDigitDigit = maxSumDigitDigitIndexDigit\
    \ % 10;\n        long maxSumDigitDigitIndexDigitDigitDigit = maxSumDigitDigitIndexDigitDigit\
    \ % 10;\n        if (maxSumDigitDigitDigitDigit == 0) {\n            while (maxSumDigitIndex\
    \ != maxSumDigitIndexDigit) {\n                result.Add(x[maxSumDigitIndex\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyro3atma.cs(77,46): error CS1003: Syntax error, '']'' expected

    /tmp/tmpyro3atma.cs(77,46): error CS1026: ) expected

    /tmp/tmpyro3atma.cs(77,46): error CS1002: ; expected

    /tmp/tmpyro3atma.cs(79,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpyro3atma.cs(86,2): error CS1513: } expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ lastDigit = sum % 10;\n        long lastSum = sum / 10;\n        long lastSumDigit\
    \ = lastSum % 10;\n        long lastSumDigit2 = lastSum / 10;\n        long lastSumDigit3\
    \ = lastSum / 100;\n        long lastSumDigit4 = lastSum / 1000;\n        long\
    \ lastSumDigit5 = lastSum / 10000;\n        long lastSumDigit6 = lastSum / 100000;\n\
    \        long lastSumDigit7 = lastSum / 1000000;\n        long lastSumDigit8 =\
    \ lastSum / 10000000;\n        long lastSumDigit9 = lastSum / 100000000;\n   \
    \     long lastSumDigit10 = lastSum / 1000000000;\n        long lastSumDigit11\
    \ = lastSum / 10000000000;\n        long lastSumDigit12 = lastSum / 100000000000;\n\
    \        long lastSumDigit13 = lastSum / 1000000000000;\n        long lastSumDigit14\
    \ = lastSum / 10000000000000;\n        long lastSumDigit15 = lastSum / 100000000000000;\n\
    \        long lastSumDigit16 = lastSum / 1000000000000000;\n        long lastSumDigit17\
    \ = lastSum / 10000000000000000L;\n        long lastSumDigit18 = lastSum / 100000000000000000;\n\
    \        long lastSumDigit19 = lastSum / 10000000000000000L;\n        long lastSumDigit20\
    \ = lastSum / 100000000000000000;\n        long lastSumDigit21 = lastSum / 10000000000000000L;\n\
    \        long lastSumDigit22 = lastSum / 100000000000000000;\n        long lastSumDigit23\
    \ = lastSum / 10000000000000000L;\n        long lastSumDigit24 = lastSum / 100000000000000000;\n\
    \        long lastSumDigit25 = lastSum / 10000000000000000L;\n        long lastSumDigit26\
    \ = lastSum / 100000000000000000;\n        long lastSumDigit27 = lastSum / 10000000000000000L;\n\
    \        long lastSumDigit28 = lastSum / 100000000000000000;\n        long lastSumDigit29\
    \ = lastSum / 10000000000000000L;\n        long lastSumDigit30 = lastSum / 100000000000000000;\n\
    \        long lastSumDigit31 = lastSum / 10000000000000000L;\n        long lastSumDigit32\
    \ = lastSum / 100000000000000000;\n        long lastSumDigit33 = lastSum / 10000000000000000L;\n\
    \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbi1x_sx0.cs(17,30): error CS0161: ''Problem.UniqueDigits(List<long>)'':
    not all code paths return a value

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ lastDigit = sum % 10;\n        long lastSum = 0;\n        foreach (long i in\
    \ x) {\n            long digit = i % 10;\n            if (digit == lastDigit)\
    \ {\n                lastSum += i;\n            } else {\n                if (lastSum\
    \ != 0) {\n                    result.Add(lastSum);\n                    lastSum\
    \ = 0;\n                }\n                result.Add(i);\n            }\n   \
    \         lastDigit = digit;\n        }\n        if (lastSum != 0) {\n       \
    \     result.Add(lastSum);\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fc76799483d4373b797b06f5309eb8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fc76799483d4373b797b06f5309eb8f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        long digit;\n        bool hasEven = false;\n   \
    \     foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ != 0) {\n                digit = temp % 10;\n                sum += digit;\n\
    \                temp /= 10;\n            }\n            if (sum % 2 == 0) {\n\
    \                hasEven = true;\n            }\n            if (hasEven) {\n\
    \                result.Add(i);\n            }\n            sum = 0;\n       \
    \     hasEven = false;\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b48bc02bf8024cffacb0a1deca9632a1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b48bc02bf8024cffacb0a1deca9632a1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long lastDigit\
    \ = 0;\n        long lastDigitCount = 0;\n        foreach (long i in x) {\n  \
    \          if (i % 2 == 0) {\n                if (lastDigit == 0) {\n        \
    \            lastDigit = i;\n                    lastDigitCount = 1;\n       \
    \         }\n                else {\n                    lastDigitCount += 1;\n\
    \                    if (lastDigitCount > 2) {\n                        result.Add(lastDigit);\n\
    \                        lastDigit = 0;\n                        lastDigitCount\
    \ = 0;\n                    }\n                }\n            }\n        }\n \
    \       if (lastDigit != 0) {\n            result.Add(lastDigit);\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7710457cdbf243689eb8807c1fa2e99c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7710457cdbf243689eb8807c1fa2e99c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdfdddb5b2e94c2c8490e4a769ae454c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdfdddb5b2e94c2c8490e4a769ae454c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 != 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aea7190b88df451f9d67c3c44bfcae5a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aea7190b88df451f9d67c3c44bfcae5a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n        long temp86;\n\
    \        long temp87;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppbc2f5c2.cs(19,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(20,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(21,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(22,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(23,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(24,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(25,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(26,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(27,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(28,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(29,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(30,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(31,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(32,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(33,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(34,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(35,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(36,14): warning CS0168: The variable ''temp18'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(37,14): warning CS0168: The variable ''temp19'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(38,14): warning CS0168: The variable ''temp20'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(39,14): warning CS0168: The variable ''temp21'' is de'
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        bool flag = false;\n        foreach (long i in x) {\n            temp\
    \ = i;\n            flag = false;\n            while (temp != 0) {\n         \
    \       if (temp % 2 == 0) {\n                    flag = true;\n             \
    \       break;\n                }\n                temp = temp / 2;\n        \
    \    }\n            if (!flag) {\n                result.Add(i);\n           \
    \ }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e1d869e8a8dc44e69fd3bc470a249ebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e1d869e8a8dc44e69fd3bc470a249ebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        bool flag = false;\n        foreach (long i in x) {\n            temp\
    \ = i;\n            flag = false;\n            while (temp != 0) {\n         \
    \       temp = temp / 10;\n                if (temp % 2 == 0) {\n            \
    \        flag = true;\n                    break;\n                }\n       \
    \     }\n            if (!flag) {\n                result.Add(i);\n          \
    \  }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e9a8a023310848baa10b5a8d1195263a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e9a8a023310848baa10b5a8d1195263a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n        long temp86;\n\
    \        long temp87;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppbc2f5c2.cs(19,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(20,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(21,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(22,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(23,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(24,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(25,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(26,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(27,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(28,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(29,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(30,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(31,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(32,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(33,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(34,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(35,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(36,14): warning CS0168: The variable ''temp18'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(37,14): warning CS0168: The variable ''temp19'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(38,14): warning CS0168: The variable ''temp20'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(39,14): warning CS0168: The variable ''temp21'' is de'
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 != 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aea7190b88df451f9d67c3c44bfcae5a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aea7190b88df451f9d67c3c44bfcae5a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long lastDigit\
    \ = 0;\n        long lastDigitCount = 0;\n        long lastDigitCount2 = 0;\n\
    \        long lastDigitCount3 = 0;\n        long lastDigitCount4 = 0;\n      \
    \  long lastDigitCount5 = 0;\n        long lastDigitCount6 = 0;\n        long\
    \ lastDigitCount7 = 0;\n        long lastDigitCount8 = 0;\n        long lastDigitCount9\
    \ = 0;\n        long lastDigitCount10 = 0;\n        long lastDigitCount11 = 0;\n\
    \        long lastDigitCount12 = 0;\n        long lastDigitCount13 = 0;\n    \
    \    long lastDigitCount14 = 0;\n        long lastDigitCount15 = 0;\n        long\
    \ lastDigitCount16 = 0;\n        long lastDigitCount17 = 0;\n        long lastDigitCount18\
    \ = 0;\n        long lastDigitCount19 = 0;\n        long lastDigitCount20 = 0;\n\
    \        long lastDigitCount21 = 0;\n        long lastDigitCount22 = 0;\n    \
    \    long lastDigitCount23 = 0;\n        long lastDigitCount24 = 0;\n        long\
    \ lastDigitCount25 = 0;\n        long lastDigitCount26 = 0;\n        long lastDigitCount27\
    \ = 0;\n        long lastDigitCount28 = 0;\n        long lastDigitCount29 = 0;\n\
    \        long lastDigitCount30 = 0;\n        long lastDigitCount31 = 0;\n    \
    \    long lastDigitCount32 = 0;\n        long lastDigitCount33 = 0;\n        long\
    \ lastDigitCount34 = 0;\n        long lastDigitCount35 = 0;\n        long lastDigitCount36\
    \ = 0;\n        long lastDigitCount37 = 0;\n        long lastDigitCount38 = 0;\n\
    \        long lastDigitCount39 = 0;\n        long lastDigitCount40 = 0;\n    \
    \    long lastDigitCount41 = 0;\n        long lastDigitCount42 = 0;\n        long\
    \ lastDigitCount43 = 0;\n        long lastDigitCount44 = 0;\n        long lastDigitCount45\
    \ = 0;\n        long lastDigitCount46 = 0;\n        long lastDigitCount47 = 0;\n\
    \        long lastDigitCount48 = 0;\n        long lastDigitCount49 = 0;\n    \
    \    long lastDigitCount50 = 0;\n        long lastDigitCount51 = 0;\n        long\
    \ lastDigitCount52 = 0;\n        long lastDigitCount53 = 0;\n        long lastDigitCount54\
    \ = 0;\n        long lastDigitCount55 = 0;\n        long lastDigitCount56 = 0;\n\
    \        long lastDigitCount57 = 0;\n        long lastDigitCount58 = 0;\n    \
    \    long lastDigitCount59 = 0;\n        long lastDigitCount60 = 0;\n        long\
    \ lastDigitCount61 = 0;\n        long lastDigitCount62 = 0;\n        long lastDigitCount\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr39zwuz7.cs(82,28): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n        long temp86;\n\
    \        long temp87;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppbc2f5c2.cs(19,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(20,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(21,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(22,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(23,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(24,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(25,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(26,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(27,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(28,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(29,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(30,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(31,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(32,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(33,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(34,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(35,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(36,14): warning CS0168: The variable ''temp18'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(37,14): warning CS0168: The variable ''temp19'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(38,14): warning CS0168: The variable ''temp20'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(39,14): warning CS0168: The variable ''temp21'' is de'
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      bool flag = false;\n        long temp2;\n        long temp3;\n        long\
    \ temp4;\n        long temp5;\n        long temp6;\n        long temp7;\n    \
    \    long temp8;\n        long temp9;\n        long temp10;\n        long temp11;\n\
    \        long temp12;\n        long temp13;\n        long temp14;\n        long\
    \ temp15;\n        long temp16;\n        long temp17;\n        long temp18;\n\
    \        long temp19;\n        long temp20;\n        long temp21;\n        long\
    \ temp22;\n        long temp23;\n        long temp24;\n        long temp25;\n\
    \        long temp26;\n        long temp27;\n        long temp28;\n        long\
    \ temp29;\n        long temp30;\n        long temp31;\n        long temp32;\n\
    \        long temp33;\n        long temp34;\n        long temp35;\n        long\
    \ temp36;\n        long temp37;\n        long temp38;\n        long temp39;\n\
    \        long temp40;\n        long temp41;\n        long temp42;\n        long\
    \ temp43;\n        long temp44;\n        long temp45;\n        long temp46;\n\
    \        long temp47;\n        long temp48;\n        long temp49;\n        long\
    \ temp50;\n        long temp51;\n        long temp52;\n        long temp53;\n\
    \        long temp54;\n        long temp55;\n        long temp56;\n        long\
    \ temp57;\n        long temp58;\n        long temp59;\n        long temp60;\n\
    \        long temp61;\n        long temp62;\n        long temp63;\n        long\
    \ temp64;\n        long temp65;\n        long temp66;\n        long temp67;\n\
    \        long temp68;\n        long temp69;\n        long temp70;\n        long\
    \ temp71;\n        long temp72;\n        long temp73;\n        long temp74;\n\
    \        long temp75;\n        long temp76;\n        long temp77;\n        long\
    \ temp78;\n        long temp79;\n        long temp80;\n        long temp81;\n\
    \        long temp82;\n        long temp83;\n        long temp84;\n        long\
    \ temp85;\n        long temp86;\n        \n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1tt4uo_t.cs(19,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmp1tt4uo_t.cs(20,14): warning CS0219: The variable ''flag'' is assigned
    but its value is never used

    /tmp/tmp1tt4uo_t.cs(21,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmp1tt4uo_t.cs(22,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmp1tt4uo_t.cs(23,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmp1tt4uo_t.cs(24,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmp1tt4uo_t.cs(25,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmp1tt4uo_t.cs(26,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmp1tt4uo_t.cs(27,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmp1tt4uo_t.cs(28,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmp1tt4uo_t.cs(29,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmp1tt4uo_t.cs(30,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmp1tt4uo_t.cs(31,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmp1tt4uo_t.cs(32,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmp1tt4uo_t.cs(33,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmp1tt4uo_t.cs(34,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmp1tt4uo_t.cs(35,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmp1tt4uo_t.cs(36,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmp1tt4uo_t.cs(37,14): warning CS0168: The variable ''temp18'' is declared
    but never used

    /tmp/tmp1tt4uo_t.cs(38,14): warning CS0168: The variable ''temp19'' is declared
    but never used

    /tmp/tmp1tt4uo_t.cs(39,14): warning CS0168: The variable ''te'
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long count = 0;\n        long max = 0;\n        long min = 0;\n     \
    \   foreach (long i in x) {\n            temp = i;\n            while (temp >\
    \ 0) {\n                temp = temp / 10;\n                count++;\n        \
    \    }\n            if (count % 2 == 0) {\n                max = Math.Max(max,\
    \ i);\n                min = Math.Min(min, i);\n            }\n        }\n   \
    \     long mid = min + (max - min) / 2;\n        foreach (long i in x) {\n   \
    \         if (i > mid) {\n                result.Add(i);\n            }\n    \
    \    }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d154ce75c7f74fa1a8788b4b7efcb699>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d154ce75c7f74fa1a8788b4b7efcb699>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17bef786141b489595afbf53d6265728>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17bef786141b489595afbf53d6265728>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long lastDigit\
    \ = x.Last();\n        long lastDigitCount = 0;\n        long lastDigitCount2\
    \ = 0;\n        long lastDigitCount3 = 0;\n        long lastDigitCount4 = 0;\n\
    \        long lastDigitCount5 = 0;\n        long lastDigitCount6 = 0;\n      \
    \  long lastDigitCount7 = 0;\n        long lastDigitCount8 = 0;\n        long\
    \ lastDigitCount9 = 0;\n        long lastDigitCount10 = 0;\n        long lastDigitCount11\
    \ = 0;\n        long lastDigitCount12 = 0;\n        long lastDigitCount13 = 0;\n\
    \        long lastDigitCount14 = 0;\n        long lastDigitCount15 = 0;\n    \
    \    long lastDigitCount16 = 0;\n        long lastDigitCount17 = 0;\n        long\
    \ lastDigitCount18 = 0;\n        long lastDigitCount19 = 0;\n        long lastDigitCount20\
    \ = 0;\n        long lastDigitCount21 = 0;\n        long lastDigitCount22 = 0;\n\
    \        long lastDigitCount23 = 0;\n        long lastDigitCount24 = 0;\n    \
    \    long lastDigitCount25 = 0;\n        long lastDigitCount26 = 0;\n        long\
    \ lastDigitCount27 = 0;\n        long lastDigitCount28 = 0;\n        long lastDigitCount29\
    \ = 0;\n        long lastDigitCount30 = 0;\n        long lastDigitCount31 = 0;\n\
    \        long lastDigitCount32 = 0;\n        long lastDigitCount33 = 0;\n    \
    \    long lastDigitCount34 = 0;\n        long lastDigitCount35 = 0;\n        long\
    \ lastDigitCount36 = 0;\n        long lastDigitCount37 = 0;\n        long lastDigitCount38\
    \ = 0;\n        long lastDigitCount39 = 0;\n        long lastDigitCount40 = 0;\n\
    \        long lastDigitCount41 = 0;\n        long lastDigitCount42 = 0;\n    \
    \    long lastDigitCount43 = 0;\n        long lastDigitCount44 = 0;\n        long\
    \ lastDigitCount45 = 0;\n        long lastDigitCount46 = 0;\n        long lastDigitCount47\
    \ = 0;\n        long lastDigitCount48 = 0;\n        long lastDigitCount49 = 0;\n\
    \        long lastDigitCount50 = 0;\n        long lastDigitCount51 = 0;\n    \
    \    long lastDigitCount52 = 0;\n        long lastDigitCount53 = 0;\n        long\
    \ lastDigitCount54 = 0;\n        long lastDigitCount55 = 0;\n        long lastDigitCount56\
    \ = 0;\n        long lastDigitCount57 = 0;\n        long lastDigitCount58 = 0;\n\
    \        long lastDigitCount59 = 0;\n        long lastDigitCount60 = 0;\n    \
    \    long lastDigitCount61 = 0;\n        long lastDigitCount62 = 0;\n        long\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk9n4ifdr.cs(82,13): error CS1001: Identifier expected

    /tmp/tmpk9n4ifdr.cs(82,13): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long lastDigit\
    \ = 0;\n        long lastDigitCount = 0;\n        long lastDigitCount2 = 0;\n\
    \        long lastDigitCount3 = 0;\n        long lastDigitCount4 = 0;\n      \
    \  long lastDigitCount5 = 0;\n        long lastDigitCount6 = 0;\n        long\
    \ lastDigitCount7 = 0;\n        long lastDigitCount8 = 0;\n        long lastDigitCount9\
    \ = 0;\n        long lastDigitCount10 = 0;\n        long lastDigitCount11 = 0;\n\
    \        long lastDigitCount12 = 0;\n        long lastDigitCount13 = 0;\n    \
    \    long lastDigitCount14 = 0;\n        long lastDigitCount15 = 0;\n        long\
    \ lastDigitCount16 = 0;\n        long lastDigitCount17 = 0;\n        long lastDigitCount18\
    \ = 0;\n        long lastDigitCount19 = 0;\n        long lastDigitCount20 = 0;\n\
    \        long lastDigitCount21 = 0;\n        long lastDigitCount22 = 0;\n    \
    \    long lastDigitCount23 = 0;\n        long lastDigitCount24 = 0;\n        long\
    \ lastDigitCount25 = 0;\n        long lastDigitCount26 = 0;\n        long lastDigitCount27\
    \ = 0;\n        long lastDigitCount28 = 0;\n        long lastDigitCount29 = 0;\n\
    \        long lastDigitCount30 = 0;\n        long lastDigitCount31 = 0;\n    \
    \    long lastDigitCount32 = 0;\n        long lastDigitCount33 = 0;\n        long\
    \ lastDigitCount34 = 0;\n        long lastDigitCount35 = 0;\n        long lastDigitCount36\
    \ = 0;\n        long lastDigitCount37 = 0;\n        long lastDigitCount38 = 0;\n\
    \        long lastDigitCount39 = 0;\n        long lastDigitCount40 = 0;\n    \
    \    long lastDigitCount41 = 0;\n        long lastDigitCount42 = 0;\n        long\
    \ lastDigitCount43 = 0;\n        long lastDigitCount44 = 0;\n        long lastDigitCount45\
    \ = 0;\n        long lastDigitCount46 = 0;\n        long lastDigitCount47 = 0;\n\
    \        long lastDigitCount48 = 0;\n        long lastDigitCount49 = 0;\n    \
    \    long lastDigitCount50 = 0;\n        long lastDigitCount51 = 0;\n        long\
    \ lastDigitCount52 = 0;\n        long lastDigitCount53 = 0;\n        long lastDigitCount54\
    \ = 0;\n        long lastDigitCount55 = 0;\n        long lastDigitCount56 = 0;\n\
    \        long lastDigitCount57 = 0;\n        long lastDigitCount58 = 0;\n    \
    \    long lastDigitCount59 = 0;\n        long lastDigitCount60 = 0;\n        long\
    \ lastDigitCount61 = 0;\n        long lastDigitCount62 = 0;\n        long lastDigitCount\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr39zwuz7.cs(82,28): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long max = 0;\n        long min = 0;\n        foreach (long i in x) {\n\
    \            sum += i;\n            if (sum > max) {\n                max = sum;\n\
    \            }\n            if (sum < min) {\n                min = sum;\n   \
    \         }\n        }\n        long mid = min + (max - min) / 2;\n        foreach\
    \ (long i in x) {\n            if (i % 2 == 0) {\n                if (i % mid\
    \ == 0) {\n                    result.Add(i);\n                }\n           \
    \ }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b365769379e544ddb55d42778ac7eae0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b365769379e544ddb55d42778ac7eae0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long n in x) {\n            sum += n;\n            if (sum %\
    \ 2 == 0) {\n                result.Add(n);\n            }\n        }\n      \
    \  return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e6a35c395d4b47c79f33d3f4c127b310>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e6a35c395d4b47c79f33d3f4c127b310>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                if (temp % 2 == 0) {\n                    result.Add(temp);\n\
    \                    break;\n                }\n                temp /= 2;\n \
    \           }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28053a5cf891451797d919d4e326e554>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <28053a5cf891451797d919d4e326e554>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17bef786141b489595afbf53d6265728>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17bef786141b489595afbf53d6265728>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long temp;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 != 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8be7a210f7ed48cfbd548b63a67eee0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8be7a210f7ed48cfbd548b63a67eee0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      bool flag = false;\n        foreach (long i in x) {\n            temp =\
    \ i;\n            while (temp > 0) {\n                flag = false;\n        \
    \        for (int j = 0; j < x.Count; j++) {\n                    if (temp % 10\
    \ == x[j]) {\n                        flag = true;\n                        break;\n\
    \                    }\n                }\n                if (!flag) {\n    \
    \                result.Add(i);\n                    break;\n                }\n\
    \                temp--;\n            }\n        }\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6a0caf9cbd4e46899ba01cc760c67fd9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6a0caf9cbd4e46899ba01cc760c67fd9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793091
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n        long temp86;\n\
    \        long temp87;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppbc2f5c2.cs(19,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(20,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(21,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(22,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(23,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(24,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(25,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(26,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(27,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(28,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(29,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(30,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(31,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(32,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(33,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(34,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(35,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(36,14): warning CS0168: The variable ''temp18'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(37,14): warning CS0168: The variable ''temp19'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(38,14): warning CS0168: The variable ''temp20'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(39,14): warning CS0168: The variable ''temp21'' is de'
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdfdddb5b2e94c2c8490e4a769ae454c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdfdddb5b2e94c2c8490e4a769ae454c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      bool isEven = false;\n        long lastDigit = 0;\n        long lastDigitCount\
    \ = 0;\n        long lastDigitCount2 = 0;\n        long lastDigitCount3 = 0;\n\
    \        long lastDigitCount4 = 0;\n        long lastDigitCount5 = 0;\n      \
    \  long lastDigitCount6 = 0;\n        long lastDigitCount7 = 0;\n        long\
    \ lastDigitCount8 = 0;\n        long lastDigitCount9 = 0;\n        long lastDigitCount10\
    \ = 0;\n        long lastDigitCount11 = 0;\n        long lastDigitCount12 = 0;\n\
    \        long lastDigitCount13 = 0;\n        long lastDigitCount14 = 0;\n    \
    \    long lastDigitCount15 = 0;\n        long lastDigitCount16 = 0;\n        long\
    \ lastDigitCount17 = 0;\n        long lastDigitCount18 = 0;\n        long lastDigitCount19\
    \ = 0;\n        long lastDigitCount20 = 0;\n        long lastDigitCount21 = 0;\n\
    \        long lastDigitCount22 = 0;\n        long lastDigitCount23 = 0;\n    \
    \    long lastDigitCount24 = 0;\n        long lastDigitCount25 = 0;\n        long\
    \ lastDigitCount26 = 0;\n        long lastDigitCount27 = 0;\n        long lastDigitCount28\
    \ = 0;\n        long lastDigitCount29 = 0;\n        long lastDigitCount30 = 0;\n\
    \        long lastDigitCount31 = 0;\n        long lastDigitCount32 = 0;\n    \
    \    long lastDigitCount33 = 0;\n        long lastDigitCount34 = 0;\n        long\
    \ lastDigitCount35 = 0;\n        long lastDigitCount36 = 0;\n        long lastDigitCount37\
    \ = 0;\n        long lastDigitCount38 = 0;\n        long lastDigitCount39 = 0;\n\
    \        long lastDigitCount40 = 0;\n        long lastDigitCount41 = 0;\n    \
    \    long lastDigitCount42 = 0;\n        long lastDigitCount43 = 0;\n        long\
    \ lastDigitCount44 = 0;\n        long lastDigitCount45 = 0;\n        long lastDigitCount46\
    \ = 0;\n        long lastDigitCount47 = 0;\n        long lastDigitCount48 = 0;\n\
    \        long lastDigitCount49 = 0;\n        long lastDigitCount50 = 0;\n    \
    \    long lastDigitCount51 = 0;\n        long lastDigitCount52 = 0;\n        long\
    \ lastDigitCount53 = 0;\n        long lastDigitCount54 = 0;\n        long lastDigitCount55\
    \ = 0;\n        long lastDigitCount56 = 0;\n        long lastDigitCount57 = 0;\n\
    \        long lastDigitCount58 = 0;\n        long lastDigitCount59 = 0;\n    \
    \    long lastDigitCount60 = 0;\n        long lastDigitCount61 = 0;\n        long\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfiqgkxxl.cs(83,13): error CS1001: Identifier expected

    /tmp/tmpfiqgkxxl.cs(83,13): error CS1002: ; expected

    '
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        long digit;\n        foreach (long i in x) {\n \
    \           temp = i;\n            while (temp > 0) {\n                digit =\
    \ temp % 10;\n                sum += digit;\n                temp /= 10;\n   \
    \         }\n            if (sum % 2 == 0) {\n                result.Add(i);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <917f1fdfd24a4285b80deca512e713b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <917f1fdfd24a4285b80deca512e713b6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793091
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        bool isEven = false;\n        foreach (long i in\
    \ x) {\n            temp = i;\n            while (temp != 0) {\n             \
    \   sum += temp % 10;\n                temp /= 10;\n            }\n          \
    \  if (sum % 2 == 0) {\n                isEven = true;\n            }\n      \
    \      if (isEven) {\n                result.Add(i);\n            }\n        \
    \    sum = 0;\n            isEven = false;\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5450e9b5aa284cb185fbc5835072b184>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5450e9b5aa284cb185fbc5835072b184>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17bef786141b489595afbf53d6265728>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17bef786141b489595afbf53d6265728>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long lastDigit\
    \ = 0;\n        long lastDigitCount = 0;\n        long lastDigitCount2 = 0;\n\
    \        long lastDigitCount3 = 0;\n        long lastDigitCount4 = 0;\n      \
    \  long lastDigitCount5 = 0;\n        long lastDigitCount6 = 0;\n        long\
    \ lastDigitCount7 = 0;\n        long lastDigitCount8 = 0;\n        long lastDigitCount9\
    \ = 0;\n        long lastDigitCount10 = 0;\n        long lastDigitCount11 = 0;\n\
    \        long lastDigitCount12 = 0;\n        long lastDigitCount13 = 0;\n    \
    \    long lastDigitCount14 = 0;\n        long lastDigitCount15 = 0;\n        long\
    \ lastDigitCount16 = 0;\n        long lastDigitCount17 = 0;\n        long lastDigitCount18\
    \ = 0;\n        long lastDigitCount19 = 0;\n        long lastDigitCount20 = 0;\n\
    \        long lastDigitCount21 = 0;\n        long lastDigitCount22 = 0;\n    \
    \    long lastDigitCount23 = 0;\n        long lastDigitCount24 = 0;\n        long\
    \ lastDigitCount25 = 0;\n        long lastDigitCount26 = 0;\n        long lastDigitCount27\
    \ = 0;\n        long lastDigitCount28 = 0;\n        long lastDigitCount29 = 0;\n\
    \        long lastDigitCount30 = 0;\n        long lastDigitCount31 = 0;\n    \
    \    long lastDigitCount32 = 0;\n        long lastDigitCount33 = 0;\n        long\
    \ lastDigitCount34 = 0;\n        long lastDigitCount35 = 0;\n        long lastDigitCount36\
    \ = 0;\n        long lastDigitCount37 = 0;\n        long lastDigitCount38 = 0;\n\
    \        long lastDigitCount39 = 0;\n        long lastDigitCount40 = 0;\n    \
    \    long lastDigitCount41 = 0;\n        long lastDigitCount42 = 0;\n        long\
    \ lastDigitCount43 = 0;\n        long lastDigitCount44 = 0;\n        long lastDigitCount45\
    \ = 0;\n        long lastDigitCount46 = 0;\n        long lastDigitCount47 = 0;\n\
    \        long lastDigitCount48 = 0;\n        long lastDigitCount49 = 0;\n    \
    \    long lastDigitCount50 = 0;\n        long lastDigitCount51 = 0;\n        long\
    \ lastDigitCount52 = 0;\n        long lastDigitCount53 = 0;\n        long lastDigitCount54\
    \ = 0;\n        long lastDigitCount55 = 0;\n        long lastDigitCount56 = 0;\n\
    \        long lastDigitCount57 = 0;\n        long lastDigitCount58 = 0;\n    \
    \    long lastDigitCount59 = 0;\n        long lastDigitCount60 = 0;\n        long\
    \ lastDigitCount61 = 0;\n        long lastDigitCount62 = 0;\n        long lastDigitCount\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr39zwuz7.cs(82,28): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n        long temp86;\n\
    \        long temp87;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppbc2f5c2.cs(19,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(20,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(21,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(22,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(23,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(24,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(25,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(26,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(27,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(28,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(29,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(30,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(31,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(32,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(33,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(34,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(35,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(36,14): warning CS0168: The variable ''temp18'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(37,14): warning CS0168: The variable ''temp19'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(38,14): warning CS0168: The variable ''temp20'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(39,14): warning CS0168: The variable ''temp21'' is de'
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17bef786141b489595afbf53d6265728>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17bef786141b489595afbf53d6265728>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        bool isEven = false;\n        foreach (long i in\
    \ x) {\n            temp = i;\n            while (temp > 0) {\n              \
    \  sum += temp % 10;\n                temp /= 10;\n            }\n           \
    \ if (sum % 2 == 0) {\n                isEven = true;\n            }\n       \
    \     if (isEven) {\n                result.Add(i);\n            }\n         \
    \   sum = 0;\n            isEven = false;\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1bc1bf5f34d46d7b87373ce7f678bc3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1bc1bf5f34d46d7b87373ce7f678bc3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793091
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17bef786141b489595afbf53d6265728>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <17bef786141b489595afbf53d6265728>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        long count = 0;\n        foreach (long i in x) {\n\
    \            temp = i;\n            while (temp > 0) {\n                sum +=\
    \ temp % 10;\n                temp = (temp / 10).ToString().Length;\n        \
    \    }\n            if (sum % 2 == 0) {\n                result.Add(i);\n    \
    \            count++;\n            }\n        }\n        if (count > 0) {\n  \
    \          x.Sort();\n            foreach (long i in x) {\n                if\
    \ (result.Contains(i)) {\n                    x.Remove(i);\n                }\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659793095
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        foreach (long\
    \ i in x) {\n            long digit = i % 10;\n            if (digit != lastDigit)\
    \ {\n                result.Add(i);\n                lastDigitSum += digit * lastDigit;\n\
    \            }\n            lastDigit = digit;\n        }\n        if (lastDigitSum\
    \ != 0) {\n            result.Add(lastDigitSum);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <601b85b07b264512bb995d05111236b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <601b85b07b264512bb995d05111236b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long lastDigit\
    \ = 0;\n        long lastDigitCount = 0;\n        long lastDigitCount2 = 0;\n\
    \        long lastDigitCount3 = 0;\n        long lastDigitCount4 = 0;\n      \
    \  long lastDigitCount5 = 0;\n        long lastDigitCount6 = 0;\n        long\
    \ lastDigitCount7 = 0;\n        long lastDigitCount8 = 0;\n        long lastDigitCount9\
    \ = 0;\n        long lastDigitCount10 = 0;\n        long lastDigitCount11 = 0;\n\
    \        long lastDigitCount12 = 0;\n        long lastDigitCount13 = 0;\n    \
    \    long lastDigitCount14 = 0;\n        long lastDigitCount15 = 0;\n        long\
    \ lastDigitCount16 = 0;\n        long lastDigitCount17 = 0;\n        long lastDigitCount18\
    \ = 0;\n        long lastDigitCount19 = 0;\n        long lastDigitCount20 = 0;\n\
    \        long lastDigitCount21 = 0;\n        long lastDigitCount22 = 0;\n    \
    \    long lastDigitCount23 = 0;\n        long lastDigitCount24 = 0;\n        long\
    \ lastDigitCount25 = 0;\n        long lastDigitCount26 = 0;\n        long lastDigitCount27\
    \ = 0;\n        long lastDigitCount28 = 0;\n        long lastDigitCount29 = 0;\n\
    \        long lastDigitCount30 = 0;\n        long lastDigitCount31 = 0;\n    \
    \    long lastDigitCount32 = 0;\n        long lastDigitCount33 = 0;\n        long\
    \ lastDigitCount34 = 0;\n        long lastDigitCount35 = 0;\n        long lastDigitCount36\
    \ = 0;\n        long lastDigitCount37 = 0;\n        long lastDigitCount38 = 0;\n\
    \        long lastDigitCount39 = 0;\n        long lastDigitCount40 = 0;\n    \
    \    long lastDigitCount41 = 0;\n        long lastDigitCount42 = 0;\n        long\
    \ lastDigitCount43 = 0;\n        long lastDigitCount44 = 0;\n        long lastDigitCount45\
    \ = 0;\n        long lastDigitCount46 = 0;\n        long lastDigitCount47 = 0;\n\
    \        long lastDigitCount48 = 0;\n        long lastDigitCount49 = 0;\n    \
    \    long lastDigitCount50 = 0;\n        long lastDigitCount51 = 0;\n        long\
    \ lastDigitCount52 = 0;\n        long lastDigitCount53 = 0;\n        long lastDigitCount54\
    \ = 0;\n        long lastDigitCount55 = 0;\n        long lastDigitCount56 = 0;\n\
    \        long lastDigitCount57 = 0;\n        long lastDigitCount58 = 0;\n    \
    \    long lastDigitCount59 = 0;\n        long lastDigitCount60 = 0;\n        long\
    \ lastDigitCount61 = 0;\n        long lastDigitCount62 = 0;\n        long lastDigitCount\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr39zwuz7.cs(82,28): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long count = 0;\n        foreach (long i in x) {\n            temp =\
    \ i;\n            while (temp > 0) {\n                temp = temp / 10;\n    \
    \            count++;\n            }\n            if (count % 2 == 0) {\n    \
    \            result.Add(i);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c20251c6d278477385c9a9344658201e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c20251c6d278477385c9a9344658201e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ sum2 = sum;\n        long sum3 = sum;\n        long sum4 = sum;\n        long\
    \ sum5 = sum;\n        long sum6 = sum;\n        long sum7 = sum;\n        long\
    \ sum8 = sum;\n        long sum9 = sum;\n        long sum10 = sum;\n        long\
    \ sum11 = sum;\n        long sum12 = sum;\n        long sum13 = sum;\n       \
    \ long sum14 = sum;\n        long sum15 = sum;\n        long sum16 = sum;\n  \
    \      long sum17 = sum;\n        long sum18 = sum;\n        long sum19 = sum;\n\
    \        long sum20 = sum;\n        long sum21 = sum;\n        long sum22 = sum;\n\
    \        long sum23 = sum;\n        long sum24 = sum;\n        long sum25 = sum;\n\
    \        long sum26 = sum;\n        long sum27 = sum;\n        long sum28 = sum;\n\
    \        long sum29 = sum;\n        long sum30 = sum;\n        long sum31 = sum;\n\
    \        long sum32 = sum;\n        long sum33 = sum;\n        long sum34 = sum;\n\
    \        long sum35 = sum;\n        long sum36 = sum;\n        long sum37 = sum;\n\
    \        long sum38 = sum;\n        long sum39 = sum;\n        long sum40 = sum;\n\
    \        long sum41 = sum;\n        long sum42 = sum;\n        long sum43 = sum;\n\
    \        long sum44 = sum;\n        long sum45 = sum;\n        long sum46 = sum;\n\
    \        long sum47 = sum;\n        long sum48 = sum;\n        long sum49 = sum;\n\
    \        long sum50 = sum;\n        long sum51 = sum;\n        long sum52 = sum;\n\
    \        long sum53 = sum;\n        long sum54 = sum;\n        long sum55 = sum;\n\
    \        long sum56 = sum;\n        long sum57 = sum;\n        long sum58 = sum;\n\
    \        long sum59 = sum;\n        long sum60 = sum;\n        long sum61 = sum;\n\
    \        long sum62 = sum;\n        long sum63 = sum;\n\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpog8ulv3z.cs(17,30): error CS0161: ''Problem.UniqueDigits(List<long>)'':
    not all code paths return a value

    '
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n        long temp86;\n\
    \        long temp87;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppbc2f5c2.cs(19,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(20,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(21,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(22,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(23,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(24,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(25,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(26,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(27,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(28,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(29,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(30,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(31,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(32,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(33,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(34,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(35,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(36,14): warning CS0168: The variable ''temp18'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(37,14): warning CS0168: The variable ''temp19'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(38,14): warning CS0168: The variable ''temp20'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(39,14): warning CS0168: The variable ''temp21'' is de'
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum = sum * 10 + temp % 10;\n\
    \                temp /= 10;\n            }\n            if (sum % 2 == 0) {\n\
    \                result.Add(i);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d55b80ff89db413b83970147fda65fd8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d55b80ff89db413b83970147fda65fd8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793091
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ != 0) {\n                temp = temp / 10;\n                if (temp % 2 !=\
    \ 0) {\n                    result.Add(temp);\n                }\n           \
    \ }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <564aa6cb21dd43789eb7871f5366413b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <564aa6cb21dd43789eb7871f5366413b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793091
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long lastDigit\
    \ = 0;\n        long lastDigitCount = 0;\n        foreach (long i in x) {\n  \
    \          if (i % 2 == 0) {\n                lastDigit = i;\n               \
    \ lastDigitCount = 1;\n            } else {\n                if (lastDigitCount\
    \ > 1) {\n                    result.Add(lastDigit);\n                    lastDigitCount\
    \ = 0;\n                }\n            }\n        }\n        if (lastDigitCount\
    \ > 1) {\n            result.Add(lastDigit);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b651bc587a2e4b7c9292723efe50120d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b651bc587a2e4b7c9292723efe50120d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      bool flag = false;\n        foreach (long i in x) {\n            temp =\
    \ i;\n            flag = false;\n            while (temp != 0) {\n           \
    \     if (temp % 2 == 0) {\n                    flag = true;\n               \
    \     break;\n                }\n                temp = temp / 2;\n          \
    \  }\n            if (!flag) {\n                result.Add(i);\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fe229a36985642eba0bd4e6d1d146385>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fe229a36985642eba0bd4e6d1d146385>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793091
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long digit = 0;\n\
    \        long lastDigit = 0;\n        bool isEven = false;\n        foreach (long\
    \ i in x) {\n            digit = i;\n            isEven = i % 2 == 0;\n      \
    \      if (isEven) {\n                lastDigit = digit;\n            }\n    \
    \        else if (digit != lastDigit) {\n                result.Add(digit);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <80c9d33d286543f19a00b778f414761c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <80c9d33d286543f19a00b778f414761c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793091
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long lastDigit = 0;\n        foreach (long i in x) {\n            temp\
    \ += i;\n            if (temp % 2 == 0) {\n                lastDigit = temp /\
    \ 2;\n            }\n            if (lastDigit % 2 == 0) {\n                result.Add(lastDigit);\n\
    \                lastDigit = 0;\n            }\n        }\n        if (lastDigit\
    \ != 0) {\n            result.Add(lastDigit);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5067dcadd4cc46fdb88ce2d75433f8d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5067dcadd4cc46fdb88ce2d75433f8d1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ temp;\n        long temp2;\n        long temp3;\n        long temp4;\n     \
    \   long temp5;\n        long temp6;\n        long temp7;\n        long temp8;\n\
    \        long temp9;\n        long temp10;\n        long temp11;\n        long\
    \ temp12;\n        long temp13;\n        long temp14;\n        long temp15;\n\
    \        long temp16;\n        long temp17;\n        long temp18;\n        long\
    \ temp19;\n        long temp20;\n        long temp21;\n        long temp22;\n\
    \        long temp23;\n        long temp24;\n        long temp25;\n        long\
    \ temp26;\n        long temp27;\n        long temp28;\n        long temp29;\n\
    \        long temp30;\n        long temp31;\n        long temp32;\n        long\
    \ temp33;\n        long temp34;\n        long temp35;\n        long temp36;\n\
    \        long temp37;\n        long temp38;\n        long temp39;\n        long\
    \ temp40;\n        long temp41;\n        long temp42;\n        long temp43;\n\
    \        long temp44;\n        long temp45;\n        long temp46;\n        long\
    \ temp47;\n        long temp48;\n        long temp49;\n        long temp50;\n\
    \        long temp51;\n        long temp52;\n        long temp53;\n        long\
    \ temp54;\n        long temp55;\n        long temp56;\n        long temp57;\n\
    \        long temp58;\n        long temp59;\n        long temp60;\n        long\
    \ temp61;\n        long temp62;\n        long temp63;\n        long temp64;\n\
    \        long temp65;\n        long temp66;\n        long temp67;\n        long\
    \ temp68;\n        long temp69;\n        long temp70;\n        long temp71;\n\
    \        long temp72;\n        long temp73;\n        long temp74;\n        long\
    \ temp75;\n        long temp76;\n        long temp77;\n        long temp78;\n\
    \        long temp79;\n        long temp80;\n        long temp81;\n        long\
    \ temp82;\n        long temp83;\n        long temp84;\n        \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0mw21uew.cs(23,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(24,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(25,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(26,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(27,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(28,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(29,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(30,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(31,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(32,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(33,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(34,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(35,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(36,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(37,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(38,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(39,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(40,14): warning CS0168: The variable ''temp18'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(41,14): warning CS0168: The variable ''temp19'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(42,14): warning CS0168: The variable ''temp20'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(43,14): warning CS0168: The variable ''temp21'' is de'
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n        long temp86;\n\
    \        long temp87;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppbc2f5c2.cs(19,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(20,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(21,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(22,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(23,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(24,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(25,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(26,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(27,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(28,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(29,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(30,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(31,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(32,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(33,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(34,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(35,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(36,14): warning CS0168: The variable ''temp18'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(37,14): warning CS0168: The variable ''temp19'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(38,14): warning CS0168: The variable ''temp20'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(39,14): warning CS0168: The variable ''temp21'' is de'
  timestamp: 1659793089
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long temp = 0;\n        foreach (long i in x) {\n            sum += i;\n\
    \        }\n        temp = sum % 10;\n        while (temp != 0) {\n          \
    \  long tempSum = 0;\n            foreach (long i in x) {\n                tempSum\
    \ += i;\n            }\n            if (tempSum == temp) {\n                result.Add(temp);\n\
    \            }\n            temp = temp % 10;\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659793096
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long digit = 0;\n\
    \        bool hasEvenDigit = false;\n        long max = 0;\n        foreach (long\
    \ i in x) {\n            digit = i;\n            hasEvenDigit = false;\n     \
    \       max = i;\n            while (digit > 0) {\n                digit = digit\
    \ / 10;\n                if (digit % 2 == 0) {\n                    hasEvenDigit\
    \ = true;\n                    break;\n                }\n            }\n    \
    \        if (hasEvenDigit == false) {\n                result.Add(i);\n      \
    \      }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d859dfbca1954464a047bafbfe1ff24a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d859dfbca1954464a047bafbfe1ff24a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793091
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ % 2 == 0) {\n                temp = temp / 2;\n            }\n            if\
    \ (result.Contains(temp)) {\n                continue;\n            }\n      \
    \      result.Add(temp);\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <212c643a6606460aba9863c767b33f72>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <212c643a6606460aba9863c767b33f72>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdfdddb5b2e94c2c8490e4a769ae454c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdfdddb5b2e94c2c8490e4a769ae454c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      bool flag = false;\n        long temp2;\n        foreach (long i in x)\
    \ {\n            temp = i;\n            while (temp > 0) {\n                temp2\
    \ = temp % 10;\n                if (temp2 % 2 == 0) {\n                    flag\
    \ = true;\n                    break;\n                }\n                temp\
    \ = temp / 10;\n            }\n            if (flag) {\n                result.Add(i);\n\
    \            }\n            flag = false;\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7b4dc8fb560a4248b7c29d7e89d6a575>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7b4dc8fb560a4248b7c29d7e89d6a575>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long lastDigit\
    \ = x.Last();\n        long lastDigitCount = 0;\n        long lastDigitCount2\
    \ = 0;\n        long lastDigitCount3 = 0;\n        long lastDigitCount4 = 0;\n\
    \        long lastDigitCount5 = 0;\n        long lastDigitCount6 = 0;\n      \
    \  long lastDigitCount7 = 0;\n        long lastDigitCount8 = 0;\n        long\
    \ lastDigitCount9 = 0;\n        long lastDigitCount10 = 0;\n        long lastDigitCount11\
    \ = 0;\n        long lastDigitCount12 = 0;\n        long lastDigitCount13 = 0;\n\
    \        long lastDigitCount14 = 0;\n        long lastDigitCount15 = 0;\n    \
    \    long lastDigitCount16 = 0;\n        long lastDigitCount17 = 0;\n        long\
    \ lastDigitCount18 = 0;\n        long lastDigitCount19 = 0;\n        long lastDigitCount20\
    \ = 0;\n        long lastDigitCount21 = 0;\n        long lastDigitCount22 = 0;\n\
    \        long lastDigitCount23 = 0;\n        long lastDigitCount24 = 0;\n    \
    \    long lastDigitCount25 = 0;\n        long lastDigitCount26 = 0;\n        long\
    \ lastDigitCount27 = 0;\n        long lastDigitCount28 = 0;\n        long lastDigitCount29\
    \ = 0;\n        long lastDigitCount30 = 0;\n        long lastDigitCount31 = 0;\n\
    \        long lastDigitCount32 = 0;\n        long lastDigitCount33 = 0;\n    \
    \    long lastDigitCount34 = 0;\n        long lastDigitCount35 = 0;\n        long\
    \ lastDigitCount36 = 0;\n        long lastDigitCount37 = 0;\n        long lastDigitCount38\
    \ = 0;\n        long lastDigitCount39 = 0;\n        long lastDigitCount40 = 0;\n\
    \        long lastDigitCount41 = 0;\n        long lastDigitCount42 = 0;\n    \
    \    long lastDigitCount43 = 0;\n        long lastDigitCount44 = 0;\n        long\
    \ lastDigitCount45 = 0;\n        long lastDigitCount46 = 0;\n        long lastDigitCount47\
    \ = 0;\n        long lastDigitCount48 = 0;\n        long lastDigitCount49 = 0;\n\
    \        long lastDigitCount50 = 0;\n        long lastDigitCount51 = 0;\n    \
    \    long lastDigitCount52 = 0;\n        long lastDigitCount53 = 0;\n        long\
    \ lastDigitCount54 = 0;\n        long lastDigitCount55 = 0;\n        long lastDigitCount56\
    \ = 0;\n        long lastDigitCount57 = 0;\n        long lastDigitCount58 = 0;\n\
    \        long lastDigitCount59 = 0;\n        long lastDigitCount60 = 0;\n    \
    \    long lastDigitCount61 = 0;\n        long lastDigitCount62 = 0;\n        long\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk9n4ifdr.cs(82,13): error CS1001: Identifier expected

    /tmp/tmpk9n4ifdr.cs(82,13): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long temp;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                temp = temp / 10;\n         \
    \       sum += temp;\n            }\n            if (sum % 2 == 0) {\n       \
    \         result.Add(i);\n            }\n            sum = 0;\n        }\n   \
    \     return result;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bbb391f433544514bff61c13217c8004>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bbb391f433544514bff61c13217c8004>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793091
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdfdddb5b2e94c2c8490e4a769ae454c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdfdddb5b2e94c2c8490e4a769ae454c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ lastDigit = sum % 10;\n        long lastDigitSum = 0;\n        foreach (long\
    \ i in x) {\n            lastDigitSum += i % 10;\n            if (lastDigitSum\
    \ == lastDigit) {\n                result.Add(i);\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3804029835dd49e69cdabf0cc5915337>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3804029835dd49e69cdabf0cc5915337>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n        long temp86;\n\
    \        long temp87;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppbc2f5c2.cs(19,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(20,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(21,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(22,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(23,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(24,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(25,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(26,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(27,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(28,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(29,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(30,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(31,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(32,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(33,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(34,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(35,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(36,14): warning CS0168: The variable ''temp18'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(37,14): warning CS0168: The variable ''temp19'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(38,14): warning CS0168: The variable ''temp20'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(39,14): warning CS0168: The variable ''temp21'' is de'
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long lastDigit\
    \ = x.Last();\n        long lastDigitCount = 1;\n        long lastDigitCountLastDigit\
    \ = 1;\n        long lastDigitCountLastDigitLastDigit = 1;\n        long lastDigitCountLastDigitLastDigitLastDigit\
    \ = 1;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigit = 1;\n\
    \        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigit = 1;\n\
    \        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 1;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 1;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 1;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 1;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 1;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 1;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 1;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 1;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 1;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 1;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 1;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 1;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 1;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 1;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 1;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 1;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 1;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 1;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 1;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 1;\n        long last\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp917lsv4y.cs(46,18): error CS1002: ; expected

    '
  timestamp: 1659793091
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      bool isEven = false;\n        foreach (long i in x) {\n            temp\
    \ = i;\n            while (temp != 0) {\n                isEven = temp % 2 ==\
    \ 0;\n                if (isEven) {\n                    result.Add(temp);\n \
    \               }\n                temp /= 10;\n            }\n        }\n   \
    \     return result;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b1f472c3575e4d5688587c4cd683fb77>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b1f472c3575e4d5688587c4cd683fb77>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n        long temp86;\n\
    \        long temp87;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppbc2f5c2.cs(19,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(20,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(21,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(22,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(23,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(24,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(25,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(26,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(27,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(28,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(29,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(30,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(31,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(32,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(33,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(34,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(35,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(36,14): warning CS0168: The variable ''temp18'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(37,14): warning CS0168: The variable ''temp19'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(38,14): warning CS0168: The variable ''temp20'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(39,14): warning CS0168: The variable ''temp21'' is de'
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ != 0) {\n                temp = temp / 10;\n                if (temp % 2 ==\
    \ 0) {\n                    result.Add(temp);\n                }\n           \
    \ }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0250fdfc07494b0bb8a5f9456d2a1883>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0250fdfc07494b0bb8a5f9456d2a1883>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793091
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long lastDigit = 0;\n        foreach (long i in x) {\n            sum\
    \ += i;\n            if (sum > 0) {\n                lastDigit = sum % 10;\n \
    \           }\n            if (lastDigit % 2 == 0) {\n                result.Add(i);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <10d88a89b20345878a6305bd240c6502>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <10d88a89b20345878a6305bd240c6502>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        bool flag = false;\n        long sum = 0;\n        foreach (long i in\
    \ x) {\n            temp = i;\n            flag = false;\n            while (temp\
    \ > 0) {\n                sum += temp % 10;\n                temp = temp / 10;\n\
    \                if (sum % 2 == 0) {\n                    flag = true;\n     \
    \               break;\n                }\n            }\n            if (!flag)\
    \ {\n                result.Add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f0421831743a4bbaa7e3a284e183cab2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f0421831743a4bbaa7e3a284e183cab2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long temp;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f474175b9694319a16c7cc10b0c3dd1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3f474175b9694319a16c7cc10b0c3dd1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793091
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp != 0) {\n                sum += temp % 10;\n        \
    \        temp /= 10;\n            }\n            if (sum % 2 == 0) {\n       \
    \         result.Add(i);\n            }\n        }\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60c8aafc326c43f581df285a3260ef5a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <60c8aafc326c43f581df285a3260ef5a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793091
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      bool flag = false;\n        foreach (long i in x) {\n            temp =\
    \ i;\n            while (temp > 0) {\n                if (temp % 2 == 0) {\n \
    \                   flag = true;\n                    break;\n               \
    \ }\n                temp = temp / 2;\n            }\n            if (flag) {\n\
    \                result.Add(i);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0484de48489d43e1b86e8436b7a129fa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0484de48489d43e1b86e8436b7a129fa>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n        long temp86;\n\
    \        long temp87;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppbc2f5c2.cs(19,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(20,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(21,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(22,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(23,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(24,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(25,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(26,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(27,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(28,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(29,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(30,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(31,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(32,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(33,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(34,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(35,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(36,14): warning CS0168: The variable ''temp18'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(37,14): warning CS0168: The variable ''temp19'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(38,14): warning CS0168: The variable ''temp20'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(39,14): warning CS0168: The variable ''temp21'' is de'
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      bool hasEven = false;\n        foreach (long i in x) {\n            temp\
    \ = i;\n            while (temp != 0) {\n                temp = temp / 10;\n \
    \               if (temp % 2 == 0) {\n                    hasEven = true;\n  \
    \                  break;\n                }\n            }\n            if (!hasEven)\
    \ {\n                result.Add(i);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <487bf707905d4d97b77fce12dcb3103d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <487bf707905d4d97b77fce12dcb3103d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793092
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long digit = 0;\n        bool hasEven = false;\n        foreach (long\
    \ i in x) {\n            sum += i;\n            digit = sum / 10;\n          \
    \  if (digit % 2 == 0) {\n                hasEven = true;\n            }\n   \
    \         if (hasEven) {\n                result.Add(i);\n            }\n    \
    \    }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <837f7f5ba02843aab7767c7685c4c188>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <837f7f5ba02843aab7767c7685c4c188>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793092
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ lastSum = sum;\n        long lastDigit = 0;\n        long lastDigitCount = 0;\n\
    \        foreach (long i in x) {\n            long digit = i % 10;\n         \
    \   if (digit == 0) {\n                lastDigitCount++;\n            }\n    \
    \        else {\n                if (lastDigit == 0) {\n                    lastDigit\
    \ = digit;\n                    lastDigitCount = 1;\n                }\n     \
    \           else {\n                    if (lastDigitCount > 1) {\n          \
    \              result.Add(lastSum);\n                        lastDigitCount =\
    \ 0;\n                    }\n                    lastDigit = digit;\n        \
    \            lastDigitCount = 1;\n                }\n            }\n         \
    \   sum += i;\n        }\n        if (lastDigitCount > 1) {\n            result.Add(lastSum);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <287ea2d5243b4ea5a4c21fdfb5602196>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <287ea2d5243b4ea5a4c21fdfb5602196>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n        long temp86;\n\
    \        long temp87;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppbc2f5c2.cs(19,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(20,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(21,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(22,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(23,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(24,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(25,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(26,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(27,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(28,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(29,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(30,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(31,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(32,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(33,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(34,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(35,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(36,14): warning CS0168: The variable ''temp18'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(37,14): warning CS0168: The variable ''temp19'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(38,14): warning CS0168: The variable ''temp20'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(39,14): warning CS0168: The variable ''temp21'' is de'
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        bool isEven = false;\n        foreach (long i in\
    \ x) {\n            temp = i;\n            while (temp > 0) {\n              \
    \  sum += temp % 10;\n                temp /= 10;\n            }\n           \
    \ if (sum % 2 == 0) {\n                isEven = true;\n            }\n       \
    \     if (isEven) {\n                result.Add(i);\n            }\n         \
    \   sum = 0;\n            isEven = false;\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1bc1bf5f34d46d7b87373ce7f678bc3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c1bc1bf5f34d46d7b87373ce7f678bc3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long digit = 0;\n\
    \        long max = 0;\n        long min = 0;\n        long sum = 0;\n       \
    \ foreach (long i in x) {\n            sum += i;\n            if (sum > max) {\n\
    \                max = sum;\n            }\n            if (sum < min) {\n   \
    \             min = sum;\n            }\n        }\n        long sum2 = 0;\n \
    \       foreach (long i in x) {\n            sum2 += i;\n        }\n        long\
    \ sum3 = sum2 - sum;\n        long sum4 = sum3 / 10;\n        long sum5 = sum3\
    \ % 10;\n        long sum6 = sum4 / 10;\n        long sum7 = sum4 % 10;\n    \
    \    long sum8 = sum5 / 10;\n        long sum9 = sum5 % 10;\n        long sum10\
    \ = sum6 / 10;\n        long sum11 = sum6 % 10;\n        long sum12 = sum7 / 10;\n\
    \        long sum13 = sum7 % 10;\n        long sum14 = sum8 / 10;\n        long\
    \ sum15 = sum8 % 10;\n        long sum16 = sum9 / 10;\n        long sum17 = sum9\
    \ % 10;\n        long sum18 = sum10 / 10;\n        long sum19 = sum10 % 10;\n\
    \        long sum20 = sum11 / 10;\n        long sum21 = sum11 % 10;\n        long\
    \ sum22 = sum12 / 10;\n        long sum23 = sum12 % 10;\n        long sum24 =\
    \ sum13 / 10;\n        long sum25 = sum13 % 10;\n        long sum26 = sum14 /\
    \ 10;\n        long sum27 = sum14 % 10;\n        long sum28 = sum15 / 10;\n  \
    \      long sum29 = sum15 % 10;\n        long sum30 = sum16 / 10;\n        long\
    \ sum31 = sum16 % 10;\n        long sum32 = sum17 / 10;\n        long sum33 =\
    \ sum17 % 10;\n        long sum34 = sum18 / 10;\n        long sum35 = sum18 %\
    \ 10;\n        long sum36 = sum19 / 10;\n        long sum37 = sum19 % 10;\n  \
    \      long sum38 = sum20 / 10;\n        long sum39 = sum20 % 10;\n        long\
    \ sum40 = sum21 / 10;\n        long sum41 = sum21 % 10;\n        long sum42 =\
    \ sum22 / 10;\n        long sum43 = sum22 % 10;\n        long sum44 = sum23 /\
    \ 10;\n        long sum45 = sum23 % 10;\n        long sum46 = \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3dad_65l.cs(79,21): error CS1525: Invalid expression term ''}''

    /tmp/tmp3dad_65l.cs(79,21): error CS1002: ; expected

    '
  timestamp: 1659793091
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long lastDigit\
    \ = x.Last();\n        long lastDigitCount = 1;\n        long lastDigitCountLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigit = 0;\n        long lastDigitCountLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigit = 0;\n\
    \        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigit = 0;\n\
    \        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long last\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7xvi086v.cs(48,18): error CS1002: ; expected

    '
  timestamp: 1659793091
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long digit = 0;\n        foreach (long i in x) {\n            sum +=\
    \ i;\n            digit = sum / 10;\n            if (digit % 2 == 0) {\n     \
    \           result.Add(i);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <788f040601ab4b159ce99be11baae02e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <788f040601ab4b159ce99be11baae02e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ tempSum = sum;\n        long tempSum2 = sum;\n        long tempSum3 = sum;\n\
    \        long tempSum4 = sum;\n        long tempSum5 = sum;\n        long tempSum6\
    \ = sum;\n        long tempSum7 = sum;\n        long tempSum8 = sum;\n       \
    \ long tempSum9 = sum;\n        long tempSum10 = sum;\n        long tempSum11\
    \ = sum;\n        long tempSum12 = sum;\n        long tempSum13 = sum;\n     \
    \   long tempSum14 = sum;\n        long tempSum15 = sum;\n        long tempSum16\
    \ = sum;\n        long tempSum17 = sum;\n        long tempSum18 = sum;\n     \
    \   long tempSum19 = sum;\n        long tempSum20 = sum;\n        long tempSum21\
    \ = sum;\n        long tempSum22 = sum;\n        long tempSum23 = sum;\n     \
    \   long tempSum24 = sum;\n        long tempSum25 = sum;\n        long tempSum26\
    \ = sum;\n        long tempSum27 = sum;\n        long tempSum28 = sum;\n     \
    \   long tempSum29 = sum;\n        long tempSum30 = sum;\n        long tempSum31\
    \ = sum;\n        long tempSum32 = sum;\n        long tempSum33 = sum;\n     \
    \   long tempSum34 = sum;\n        long tempSum35 = sum;\n        long tempSum36\
    \ = sum;\n        long tempSum37 = sum;\n        long tempSum38 = sum;\n     \
    \   long tempSum39 = sum;\n        long tempSum40 = sum;\n        long tempSum41\
    \ = sum;\n        long tempSum42 = sum;\n        long tempSum43 = sum;\n     \
    \   long tempSum44 = sum;\n        long tempSum45 = sum;\n        long tempSum46\
    \ = sum;\n        long tempSum47 = sum;\n        long tempSum48 = sum;\n     \
    \   long tempSum49 = sum;\n        long tempSum50 = sum;\n        long tempSum51\
    \ = sum;\n        long tempSum52 = sum;\n        long tempSum53 = sum;\n     \
    \   long tempSum54 = sum;\n        long tempSum55 = sum;\n        long \n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb2py_ela.cs(78,13): error CS1001: Identifier expected

    /tmp/tmpb2py_ela.cs(78,13): error CS1002: ; expected

    '
  timestamp: 1659793091
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long lastDigit = 0;\n        foreach (long i in x) {\n            sum\
    \ += i;\n            lastDigit = i % 10;\n            if (sum % 2 == 0) {\n  \
    \              result.Add(i);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a6a6e72c87234b8298f505582e801db4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a6a6e72c87234b8298f505582e801db4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793092
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ maxSum = sum;\n        long maxSumIndex = 0;\n        long maxSumDigit = 0;\n\
    \        long maxSumDigitIndex = 0;\n        long maxSumDigitCount = 0;\n    \
    \    foreach (long i in x) {\n            long digit = i % 10;\n            if\
    \ (digit == 0) {\n                continue;\n            }\n            long sumDigit\
    \ = sum % 10;\n            if (sumDigit == 0) {\n                continue;\n \
    \           }\n            if (sumDigit == digit) {\n                maxSumDigit\
    \ = digit;\n                maxSumDigitIndex = i;\n                maxSumDigitCount\
    \ = 1;\n            } else {\n                if (maxSumDigitCount > 1) {\n  \
    \                  maxSumDigitCount--;\n                } else {\n           \
    \         maxSumDigitCount = 1;\n                }\n                if (maxSumDigit\
    \ == digit) {\n                    maxSumDigitIndex = i;\n                }\n\
    \            }\n        }\n        if (maxSumDigitCount > 0) {\n            result.Add(maxSumDigitIndex);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f7c69890d6f848a9b53dfd5040553d70>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f7c69890d6f848a9b53dfd5040553d70>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ temp;\n        long temp2;\n        long temp3;\n        long temp4;\n     \
    \   long temp5;\n        long temp6;\n        long temp7;\n        long temp8;\n\
    \        long temp9;\n        long temp10;\n        long temp11;\n        long\
    \ temp12;\n        long temp13;\n        long temp14;\n        long temp15;\n\
    \        long temp16;\n        long temp17;\n        long temp18;\n        long\
    \ temp19;\n        long temp20;\n        long temp21;\n        long temp22;\n\
    \        long temp23;\n        long temp24;\n        long temp25;\n        long\
    \ temp26;\n        long temp27;\n        long temp28;\n        long temp29;\n\
    \        long temp30;\n        long temp31;\n        long temp32;\n        long\
    \ temp33;\n        long temp34;\n        long temp35;\n        long temp36;\n\
    \        long temp37;\n        long temp38;\n        long temp39;\n        long\
    \ temp40;\n        long temp41;\n        long temp42;\n        long temp43;\n\
    \        long temp44;\n        long temp45;\n        long temp46;\n        long\
    \ temp47;\n        long temp48;\n        long temp49;\n        long temp50;\n\
    \        long temp51;\n        long temp52;\n        long temp53;\n        long\
    \ temp54;\n        long temp55;\n        long temp56;\n        long temp57;\n\
    \        long temp58;\n        long temp59;\n        long temp60;\n        long\
    \ temp61;\n        long temp62;\n        long temp63;\n        long temp64;\n\
    \        long temp65;\n        long temp66;\n        long temp67;\n        long\
    \ temp68;\n        long temp69;\n        long temp70;\n        long temp71;\n\
    \        long temp72;\n        long temp73;\n        long temp74;\n        long\
    \ temp75;\n        long temp76;\n        long temp77;\n        long temp78;\n\
    \        long temp79;\n        long temp80;\n        long temp81;\n        long\
    \ temp82;\n        long temp83;\n        long temp84;\n        \n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0mw21uew.cs(23,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(24,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(25,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(26,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(27,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(28,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(29,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(30,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(31,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(32,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(33,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(34,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(35,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(36,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(37,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(38,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(39,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(40,14): warning CS0168: The variable ''temp18'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(41,14): warning CS0168: The variable ''temp19'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(42,14): warning CS0168: The variable ''temp20'' is declared
    but never used

    /tmp/tmp0mw21uew.cs(43,14): warning CS0168: The variable ''temp21'' is de'
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(temp);\n                }\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5125e60712f24fdf888463842e4e8a77>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5125e60712f24fdf888463842e4e8a77>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793092
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 != 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eb4d6e0534e1432eba012bf83763de42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eb4d6e0534e1432eba012bf83763de42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793092
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long lastDigit\
    \ = 0;\n        long lastDigitCount = 0;\n        foreach (long i in x) {\n  \
    \          if (i % 2 == 0) {\n                lastDigit = i;\n               \
    \ lastDigitCount = 0;\n            } else {\n                if (lastDigitCount\
    \ > 0) {\n                    result.Add(lastDigit);\n                    lastDigitCount\
    \ = 0;\n                }\n            }\n        }\n        if (lastDigitCount\
    \ > 0) {\n            result.Add(lastDigit);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4d5b7ce7f5dc43919b8f512fc3faa5f3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4d5b7ce7f5dc43919b8f512fc3faa5f3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793092
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long count = 0;\n        foreach (long i in x) {\n            temp =\
    \ i;\n            while (temp > 0) {\n                temp = temp / 10;\n    \
    \            count++;\n            }\n            if (count % 2 == 0) {\n    \
    \            result.Add(i);\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c20251c6d278477385c9a9344658201e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c20251c6d278477385c9a9344658201e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793091
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(temp);\n                }\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5125e60712f24fdf888463842e4e8a77>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5125e60712f24fdf888463842e4e8a77>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      bool flag = false;\n        foreach (long i in x) {\n            temp =\
    \ i;\n            flag = false;\n            while (temp > 0) {\n            \
    \    temp = temp / 10;\n                if (temp % 2 == 0) {\n               \
    \     flag = true;\n                    break;\n                }\n          \
    \  }\n            if (!flag) {\n                result.Add(i);\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <50e34573513645f09c54e00fca6e266d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <50e34573513645f09c54e00fca6e266d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793092
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long digit = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            digit = i\
    \ % 10;\n            sum += digit;\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1da8bf0c98e14105a9b00dd5e32eb961>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1da8bf0c98e14105a9b00dd5e32eb961>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n        long temp86;\n\
    \        long temp87;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppbc2f5c2.cs(19,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(20,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(21,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(22,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(23,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(24,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(25,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(26,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(27,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(28,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(29,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(30,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(31,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(32,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(33,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(34,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(35,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(36,14): warning CS0168: The variable ''temp18'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(37,14): warning CS0168: The variable ''temp19'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(38,14): warning CS0168: The variable ''temp20'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(39,14): warning CS0168: The variable ''temp21'' is de'
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        long max = 0;\n        long min = 0;\n       \
    \ long count = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long\
    \ sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long sum7\
    \ = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n\
    \        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n \
    \       long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n  \
    \      long sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n   \
    \     long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n    \
    \    long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n     \
    \   long sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n      \
    \  long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n       \
    \ long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long\
    \ sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38\
    \ = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 =\
    \ 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n\
    \        long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n \
    \       long sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n  \
    \      long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n   \
    \     long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n    \
    \    long sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n     \
    \   long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n      \
    \  long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n       \
    \ long sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long\
    \ sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n        long sum72\
    \ = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n        long sum75 =\
    \ 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n\
    \        long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n \
    \       long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0yfi7zec.cs(104,13): error CS1001: Identifier expected

    /tmp/tmp0yfi7zec.cs(104,13): error CS1002: ; expected

    '
  timestamp: 1659793091
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long temp = 0;\n        foreach (long i in x) {\n            sum += i;\n\
    \        }\n        temp = sum % 10;\n        while (temp != 0) {\n          \
    \  int index = x.FindIndex(i => i % 10 == temp);\n            if (index != -1)\
    \ {\n                result.Add(x[index]);\n                x.RemoveAt(index);\n\
    \            }\n            temp = sum % 10;\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659793097
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdfdddb5b2e94c2c8490e4a769ae454c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdfdddb5b2e94c2c8490e4a769ae454c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ remainder = sum % 10;\n        if (remainder == 0) {\n            long lastDigit\
    \ = sum / 10;\n            while (lastDigit % 2 == 0) {\n                lastDigit\
    \ /= 10;\n            }\n            result.Add(lastDigit);\n        }\n     \
    \   else {\n            int digits = x.Count;\n            int digit = 0;\n  \
    \          while (digits > 0) {\n                digit = sum % 10;\n         \
    \       sum += digit / 10;\n                digits--;\n                if (digit\
    \ % 2 == 0) {\n                    result.Add(digit);\n                }\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq2rmfobt.cs(35,25): error CS0266: Cannot implicitly convert type ''long''
    to ''int''. An explicit conversion exists (are you missing a cast?)

    '
  timestamp: 1659793092
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long lastDigit\
    \ = x.Last();\n        long lastDigitCount = 1;\n        long lastDigitCountLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigit = 0;\n        long lastDigitCountLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigit = 0;\n\
    \        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigit = 0;\n\
    \        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long lastDigitCountLastDigitLastDigitLastDigitLastDigitLastDigitLastDigitLastDigit\
    \ = 0;\n        long last\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp04n1idly.cs(46,18): error CS1002: ; expected

    '
  timestamp: 1659793092
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long lastDigit\
    \ = 0;\n        long lastDigitCount = 0;\n        long lastDigitCount2 = 0;\n\
    \        long lastDigitCount3 = 0;\n        long lastDigitCount4 = 0;\n      \
    \  long lastDigitCount5 = 0;\n        long lastDigitCount6 = 0;\n        long\
    \ lastDigitCount7 = 0;\n        long lastDigitCount8 = 0;\n        long lastDigitCount9\
    \ = 0;\n        long lastDigitCount10 = 0;\n        long lastDigitCount11 = 0;\n\
    \        long lastDigitCount12 = 0;\n        long lastDigitCount13 = 0;\n    \
    \    long lastDigitCount14 = 0;\n        long lastDigitCount15 = 0;\n        long\
    \ lastDigitCount16 = 0;\n        long lastDigitCount17 = 0;\n        long lastDigitCount18\
    \ = 0;\n        long lastDigitCount19 = 0;\n        long lastDigitCount20 = 0;\n\
    \        long lastDigitCount21 = 0;\n        long lastDigitCount22 = 0;\n    \
    \    long lastDigitCount23 = 0;\n        long lastDigitCount24 = 0;\n        long\
    \ lastDigitCount25 = 0;\n        long lastDigitCount26 = 0;\n        long lastDigitCount27\
    \ = 0;\n        long lastDigitCount28 = 0;\n        long lastDigitCount29 = 0;\n\
    \        long lastDigitCount30 = 0;\n        long lastDigitCount31 = 0;\n    \
    \    long lastDigitCount32 = 0;\n        long lastDigitCount33 = 0;\n        long\
    \ lastDigitCount34 = 0;\n        long lastDigitCount35 = 0;\n        long lastDigitCount36\
    \ = 0;\n        long lastDigitCount37 = 0;\n        long lastDigitCount38 = 0;\n\
    \        long lastDigitCount39 = 0;\n        long lastDigitCount40 = 0;\n    \
    \    long lastDigitCount41 = 0;\n        long lastDigitCount42 = 0;\n        long\
    \ lastDigitCount43 = 0;\n        long lastDigitCount44 = 0;\n        long lastDigitCount45\
    \ = 0;\n        long lastDigitCount46 = 0;\n        long lastDigitCount47 = 0;\n\
    \        long lastDigitCount48 = 0;\n        long lastDigitCount49 = 0;\n    \
    \    long lastDigitCount50 = 0;\n        long lastDigitCount51 = 0;\n        long\
    \ lastDigitCount52 = 0;\n        long lastDigitCount53 = 0;\n        long lastDigitCount54\
    \ = 0;\n        long lastDigitCount55 = 0;\n        long lastDigitCount56 = 0;\n\
    \        long lastDigitCount57 = 0;\n        long lastDigitCount58 = 0;\n    \
    \    long lastDigitCount59 = 0;\n        long lastDigitCount60 = 0;\n        long\
    \ lastDigitCount61 = 0;\n        long lastDigitCount62 = 0;\n        long lastDigitCount\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr39zwuz7.cs(82,28): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 == 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdfdddb5b2e94c2c8490e4a769ae454c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdfdddb5b2e94c2c8490e4a769ae454c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ != 0) {\n                temp = temp / 10;\n                if (temp % 2 ==\
    \ 0) {\n                    result.Add(i);\n                    break;\n     \
    \           }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f951c86e84354fdd932dfda8cc0cf740>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f951c86e84354fdd932dfda8cc0cf740>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long temp = 0;\n        foreach (long i in x) {\n            sum += i;\n\
    \        }\n        temp = sum;\n        sum = 0;\n        foreach (long i in\
    \ x) {\n            sum += i;\n            if (sum % 2 == 0) {\n             \
    \   result.Add(i);\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2733344413604e968ae69b89ed93a2ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2733344413604e968ae69b89ed93a2ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793092
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ != 0) {\n                temp = temp / 10;\n                if (temp % 2 ==\
    \ 0) {\n                    result.Add(i);\n                    break;\n     \
    \           }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f951c86e84354fdd932dfda8cc0cf740>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f951c86e84354fdd932dfda8cc0cf740>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long digit = 0;\n\
    \        long lastDigit = 0;\n        foreach (long i in x) {\n            digit\
    \ = i % 10;\n            if (digit != 0) {\n                lastDigit = digit;\n\
    \            }\n            if (result.Contains(i)) {\n                continue;\n\
    \            }\n            if (lastDigit % 2 == 0) {\n                result.Add(i);\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1aac7da7b7e1491ab61e8ae2af4cee98>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1aac7da7b7e1491ab61e8ae2af4cee98>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long temp = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp != 0) {\n                sum += temp % 10;\n        \
    \        temp /= 10;\n            }\n            if (sum % 2 == 0) {\n       \
    \         result.Add(i);\n            }\n        }\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8ec78bbb8a84fc3a2dc731902ec93f0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8ec78bbb8a84fc3a2dc731902ec93f0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793092
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long digit = 0;\n\
    \        long lastDigit = 0;\n        bool isEven = false;\n        foreach (long\
    \ i in x) {\n            digit = i;\n            isEven = i % 2 == 0;\n      \
    \      if (isEven) {\n                lastDigit = digit;\n            }\n    \
    \        if (digit != lastDigit) {\n                result.Add(i);\n         \
    \   }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L,\
    \ (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L,\
    \ (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L, (long)2033L,\
    \ (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L, (long)151L}))));\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L, (long)103L,\
    \ (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <265303557989429e9fedeca49bfe636e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <265303557989429e9fedeca49bfe636e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long lastDigit\
    \ = 0;\n        long lastDigitCount = 0;\n        long lastDigitCount2 = 0;\n\
    \        long lastDigitCount3 = 0;\n        long lastDigitCount4 = 0;\n      \
    \  long lastDigitCount5 = 0;\n        long lastDigitCount6 = 0;\n        long\
    \ lastDigitCount7 = 0;\n        long lastDigitCount8 = 0;\n        long lastDigitCount9\
    \ = 0;\n        long lastDigitCount10 = 0;\n        long lastDigitCount11 = 0;\n\
    \        long lastDigitCount12 = 0;\n        long lastDigitCount13 = 0;\n    \
    \    long lastDigitCount14 = 0;\n        long lastDigitCount15 = 0;\n        long\
    \ lastDigitCount16 = 0;\n        long lastDigitCount17 = 0;\n        long lastDigitCount18\
    \ = 0;\n        long lastDigitCount19 = 0;\n        long lastDigitCount20 = 0;\n\
    \        long lastDigitCount21 = 0;\n        long lastDigitCount22 = 0;\n    \
    \    long lastDigitCount23 = 0;\n        long lastDigitCount24 = 0;\n        long\
    \ lastDigitCount25 = 0;\n        long lastDigitCount26 = 0;\n        long lastDigitCount27\
    \ = 0;\n        long lastDigitCount28 = 0;\n        long lastDigitCount29 = 0;\n\
    \        long lastDigitCount30 = 0;\n        long lastDigitCount31 = 0;\n    \
    \    long lastDigitCount32 = 0;\n        long lastDigitCount33 = 0;\n        long\
    \ lastDigitCount34 = 0;\n        long lastDigitCount35 = 0;\n        long lastDigitCount36\
    \ = 0;\n        long lastDigitCount37 = 0;\n        long lastDigitCount38 = 0;\n\
    \        long lastDigitCount39 = 0;\n        long lastDigitCount40 = 0;\n    \
    \    long lastDigitCount41 = 0;\n        long lastDigitCount42 = 0;\n        long\
    \ lastDigitCount43 = 0;\n        long lastDigitCount44 = 0;\n        long lastDigitCount45\
    \ = 0;\n        long lastDigitCount46 = 0;\n        long lastDigitCount47 = 0;\n\
    \        long lastDigitCount48 = 0;\n        long lastDigitCount49 = 0;\n    \
    \    long lastDigitCount50 = 0;\n        long lastDigitCount51 = 0;\n        long\
    \ lastDigitCount52 = 0;\n        long lastDigitCount53 = 0;\n        long lastDigitCount54\
    \ = 0;\n        long lastDigitCount55 = 0;\n        long lastDigitCount56 = 0;\n\
    \        long lastDigitCount57 = 0;\n        long lastDigitCount58 = 0;\n    \
    \    long lastDigitCount59 = 0;\n        long lastDigitCount60 = 0;\n        long\
    \ lastDigitCount61 = 0;\n        long lastDigitCount62 = 0;\n        long lastDigitCount\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr39zwuz7.cs(82,28): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        foreach (long i in x) {\n            temp = i;\n            while (temp\
    \ > 0) {\n                temp = temp / 10;\n                if (temp % 2 == 0)\
    \ {\n                    result.Add(i);\n                    break;\n        \
    \        }\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new List<long>(new\
    \ long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new List<long>(new\
    \ long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d5c8081828e2406aae7f3349f32e4cd4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long digit = 0;\n\
    \        long count = 0;\n        long lastDigit = 0;\n        foreach (long i\
    \ in x) {\n            digit = i;\n            while (digit > 0) {\n         \
    \       count++;\n                digit /= 10;\n            }\n            if\
    \ (count % 2 == 0) {\n                result.Add(i);\n            }\n        \
    \    lastDigit = i;\n            count = 0;\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6d1c2d085f774cbaa669b734c427bc66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6d1c2d085f774cbaa669b734c427bc66>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793093
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        long count = 0;\n        foreach (long i in x) {\n\
    \            temp = i;\n            while (temp > 0) {\n                sum +=\
    \ temp % 10;\n                temp /= 10;\n                count++;\n        \
    \    }\n            if (sum % 2 != 0) {\n                result.Add(i);\n    \
    \        }\n            sum = 0;\n        }\n        return result;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <936f283efedd4004bb3519fb6b5fdf36>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <936f283efedd4004bb3519fb6b5fdf36>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793092
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        long temp;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp > 0) {\n                sum += temp % 10;\n         \
    \       temp /= 10;\n            }\n            if (sum % 2 != 0) {\n        \
    \        result.Add(i);\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8be7a210f7ed48cfbd548b63a67eee0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8be7a210f7ed48cfbd548b63a67eee0e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793090
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n        long temp86;\n\
    \        long temp87;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppbc2f5c2.cs(19,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(20,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(21,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(22,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(23,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(24,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(25,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(26,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(27,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(28,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(29,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(30,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(31,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(32,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(33,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(34,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(35,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(36,14): warning CS0168: The variable ''temp18'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(37,14): warning CS0168: The variable ''temp19'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(38,14): warning CS0168: The variable ''temp20'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(39,14): warning CS0168: The variable ''temp21'' is de'
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long lastDigit\
    \ = x.Last();\n        long lastDigitCount = 0;\n        long lastDigitCount2\
    \ = 0;\n        long lastDigitCount3 = 0;\n        long lastDigitCount4 = 0;\n\
    \        long lastDigitCount5 = 0;\n        long lastDigitCount6 = 0;\n      \
    \  long lastDigitCount7 = 0;\n        long lastDigitCount8 = 0;\n        long\
    \ lastDigitCount9 = 0;\n        long lastDigitCount10 = 0;\n        long lastDigitCount11\
    \ = 0;\n        long lastDigitCount12 = 0;\n        long lastDigitCount13 = 0;\n\
    \        long lastDigitCount14 = 0;\n        long lastDigitCount15 = 0;\n    \
    \    long lastDigitCount16 = 0;\n        long lastDigitCount17 = 0;\n        long\
    \ lastDigitCount18 = 0;\n        long lastDigitCount19 = 0;\n        long lastDigitCount20\
    \ = 0;\n        long lastDigitCount21 = 0;\n        long lastDigitCount22 = 0;\n\
    \        long lastDigitCount23 = 0;\n        long lastDigitCount24 = 0;\n    \
    \    long lastDigitCount25 = 0;\n        long lastDigitCount26 = 0;\n        long\
    \ lastDigitCount27 = 0;\n        long lastDigitCount28 = 0;\n        long lastDigitCount29\
    \ = 0;\n        long lastDigitCount30 = 0;\n        long lastDigitCount31 = 0;\n\
    \        long lastDigitCount32 = 0;\n        long lastDigitCount33 = 0;\n    \
    \    long lastDigitCount34 = 0;\n        long lastDigitCount35 = 0;\n        long\
    \ lastDigitCount36 = 0;\n        long lastDigitCount37 = 0;\n        long lastDigitCount38\
    \ = 0;\n        long lastDigitCount39 = 0;\n        long lastDigitCount40 = 0;\n\
    \        long lastDigitCount41 = 0;\n        long lastDigitCount42 = 0;\n    \
    \    long lastDigitCount43 = 0;\n        long lastDigitCount44 = 0;\n        long\
    \ lastDigitCount45 = 0;\n        long lastDigitCount46 = 0;\n        long lastDigitCount47\
    \ = 0;\n        long lastDigitCount48 = 0;\n        long lastDigitCount49 = 0;\n\
    \        long lastDigitCount50 = 0;\n        long lastDigitCount51 = 0;\n    \
    \    long lastDigitCount52 = 0;\n        long lastDigitCount53 = 0;\n        long\
    \ lastDigitCount54 = 0;\n        long lastDigitCount55 = 0;\n        long lastDigitCount56\
    \ = 0;\n        long lastDigitCount57 = 0;\n        long lastDigitCount58 = 0;\n\
    \        long lastDigitCount59 = 0;\n        long lastDigitCount60 = 0;\n    \
    \    long lastDigitCount61 = 0;\n        long lastDigitCount62 = 0;\n        long\
    \ \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk9n4ifdr.cs(82,13): error CS1001: Identifier expected

    /tmp/tmpk9n4ifdr.cs(82,13): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n\
    \        long temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n\
    \        long temp10;\n        long temp11;\n        long temp12;\n        long\
    \ temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n\
    \        long temp17;\n        long temp18;\n        long temp19;\n        long\
    \ temp20;\n        long temp21;\n        long temp22;\n        long temp23;\n\
    \        long temp24;\n        long temp25;\n        long temp26;\n        long\
    \ temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n\
    \        long temp31;\n        long temp32;\n        long temp33;\n        long\
    \ temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n\
    \        long temp38;\n        long temp39;\n        long temp40;\n        long\
    \ temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n\
    \        long temp45;\n        long temp46;\n        long temp47;\n        long\
    \ temp48;\n        long temp49;\n        long temp50;\n        long temp51;\n\
    \        long temp52;\n        long temp53;\n        long temp54;\n        long\
    \ temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n\
    \        long temp59;\n        long temp60;\n        long temp61;\n        long\
    \ temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n\
    \        long temp66;\n        long temp67;\n        long temp68;\n        long\
    \ temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n\
    \        long temp73;\n        long temp74;\n        long temp75;\n        long\
    \ temp76;\n        long temp77;\n        long temp78;\n        long temp79;\n\
    \        long temp80;\n        long temp81;\n        long temp82;\n        long\
    \ temp83;\n        long temp84;\n        long temp85;\n        long temp86;\n\
    \        long temp87;\n\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L,\
    \ (long)1422L, (long)1L}))).Equals((new List<long>(new long[]{(long)1L, (long)15L,\
    \ (long)33L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)152L,\
    \ (long)323L, (long)1422L, (long)10L}))).Equals((new List<long>())));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)12345L, (long)2033L, (long)111L, (long)151L}))).Equals((new\
    \ List<long>(new long[]{(long)111L, (long)151L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)135L, (long)103L, (long)31L}))).Equals((new List<long>(new\
    \ long[]{(long)31L, (long)135L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppbc2f5c2.cs(19,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(20,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(21,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(22,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(23,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(24,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(25,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(26,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(27,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(28,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(29,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(30,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(31,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(32,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(33,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(34,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(35,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(36,14): warning CS0168: The variable ''temp18'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(37,14): warning CS0168: The variable ''temp19'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(38,14): warning CS0168: The variable ''temp20'' is declared
    but never used

    /tmp/tmppbc2f5c2.cs(39,14): warning CS0168: The variable ''temp21'' is de'
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4\
    \ = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long temp7 =\
    \ 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10 =\
    \ 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13\
    \ = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16\
    \ = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19\
    \ = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22\
    \ = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25\
    \ = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28\
    \ = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31\
    \ = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34\
    \ = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37\
    \ = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40\
    \ = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43\
    \ = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46\
    \ = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49\
    \ = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52\
    \ = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55\
    \ = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58\
    \ = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61\
    \ = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64\
    \ = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67\
    \ = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70\
    \ = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73\
    \ = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76\
    \ = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79\
    \ = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpouslg02w.cs(104,20): error CS1002: ; expected

    '
  timestamp: 1659793092
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long sum = 0;\n        foreach (long i in x) {\n            temp = i;\n\
    \            while (temp != 0) {\n                sum += temp % 10;\n        \
    \        temp /= 10;\n            }\n            if (sum % 2 == 0) {\n       \
    \         result.Add(i);\n            }\n        }\n        return result;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dec502a1d332473fa0bcfcd573743ff6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dec502a1d332473fa0bcfcd573743ff6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long sum = 0;\n\
    \        foreach (long i in x) {\n            sum += i;\n        }\n        long\
    \ temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4\
    \ = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long temp7 =\
    \ 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10 =\
    \ 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13\
    \ = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16\
    \ = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19\
    \ = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22\
    \ = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25\
    \ = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28\
    \ = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31\
    \ = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34\
    \ = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37\
    \ = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40\
    \ = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43\
    \ = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46\
    \ = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49\
    \ = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52\
    \ = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55\
    \ = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58\
    \ = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61\
    \ = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64\
    \ = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67\
    \ = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70\
    \ = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73\
    \ = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76\
    \ = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79\
    \ = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpouslg02w.cs(104,20): error CS1002: ; expected

    '
  timestamp: 1659793092
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp;\n  \
    \      long sum = 0;\n        long digit;\n        bool flag = false;\n      \
    \  foreach (long i in x) {\n            temp = i;\n            while (temp > 0)\
    \ {\n                digit = temp % 10;\n                sum += digit;\n     \
    \           if (sum % 2 == 0) {\n                    flag = true;\n          \
    \          break;\n                }\n                temp = temp / 10;\n    \
    \        }\n            if (flag) {\n                result.Add(i);\n        \
    \    }\n            sum = 0;\n            flag = false;\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <972fd9507fa44cc5be16c1f819f73e9a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <972fd9507fa44cc5be16c1f819f73e9a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793093
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Given a list of positive integers x. return a sorted list\
    \ of all \n    // elements that hasn't any even digit.\n    // Note: Returned\
    \ list should be sorted in increasing order.\n    // For example:\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L})))\n\
    \    // (new List<long>(new long[]{(long)1L, (long)15L, (long)33L}))\n    // >>>\
    \ UniqueDigits((new List<long>(new long[]{(long)152L, (long)323L, (long)1422L,\
    \ (long)10L})))\n    // (new List<long>())\n    public static List<long> UniqueDigits(List<long>\
    \ x) {\n        List<long> result = new List<long>();\n        long temp = 0;\n\
    \        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n \
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n  \
    \      long temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n  \
    \      long temp11 = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n\
    \        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n\
    \        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n\
    \        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n\
    \        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n\
    \        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n\
    \        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n\
    \        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n\
    \        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n\
    \        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n\
    \        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n\
    \        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n\
    \        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n\
    \        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n\
    \        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n\
    \        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n\
    \        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n\
    \        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n\
    \        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n\
    \        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n\
    \        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n\
    \        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n\
    \        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n\
    \        long temp80 = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n\
    \        long temp83 = 0;\n        long temp84 = 0;\n        long temp\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)15L, (long)33L, (long)1422L, (long)1L}))).Equals((new\
    \ List<long>(new long[]{(long)1L, (long)15L, (long)33L}))));\n    Debug.Assert(UniqueDigits((new\
    \ List<long>(new long[]{(long)152L, (long)323L, (long)1422L, (long)10L}))).Equals((new\
    \ List<long>())));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)12345L,\
    \ (long)2033L, (long)111L, (long)151L}))).Equals((new List<long>(new long[]{(long)111L,\
    \ (long)151L}))));\n    Debug.Assert(UniqueDigits((new List<long>(new long[]{(long)135L,\
    \ (long)103L, (long)31L}))).Equals((new List<long>(new long[]{(long)31L, (long)135L}))));\n\
    \    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp212zsqvw.cs(103,18): error CS1002: ; expected

    '
  timestamp: 1659793089

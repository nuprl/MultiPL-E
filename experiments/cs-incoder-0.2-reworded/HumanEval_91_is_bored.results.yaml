language: cs
name: HumanEval_91_is_bored
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.', '?', '!')) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c240226add477c9fe818c4946881a0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c240226add477c9fe818c4946881a0>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.')) {\n            boredoms\
    \ += IsBored(sentence);\n        }\n        return boredoms;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659793343
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n            if\
    \ (word.StartsWith(\"I\"))\n                boredoms++;\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a750c4ce1ffa4294898964f1e30153b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a750c4ce1ffa4294898964f1e30153b5>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!').ToList()) {\n \
    \           if (word.StartsWith(\"I\")) {\n                boredoms += 1;\n  \
    \          }\n        }\n        return boredoms;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61a210c8625649aa9c561b38087f9790>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61a210c8625649aa9c561b38087f9790>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!')) {\n      \
    \      if (sentence.StartsWith(\"I\")) {\n                boredoms += 1;\n   \
    \         }\n        }\n        return boredoms;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fbbf8b184e3434fbdd2b2a60aae6627>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fbbf8b184e3434fbdd2b2a60aae6627>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.', '?', '!'))\n        {\n        \
    \    if (word.StartsWith(\"I\"))\n            {\n                count++;\n  \
    \          }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <966dbc20f2e549bbbc4e8fff59a69b62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <966dbc20f2e549bbbc4e8fff59a69b62>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!'))\n        {\n\
    \            if (sentence.StartsWith(\"I\"))\n            {\n                boredoms\
    \ += 1;\n            }\n        }\n        return boredoms;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85f14b20d0bb41bbb57380a156a944d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85f14b20d0bb41bbb57380a156a944d3>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!')) {\n      \
    \      if (sentence.StartsWith(\"I\")) {\n                boredoms++;\n      \
    \      }\n        }\n        return boredoms;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <45d45da341b742638f423088173bada4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <45d45da341b742638f423088173bada4>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!').ToList()) {\n \
    \           if (word.StartsWith(\"I\")) {\n                boredoms += 1;\n  \
    \          }\n        }\n        return boredoms;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61a210c8625649aa9c561b38087f9790>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61a210c8625649aa9c561b38087f9790>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n            if\
    \ (word.StartsWith(\"I\"))\n                boredoms++;\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a750c4ce1ffa4294898964f1e30153b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a750c4ce1ffa4294898964f1e30153b5>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!')) {\n          \
    \  if (word.StartsWith(\"I\")) {\n                boredoms += 1;\n           \
    \ }\n        }\n        return boredoms;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b18480dc9f046e290a76d8a071421b0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b18480dc9f046e290a76d8a071421b0>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.', '?', '!'))\n            if (word.StartsWith(\"\
    I\"))\n                count++;\n        return count;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6d8876536ebc425d85ed93a65083f65d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6d8876536ebc425d85ed93a65083f65d>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!'))\n        {\n\
    \            if (sentence.StartsWith(\"I\"))\n            {\n                boredoms\
    \ += 1;\n            }\n        }\n        return boredoms;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85f14b20d0bb41bbb57380a156a944d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85f14b20d0bb41bbb57380a156a944d3>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!').Select(x => x.Trim()))\n\
    \        {\n            if (word.StartsWith(\"I\"))\n            {\n         \
    \       boredoms += 1;\n            }\n        }\n        return boredoms;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <47c1e9a5f62c4abfb3a3e88c0154dd72>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n            if\
    \ (word.StartsWith(\"I\"))\n                boredoms += 1;\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <128c48b83d27415e98b8cecefcb6794f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <128c48b83d27415e98b8cecefcb6794f>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n            if\
    \ (word.StartsWith(\"I\"))\n                boredoms++;\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a750c4ce1ffa4294898964f1e30153b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a750c4ce1ffa4294898964f1e30153b5>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.', '?', '!'))\n        {\n        \
    \    if (word.StartsWith(\"I\"))\n            {\n                count++;\n  \
    \          }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <966dbc20f2e549bbbc4e8fff59a69b62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <966dbc20f2e549bbbc4e8fff59a69b62>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!')) {\n      \
    \      if (sentence.StartsWith(\"I\")) {\n                boredoms++;\n      \
    \      }\n        }\n        return boredoms;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <45d45da341b742638f423088173bada4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <45d45da341b742638f423088173bada4>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n            if\
    \ (word.StartsWith(\"I\"))\n                boredoms += 1;\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <128c48b83d27415e98b8cecefcb6794f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <128c48b83d27415e98b8cecefcb6794f>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!'))\n        {\n\
    \            if (sentence.StartsWith(\"I\"))\n            {\n                boredoms\
    \ += 1;\n            }\n        }\n        return boredoms;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85f14b20d0bb41bbb57380a156a944d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85f14b20d0bb41bbb57380a156a944d3>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!')) {\n      \
    \      if (sentence.StartsWith(\"I\")) {\n                boredoms++;\n      \
    \      }\n        }\n        return boredoms;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <45d45da341b742638f423088173bada4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <45d45da341b742638f423088173bada4>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!').Select(x => x.Trim()))\n\
    \            if (word.StartsWith(\"I\"))\n                boredoms += 1;\n   \
    \     return boredoms;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <accc322409ad4b18b4ddfcd5a0f42239>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n            if\
    \ (word.StartsWith(\"I\"))\n                boredoms += 1;\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <128c48b83d27415e98b8cecefcb6794f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <128c48b83d27415e98b8cecefcb6794f>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n        {\n \
    \           if (word.StartsWith(\"I\"))\n            {\n                boredoms\
    \ += 1;\n            }\n        }\n        return boredoms;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <547ce59d64194d96b247ae40325d3ed1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <547ce59d64194d96b247ae40325d3ed1>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n            if\
    \ (word.StartsWith(\"I\"))\n                boredoms += 1;\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <128c48b83d27415e98b8cecefcb6794f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <128c48b83d27415e98b8cecefcb6794f>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!').Where(w => w.StartsWith(\"\
    I\"))) {\n            boredoms += 1;\n        }\n        return boredoms;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <946d394c8e1d4ea690430d3ad5c5dca1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <946d394c8e1d4ea690430d3ad5c5dca1>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n            if\
    \ (word.StartsWith(\"I\"))\n                boredoms += 1;\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <128c48b83d27415e98b8cecefcb6794f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <128c48b83d27415e98b8cecefcb6794f>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!')) {\n      \
    \      if (sentence.StartsWith(\"I\")) {\n                boredoms++;\n      \
    \      }\n        }\n        return boredoms;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <45d45da341b742638f423088173bada4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <45d45da341b742638f423088173bada4>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!')) {\n      \
    \      if (sentence.StartsWith(\"I\")) {\n                boredoms += 1;\n   \
    \         }\n        }\n        return boredoms;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fbbf8b184e3434fbdd2b2a60aae6627>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fbbf8b184e3434fbdd2b2a60aae6627>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n            if\
    \ (word.StartsWith(\"I\"))\n                boredoms++;\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a750c4ce1ffa4294898964f1e30153b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a750c4ce1ffa4294898964f1e30153b5>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.', '?', '!').ToList()) {\n        \
    \    if (word.StartsWith(\"I\")) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c7799a9044d34191bb32396135bdc76c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c7799a9044d34191bb32396135bdc76c>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n        {\n \
    \           if (word.StartsWith(\"I\"))\n            {\n                boredoms\
    \ += 1;\n            }\n        }\n        return boredoms;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <547ce59d64194d96b247ae40325d3ed1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <547ce59d64194d96b247ae40325d3ed1>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n            if\
    \ (word.StartsWith(\"I\"))\n                boredoms += 1;\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <128c48b83d27415e98b8cecefcb6794f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <128c48b83d27415e98b8cecefcb6794f>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!')) {\n      \
    \      if (sentence.StartsWith(\"I\")) {\n                boredoms += 1;\n   \
    \         }\n        }\n        return boredoms;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fbbf8b184e3434fbdd2b2a60aae6627>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fbbf8b184e3434fbdd2b2a60aae6627>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!'))\n        {\n\
    \            if (sentence.StartsWith(\"I\"))\n            {\n                boredoms\
    \ += 1;\n            }\n        }\n        return boredoms;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85f14b20d0bb41bbb57380a156a944d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85f14b20d0bb41bbb57380a156a944d3>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!')) {\n      \
    \      if (sentence.StartsWith(\"I\")) {\n                boredoms += 1;\n   \
    \         }\n        }\n        return boredoms;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fbbf8b184e3434fbdd2b2a60aae6627>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fbbf8b184e3434fbdd2b2a60aae6627>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!'))\n        {\n\
    \            if (sentence.StartsWith(\"I\"))\n            {\n                boredoms\
    \ += 1;\n            }\n        }\n        return boredoms;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85f14b20d0bb41bbb57380a156a944d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85f14b20d0bb41bbb57380a156a944d3>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n        {\n \
    \           if (word.StartsWith(\"I\"))\n            {\n                boredoms\
    \ += 1;\n            }\n        }\n        return boredoms;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <547ce59d64194d96b247ae40325d3ed1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <547ce59d64194d96b247ae40325d3ed1>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n            if\
    \ (word.StartsWith(\"I\"))\n                boredoms++;\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a750c4ce1ffa4294898964f1e30153b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a750c4ce1ffa4294898964f1e30153b5>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!').ToList()) {\n \
    \           if (word.StartsWith(\"I\")) {\n                boredoms += 1;\n  \
    \          }\n        }\n        return boredoms;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61a210c8625649aa9c561b38087f9790>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61a210c8625649aa9c561b38087f9790>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!')) {\n      \
    \      if (sentence.StartsWith(\"I\")) {\n                boredoms += 1;\n   \
    \         }\n        }\n        return boredoms;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fbbf8b184e3434fbdd2b2a60aae6627>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fbbf8b184e3434fbdd2b2a60aae6627>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!').ToList()) {\n \
    \           if (word.StartsWith(\"I\")) {\n                boredoms++;\n     \
    \       }\n        }\n        return boredoms;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <48d92e5e34a8490e937474a8bd35aa23>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <48d92e5e34a8490e937474a8bd35aa23>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!').Where(w => w.StartsWith(\"\
    I\"))) {\n            boredoms += 1;\n        }\n        return boredoms;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <946d394c8e1d4ea690430d3ad5c5dca1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <946d394c8e1d4ea690430d3ad5c5dca1>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n            if\
    \ (word.StartsWith(\"I\"))\n                boredoms++;\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a750c4ce1ffa4294898964f1e30153b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a750c4ce1ffa4294898964f1e30153b5>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!')) {\n          \
    \  if (word.StartsWith(\"I\")) {\n                boredoms += 1;\n           \
    \ }\n        }\n        return boredoms;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b18480dc9f046e290a76d8a071421b0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b18480dc9f046e290a76d8a071421b0>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!')) {\n      \
    \      if (sentence.StartsWith(\"I\")) {\n                boredoms += 1;\n   \
    \         }\n        }\n        return boredoms;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fbbf8b184e3434fbdd2b2a60aae6627>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fbbf8b184e3434fbdd2b2a60aae6627>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!').Select(x => x.Trim()))\n\
    \            if (word.StartsWith(\"I\"))\n                boredoms += 1;\n   \
    \     return boredoms;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <accc322409ad4b18b4ddfcd5a0f42239>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n            if\
    \ (word.StartsWith(\"I\"))\n                boredoms += 1;\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <128c48b83d27415e98b8cecefcb6794f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <128c48b83d27415e98b8cecefcb6794f>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.', '?', '!').ToList()) {\n        \
    \    if (word.StartsWith(\"I\")) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c7799a9044d34191bb32396135bdc76c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c7799a9044d34191bb32396135bdc76c>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n        {\n \
    \           if (word.StartsWith(\"I\"))\n            {\n                boredoms\
    \ += 1;\n            }\n        }\n        return boredoms;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <547ce59d64194d96b247ae40325d3ed1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <547ce59d64194d96b247ae40325d3ed1>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n        {\n \
    \           if (word.StartsWith(\"I\"))\n            {\n                boredoms\
    \ += 1;\n            }\n        }\n        return boredoms;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <547ce59d64194d96b247ae40325d3ed1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <547ce59d64194d96b247ae40325d3ed1>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n        {\n \
    \           if (word.StartsWith(\"I\"))\n            {\n                boredoms\
    \ += 1;\n            }\n        }\n        return boredoms;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <547ce59d64194d96b247ae40325d3ed1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <547ce59d64194d96b247ae40325d3ed1>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n            if\
    \ (word.StartsWith(\"I\"))\n                boredoms += 1;\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <128c48b83d27415e98b8cecefcb6794f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <128c48b83d27415e98b8cecefcb6794f>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!'))\n        {\n\
    \            if (sentence.StartsWith(\"I\"))\n            {\n                boredoms\
    \ += 1;\n            }\n        }\n        return boredoms;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85f14b20d0bb41bbb57380a156a944d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85f14b20d0bb41bbb57380a156a944d3>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!')) {\n      \
    \      if (sentence.StartsWith(\"I\")) {\n                boredoms += 1;\n   \
    \         }\n        }\n        return boredoms;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fbbf8b184e3434fbdd2b2a60aae6627>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fbbf8b184e3434fbdd2b2a60aae6627>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.', '?', '!'))\n            if (word.StartsWith(\"\
    I\"))\n                count++;\n        return count;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6d8876536ebc425d85ed93a65083f65d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6d8876536ebc425d85ed93a65083f65d>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n        {\n \
    \           if (word.StartsWith(\"I\"))\n            {\n                boredoms\
    \ += 1;\n            }\n        }\n        return boredoms;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <547ce59d64194d96b247ae40325d3ed1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <547ce59d64194d96b247ae40325d3ed1>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!').ToList()) {\n \
    \           if (word.StartsWith(\"I\")) {\n                boredoms += 1;\n  \
    \          }\n        }\n        return boredoms;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61a210c8625649aa9c561b38087f9790>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61a210c8625649aa9c561b38087f9790>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n            if\
    \ (word.StartsWith(\"I\"))\n                boredoms++;\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a750c4ce1ffa4294898964f1e30153b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a750c4ce1ffa4294898964f1e30153b5>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!')) {\n      \
    \      if (sentence.StartsWith(\"I\")) {\n                boredoms += 1;\n   \
    \         }\n        }\n        return boredoms;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fbbf8b184e3434fbdd2b2a60aae6627>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fbbf8b184e3434fbdd2b2a60aae6627>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.', '?', '!').ToList()) {\n        \
    \    if (word.StartsWith(\"I\")) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c7799a9044d34191bb32396135bdc76c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c7799a9044d34191bb32396135bdc76c>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.', '?', '!'))\n        {\n        \
    \    if (word.StartsWith(\"I\"))\n            {\n                count++;\n  \
    \          }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <966dbc20f2e549bbbc4e8fff59a69b62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <966dbc20f2e549bbbc4e8fff59a69b62>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.', '?', '!')) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c240226add477c9fe818c4946881a0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76c240226add477c9fe818c4946881a0>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!')) {\n          \
    \  if (word.StartsWith(\"I\")) {\n                boredoms += 1;\n           \
    \ }\n        }\n        return boredoms;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b18480dc9f046e290a76d8a071421b0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b18480dc9f046e290a76d8a071421b0>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!')) {\n      \
    \      if (sentence.StartsWith(\"I\")) {\n                boredoms += 1;\n   \
    \         }\n        }\n        return boredoms;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fbbf8b184e3434fbdd2b2a60aae6627>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9fbbf8b184e3434fbdd2b2a60aae6627>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n            if\
    \ (word.StartsWith(\"I\"))\n                boredoms += 1;\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <128c48b83d27415e98b8cecefcb6794f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <128c48b83d27415e98b8cecefcb6794f>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!')) {\n          \
    \  if (word.StartsWith(\"I\")) {\n                boredoms += 1;\n           \
    \ }\n        }\n        return boredoms;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b18480dc9f046e290a76d8a071421b0>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8b18480dc9f046e290a76d8a071421b0>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!'))\n        {\n\
    \            if (sentence.StartsWith(\"I\"))\n            {\n                boredoms\
    \ += 1;\n            }\n        }\n        return boredoms;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85f14b20d0bb41bbb57380a156a944d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85f14b20d0bb41bbb57380a156a944d3>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!').Select(x => x.ToLower()))\
    \ {\n            if (word.StartsWith(\"i\")) {\n                boredoms += 1;\n\
    \            }\n        }\n        return boredoms;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61cbc9e4b5c146c4a4c9802f16bf8cbd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61cbc9e4b5c146c4a4c9802f16bf8cbd>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!')) {\n      \
    \      if (sentence.StartsWith(\"I\")) {\n                boredoms++;\n      \
    \      }\n        }\n        return boredoms;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <45d45da341b742638f423088173bada4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <45d45da341b742638f423088173bada4>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!'))\n        {\n\
    \            boredoms += sentence.StartsWith(\"I\") ? 1 : 0;\n        }\n    \
    \    return boredoms;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <276df5a71e6d4d83a8b5ff0d85cd205f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <276df5a71e6d4d83a8b5ff0d85cd205f>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n            if\
    \ (word.StartsWith(\"I\"))\n                boredoms += 1;\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <128c48b83d27415e98b8cecefcb6794f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <128c48b83d27415e98b8cecefcb6794f>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n            if\
    \ (word.StartsWith(\"I\"))\n                boredoms++;\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a750c4ce1ffa4294898964f1e30153b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a750c4ce1ffa4294898964f1e30153b5>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.', '?', '!').ToList()) {\n        \
    \    if (word.StartsWith(\"I\")) {\n                count++;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"\
    Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"I love It !\")) ==\
    \ (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I feel good today. I will be productive. will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"\
    You and I are going for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c7799a9044d34191bb32396135bdc76c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c7799a9044d34191bb32396135bdc76c>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n            if\
    \ (word.StartsWith(\"I\"))\n                boredoms++;\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a750c4ce1ffa4294898964f1e30153b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a750c4ce1ffa4294898964f1e30153b5>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n        {\n \
    \           if (word.StartsWith(\"I\"))\n            {\n                boredoms\
    \ += 1;\n            }\n        }\n        return boredoms;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <547ce59d64194d96b247ae40325d3ed1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <547ce59d64194d96b247ae40325d3ed1>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f285ba344726489ab1ea3a7cb6ed75c2>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!'))\n        \
    \    if (sentence.StartsWith(\"I\"))\n                boredoms += 1;\n       \
    \ return boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76b0c96fe71846be8bbba5cfe004e51d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76b0c96fe71846be8bbba5cfe004e51d>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!'))\n            if\
    \ (word.StartsWith(\"I\"))\n                boredoms++;\n        return boredoms;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a750c4ce1ffa4294898964f1e30153b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a750c4ce1ffa4294898964f1e30153b5>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!').ToList()) {\n \
    \           if (word.StartsWith(\"I\")) {\n                boredoms += 1;\n  \
    \          }\n        }\n        return boredoms;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61a210c8625649aa9c561b38087f9790>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61a210c8625649aa9c561b38087f9790>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string sentence in S.Split('.', '?', '!'))\n        {\n\
    \            if (sentence.StartsWith(\"I\"))\n            {\n                boredoms\
    \ += 1;\n            }\n        }\n        return boredoms;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\"\
    )) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85f14b20d0bb41bbb57380a156a944d3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85f14b20d0bb41bbb57380a156a944d3>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long count = 0;\n\
    \        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65a40911343f4dc88d26564296578347>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.')) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms += 1;\n            }\n        }\n        return\
    \ boredoms;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
    Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) ==\
    \ (0L));\n    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
    bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
    \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going\
    \ for a walk\")) == (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <681168a287c6418c8f3e63d033413639>:0 \n"
  stdout: ''
  timestamp: 1659793338
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // You'll be given a string of words, and your task is to\
    \ count the number\n    // of boredoms. A boredom is a sentence that starts with\
    \ the word \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    //\
    \ For example:\n    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>>\
    \ IsBored((\"The sky is blue. The sun is shining. I love this weather\"))\n  \
    \  // (1L)\n    public static long IsBored(string S) {\n        long boredoms\
    \ = 0;\n        foreach (string word in S.Split('.', '?', '!').ToList()) {\n \
    \           if (word.StartsWith(\"I\")) {\n                boredoms += 1;\n  \
    \          }\n        }\n        return boredoms;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(IsBored((\"Hello world\")) == (0L));\n\
    \    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n    Debug.Assert(IsBored((\"\
    I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"bIt\")) == (0L));\n   \
    \ Debug.Assert(IsBored((\"I feel good today. I will be productive. will kill It\"\
    )) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for a walk\")) ==\
    \ (0L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61a210c8625649aa9c561b38087f9790>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <61a210c8625649aa9c561b38087f9790>:0 \n"
  stdout: ''
  timestamp: 1659793338

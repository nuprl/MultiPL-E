language: cs
name: HumanEval_63_fibfib
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n <= 3) return 0;\n        if (n == 0 || n == 1) return 1;\n
    \       return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf944f87451b487fb671b5e2a8d6be17>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <cf944f87451b487fb671b5e2a8d6be17>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib2 = 0;\n        long fibfib3
    = 0;\n        long fibfib4 = 0;\n        long fibfib5 = 0;\n        long fibfib6
    = 0;\n        long fibfib7 = 0;\n        long fibfib8 = 0;\n        long fibfib9
    = 0;\n        long fibfib10 = 0;\n        long fibfib11 = 0;\n        long fibfib12
    = 0;\n        long fibfib13 = 0;\n        long fibfib14 = 0;\n        long fibfib15
    = 0;\n        long fibfib16 = 0;\n        long fibfib17 = 0;\n        long fibfib18
    = 0;\n        long fibfib19 = 0;\n        long fibfib20 = 0;\n        long fibfib21
    = 0;\n        long fibfib22 = 0;\n        long fibfib23 = 0;\n        long fibfib24
    = 0;\n        long fibfib25 = 0;\n        long fibfib26 = 0;\n        long fibfib27
    = 0;\n        long fibfib28 = 0;\n        long fibfib29 = 0;\n        long fibfib30
    = 0;\n        long fibfib31 = 0;\n        long fibfib32 = 0;\n        long fibfib33
    = 0;\n        long fibfib34 = 0;\n        long fibfib35 = 0;\n        long fibfib36
    = 0;\n        long fibfib37 = 0;\n        long fibfib38 = 0;\n        long fibfib39
    = 0;\n        long fibfib40 = 0;\n        long fibfib41 = 0;\n        long fibfib42
    = 0;\n        long fibfib43 = 0;\n        long fibfib44 = 0;\n        long fibfib45
    = 0;\n        long fibfib46 = 0;\n        long fibfib47 = 0;\n        long fibfib48
    = 0;\n        long fibfib49 = 0;\n        long fibfib50 = 0;\n        long fibfib51
    = 0;\n        long fibfib52 = 0;\n        long fibfib53 = 0;\n        long fibfib54
    = 0;\n        long fibfib55 = 0;\n        long fibfib56 = 0;\n        long fibfib57
    = 0;\n        long fibfib58 = 0;\n        long fibfib59 = 0;\n        long fibfib60
    = 0;\n        long fibfib61 = 0;\n        long fibfib62 = 0;\n        long fibfib63
    = 0;\n        long fibfib64 = 0;\n        long fibfib65 = 0;\n        long fibfib66
    = 0;\n        long fibfib67 = 0;\n        long fibfib68 = 0;\n        long fibfib69
    = 0;\n        long fibfib70 = 0;\n        long fibfib71 = 0;\n        long fibfib72
    = 0;\n        long fibfib73 = 0;\n        long fibfib74 = 0;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpugqpwpit.cs(22,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(23,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(24,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(25,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(26,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(27,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(28,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(29,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(30,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(31,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(32,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(33,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(34,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(35,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(36,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(37,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(38,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(39,14): warning CS0219: The variable ''fibfib18'' is assigned
    but its value i'
  timestamp: 1659800026
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0 || n == 1)\n            return n;\n        return Fibfib(n-1)
    + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800032
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        else if (n == 1) {\n            fibfib = 0;\n        }\n        else
    if (n == 2) {\n            fibfib = 1;\n        }\n        else {\n            fibfib
    = (long) Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return
    fibfib;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib2 = 0;\n        long fibfib3
    = 0;\n        long fibfib4 = 0;\n        long fibfib5 = 0;\n        long fibfib6
    = 0;\n        long fibfib7 = 0;\n        long fibfib8 = 0;\n        long fibfib9
    = 0;\n        long fibfib10 = 0;\n        long fibfib11 = 0;\n        long fibfib12
    = 0;\n        long fibfib13 = 0;\n        long fibfib14 = 0;\n        long fibfib15
    = 0;\n        long fibfib16 = 0;\n        long fibfib17 = 0;\n        long fibfib18
    = 0;\n        long fibfib19 = 0;\n        long fibfib20 = 0;\n        long fibfib21
    = 0;\n        long fibfib22 = 0;\n        long fibfib23 = 0;\n        long fibfib24
    = 0;\n        long fibfib25 = 0;\n        long fibfib26 = 0;\n        long fibfib27
    = 0;\n        long fibfib28 = 0;\n        long fibfib29 = 0;\n        long fibfib30
    = 0;\n        long fibfib31 = 0;\n        long fibfib32 = 0;\n        long fibfib33
    = 0;\n        long fibfib34 = 0;\n        long fibfib35 = 0;\n        long fibfib36
    = 0;\n        long fibfib37 = 0;\n        long fibfib38 = 0;\n        long fibfib39
    = 0;\n        long fibfib40 = 0;\n        long fibfib41 = 0;\n        long fibfib42
    = 0;\n        long fibfib43 = 0;\n        long fibfib44 = 0;\n        long fibfib45
    = 0;\n        long fibfib46 = 0;\n        long fibfib47 = 0;\n        long fibfib48
    = 0;\n        long fibfib49 = 0;\n        long fibfib50 = 0;\n        long fibfib51
    = 0;\n        long fibfib52 = 0;\n        long fibfib53 = 0;\n        long fibfib54
    = 0;\n        long fibfib55 = 0;\n        long fibfib56 = 0;\n        long fibfib57
    = 0;\n        long fibfib58 = 0;\n        long fibfib59 = 0;\n        long fibfib60
    = 0;\n        long fibfib61 = 0;\n        long fibfib62 = 0;\n        long fibfib63
    = 0;\n        long fibfib64 = 0;\n        long fibfib65 = 0;\n        long fibfib66
    = 0;\n        long fibfib67 = 0;\n        long fibfib68 = 0;\n        long fibfib69
    = 0;\n        long fibfib70 = 0;\n        long fibfib71 = 0;\n        long fibfib72
    = 0;\n        long fibfib73 = 0;\n        long fibfib74 = 0;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpugqpwpit.cs(22,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(23,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(24,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(25,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(26,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(27,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(28,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(29,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(30,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(31,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(32,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(33,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(34,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(35,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(36,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(37,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(38,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(39,14): warning CS0219: The variable ''fibfib18'' is assigned
    but its value i'
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n < 3) return 0L;\n        if (n == 3) return 1L;\n        return
    Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8ef20ca8d5084b7296a74be4441fac93>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8ef20ca8d5084b7296a74be4441fac93>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0)\n            return 0;\n        if
    (n == 1)\n            return 1;\n        if (n == 2)\n            return 1;\n
    \       if (n <= 3)\n            return fibfib;\n        fibfib = (fibfib + Fibfib(n
    - 1)) + Fibfib(n - 2);\n        return fibfib;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e025fc1fb0434c72b9d0aaf66dc5c170>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e025fc1fb0434c72b9d0aaf66dc5c170>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1;\n        long
    fibfib5 = fibfib2;\n        long fibfib6 = fibfibfib3;\n        long fibfib7 =
    fibfib4;\n        long fibfib8 = fibfib5;\n        long fibfib9 = fibfib6;\n        long
    fibfib10 = fibfib7;\n        long fibfib11 = fibfib8;\n        long fibfib12 =
    fibfib9;\n        long fibfib13 = fibfib10;\n        long fibfib14 = fibfib11;\n
    \       long fibfib15 = fibfib12;\n        long fibfib16 = fibfib13;\n        long
    fibfib17 = fibfib14;\n        long fibfib18 = fibfib15;\n        long fibfib19
    = fibfib16;\n        long fibfib20 = fibfib17;\n        long fibfib21 = fibfib18;\n
    \       long fibfib22 = fibfib19;\n        long fibfib23 = fibfib20;\n        long
    fibfib24 = fibfib21;\n        long fibfib25 = fibfib22;\n        long fibfib26
    = fibfib23;\n        long fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n
    \       long fibfib29 = fibfib26;\n        long fibfib30 = fibfib27;\n        long
    fibfib31 = fibfib28;\n        long fibfib32 = fibfib29;\n        long fibfib33
    = fibfib30;\n        long fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n
    \       long fibfib36 = fibfib33;\n        long fibfib37 = fibfib34;\n        long
    fibfib38 = fibfib35;\n        long fibfib39 = fibfib36;\n        long fibfib40
    = fibfib37;\n        long fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n
    \       long fibfib43 = fibfib40;\n        long fibfib44 = fibfib41;\n        long
    fibfib45 = fibfib42;\n        long fibfib46 = fibfib43;\n        long fibfib47
    = fibfib44;\n        long fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n
    \       long fibfib50 = fib\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps_b1x5wi.cs(72,28): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1 + fibfib2 +
    fibfib3;\n        long fibfib5 = fibfib4 + fibfib4;\n        long fibfib6 = fibfibfib5
    + fibfib5;\n        long fibfib7 = fibfib6 + fibfib6;\n        long fibfib8 =
    fibfib7 + fibfib7;\n        long fibfib9 = fibfib8 + fibfib8;\n        long fibfib10
    = fibfib9 + fibfib9;\n        long fibfib11 = fibfib10 + fibfib10;\n        long
    fibfib12 = fibfib11 + fibfib11;\n        long fibfib13 = fibfib12 + fibfib12;\n
    \       long fibfib14 = fibfib13 + fibfib13;\n        long fibfib15 = fibfib14
    + fibfib14;\n        long fibfib16 = fibfib15 + fibfib15;\n        long fibfib17
    = fibfib16 + fibfib16;\n        long fibfib18 = fibfibfib17 + fibfib17;\n        long
    fibfib19 = fibfib18 + fibfib18;\n        long fibfib20 = fibfib19 + fibfib19;\n
    \       long fibfib21 = fibfib20 + fibfib20;\n        long fibfib22 = fibfib21
    + fibfib21;\n        long fibfib23 = fibfib22 + fibfib22;\n        long fibfib24
    = fibfib23 + fibfib23;\n        long fibfib25 = fibfib24 + fibfib24;\n        long
    fibfib26 = fibfib25 + fibfib25;\n        long fibfib27 = fibfib26 + fibfib26;\n
    \       long fibfib28 = fibfib27 + fibfib27;\n        long fibfib29 = fibfib28
    + fibfib28;\n        long fibfib30 = fibfib29 + fibfib29;\n        long fibfib31
    = fibfib30 + fibfib30;\n        long fibfib32 = fibfib31 + fibfib31;\n        long
    fibfib33 = fibfib32 + fibfib32;\n        long fibfib34 = fibfib33 + fibfib33;\n
    \       long fibfib35 = fibfib34 + fibfib34;\n        long fibfib36 = fibfib35
    + fibfib35;\n        long fibfib37 = fibfib36 + fibfib36\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr8p6daj5.cs(59,44): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 0;\n        long fibfib2
    = 0;\n        long fibfib3 = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        if (n == 1) {\n            fibfib = 1;\n        }\n        if
    (n == 2) {\n            fibfib = 1;\n        }\n        if (n >= 3) {\n            fibfib1
    = Fibfib(n - 1);\n            fibfib2 = Fibfib(n - 2);\n            fibfib3 =
    Fibfib(n - 3);\n            fibfib = fibfibfib1 + fibfib2 + fibfib3;\n        }\n
    \       return fibfib;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzgecs4n8.cs(39,22): error CS0103: The name ''fibfibfib1'' does not exist
    in the current context

    '
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib2 = 1;\n        long fibfib3
    = 1;\n        long fibfib4 = 1;\n        long fibfib5 = 1;\n        long fibfib6
    = 1;\n        long fibfib7 = 1;\n        long fibfib8 = 1;\n        long fibfib9
    = 1;\n        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long fibfib12
    = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long fibfib15
    = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long fibfib18
    = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long fibfib21
    = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long fibfib24
    = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long fibfib27
    = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long fibfib30
    = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long fibfib33
    = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long fibfib36
    = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long fibfib39
    = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long fibfib42
    = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long fibfib45
    = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long fibfib48
    = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long fibfib51
    = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long fibfib54
    = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long fibfib57
    = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long fibfib60
    = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long fibfib63
    = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long fibfib66
    = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long fibfib69
    = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long fibfib72
    = 1;\n        long fibfib\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmr53gac0.cs(94,20): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib7\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp98az0vck.cs(94,21): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib72 = \n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqhd29hvs.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpqhd29hvs.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib72 = \n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqhd29hvs.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpqhd29hvs.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n <= 3) return 0L;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28fe27be89c5472bad71775a1062d3ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28fe27be89c5472bad71775a1062d3ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib7\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp98az0vck.cs(94,21): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib7\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp98az0vck.cs(94,21): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0 || n == 1) {\n            return n;\n        }\n        long
    fibfib = (long) Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        return
    fibfib;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800031
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        else if (n == 1) {\n            fibfib = 0;\n        }\n        else
    if (n == 2) {\n            fibfib = 1;\n        }\n        else {\n            fibfib
    = fibfib + Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return
    fibfib;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        if (n == 1) {\n            fibfib = 0;\n        }\n        if
    (n == 2) {\n            fibfib = 1;\n        }\n        if (n <= 3) {\n            fibfib
    = fibfib + fibfib;\n        }\n        else {\n            fibfib = fibfib + fibfib
    + fibfib;\n        }\n        return fibfib;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <42b9314570634e45a0585a1d476067a9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <42b9314570634e45a0585a1d476067a9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0)\n            return 0;\n        if (n == 1)\n            return
    1;\n        if (n == 2)\n            return 1;\n        return Fibfib(n - 1) +
    Fibfib(n - 2) + Fibfib(n - 3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f26753df594e4bb983aee5abd4424820>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f26753df594e4bb983aee5abd4424820>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n < 0) throw new ArgumentOutOfRangeException(\"n\", \"n must
    be >= 0\");\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        return
    Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: n must be >=
    0\nParameter name: n\n  at Problem.Fibfib (System.Int64 n) [0x0000a] in <f65a692e568a4c8e822264d9da5866ac>:0
    \n  at Problem.Fibfib (System.Int64 n) [0x00048] in <f65a692e568a4c8e822264d9da5866ac>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <f65a692e568a4c8e822264d9da5866ac>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: n must
    be >= 0\nParameter name: n\n  at Problem.Fibfib (System.Int64 n) [0x0000a] in
    <f65a692e568a4c8e822264d9da5866ac>:0 \n  at Problem.Fibfib (System.Int64 n) [0x00048]
    in <f65a692e568a4c8e822264d9da5866ac>:0 \n  at Problem.Main (System.String[] args)
    [0x00001] in <f65a692e568a4c8e822264d9da5866ac>:0 \n"
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1 + fibfib2 +
    fibfib3;\n        long fibfib5 = fibfib4 + fibfib4;\n        long fibfib6 = fibfibfib5
    + fibfib5;\n        long fibfib7 = fibfib6 + fibfib6;\n        long fibfib8 =
    fibfib7 + fibfib7;\n        long fibfib9 = fibfib8 + fibfib8;\n        long fibfib10
    = fibfib9 + fibfib9;\n        long fibfib11 = fibfib10 + fibfib10;\n        long
    fibfib12 = fibfib11 + fibfib11;\n        long fibfib13 = fibfib12 + fibfib12;\n
    \       long fibfib14 = fibfib13 + fibfib13;\n        long fibfib15 = fibfib14
    + fibfib14;\n        long fibfib16 = fibfib15 + fibfib15;\n        long fibfib17
    = fibfib16 + fibfib16;\n        long fibfib18 = fibfibfib17 + fibfib17;\n        long
    fibfib19 = fibfib18 + fibfib18;\n        long fibfib20 = fibfib19 + fibfib19;\n
    \       long fibfib21 = fibfib20 + fibfib20;\n        long fibfib22 = fibfib21
    + fibfib21;\n        long fibfib23 = fibfib22 + fibfib22;\n        long fibfib24
    = fibfib23 + fibfib23;\n        long fibfib25 = fibfib24 + fibfib24;\n        long
    fibfib26 = fibfib25 + fibfib25;\n        long fibfib27 = fibfib26 + fibfib26;\n
    \       long fibfib28 = fibfib27 + fibfib27;\n        long fibfib29 = fibfib28
    + fibfib28;\n        long fibfib30 = fibfib29 + fibfib29;\n        long fibfib31
    = fibfib30 + fibfib30;\n        long fibfib32 = fibfib31 + fibfib31;\n        long
    fibfib33 = fibfib32 + fibfib32;\n        long fibfib34 = fibfib33 + fibfib33;\n
    \       long fibfib35 = fibfib34 + fibfib34;\n        long fibfib36 = fibfib35
    + fibfib35;\n        long fibfib37 = fibfib36 + fibfib36\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr8p6daj5.cs(59,44): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 0;\n        long fibfib2
    = 0;\n        long fibfib3 = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        else if (n == 1) {\n            fibfib = 0;\n        }\n        else
    if (n == 2) {\n            fibfib = 1;\n        }\n        else {\n            fibfib3
    = Fibfib(n - 3);\n            fibfib2 = Fibfib(n - 2);\n            fibfib1 =
    Fibfib(n - 1);\n            fibfib = fibfib1 + fibfib2 + fibfib3;\n        }\n
    \       return fibfib;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib72 = \n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqhd29hvs.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpqhd29hvs.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib72 = \n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqhd29hvs.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpqhd29hvs.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib72 = \n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqhd29hvs.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpqhd29hvs.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 0;\n        long fibfib2
    = 0;\n        long fibfib3 = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        if (n == 1) {\n            fibfib1 = 1;\n        }\n        if
    (n == 2) {\n            fibfib2 = 1;\n        }\n        if (n >= 3) {\n            fibfib3
    = fibfibfib1 + fibfib2;\n        }\n        if (n >= 4) {\n            fibfib3
    = fibfib3 + fibfib2;\n        }\n        if (n >= 5) {\n            fibfib3 =
    fibfib3 + fibfib2;\n        }\n        if (n >= 6) {\n            fibfib3 = fibfib3
    + fibfib2;\n        }\n        if (n >= 7) {\n            fibfib3 = fibfib3 +
    fibfib2;\n        }\n        if (n >= 8) {\n            fibfib3 = fibfib3 + fibfib2;\n
    \       }\n        if (n >= 9) {\n            fibfib3 = fibfib3 + fibfib2;\n        }\n
    \       if (n >= 10) {\n            fibfib3 = fibfib3 + fibfib2;\n        }\n
    \       if (n >= 11) {\n            fibfib3 = fibfib3 + fibfib2;\n        }\n
    \       if (n >= 12) {\n            fibfib3 = fibfib3 + fibfib2;\n        }\n
    \       if (n >= 13) {\n            fibfib3 = fibfib3 + fibfib2;\n        }\n
    \       if (n >= 14) {\n            fibfib3 = fibfib3 + fibfib2;\n        }\n
    \       if (n >= 15) {\n            fibfib3 = fibfib3 + fibfib2;\n        }\n
    \       if (n >= 16) {\n            fibfib3 = fib3 + fibfib2;\n        }\n        if
    (n >= 17) {\n            fibfib3 = fib3 + fibfib2;\n        }\n        if (n >=
    18) {\n            fibfib3 = fib3 + fibfib2;\n        }\n        if (n >= 19)
    {\n            fibfib3 = fib3 + fibfib2;\n        }\n        if (n >= 20) {\n
    \           fibfib3 = fib3 + fibfib2;\n        }\n        if (n >= 21) {\n            fibfib3
    = fib3 + fibfib2;\n        }\n        if (n >= 22) {\n            fibfib3 = fib3
    + fibfib2;\n        }\n        if (n >= 23) {\n            fibfib3 = fib3 + fibfib2;\n
    \       }\n        if (n >= 24) {\n            fibfib3 = fib3 + fibfib2;\n        }\n
    \       if (n >= 25) {\n            fibfib3 = fib3 + fibfib2;\n        }\n        if
    (n >= 26) {\n            fibfib3 = fib3 + fibfib2;\n        }\n        if (n >=
    27) {\n            fibfib3 = \n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3fkvjnsn.cs(108,22): error CS1525: Invalid expression term ''}''

    /tmp/tmp3fkvjnsn.cs(108,22): error CS1002: ; expected

    /tmp/tmp3fkvjnsn.cs(110,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp3fkvjnsn.cs(120,2): error CS1513: } expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n < 3) return n;\n        long fibfib = (long)Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9aaelku9.cs(23,1531): error CS1026: ) expected

    /tmp/tmp9aaelku9.cs(23,1531): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        if (n == 1) {\n            fibfib = 0;\n        }\n        if
    (n == 2) {\n            fibfib = 1;\n        }\n        if (n <= 3) {\n            fibfib
    = fibfib + fibfib;\n        }\n        else {\n            fibfib = fibfib + fibfib
    + fibfib;\n        }\n        return fibfib;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <42b9314570634e45a0585a1d476067a9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <42b9314570634e45a0585a1d476067a9>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0 || n == 1)\n            return n;\n        return Fibfib(n-1)
    + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800032
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 0;\n        long fibfib2
    = 0;\n        long fibfib3 = 0;\n        long fibfib4 = 0;\n        long fibfib5
    = 0;\n        long fibfib6 = 0;\n        long fibfib7 = 0;\n        long fibfib8
    = 0;\n        long fibfib9 = 0;\n        long fibfib10 = 0;\n        long fibfib11
    = 0;\n        long fibfib12 = 0;\n        long fibfib13 = 0;\n        long fibfib14
    = 0;\n        long fibfib15 = 0;\n        long fibfib16 = 0;\n        long fibfib17
    = 0;\n        long fibfib18 = 0;\n        long fibfib19 = 0;\n        long fibfib20
    = 0;\n        long fibfib21 = 0;\n        long fibfib22 = 0;\n        long fibfib23
    = 0;\n        long fibfib24 = 0;\n        long fibfib25 = 0;\n        long fibfib26
    = 0;\n        long fibfib27 = 0;\n        long fibfib28 = 0;\n        long fibfib29
    = 0;\n        long fibfib30 = 0;\n        long fibfib31 = 0;\n        long fibfib32
    = 0;\n        long fibfib33 = 0;\n        long fibfib34 = 0;\n        long fibfib35
    = 0;\n        long fibfib36 = 0;\n        long fibfib37 = 0;\n        long fibfib38
    = 0;\n        long fibfib39 = 0;\n        long fibfib40 = 0;\n        long fibfib41
    = 0;\n        long fibfib42 = 0;\n        long fibfib43 = 0;\n        long fibfib44
    = 0;\n        long fibfib45 = 0;\n        long fibfib46 = 0;\n        long fibfib47
    = 0;\n        long fibfib48 = 0;\n        long fibfib49 = 0;\n        long fibfib50
    = 0;\n        long fibfib51 = 0;\n        long fibfib52 = 0;\n        long fibfib53
    = 0;\n        long fibfib54 = 0;\n        long fibfib55 = 0;\n        long fibfib56
    = 0;\n        long fibfib57 = 0;\n        long fibfib58 = 0;\n        long fibfib59
    = 0;\n        long fibfib60 = 0;\n        long fibfib61 = 0;\n        long fibfib62
    = 0;\n        long fibfib63 = 0;\n        long fibfib64 = 0;\n        long fibfib65
    = 0;\n        long fibfib66 = 0;\n        long fibfib67 = 0;\n        long fibfib68
    = 0;\n        long fibfib69 = 0;\n        long fibfib70 = 0;\n        long fibfib71
    = 0;\n        long fibfib72 = 0;\n        long fibfib73 = 0;\n\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpoohkvzrm.cs(22,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(23,14): warning CS0219: The variable ''fibfib1'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(24,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(25,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(26,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(27,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(28,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(29,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(30,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(31,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(32,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(33,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(34,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(35,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(36,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(37,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(38,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(39,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is'
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = fibfib;\n        long fibfib2
    = fibfib1;\n        long fibfib3 = fibfib2;\n        long fibfib4 = fibfib3;\n
    \       long fibfib5 = fibfib4;\n        long fibfib6 = fibfib5;\n        long
    fibfib7 = fibfib6;\n        long fibfib8 = fibfib7;\n        long fibfib9 = fibfib8;\n
    \       long fibfib10 = fibfib9;\n        long fibfib11 = fibfib10;\n        long
    fibfib12 = fibfib11;\n        long fibfib13 = fibfib12;\n        long fibfib14
    = fibfib13;\n        long fibfib15 = fibfib14;\n        long fibfib16 = fibfib15;\n
    \       long fibfib17 = fibfib16;\n        long fibfib18 = fibfib17;\n        long
    fibfib19 = fibfib18;\n        long fibfib20 = fibfib19;\n        long fibfib21
    = fibfib20;\n        long fibfib22 = fibfib21;\n        long fibfib23 = fibfib22;\n
    \       long fibfib24 = fibfib23;\n        long fibfib25 = fibfib24;\n        long
    fibfib26 = fibfib25;\n        long fibfib27 = fibfib26;\n        long fibfib28
    = fibfib27;\n        long fibfib29 = fibfib28;\n        long fibfib30 = fibfib29;\n
    \       long fibfib31 = fibfib30;\n        long fibfib32 = fibfib31;\n        long
    fibfib33 = fibfib32;\n        long fibfib34 = fibfib33;\n        long fibfib35
    = fibfib34;\n        long fibfib36 = fibfib35;\n        long fibfib37 = fibfib36;\n
    \       long fibfib38 = fibfib37;\n        long fibfib39 = fibfib38;\n        long
    fibfib40 = fibfib39;\n        long fibfib41 = fibfib40;\n        long fibfib42
    = fibfib41;\n        long fibfib43 = fibfib42;\n        long fibfib44 = fibfib43;\n
    \       long fibfib45 = fibfib44;\n        long fibfib46 = fibfib45;\n        long
    fibfib47 = fibfib46;\n        long fibfib48 = fibfib47;\n        long fibfib49
    = fibfib48;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpe403gwnt.cs(21,24): error CS0161: ''Problem.Fibfib(long)'': not all code
    paths return a value

    '
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        if (n == 1) {\n            fibfib = 0;\n        }\n        if
    (n == 2) {\n            fibfib = 1;\n        }\n        if (n <= 3) {\n            fibfib
    = (fibfib + fibfib + fibfib);\n        }\n        if (n <= 5) {\n            fibfib
    = (fibfib + fibfib);\n        }\n        if (n <= 8) {\n            fibfib = (fibfib);\n
    \       }\n        return fibfib;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b63db54d08384387b4e82998554369de>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b63db54d08384387b4e82998554369de>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0L;\n        if (n == 1) return 1L;\n        if
    (n == 2) return 1L;\n        if (n == 3) return 2L;\n        if (n == 4) return
    3L;\n        if (n == 5) return 5L;\n        if (n == 6) return 8L;\n        if
    (n == 7) return 13L;\n        if (n == 8) return 21L;\n        if (n == 9) return
    34L;\n        if (n == 10) return 55L;\n        if (n == 11) return 89L;\n        if
    (n == 12) return 144L;\n        if (n == 13) return 233L;\n        if (n == 14)
    return 377L;\n        if (n == 15) return 610L;\n        if (n == 16) return 987L;\n
    \       if (n == 17) return 1597L;\n        if (n == 18) return 2584L;\n        if
    (n == 19) return 4181L;\n        if (n == 20) return 6765L;\n        if (n ==
    21) return 10946L;\n        if (n == 22) return 17711L;\n        if (n == 23)
    return 28657L;\n        if (n == 24) return 46368L;\n        if (n == 25) return
    75025L;\n        if (n == 26) return 121393L;\n        if (n == 27) return 196418L;\n
    \       if (n == 28) return 317811L;\n        if (n == 29) return 514229L;\n        if
    (n == 30) return 832040L;\n        if (n == 31) return 1346269L;\n        if (n
    == 32) return 2178309L;\n        if (n == 33) return 3524578L;\n        if (n
    == 34) return 5702887L;\n        if (n == 35) return 9227465L;\n        if (n
    == 36) return 14930352L;\n        if (n == 37) return 24157817L;\n        if (n
    == 38) return 39088169L;\n        if (n == 39) return 63245986L;\n        if (n
    == 40) return 10233415L;\n        if (n == 41) return 16558014L;\n        if (n
    == 42) return 26791429L;\n        if (n == 43) return 43349447L;\n        if (n
    == 44) return 7014087L;\n        if (n == 45) return 11349030L;\n        if (n
    == 46) return 183631190L;\n        if (n == 47) return 270461966L;\n        if
    (n == 48) return 42527711L;\n        if (n == 49) return 53522273L;\n        if
    (n == 50) return 74505806L;\n        if (n == 51) return 97537259L;\n        if
    (n == 52) return 148420863L;\n        if (\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpeadirqe2.cs(75,13): error CS1525: Invalid expression term ''}''

    /tmp/tmpeadirqe2.cs(75,13): error CS1026: ) expected

    /tmp/tmpeadirqe2.cs(75,13): error CS1002: ; expected

    '
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib72 = \n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqhd29hvs.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpqhd29hvs.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib2 = 0;\n        long fibfib3
    = 0;\n        long fibfib4 = 0;\n        long fibfib5 = 0;\n        long fibfib6
    = 0;\n        long fibfib7 = 0;\n        long fibfib8 = 0;\n        long fibfib9
    = 0;\n        long fibfib10 = 0;\n        long fibfib11 = 0;\n        long fibfib12
    = 0;\n        long fibfib13 = 0;\n        long fibfib14 = 0;\n        long fibfib15
    = 0;\n        long fibfib16 = 0;\n        long fibfib17 = 0;\n        long fibfib18
    = 0;\n        long fibfib19 = 0;\n        long fibfib20 = 0;\n        long fibfib21
    = 0;\n        long fibfib22 = 0;\n        long fibfib23 = 0;\n        long fibfib24
    = 0;\n        long fibfib25 = 0;\n        long fibfib26 = 0;\n        long fibfib27
    = 0;\n        long fibfib28 = 0;\n        long fibfib29 = 0;\n        long fibfib30
    = 0;\n        long fibfib31 = 0;\n        long fibfib32 = 0;\n        long fibfib33
    = 0;\n        long fibfib34 = 0;\n        long fibfib35 = 0;\n        long fibfib36
    = 0;\n        long fibfib37 = 0;\n        long fibfib38 = 0;\n        long fibfib39
    = 0;\n        long fibfib40 = 0;\n        long fibfib41 = 0;\n        long fibfib42
    = 0;\n        long fibfib43 = 0;\n        long fibfib44 = 0;\n        long fibfib45
    = 0;\n        long fibfib46 = 0;\n        long fibfib47 = 0;\n        long fibfib48
    = 0;\n        long fibfib49 = 0;\n        long fibfib50 = 0;\n        long fibfib51
    = 0;\n        long fibfib52 = 0;\n        long fibfib53 = 0;\n        long fibfib54
    = 0;\n        long fibfib55 = 0;\n        long fibfib56 = 0;\n        long fibfib57
    = 0;\n        long fibfib58 = 0;\n        long fibfib59 = 0;\n        long fibfib60
    = 0;\n        long fibfib61 = 0;\n        long fibfib62 = 0;\n        long fibfib63
    = 0;\n        long fibfib64 = 0;\n        long fibfib65 = 0;\n        long fibfib66
    = 0;\n        long fibfib67 = 0;\n        long fibfib68 = 0;\n        long fibfib69
    = 0;\n        long fibfib70 = 0;\n        long fibfib71 = 0;\n        long fibfib72
    = 0;\n        long fibfib73 = 0;\n        long fibfib74 = 0;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpugqpwpit.cs(22,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(23,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(24,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(25,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(26,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(27,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(28,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(29,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(30,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(31,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(32,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(33,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(34,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(35,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(36,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(37,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(38,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(39,14): warning CS0219: The variable ''fibfib18'' is assigned
    but its value i'
  timestamp: 1659800026
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0 || n == 1)\n            return n;\n        return Fibfib(n-1)
    + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800032
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1 + fibfib2 +
    fibfib3;\n        long fibfib5 = fibfib4 + fibfib4;\n        long fibfib6 = fibfibfib5
    + fibfib5;\n        long fibfib7 = fibfib6 + fibfib6;\n        long fibfib8 =
    fibfib7 + fibfib7;\n        long fibfib9 = fibfib8 + fibfib8;\n        long fibfib10
    = fibfib9 + fibfib9;\n        long fibfib11 = fibfib10 + fibfib10;\n        long
    fibfib12 = fibfib11 + fibfib11;\n        long fibfib13 = fibfib12 + fibfib12;\n
    \       long fibfib14 = fibfib13 + fibfib13;\n        long fibfib15 = fibfib14
    + fibfib14;\n        long fibfib16 = fibfib15 + fibfib15;\n        long fibfib17
    = fibfib16 + fibfib16;\n        long fibfib18 = fibfibfib17 + fibfib17;\n        long
    fibfib19 = fibfib18 + fibfib18;\n        long fibfib20 = fibfib19 + fibfib19;\n
    \       long fibfib21 = fibfib20 + fibfib20;\n        long fibfib22 = fibfib21
    + fibfib21;\n        long fibfib23 = fibfib22 + fibfib22;\n        long fibfib24
    = fibfib23 + fibfib23;\n        long fibfib25 = fibfib24 + fibfib24;\n        long
    fibfib26 = fibfib25 + fibfib25;\n        long fibfib27 = fibfib26 + fibfib26;\n
    \       long fibfib28 = fibfib27 + fibfib27;\n        long fibfib29 = fibfib28
    + fibfib28;\n        long fibfib30 = fibfib29 + fibfib29;\n        long fibfib31
    = fibfib30 + fibfib30;\n        long fibfib32 = fibfib31 + fibfib31;\n        long
    fibfib33 = fibfib32 + fibfib32;\n        long fibfib34 = fibfib33 + fibfib33;\n
    \       long fibfib35 = fibfib34 + fibfib34;\n        long fibfib36 = fibfib35
    + fibfib35;\n        long fibfib37 = fibfib36 + fibfib36\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr8p6daj5.cs(59,44): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1 + fibfib2 +
    fibfib3;\n        long fibfib5 = fibfib4 + fibfib4;\n        long fibfib6 = fibfibfib5
    + fibfib5;\n        long fibfib7 = fibfib6 + fibfib6;\n        long fibfib8 =
    fibfib7 + fibfib7;\n        long fibfib9 = fibfib8 + fibfib8;\n        long fibfib10
    = fibfib9 + fibfib9;\n        long fibfib11 = fibfib10 + fibfib10;\n        long
    fibfib12 = fibfib11 + fibfib11;\n        long fibfib13 = fibfib12 + fibfib12;\n
    \       long fibfib14 = fibfib13 + fibfib13;\n        long fibfib15 = fibfib14
    + fibfib14;\n        long fibfib16 = fibfib15 + fibfib15;\n        long fibfib17
    = fibfib16 + fibfib16;\n        long fibfib18 = fibfibfib17 + fibfib17;\n        long
    fibfib19 = fibfib18 + fibfib18;\n        long fibfib20 = fibfib19 + fibfib19;\n
    \       long fibfib21 = fibfib20 + fibfib20;\n        long fibfib22 = fibfib21
    + fibfib21;\n        long fibfib23 = fibfib22 + fibfib22;\n        long fibfib24
    = fibfib23 + fibfib23;\n        long fibfib25 = fibfib24 + fibfib24;\n        long
    fibfib26 = fibfib25 + fibfib25;\n        long fibfib27 = fibfib26 + fibfib26;\n
    \       long fibfib28 = fibfib27 + fibfib27;\n        long fibfib29 = fibfib28
    + fibfib28;\n        long fibfib30 = fibfib29 + fibfib29;\n        long fibfib31
    = fibfib30 + fibfib30;\n        long fibfib32 = fibfib31 + fibfib31;\n        long
    fibfib33 = fibfib32 + fibfib32;\n        long fibfib34 = fibfib33 + fibfib33;\n
    \       long fibfib35 = fibfib34 + fibfib34;\n        long fibfib36 = fibfib35
    + fibfib35;\n        long fibfib37 = fibfib36 + fibfib\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbn65oq8y.cs(59,42): error CS1002: ; expected

    '
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0)\n            return 0;\n        if (n == 1)\n            return
    1;\n        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib7\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp98az0vck.cs(94,21): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        else if (n == 1) {\n            fibfib = 0;\n        }\n        else
    if (n == 2) {\n            fibfib = 1;\n        }\n        else {\n            fibfib
    = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1 + fibfib2 +
    fibfib3;\n        long fibfib5 = fibfib4 + fibfib4;\n        long fibfib6 = fibfibfib5
    + fibfib5;\n        long fibfib7 = fibfib6 + fibfib6;\n        long fibfib8 =
    fibfib7 + fibfib7;\n        long fibfib9 = fibfib8 + fibfib8;\n        long fibfib10
    = fibfib9 + fibfib9;\n        long fibfib11 = fibfib10 + fibfib10;\n        long
    fibfib12 = fibfib11 + fibfib11;\n        long fibfib13 = fibfib12 + fibfib12;\n
    \       long fibfib14 = fibfib13 + fibfib13;\n        long fibfib15 = fibfib14
    + fibfib14;\n        long fibfib16 = fibfib15 + fibfib15;\n        long fibfib17
    = fibfib16 + fibfib16;\n        long fibfib18 = fibfibfib17 + fibfib17;\n        long
    fibfib19 = fibfib18 + fibfib18;\n        long fibfib20 = fibfib19 + fibfib19;\n
    \       long fibfib21 = fibfib20 + fibfib20;\n        long fibfib22 = fibfib21
    + fibfib21;\n        long fibfib23 = fibfib22 + fibfib22;\n        long fibfib24
    = fibfib23 + fibfib23;\n        long fibfib25 = fibfib24 + fibfib24;\n        long
    fibfib26 = fibfib25 + fibfib25;\n        long fibfib27 = fibfib26 + fibfib26;\n
    \       long fibfib28 = fibfib27 + fibfib27;\n        long fibfib29 = fibfib28
    + fibfib28;\n        long fibfib30 = fibfib29 + fibfib29;\n        long fibfib31
    = fibfib30 + fibfib30;\n        long fibfib32 = fibfib31 + fibfib31;\n        long
    fibfib33 = fibfib32 + fibfib32;\n        long fibfib34 = fibfib33 + fibfib33;\n
    \       long fibfib35 = fibfib34 + fibfib34;\n        long fibfib36 = fibfib35
    + fibfib35;\n        long fibfib37 = fibfib36 + fibfib36\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr8p6daj5.cs(59,44): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n <= 3) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8963b47a72c445e08d22e00efea46347>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8963b47a72c445e08d22e00efea46347>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 0;\n        long fibfib2
    = 0;\n        long fibfib3 = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        if (n == 1) {\n            fibfib1 = 1;\n        }\n        if
    (n == 2) {\n            fibfib2 = 1;\n        }\n        if (n >= 3) {\n            fibfib3
    = Fibfib(n - 3) + Fibfib(n - 2) + Fibfib(n - 1);\n        }\n        fibfib =
    fibfib1 + fibfib2 + fibfib3;\n        return fibfib;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b0f53bb3e3f4ed3b8fa664ccede553d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b0f53bb3e3f4ed3b8fa664ccede553d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        else if (n == 1) {\n            fibfib = 0;\n        }\n        else
    if (n == 2) {\n            fibfib = 1;\n        }\n        else {\n            fibfib
    = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib7\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp98az0vck.cs(94,21): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        else if (n == 1) {\n            fibfib = 0;\n        }\n        else
    if (n == 2) {\n            fibfib = 1;\n        }\n        else {\n            fibfib
    = fibfib + Fibfib(n - 1) + Fibfib(n - 2);\n        }\n        return fibfib;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f1bb6abe0c974372b313ad70245b59d7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f1bb6abe0c974372b313ad70245b59d7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       } else if (n == 1) {\n            fibfib = 0;\n        } else if (n ==
    2) {\n            fibfib = 1;\n        } else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib2 = 1;\n        long fibfib3
    = 1;\n        long fibfib4 = 1;\n        long fibfib5 = 1;\n        long fibfib6
    = 1;\n        long fibfib7 = 1;\n        long fibfib8 = 1;\n        long fibfib9
    = 1;\n        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long fibfib12
    = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long fibfib15
    = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long fibfib18
    = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long fibfib21
    = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long fibfib24
    = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long fibfib27
    = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long fibfib30
    = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long fibfib33
    = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long fibfib36
    = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long fibfib39
    = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long fibfib42
    = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long fibfib45
    = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long fibfib48
    = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long fibfib51
    = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long fibfib54
    = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long fibfib57
    = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long fibfib60
    = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long fibfib63
    = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long fibfib66
    = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long fibfib69
    = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long fibfib72
    = 1;\n        long fibfib\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmr53gac0.cs(94,20): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib2 = 1;\n        long fibfib3
    = 1;\n        long fibfib4 = 0;\n        long fibfib5 = 0;\n        long fibfib6
    = 0;\n        long fibfib7 = 0;\n        long fibfib8 = 0;\n        long fibfib9
    = 0;\n        long fibfib10 = 0;\n        long fibfib11 = 0;\n        long fibfib12
    = 0;\n        long fibfib13 = 0;\n        long fibfib14 = 0;\n        long fibfib15
    = 0;\n        long fibfib16 = 0;\n        long fibfib17 = 0;\n        long fibfib18
    = 0;\n        long fibfib19 = 0;\n        long fibfib20 = 0;\n        long fibfib21
    = 0;\n        long fibfib22 = 0;\n        long fibfib23 = 0;\n        long fibfib24
    = 0;\n        long fibfib25 = 0;\n        long fibfib26 = 0;\n        long fibfib27
    = 0;\n        long fibfib28 = 0;\n        long fibfib29 = 0;\n        long fibfib30
    = 0;\n        long fibfib31 = 0;\n        long fibfib32 = 0;\n        long fibfib33
    = 0;\n        long fibfib34 = 0;\n        long fibfib35 = 0;\n        long fibfib36
    = 0;\n        long fibfib37 = 0;\n        long fibfib38 = 0;\n        long fibfib39
    = 0;\n        long fibfib40 = 0;\n        long fibfib41 = 0;\n        long fibfib42
    = 0;\n        long fibfib43 = 0;\n        long fibfib44 = 0;\n        long fibfib45
    = 0;\n        long fibfib46 = 0;\n        long fibfib47 = 0;\n        long fibfib48
    = 0;\n        long fibfib49 = 0;\n        long fibfib50 = 0;\n        long fibfib51
    = 0;\n        long fibfib52 = 0;\n        long fibfib53 = 0;\n        long fibfib54
    = 0;\n        long fibfib55 = 0;\n        long fibfib56 = 0;\n        long fibfib57
    = 0;\n        long fibfib58 = 0;\n        long fibfib59 = 0;\n        long fibfib60
    = 0;\n        long fibfib61 = 0;\n        long fibfib62 = 0;\n        long fibfib63
    = 0;\n        long fibfib64 = 0;\n        long fibfib65 = 0;\n        long fibfib66
    = 0;\n        long fibfib67 = 0;\n        long fibfib68 = 0;\n        long fibfib69
    = 0;\n        long fibfib70 = 0;\n        long fibfib71 = 0;\n        long fibfib72
    = 0;\n        long fibfib73 = 0;\n        long fibfib74\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj7qt7dd5.cs(95,22): error CS1002: ; expected

    '
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1;\n        long
    fibfib5 = fibfib2;\n        long fibfib6 = fibfibfib3;\n        long fibfib7 =
    fibfib4;\n        long fibfib8 = fibfib5;\n        long fibfib9 = fibfib6;\n        long
    fibfib10 = fibfib7;\n        long fibfib11 = fibfib8;\n        long fibfib12 =
    fibfib9;\n        long fibfib13 = fibfib10;\n        long fibfib14 = fibfib11;\n
    \       long fibfib15 = fibfib12;\n        long fibfib16 = fibfib13;\n        long
    fibfib17 = fibfib14;\n        long fibfib18 = fibfib15;\n        long fibfib19
    = fibfib16;\n        long fibfib20 = fibfib17;\n        long fibfib21 = fibfib18;\n
    \       long fibfib22 = fibfib19;\n        long fibfib23 = fibfib20;\n        long
    fibfib24 = fibfib21;\n        long fibfib25 = fibfib22;\n        long fibfib26
    = fibfib23;\n        long fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n
    \       long fibfib29 = fibfib26;\n        long fibfib30 = fibfib27;\n        long
    fibfib31 = fibfib28;\n        long fibfib32 = fibfib29;\n        long fibfib33
    = fibfib30;\n        long fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n
    \       long fibfib36 = fibfib33;\n        long fibfib37 = fibfib34;\n        long
    fibfib38 = fibfib35;\n        long fibfib39 = fibfib36;\n        long fibfib40
    = fibfib37;\n        long fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n
    \       long fibfib43 = fibfib40;\n        long fibfib44 = fibfib41;\n        long
    fibfib45 = fibfib42;\n        long fibfib46 = fibfib43;\n        long fibfib47
    = fibfib44;\n        long fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n
    \       long fibfib50 = fib\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps_b1x5wi.cs(72,28): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0)\n            return 0;\n        if (n == 1)\n            return
    1;\n        if (n == 2)\n            return 1;\n        return Fibfib(n - 1) +
    Fibfib(n - 2) + Fibfib(n - 3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f26753df594e4bb983aee5abd4424820>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f26753df594e4bb983aee5abd4424820>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0)\n            fibfib = 0;\n
    \       else if (n == 1)\n            fibfib = 0;\n        else if (n == 2)\n
    \           fibfib = 1;\n        else\n            fibfib = Fibfib(n - 1) + Fibfib(n
    - 2) + Fibfib(n - 3);\n        return fibfib;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib2 = 0;\n        long fibfib3
    = 0;\n        long fibfib4 = 0;\n        long fibfib5 = 0;\n        long fibfib6
    = 0;\n        long fibfib7 = 0;\n        long fibfib8 = 0;\n        long fibfib9
    = 0;\n        long fibfib10 = 0;\n        long fibfib11 = 0;\n        long fibfib12
    = 0;\n        long fibfib13 = 0;\n        long fibfib14 = 0;\n        long fibfib15
    = 0;\n        long fibfib16 = 0;\n        long fibfib17 = 0;\n        long fibfib18
    = 0;\n        long fibfib19 = 0;\n        long fibfib20 = 0;\n        long fibfib21
    = 0;\n        long fibfib22 = 0;\n        long fibfib23 = 0;\n        long fibfib24
    = 0;\n        long fibfib25 = 0;\n        long fibfib26 = 0;\n        long fibfib27
    = 0;\n        long fibfib28 = 0;\n        long fibfib29 = 0;\n        long fibfib30
    = 0;\n        long fibfib31 = 0;\n        long fibfib32 = 0;\n        long fibfib33
    = 0;\n        long fibfib34 = 0;\n        long fibfib35 = 0;\n        long fibfib36
    = 0;\n        long fibfib37 = 0;\n        long fibfib38 = 0;\n        long fibfib39
    = 0;\n        long fibfib40 = 0;\n        long fibfib41 = 0;\n        long fibfib42
    = 0;\n        long fibfib43 = 0;\n        long fibfib44 = 0;\n        long fibfib45
    = 0;\n        long fibfib46 = 0;\n        long fibfib47 = 0;\n        long fibfib48
    = 0;\n        long fibfib49 = 0;\n        long fibfib50 = 0;\n        long fibfib51
    = 0;\n        long fibfib52 = 0;\n        long fibfib53 = 0;\n        long fibfib54
    = 0;\n        long fibfib55 = 0;\n        long fibfib56 = 0;\n        long fibfib57
    = 0;\n        long fibfib58 = 0;\n        long fibfib59 = 0;\n        long fibfib60
    = 0;\n        long fibfib61 = 0;\n        long fibfib62 = 0;\n        long fibfib63
    = 0;\n        long fibfib64 = 0;\n        long fibfib65 = 0;\n        long fibfib66
    = 0;\n        long fibfib67 = 0;\n        long fibfib68 = 0;\n        long fibfib69
    = 0;\n        long fibfib70 = 0;\n        long fibfib71 = 0;\n        long fibfib72
    = 0;\n        long fibfib73 = 0;\n        long fibfib74 = 0;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpugqpwpit.cs(22,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(23,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(24,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(25,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(26,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(27,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(28,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(29,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(30,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(31,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(32,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(33,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(34,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(35,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(36,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(37,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(38,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(39,14): warning CS0219: The variable ''fibfib18'' is assigned
    but its value i'
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0)\n            return 0;\n        if (n == 1)\n            return
    1;\n        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        else if (n == 1) {\n            fibfib = 0;\n        }\n        else
    if (n == 2) {\n            fibfib = 1;\n        }\n        else {\n            fibfib
    = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1 + fibfib2 +
    fibfib3;\n        long fibfib5 = fibfib4 + fibfib4;\n        long fibfib6 = fibfibfib5
    + fibfib5;\n        long fibfib7 = fibfib6 + fibfib6;\n        long fibfib8 =
    fibfib7 + fibfib7;\n        long fibfib9 = fibfib8 + fibfib8;\n        long fibfib10
    = fibfib9 + fibfib9;\n        long fibfib11 = fibfib10 + fibfib10;\n        long
    fibfib12 = fibfib11 + fibfib11;\n        long fibfib13 = fibfib12 + fibfib12;\n
    \       long fibfib14 = fibfib13 + fibfib13;\n        long fibfib15 = fibfib14
    + fibfib14;\n        long fibfib16 = fibfib15 + fibfib15;\n        long fibfib17
    = fibfib16 + fibfib16;\n        long fibfib18 = fibfibfib17 + fibfib17;\n        long
    fibfib19 = fibfib18 + fibfib18;\n        long fibfib20 = fibfib19 + fibfib19;\n
    \       long fibfib21 = fibfib20 + fibfib20;\n        long fibfib22 = fibfib21
    + fibfib21;\n        long fibfib23 = fibfib22 + fibfib22;\n        long fibfib24
    = fibfib23 + fibfib23;\n        long fibfib25 = fibfib24 + fibfib24;\n        long
    fibfib26 = fibfib25 + fibfib25;\n        long fibfib27 = fibfib26 + fibfib26;\n
    \       long fibfib28 = fibfib27 + fibfib27;\n        long fibfib29 = fibfib28
    + fibfib28;\n        long fibfib30 = fibfib29 + fibfib29;\n        long fibfib31
    = fibfib30 + fibfib30;\n        long fibfib32 = fibfib31 + fibfib31;\n        long
    fibfib33 = fibfib32 + fibfib32;\n        long fibfib34 = fibfib33 + fibfib33;\n
    \       long fibfib35 = fibfib34 + fibfib34;\n        long fibfib36 = fibfib35
    + fibfib35;\n        long fibfib37 = fibfib36 + fibfib36\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr8p6daj5.cs(59,44): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 0;\n        long fibfib2
    = 0;\n        long fibfib3 = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        else if (n == 1) {\n            fibfib = 0;\n        }\n        else
    if (n == 2) {\n            fibfib = 1;\n        }\n        else {\n            fibfib3
    = Fibfib(n - 3);\n            fibfib2 = Fibfib(n - 2);\n            fibfib1 =
    Fibfib(n - 1);\n            fibfib = fibfib1 + fibfib2 + fibfib3;\n        }\n
    \       return fibfib;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n <= 3) return 0;\n        long fibfib = (long)Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc2g_6aj6.cs(23,1528): error CS1001: Identifier expected

    /tmp/tmpc2g_6aj6.cs(23,1528): error CS1026: ) expected

    /tmp/tmpc2g_6aj6.cs(23,1528): error CS1002: ; expected

    '
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        else if (n == 1) {\n            fibfib = 0;\n        }\n        else
    if (n == 2) {\n            fibfib = 1;\n        }\n        else {\n            fibfib
    = fibfib + Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return
    fibfib;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 0;\n        long fibfib2
    = 0;\n        long fibfib3 = 0;\n        long fibfib4 = 0;\n        long fibfib5
    = 0;\n        long fibfib6 = 0;\n        long fibfib7 = 0;\n        long fibfib8
    = 0;\n        long fibfib9 = 0;\n        long fibfib10 = 0;\n        long fibfib11
    = 0;\n        long fibfib12 = 0;\n        long fibfib13 = 0;\n        long fibfib14
    = 0;\n        long fibfib15 = 0;\n        long fibfib16 = 0;\n        long fibfib17
    = 0;\n        long fibfib18 = 0;\n        long fibfib19 = 0;\n        long fibfib20
    = 0;\n        long fibfib21 = 0;\n        long fibfib22 = 0;\n        long fibfib23
    = 0;\n        long fibfib24 = 0;\n        long fibfib25 = 0;\n        long fibfib26
    = 0;\n        long fibfib27 = 0;\n        long fibfib28 = 0;\n        long fibfib29
    = 0;\n        long fibfib30 = 0;\n        long fibfib31 = 0;\n        long fibfib32
    = 0;\n        long fibfib33 = 0;\n        long fibfib34 = 0;\n        long fibfib35
    = 0;\n        long fibfib36 = 0;\n        long fibfib37 = 0;\n        long fibfib38
    = 0;\n        long fibfib39 = 0;\n        long fibfib40 = 0;\n        long fibfib41
    = 0;\n        long fibfib42 = 0;\n        long fibfib43 = 0;\n        long fibfib44
    = 0;\n        long fibfib45 = 0;\n        long fibfib46 = 0;\n        long fibfib47
    = 0;\n        long fibfib48 = 0;\n        long fibfib49 = 0;\n        long fibfib50
    = 0;\n        long fibfib51 = 0;\n        long fibfib52 = 0;\n        long fibfib53
    = 0;\n        long fibfib54 = 0;\n        long fibfib55 = 0;\n        long fibfib56
    = 0;\n        long fibfib57 = 0;\n        long fibfib58 = 0;\n        long fibfib59
    = 0;\n        long fibfib60 = 0;\n        long fibfib61 = 0;\n        long fibfib62
    = 0;\n        long fibfib63 = 0;\n        long fibfib64 = 0;\n        long fibfib65
    = 0;\n        long fibfib66 = 0;\n        long fibfib67 = 0;\n        long fibfib68
    = 0;\n        long fibfib69 = 0;\n        long fibfib70 = 0;\n        long fibfib71
    = 0;\n        long fibfib72 = 0;\n        long fibfib73 = 0;\n\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpoohkvzrm.cs(22,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(23,14): warning CS0219: The variable ''fibfib1'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(24,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(25,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(26,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(27,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(28,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(29,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(30,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(31,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(32,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(33,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(34,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(35,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(36,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(37,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(38,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(39,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is'
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 0;\n        long fibfib2
    = 0;\n        long fibfib3 = 0;\n        long fibfib4 = 0;\n        long fibfib5
    = 0;\n        long fibfib6 = 0;\n        long fibfib7 = 0;\n        long fibfib8
    = 0;\n        long fibfib9 = 0;\n        long fibfib10 = 0;\n        long fibfib11
    = 0;\n        long fibfib12 = 0;\n        long fibfib13 = 0;\n        long fibfib14
    = 0;\n        long fibfib15 = 0;\n        long fibfib16 = 0;\n        long fibfib17
    = 0;\n        long fibfib18 = 0;\n        long fibfib19 = 0;\n        long fibfib20
    = 0;\n        long fibfib21 = 0;\n        long fibfib22 = 0;\n        long fibfib23
    = 0;\n        long fibfib24 = 0;\n        long fibfib25 = 0;\n        long fibfib26
    = 0;\n        long fibfib27 = 0;\n        long fibfib28 = 0;\n        long fibfib29
    = 0;\n        long fibfib30 = 0;\n        long fibfib31 = 0;\n        long fibfib32
    = 0;\n        long fibfib33 = 0;\n        long fibfib34 = 0;\n        long fibfib35
    = 0;\n        long fibfib36 = 0;\n        long fibfib37 = 0;\n        long fibfib38
    = 0;\n        long fibfib39 = 0;\n        long fibfib40 = 0;\n        long fibfib41
    = 0;\n        long fibfib42 = 0;\n        long fibfib43 = 0;\n        long fibfib44
    = 0;\n        long fibfib45 = 0;\n        long fibfib46 = 0;\n        long fibfib47
    = 0;\n        long fibfib48 = 0;\n        long fibfib49 = 0;\n        long fibfib50
    = 0;\n        long fibfib51 = 0;\n        long fibfib52 = 0;\n        long fibfib53
    = 0;\n        long fibfib54 = 0;\n        long fibfib55 = 0;\n        long fibfib56
    = 0;\n        long fibfib57 = 0;\n        long fibfib58 = 0;\n        long fibfib59
    = 0;\n        long fibfib60 = 0;\n        long fibfib61 = 0;\n        long fibfib62
    = 0;\n        long fibfib63 = 0;\n        long fibfib64 = 0;\n        long fibfib65
    = 0;\n        long fibfib66 = 0;\n        long fibfib67 = 0;\n        long fibfib68
    = 0;\n        long fibfib69 = 0;\n        long fibfib70 = 0;\n        long fibfib71
    = 0;\n        long fibfib72 = 0;\n        long fibfib73 = 0;\n\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpoohkvzrm.cs(22,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(23,14): warning CS0219: The variable ''fibfib1'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(24,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(25,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(26,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(27,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(28,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(29,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(30,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(31,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(32,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(33,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(34,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(35,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(36,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(37,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(38,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(39,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is'
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n <= 3) return 0;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0fe446e832a84b298402fe44d9d7a24e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0fe446e832a84b298402fe44d9d7a24e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1;\n        long
    fibfib5 = fibfib2;\n        long fibfib6 = fibfibfib3;\n        long fibfib7 =
    fibfib4;\n        long fibfib8 = fibfib5;\n        long fibfib9 = fibfib6;\n        long
    fibfib10 = fibfib7;\n        long fibfib11 = fibfib8;\n        long fibfib12 =
    fibfib9;\n        long fibfib13 = fibfib10;\n        long fibfib14 = fibfib11;\n
    \       long fibfib15 = fibfib12;\n        long fibfib16 = fibfib13;\n        long
    fibfib17 = fibfib14;\n        long fibfib18 = fibfib15;\n        long fibfib19
    = fibfib16;\n        long fibfib20 = fibfib17;\n        long fibfib21 = fibfib18;\n
    \       long fibfib22 = fibfib19;\n        long fibfib23 = fibfib20;\n        long
    fibfib24 = fibfib21;\n        long fibfib25 = fibfib22;\n        long fibfib26
    = fibfib23;\n        long fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n
    \       long fibfib29 = fibfib26;\n        long fibfib30 = fibfib27;\n        long
    fibfib31 = fibfib28;\n        long fibfib32 = fibfib29;\n        long fibfib33
    = fibfib30;\n        long fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n
    \       long fibfib36 = fibfib33;\n        long fibfib37 = fibfib34;\n        long
    fibfib38 = fibfib35;\n        long fibfib39 = fibfib36;\n        long fibfib40
    = fibfib37;\n        long fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n
    \       long fibfib43 = fibfib40;\n        long fibfib44 = fibfib41;\n        long
    fibfib45 = fibfib42;\n        long fibfib46 = fibfib43;\n        long fibfib47
    = fibfib44;\n        long fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n
    \       long fibfib50 = fib\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps_b1x5wi.cs(72,28): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        else if (n == 1) {\n            fibfib = 0;\n        }\n        else
    if (n == 2) {\n            fibfib = 1;\n        }\n        else {\n            fibfib
    = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        else if (n == 1) {\n            fibfib = 0;\n        }\n        else
    if (n == 2) {\n            fibfib = 1;\n        }\n        else {\n            fibfib
    = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0)\n            return 0;\n        if (n == 1)\n            return
    1;\n        if (n == 2)\n            return 1;\n        return Fibfib(n - 1) +
    Fibfib(n - 2) + Fibfib(n - 3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f26753df594e4bb983aee5abd4424820>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f26753df594e4bb983aee5abd4424820>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib2 = 1;\n        long fibfib3
    = 1;\n        long fibfib4 = 1;\n        long fibfib5 = 1;\n        long fibfib6
    = 1;\n        long fibfib7 = 1;\n        long fibfib8 = 1;\n        long fibfib9
    = 1;\n        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long fibfib12
    = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long fibfib15
    = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long fibfib18
    = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long fibfib21
    = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long fibfib24
    = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long fibfib27
    = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long fibfib30
    = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long fibfib33
    = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long fibfib36
    = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long fibfib39
    = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long fibfib42
    = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long fibfib45
    = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long fibfib48
    = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long fibfib51
    = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long fibfib54
    = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long fibfib57
    = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long fibfib60
    = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long fibfib63
    = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long fibfib66
    = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long fibfib69
    = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long fibfib72
    = 1;\n        long fibfib\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmr53gac0.cs(94,20): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n < 3) return 0L;\n        if (n < 5) return 1L;\n        if
    (n < 8) return Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        return
    Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3) + Fibfib(n - 4);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <405e4605761c4d78bc67706b1b4c5d51>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <405e4605761c4d78bc67706b1b4c5d51>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800027
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       } else if (n == 1) {\n            fibfib = 0;\n        } else if (n ==
    2) {\n            fibfib = 1;\n        } else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1 + fibfib2 +
    fibfib3;\n        long fibfib5 = fibfib4 + fibfib4;\n        long fibfib6 = fibfibfib5
    + fibfib5;\n        long fibfib7 = fibfib6 + fibfib6;\n        long fibfib8 =
    fibfib7 + fibfib7;\n        long fibfib9 = fibfib8 + fibfib8;\n        long fibfib10
    = fibfib9 + fibfib9;\n        long fibfib11 = fibfib10 + fibfib10;\n        long
    fibfib12 = fibfib11 + fibfib11;\n        long fibfib13 = fibfib12 + fibfib12;\n
    \       long fibfib14 = fibfib13 + fibfib13;\n        long fibfib15 = fibfib14
    + fibfib14;\n        long fibfib16 = fibfib15 + fibfib15;\n        long fibfib17
    = fibfib16 + fibfib16;\n        long fibfib18 = fibfibfib17 + fibfib17;\n        long
    fibfib19 = fibfib18 + fibfib18;\n        long fibfib20 = fibfib19 + fibfib19;\n
    \       long fibfib21 = fibfib20 + fibfib20;\n        long fibfib22 = fibfib21
    + fibfib21;\n        long fibfib23 = fibfib22 + fibfib22;\n        long fibfib24
    = fibfib23 + fibfib23;\n        long fibfib25 = fibfib24 + fibfib24;\n        long
    fibfib26 = fibfib25 + fibfib25;\n        long fibfib27 = fibfib26 + fibfib26;\n
    \       long fibfib28 = fibfib27 + fibfib27;\n        long fibfib29 = fibfib28
    + fibfib28;\n        long fibfib30 = fibfib29 + fibfib29;\n        long fibfib31
    = fibfib30 + fibfib30;\n        long fibfib32 = fibfib31 + fibfib31;\n        long
    fibfib33 = fibfib32 + fibfib32;\n        long fibfib34 = fibfib33 + fibfib33;\n
    \       long fibfib35 = fibfib34 + fibfib34;\n        long fibfib36 = fibfib35
    + fibfib35;\n        long fibfib37 = fibfib36 + fibfib36\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr8p6daj5.cs(59,44): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        if (n % 2 == 0) return Fibfib(n / 2) + Fibfib(n /
    2);\n        else return Fibfib(n / 2) + Fibfib(3 * n + 1);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0cab05f179dc42dd9f1193b588f6c56d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0cab05f179dc42dd9f1193b588f6c56d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800027
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib72 = \n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqhd29hvs.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpqhd29hvs.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0)\n            return 0;\n        if (n == 1)\n            return
    1;\n        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1 + fibfib2 +
    fibfib3;\n        long fibfib5 = fibfib4 + fibfib4;\n        long fibfib6 = fibfibfib5
    + fibfib5;\n        long fibfib7 = fibfib6 + fibfib6;\n        long fibfib8 =
    fibfib7 + fibfib7;\n        long fibfib9 = fibfib8 + fibfib8;\n        long fibfib10
    = fibfib9 + fibfib9;\n        long fibfib11 = fibfib10 + fibfib10;\n        long
    fibfib12 = fibfib11 + fibfib11;\n        long fibfib13 = fibfib12 + fibfib12;\n
    \       long fibfib14 = fibfib13 + fibfib13;\n        long fibfib15 = fibfib14
    + fibfib14;\n        long fibfib16 = fibfib15 + fibfib15;\n        long fibfib17
    = fibfib16 + fibfib16;\n        long fibfib18 = fibfibfib17 + fibfib17;\n        long
    fibfib19 = fibfib18 + fibfib18;\n        long fibfib20 = fibfib19 + fibfib19;\n
    \       long fibfib21 = fibfib20 + fibfib20;\n        long fibfib22 = fibfib21
    + fibfib21;\n        long fibfib23 = fibfib22 + fibfib22;\n        long fibfib24
    = fibfib23 + fibfib23;\n        long fibfib25 = fibfib24 + fibfib24;\n        long
    fibfib26 = fibfib25 + fibfib25;\n        long fibfib27 = fibfib26 + fibfib26;\n
    \       long fibfib28 = fibfib27 + fibfib27;\n        long fibfib29 = fibfib28
    + fibfib28;\n        long fibfib30 = fibfib29 + fibfib29;\n        long fibfib31
    = fibfib30 + fibfib30;\n        long fibfib32 = fibfib31 + fibfib31;\n        long
    fibfib33 = fibfib32 + fibfib32;\n        long fibfib34 = fibfib33 + fibfib33;\n
    \       long fibfib35 = fibfib34 + fibfib34;\n        long fibfib36 = fibfib35
    + fibfib35;\n        long fibfib37 = fibfib36 + fibfib36\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr8p6daj5.cs(59,44): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        else if (n == 1) {\n            fibfib = 0;\n        }\n        else
    if (n == 2) {\n            fibfib = 1;\n        }\n        else {\n            fibfib
    = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib7\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp98az0vck.cs(94,21): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n -
    3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6a56ba7dcd42415384761c131fcf73c0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6a56ba7dcd42415384761c131fcf73c0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800027
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1 + fibfib2 +
    fibfib3;\n        long fibfib5 = fibfib4 + fibfib4;\n        long fibfib6 = fibfibfib5
    + fibfib5;\n        long fibfib7 = fibfib6 + fibfib6;\n        long fibfib8 =
    fibfib7 + fibfib7;\n        long fibfib9 = fibfib8 + fibfib8;\n        long fibfib10
    = fibfib9 + fibfib9;\n        long fibfib11 = fibfib10 + fibfib10;\n        long
    fibfib12 = fibfib11 + fibfib11;\n        long fibfib13 = fibfib12 + fibfib12;\n
    \       long fibfib14 = fibfib13 + fibfib13;\n        long fibfib15 = fibfib14
    + fibfib14;\n        long fibfib16 = fibfib15 + fibfib15;\n        long fibfib17
    = fibfib16 + fibfib16;\n        long fibfib18 = fibfibfib17 + fibfib17;\n        long
    fibfib19 = fibfib18 + fibfib18;\n        long fibfib20 = fibfib19 + fibfib19;\n
    \       long fibfib21 = fibfib20 + fibfib20;\n        long fibfib22 = fibfib21
    + fibfib21;\n        long fibfib23 = fibfib22 + fibfib22;\n        long fibfib24
    = fibfib23 + fibfib23;\n        long fibfib25 = fibfib24 + fibfib24;\n        long
    fibfib26 = fibfib25 + fibfib25;\n        long fibfib27 = fibfib26 + fibfib26;\n
    \       long fibfib28 = fibfib27 + fibfib27;\n        long fibfib29 = fibfib28
    + fibfib28;\n        long fibfib30 = fibfib29 + fibfib29;\n        long fibfib31
    = fibfib30 + fibfib30;\n        long fibfib32 = fibfib31 + fibfib31;\n        long
    fibfib33 = fibfib32 + fibfib32;\n        long fibfib34 = fibfib33 + fibfib33;\n
    \       long fibfib35 = fibfib34 + fibfib34;\n        long fibfib36 = fibfib35
    + fibfib35;\n        long fibfib37 = fibfib36 + fibfib36\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr8p6daj5.cs(59,44): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n < 3) return 0L;\n        if (n == 3) return 1L;\n        return
    Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1591d1df21d845fe9831845b5bdc8367>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1591d1df21d845fe9831845b5bdc8367>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800027
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0)\n            return 0;\n        if (n == 1)\n            return
    1;\n        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib2 = 1;\n        long fibfib3
    = 1;\n        long fibfib4 = 1;\n        long fibfib5 = 1;\n        long fibfib6
    = 1;\n        long fibfib7 = 1;\n        long fibfib8 = 1;\n        long fibfib9
    = 1;\n        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long fibfib12
    = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long fibfib15
    = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long fibfib18
    = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long fibfib21
    = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long fibfib24
    = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long fibfib27
    = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long fibfib30
    = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long fibfib33
    = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long fibfib36
    = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long fibfib39
    = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long fibfib42
    = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long fibfib45
    = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long fibfib48
    = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long fibfib51
    = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long fibfib54
    = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long fibfib57
    = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long fibfib60
    = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long fibfib63
    = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long fibfib66
    = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long fibfib69
    = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long fibfib72
    = 1;\n        long fibfib\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmr53gac0.cs(94,20): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        if (n == 3) return 1;\n        return Fibfib(n-1)
    + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90f5ed367d1d4cdf895c7ef49724110c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90f5ed367d1d4cdf895c7ef49724110c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 0;\n        long fibfib2
    = 0;\n        long fibfib3 = 0;\n        long fibfib4 = 0;\n        long fibfib5
    = 0;\n        long fibfib6 = 0;\n        long fibfib7 = 0;\n        long fibfib8
    = 0;\n        long fibfib9 = 0;\n        long fibfib10 = 0;\n        long fibfib11
    = 0;\n        long fibfib12 = 0;\n        long fibfib13 = 0;\n        long fibfib14
    = 0;\n        long fibfib15 = 0;\n        long fibfib16 = 0;\n        long fibfib17
    = 0;\n        long fibfib18 = 0;\n        long fibfib19 = 0;\n        long fibfib20
    = 0;\n        long fibfib21 = 0;\n        long fibfib22 = 0;\n        long fibfib23
    = 0;\n        long fibfib24 = 0;\n        long fibfib25 = 0;\n        long fibfib26
    = 0;\n        long fibfib27 = 0;\n        long fibfib28 = 0;\n        long fibfib29
    = 0;\n        long fibfib30 = 0;\n        long fibfib31 = 0;\n        long fibfib32
    = 0;\n        long fibfib33 = 0;\n        long fibfib34 = 0;\n        long fibfib35
    = 0;\n        long fibfib36 = 0;\n        long fibfib37 = 0;\n        long fibfib38
    = 0;\n        long fibfib39 = 0;\n        long fibfib40 = 0;\n        long fibfib41
    = 0;\n        long fibfib42 = 0;\n        long fibfib43 = 0;\n        long fibfib44
    = 0;\n        long fibfib45 = 0;\n        long fibfib46 = 0;\n        long fibfib47
    = 0;\n        long fibfib48 = 0;\n        long fibfib49 = 0;\n        long fibfib50
    = 0;\n        long fibfib51 = 0;\n        long fibfib52 = 0;\n        long fibfib53
    = 0;\n        long fibfib54 = 0;\n        long fibfib55 = 0;\n        long fibfib56
    = 0;\n        long fibfib57 = 0;\n        long fibfib58 = 0;\n        long fibfib59
    = 0;\n        long fibfib60 = 0;\n        long fibfib61 = 0;\n        long fibfib62
    = 0;\n        long fibfib63 = 0;\n        long fibfib64 = 0;\n        long fibfib65
    = 0;\n        long fibfib66 = 0;\n        long fibfib67 = 0;\n        long fibfib68
    = 0;\n        long fibfib69 = 0;\n        long fibfib70 = 0;\n        long fibfib71
    = 0;\n        long fibfib72 = 0;\n        long fibfib73 = 0;\n\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpoohkvzrm.cs(22,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(23,14): warning CS0219: The variable ''fibfib1'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(24,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(25,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(26,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(27,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(28,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(29,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(30,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(31,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(32,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(33,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(34,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(35,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(36,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(37,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(38,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmpoohkvzrm.cs(39,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is'
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0)\n            return fibfib;\n
    \       if (n == 1)\n            return fibfib;\n        if (n == 2)\n            return
    fibfib;\n        fibfib = (fibfib + Fibfib(n - 1) + Fibfib(n - 2)) + Fibfib(n
    - 3);\n        return fibfib;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b74ee8df7f7645db9f55a5f6bbac6176>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b74ee8df7f7645db9f55a5f6bbac6176>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1 + fibfib2 +
    fibfib3;\n        long fibfib5 = fibfib4 + fibfib4;\n        long fibfib6 = fibfibfib5
    + fibfib5;\n        long fibfib7 = fibfib6 + fibfib6;\n        long fibfib8 =
    fibfib7 + fibfib7;\n        long fibfib9 = fibfib8 + fibfib8;\n        long fibfib10
    = fibfib9 + fibfib9;\n        long fibfib11 = fibfib10 + fibfib10;\n        long
    fibfib12 = fibfib11 + fibfib11;\n        long fibfib13 = fibfib12 + fibfib12;\n
    \       long fibfib14 = fibfib13 + fibfib13;\n        long fibfib15 = fibfib14
    + fibfib14;\n        long fibfib16 = fibfib15 + fibfib15;\n        long fibfib17
    = fibfib16 + fibfib16;\n        long fibfib18 = fibfibfib17 + fibfib17;\n        long
    fibfib19 = fibfib18 + fibfib18;\n        long fibfib20 = fibfib19 + fibfib19;\n
    \       long fibfib21 = fibfib20 + fibfib20;\n        long fibfib22 = fibfib21
    + fibfib21;\n        long fibfib23 = fibfib22 + fibfib22;\n        long fibfib24
    = fibfib23 + fibfib23;\n        long fibfib25 = fibfib24 + fibfib24;\n        long
    fibfib26 = fibfib25 + fibfib25;\n        long fibfib27 = fibfib26 + fibfib26;\n
    \       long fibfib28 = fibfib27 + fibfib27;\n        long fibfib29 = fibfib28
    + fibfib28;\n        long fibfib30 = fibfib29 + fibfib29;\n        long fibfib31
    = fibfib30 + fibfib30;\n        long fibfib32 = fibfib31 + fibfib31;\n        long
    fibfib33 = fibfib32 + fibfib32;\n        long fibfib34 = fibfib33 + fibfib33;\n
    \       long fibfib35 = fibfib34 + fibfib34;\n        long fibfib36 = fibfib35
    + fibfib35;\n        long fibfib37 = fibfib36 + fibfib36\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr8p6daj5.cs(59,44): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib72 = \n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqhd29hvs.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpqhd29hvs.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1 + fibfib2 +
    fibfib3;\n        long fibfib5 = fibfib4 + fibfib4;\n        long fibfib6 = fibfibfib5
    + fibfib5;\n        long fibfib7 = fibfib6 + fibfib6;\n        long fibfib8 =
    fibfib7 + fibfib7;\n        long fibfib9 = fibfib8 + fibfib8;\n        long fibfib10
    = fibfib9 + fibfib9;\n        long fibfib11 = fibfib10 + fibfib10;\n        long
    fibfib12 = fibfib11 + fibfib11;\n        long fibfib13 = fibfib12 + fibfib12;\n
    \       long fibfib14 = fibfib13 + fibfib13;\n        long fibfib15 = fibfib14
    + fibfib14;\n        long fibfib16 = fibfib15 + fibfib15;\n        long fibfib17
    = fibfib16 + fibfib16;\n        long fibfib18 = fibfibfib17 + fibfib17;\n        long
    fibfib19 = fibfib18 + fibfib18;\n        long fibfib20 = fibfib19 + fibfib19;\n
    \       long fibfib21 = fibfib20 + fibfib20;\n        long fibfib22 = fibfib21
    + fibfib21;\n        long fibfib23 = fibfib22 + fibfib22;\n        long fibfib24
    = fibfib23 + fibfib23;\n        long fibfib25 = fibfib24 + fibfib24;\n        long
    fibfib26 = fibfib25 + fibfib25;\n        long fibfib27 = fibfib26 + fibfib26;\n
    \       long fibfib28 = fibfib27 + fibfib27;\n        long fibfib29 = fibfib28
    + fibfib28;\n        long fibfib30 = fibfib29 + fibfib29;\n        long fibfib31
    = fibfib30 + fibfib30;\n        long fibfib32 = fibfib31 + fibfib31;\n        long
    fibfib33 = fibfib32 + fibfib32;\n        long fibfib34 = fibfib33 + fibfib33;\n
    \       long fibfib35 = fibfib34 + fibfib34;\n        long fibfib36 = fibfib35
    + fibfib35;\n        long fibfib37 = fibfib36 + fibfib36\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr8p6daj5.cs(59,44): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib7\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp98az0vck.cs(94,21): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib72 = \n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqhd29hvs.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpqhd29hvs.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib7\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp98az0vck.cs(94,21): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n        long
    fibfib = (long) Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        return
    fibfib;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800032
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0)\n            return 0;\n        if (n == 1)\n            return
    1;\n        if (n == 2)\n            return 1;\n        return Fibfib(n - 1) +
    Fibfib(n - 2) + Fibfib(n - 3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f26753df594e4bb983aee5abd4424820>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f26753df594e4bb983aee5abd4424820>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1 + fibfib2 +
    fibfib3;\n        long fibfib5 = fibfib4 + fibfib4;\n        long fibfib6 = fibfibfib5
    + fibfib5;\n        long fibfib7 = fibfib6 + fibfib6;\n        long fibfib8 =
    fibfib7 + fibfib7;\n        long fibfib9 = fibfib8 + fibfib8;\n        long fibfib10
    = fibfib9 + fibfib9;\n        long fibfib11 = fibfib10 + fibfib10;\n        long
    fibfib12 = fibfib11 + fibfib11;\n        long fibfib13 = fibfib12 + fibfib12;\n
    \       long fibfib14 = fibfib13 + fibfib13;\n        long fibfib15 = fibfib14
    + fibfib14;\n        long fibfib16 = fibfib15 + fibfib15;\n        long fibfib17
    = fibfib16 + fibfib16;\n        long fibfib18 = fibfibfib17 + fibfib17;\n        long
    fibfib19 = fibfib18 + fibfib18;\n        long fibfib20 = fibfib19 + fibfib19;\n
    \       long fibfib21 = fibfib20 + fibfib20;\n        long fibfib22 = fibfib21
    + fibfib21;\n        long fibfib23 = fibfib22 + fibfib22;\n        long fibfib24
    = fibfib23 + fibfib23;\n        long fibfib25 = fibfib24 + fibfib24;\n        long
    fibfib26 = fibfib25 + fibfib25;\n        long fibfib27 = fibfib26 + fibfib26;\n
    \       long fibfib28 = fibfib27 + fibfib27;\n        long fibfib29 = fibfib28
    + fibfib28;\n        long fibfib30 = fibfib29 + fibfib29;\n        long fibfib31
    = fibfib30 + fibfib30;\n        long fibfib32 = fibfib31 + fibfib31;\n        long
    fibfib33 = fibfib32 + fibfib32;\n        long fibfib34 = fibfib33 + fibfib33;\n
    \       long fibfib35 = fibfib34 + fibfib34;\n        long fibfib36 = fibfib35
    + fibfib35;\n        long fibfib37 = fibfib36 + fibfib36\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr8p6daj5.cs(59,44): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1 + fibfib2;\n
    \       long fibfib5 = fibfib3 + fibfib4;\n        long fibfib6 = fibfibfib5 +
    fibfib4;\n        long fibfib7 = fibfib6 + fibfib5;\n        long fibfib8 = fibfib7
    + fibfib6;\n        long fibfib9 = fibfib8 + fibfib7;\n        long fibfib10 =
    fibfib9 + fibfib8;\n        long fibfib11 = fibfib10 + fibfib9;\n        long
    fibfib12 = fibfib11 + fibfib10;\n        long fibfib13 = fibfib12 + fibfib11;\n
    \       long fibfib14 = fibfib13 + fibfib12;\n        long fibfib15 = fibfib14
    + fibfib13;\n        long fibfib16 = fibfib15 + fibfib14;\n        long fibfib17
    = fibfib16 + fibfib15;\n        long fibfib18 = fibfibfib17 + fibfib16;\n        long
    fibfib19 = fibfib18 + fibfib17;\n        long fibfib20 = fibfib19 + fibfib18;\n
    \       long fibfib21 = fibfib20 + fibfib19;\n        long fibfib22 = fibfib21
    + fibfib20;\n        long fibfib23 = fibfib22 + fibfib21;\n        long fibfib24
    = fibfib23 + fibfib22;\n        long fibfib25 = fibfib24 + fibfib23;\n        long
    fibfib26 = fibfib25 + fibfib24;\n        long fibfib27 = fibfib26 + fibfib25;\n
    \       long fibfib28 = fibfib27 + fibfib26;\n        long fibfib29 = fibfib28
    + fibfib27;\n        long fibfib30 = fibfib29 + fibfib28;\n        long fibfib31
    = fibfib30 + fibfib29;\n        long fibfib32 = fibfib31 + fibfib30;\n        long
    fibfib33 = fibfib32 + fibfib31;\n        long fibfib34 = fibfib33 + fibfib32;\n
    \       long fibfib35 = fibfib34 + fibfib33;\n        long fibfib36 = fibfib35
    + fibfib34;\n        long fibfib37 = fibfib36 + fibfib35;\n        long \n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp894wkejn.cs(60,13): error CS1001: Identifier expected

    /tmp/tmp894wkejn.cs(60,13): error CS1002: ; expected

    '
  timestamp: 1659800026
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0 || n == 1) {\n            return 0;\n        }\n        long
    fibfib = 0;\n        long fibfib1 = Fibfib(n - 1);\n        long fibfib2 = Fibfib(n
    - 2);\n        long fibfib3 = Fibfib(n - 3);\n        fibfib = (fibfib1 + fibfib2
    + fibfib3);\n        return fibfib;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800032
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib2 = 1;\n        long fibfib3
    = 1;\n        long fibfib4 = 1;\n        long fibfib5 = 1;\n        long fibfib6
    = 1;\n        long fibfib7 = 1;\n        long fibfib8 = 1;\n        long fibfib9
    = 1;\n        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long fibfib12
    = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long fibfib15
    = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long fibfib18
    = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long fibfib21
    = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long fibfib24
    = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long fibfib27
    = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long fibfib30
    = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long fibfib33
    = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long fibfib36
    = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long fibfib39
    = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long fibfib42
    = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long fibfib45
    = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long fibfib48
    = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long fibfib51
    = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long fibfib54
    = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long fibfib57
    = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long fibfib60
    = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long fibfib63
    = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long fibfib66
    = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long fibfib69
    = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long fibfib72
    = 1;\n        long fibfib\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmr53gac0.cs(94,20): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfib1 + fibfib2 + fibfib3;\n
    \       long fibfib5 = fibfib4 + fibfib4;\n        long fibfib6 = fibfibfib5 +
    fibfib5;\n        long fibfib7 = fibfib6 + fibfib6;\n        long fibfib8 = fibfib7
    + fibfib7;\n        long fibfib9 = fibfib8 + fibfib8;\n        long fibfib10 =
    fibfib9 + fibfib9;\n        long fibfib11 = fibfib10 + fibfib10;\n        long
    fibfib12 = fibfib11 + fibfib11;\n        long fibfib13 = fibfib12 + fibfib12;\n
    \       long fibfib14 = fibfib13 + fibfib13;\n        long fibfib15 = fibfib14
    + fibfib14;\n        long fibfib16 = fibfib15 + fibfib15;\n        long fibfib17
    = fibfib16 + fibfib16;\n        long fibfib18 = fibfibfib17 + fibfib17;\n        long
    fibfib19 = fibfib18 + fibfib18;\n        long fibfib20 = fibfib19 + fibfib19;\n
    \       long fibfib21 = fibfib20 + fibfib20;\n        long fibfib22 = fibfib21
    + fibfib21;\n        long fibfib23 = fibfib22 + fibfib22;\n        long fibfib24
    = fibfib23 + fibfib23;\n        long fibfib25 = fibfib24 + fibfib24;\n        long
    fibfib26 = fibfib25 + fibfib25;\n        long fibfib27 = fibfib26 + fibfib26;\n
    \       long fibfib28 = fibfib27 + fibfib27;\n        long fibfib29 = fibfib28
    + fibfib28;\n        long fibfib30 = fibfib29 + fibfib29;\n        long fibfib31
    = fibfib30 + fibfib30;\n        long fibfib32 = fibfib31 + fibfib31;\n        long
    fibfib33 = fibfib32 + fibfib32;\n        long fibfib34 = fibfib33 + fibfib33;\n
    \       long fibfib35 = fibfib34 + fibfib34;\n        long fibfib36 = fibfib35
    + fibfib35;\n        long fibfib37 = fibfib36 + fibfib36\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_tnz6l7v.cs(59,44): error CS1002: ; expected

    '
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1 + fibfib2 +
    fibfib3;\n        long fibfib5 = fibfib4 + fibfib4;\n        long fibfib6 = fibfibfib5
    + fibfib5;\n        long fibfib7 = fibfib6 + fibfib6;\n        long fibfib8 =
    fibfib7 + fibfib7;\n        long fibfib9 = fibfib8 + fibfib8;\n        long fibfib10
    = fibfib9 + fibfib9;\n        long fibfib11 = fibfib10 + fibfib10;\n        long
    fibfib12 = fibfib11 + fibfib11;\n        long fibfib13 = fibfib12 + fibfib12;\n
    \       long fibfib14 = fibfib13 + fibfib13;\n        long fibfib15 = fibfib14
    + fibfib14;\n        long fibfib16 = fibfib15 + fibfib15;\n        long fibfib17
    = fibfib16 + fibfib16;\n        long fibfib18 = fibfibfib17 + fibfib17;\n        long
    fibfib19 = fibfib18 + fibfib18;\n        long fibfib20 = fibfib19 + fibfib19;\n
    \       long fibfib21 = fibfib20 + fibfib20;\n        long fibfib22 = fibfib21
    + fibfib21;\n        long fibfib23 = fibfib22 + fibfib22;\n        long fibfib24
    = fibfib23 + fibfib23;\n        long fibfib25 = fibfib24 + fibfib24;\n        long
    fibfib26 = fibfib25 + fibfib25;\n        long fibfib27 = fibfib26 + fibfib26;\n
    \       long fibfib28 = fibfib27 + fibfib27;\n        long fibfib29 = fibfib28
    + fibfib28;\n        long fibfib30 = fibfib29 + fibfib29;\n        long fibfib31
    = fibfib30 + fibfib30;\n        long fibfib32 = fibfib31 + fibfib31;\n        long
    fibfib33 = fibfib32 + fibfib32;\n        long fibfib34 = fibfib33 + fibfib33;\n
    \       long fibfib35 = fibfib34 + fibfib34;\n        long fibfib36 = fibfib35
    + fibfib35;\n        long fibfib37 = fibfib36 + fibfib36\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr8p6daj5.cs(59,44): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0)\n            return 0;\n        if (n == 1)\n            return
    1;\n        if (n == 2)\n            return 1;\n        return Fibfib(n - 1) +
    Fibfib(n - 2) + Fibfib(n - 3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f26753df594e4bb983aee5abd4424820>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f26753df594e4bb983aee5abd4424820>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0)\n            return 0;\n        if (n == 1)\n            return
    1;\n        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0)\n            return 0;\n        if (n == 1)\n            return
    1;\n        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        if (n == 3) return 1;\n        return Fibfib(n - 1)
    + Fibfib(n - 2) + Fibfib(n - 3);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94ddfa72c9744f26af5800d4aad4be24>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <94ddfa72c9744f26af5800d4aad4be24>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800027
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0 || n == 1)\n            return n;\n        return Fibfib(n-1)
    + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800032
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        else if (n == 1) {\n            fibfib = 0;\n        }\n        else
    if (n == 2) {\n            fibfib = 1;\n        }\n        else {\n            fibfib
    = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib2 = 1;\n        long fibfib3
    = 1;\n        long fibfib4 = 0;\n        long fibfib5 = 0;\n        long fibfib6
    = 0;\n        long fibfib7 = 0;\n        long fibfib8 = 0;\n        long fibfib9
    = 0;\n        long fibfib10 = 0;\n        long fibfib11 = 0;\n        long fibfib12
    = 0;\n        long fibfib13 = 0;\n        long fibfib14 = 0;\n        long fibfib15
    = 0;\n        long fibfib16 = 0;\n        long fibfib17 = 0;\n        long fibfib18
    = 0;\n        long fibfib19 = 0;\n        long fibfib20 = 0;\n        long fibfib21
    = 0;\n        long fibfib22 = 0;\n        long fibfib23 = 0;\n        long fibfib24
    = 0;\n        long fibfib25 = 0;\n        long fibfib26 = 0;\n        long fibfib27
    = 0;\n        long fibfib28 = 0;\n        long fibfib29 = 0;\n        long fibfib30
    = 0;\n        long fibfib31 = 0;\n        long fibfib32 = 0;\n        long fibfib33
    = 0;\n        long fibfib34 = 0;\n        long fibfib35 = 0;\n        long fibfib36
    = 0;\n        long fibfib37 = 0;\n        long fibfib38 = 0;\n        long fibfib39
    = 0;\n        long fibfib40 = 0;\n        long fibfib41 = 0;\n        long fibfib42
    = 0;\n        long fibfib43 = 0;\n        long fibfib44 = 0;\n        long fibfib45
    = 0;\n        long fibfib46 = 0;\n        long fibfib47 = 0;\n        long fibfib48
    = 0;\n        long fibfib49 = 0;\n        long fibfib50 = 0;\n        long fibfib51
    = 0;\n        long fibfib52 = 0;\n        long fibfib53 = 0;\n        long fibfib54
    = 0;\n        long fibfib55 = 0;\n        long fibfib56 = 0;\n        long fibfib57
    = 0;\n        long fibfib58 = 0;\n        long fibfib59 = 0;\n        long fibfib60
    = 0;\n        long fibfib61 = 0;\n        long fibfib62 = 0;\n        long fibfib63
    = 0;\n        long fibfib64 = 0;\n        long fibfib65 = 0;\n        long fibfib66
    = 0;\n        long fibfib67 = 0;\n        long fibfib68 = 0;\n        long fibfib69
    = 0;\n        long fibfib70 = 0;\n        long fibfib71 = 0;\n        long fibfib72
    = 0;\n        long fibfib73 = 0;\n        long fibfib74\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj7qt7dd5.cs(95,22): error CS1002: ; expected

    '
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0)\n            return 0;\n        if (n == 1)\n            return
    1;\n        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib2 = 0;\n        long fibfib3
    = 0;\n        long fibfib4 = 0;\n        long fibfib5 = 0;\n        long fibfib6
    = 0;\n        long fibfib7 = 0;\n        long fibfib8 = 0;\n        long fibfib9
    = 0;\n        long fibfib10 = 0;\n        long fibfib11 = 0;\n        long fibfib12
    = 0;\n        long fibfib13 = 0;\n        long fibfib14 = 0;\n        long fibfib15
    = 0;\n        long fibfib16 = 0;\n        long fibfib17 = 0;\n        long fibfib18
    = 0;\n        long fibfib19 = 0;\n        long fibfib20 = 0;\n        long fibfib21
    = 0;\n        long fibfib22 = 0;\n        long fibfib23 = 0;\n        long fibfib24
    = 0;\n        long fibfib25 = 0;\n        long fibfib26 = 0;\n        long fibfib27
    = 0;\n        long fibfib28 = 0;\n        long fibfib29 = 0;\n        long fibfib30
    = 0;\n        long fibfib31 = 0;\n        long fibfib32 = 0;\n        long fibfib33
    = 0;\n        long fibfib34 = 0;\n        long fibfib35 = 0;\n        long fibfib36
    = 0;\n        long fibfib37 = 0;\n        long fibfib38 = 0;\n        long fibfib39
    = 0;\n        long fibfib40 = 0;\n        long fibfib41 = 0;\n        long fibfib42
    = 0;\n        long fibfib43 = 0;\n        long fibfib44 = 0;\n        long fibfib45
    = 0;\n        long fibfib46 = 0;\n        long fibfib47 = 0;\n        long fibfib48
    = 0;\n        long fibfib49 = 0;\n        long fibfib50 = 0;\n        long fibfib51
    = 0;\n        long fibfib52 = 0;\n        long fibfib53 = 0;\n        long fibfib54
    = 0;\n        long fibfib55 = 0;\n        long fibfib56 = 0;\n        long fibfib57
    = 0;\n        long fibfib58 = 0;\n        long fibfib59 = 0;\n        long fibfib60
    = 0;\n        long fibfib61 = 0;\n        long fibfib62 = 0;\n        long fibfib63
    = 0;\n        long fibfib64 = 0;\n        long fibfib65 = 0;\n        long fibfib66
    = 0;\n        long fibfib67 = 0;\n        long fibfib68 = 0;\n        long fibfib69
    = 0;\n        long fibfib70 = 0;\n        long fibfib71 = 0;\n        long fibfib72
    = 0;\n        long fibfib73 = 0;\n        long fibfib74 = 0;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpugqpwpit.cs(22,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(23,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(24,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(25,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(26,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(27,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(28,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(29,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(30,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(31,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(32,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(33,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(34,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(35,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(36,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(37,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(38,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(39,14): warning CS0219: The variable ''fibfib18'' is assigned
    but its value i'
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib2 = 1;\n        long fibfib3
    = 1;\n        long fibfib4 = 1;\n        long fibfib5 = 1;\n        long fibfib6
    = 1;\n        long fibfib7 = 1;\n        long fibfib8 = 1;\n        long fibfib9
    = 1;\n        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long fibfib12
    = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long fibfib15
    = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long fibfib18
    = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long fibfib21
    = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long fibfib24
    = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long fibfib27
    = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long fibfib30
    = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long fibfib33
    = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long fibfib36
    = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long fibfib39
    = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long fibfib42
    = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long fibfib45
    = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long fibfib48
    = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long fibfib51
    = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long fibfib54
    = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long fibfib57
    = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long fibfib60
    = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long fibfib63
    = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long fibfib66
    = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long fibfib69
    = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long fibfib72
    = 1;\n        long fibfib\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmr53gac0.cs(94,20): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib7\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp98az0vck.cs(94,21): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0)\n            return 0;\n        if (n == 1)\n            return
    1;\n        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib2 = 1;\n        long fibfib3
    = 1;\n        long fibfib4 = 1;\n        long fibfib5 = 1;\n        long fibfib6
    = 1;\n        long fibfib7 = 1;\n        long fibfib8 = 1;\n        long fibfib9
    = 1;\n        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long fibfib12
    = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long fibfib15
    = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long fibfib18
    = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long fibfib21
    = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long fibfib24
    = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long fibfib27
    = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long fibfib30
    = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long fibfib33
    = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long fibfib36
    = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long fibfib39
    = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long fibfib42
    = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long fibfib45
    = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long fibfib48
    = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long fibfib51
    = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long fibfib54
    = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long fibfib57
    = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long fibfib60
    = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long fibfib63
    = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long fibfib66
    = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long fibfib69
    = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long fibfib72
    = 1;\n        long fibfib\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmr53gac0.cs(94,20): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1 + fibfib2 +
    fibfib3;\n        long fibfib5 = fibfib4 + fibfib4;\n        long fibfib6 = fibfibfib5
    + fibfib5;\n        long fibfib7 = fibfib6 + fibfib6;\n        long fibfib8 =
    fibfib7 + fibfib7;\n        long fibfib9 = fibfib8 + fibfib8;\n        long fibfib10
    = fibfib9 + fibfib9;\n        long fibfib11 = fibfib10 + fibfib10;\n        long
    fibfib12 = fibfib11 + fibfib11;\n        long fibfib13 = fibfib12 + fibfib12;\n
    \       long fibfib14 = fibfib13 + fibfib13;\n        long fibfib15 = fibfib14
    + fibfib14;\n        long fibfib16 = fibfib15 + fibfib15;\n        long fibfib17
    = fibfib16 + fibfib16;\n        long fibfib18 = fibfibfib17 + fibfib17;\n        long
    fibfib19 = fibfib18 + fibfib18;\n        long fibfib20 = fibfib19 + fibfib19;\n
    \       long fibfib21 = fibfib20 + fibfib20;\n        long fibfib22 = fibfib21
    + fibfib21;\n        long fibfib23 = fibfib22 + fibfib22;\n        long fibfib24
    = fibfib23 + fibfib23;\n        long fibfib25 = fibfib24 + fibfib24;\n        long
    fibfib26 = fibfib25 + fibfib25;\n        long fibfib27 = fibfib26 + fibfib26;\n
    \       long fibfib28 = fibfib27 + fibfib27;\n        long fibfib29 = fibfib28
    + fibfib28;\n        long fibfib30 = fibfib29 + fibfib29;\n        long fibfib31
    = fibfib30 + fibfib30;\n        long fibfib32 = fibfib31 + fibfib31;\n        long
    fibfib33 = fibfib32 + fibfib32;\n        long fibfib34 = fibfib33 + fibfib33;\n
    \       long fibfib35 = fibfib34 + fibfib34;\n        long fibfib36 = fibfib35
    + fibfib35;\n        long fibfib37 = fibfib36 + fibfib36\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr8p6daj5.cs(59,44): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib2 = 1;\n        long fibfib3
    = 1;\n        long fibfib4 = 0;\n        long fibfib5 = 0;\n        long fibfib6
    = 0;\n        long fibfib7 = 0;\n        long fibfib8 = 0;\n        long fibfib9
    = 0;\n        long fibfib10 = 0;\n        long fibfib11 = 0;\n        long fibfib12
    = 0;\n        long fibfib13 = 0;\n        long fibfib14 = 0;\n        long fibfib15
    = 0;\n        long fibfib16 = 0;\n        long fibfib17 = 0;\n        long fibfib18
    = 0;\n        long fibfib19 = 0;\n        long fibfib20 = 0;\n        long fibfib21
    = 0;\n        long fibfib22 = 0;\n        long fibfib23 = 0;\n        long fibfib24
    = 0;\n        long fibfib25 = 0;\n        long fibfib26 = 0;\n        long fibfib27
    = 0;\n        long fibfib28 = 0;\n        long fibfib29 = 0;\n        long fibfib30
    = 0;\n        long fibfib31 = 0;\n        long fibfib32 = 0;\n        long fibfib33
    = 0;\n        long fibfib34 = 0;\n        long fibfib35 = 0;\n        long fibfib36
    = 0;\n        long fibfib37 = 0;\n        long fibfib38 = 0;\n        long fibfib39
    = 0;\n        long fibfib40 = 0;\n        long fibfib41 = 0;\n        long fibfib42
    = 0;\n        long fibfib43 = 0;\n        long fibfib44 = 0;\n        long fibfib45
    = 0;\n        long fibfib46 = 0;\n        long fibfib47 = 0;\n        long fibfib48
    = 0;\n        long fibfib49 = 0;\n        long fibfib50 = 0;\n        long fibfib51
    = 0;\n        long fibfib52 = 0;\n        long fibfib53 = 0;\n        long fibfib54
    = 0;\n        long fibfib55 = 0;\n        long fibfib56 = 0;\n        long fibfib57
    = 0;\n        long fibfib58 = 0;\n        long fibfib59 = 0;\n        long fibfib60
    = 0;\n        long fibfib61 = 0;\n        long fibfib62 = 0;\n        long fibfib63
    = 0;\n        long fibfib64 = 0;\n        long fibfib65 = 0;\n        long fibfib66
    = 0;\n        long fibfib67 = 0;\n        long fibfib68 = 0;\n        long fibfib69
    = 0;\n        long fibfib70 = 0;\n        long fibfib71 = 0;\n        long fibfib72
    = 0;\n        long fibfib73 = 0;\n        long fibfib74\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj7qt7dd5.cs(95,22): error CS1002: ; expected

    '
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        else if (n == 1) {\n            fibfib = 0;\n        }\n        else
    if (n == 2) {\n            fibfib = 1;\n        }\n        else {\n            fibfib
    = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0)\n            return 0;\n        if (n == 1)\n            return
    1;\n        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       } else if (n == 1) {\n            fibfib = 0;\n        } else if (n ==
    2) {\n            fibfib = 1;\n        } else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0)\n            return 0;\n        if (n == 1)\n            return
    1;\n        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       } else if (n == 1) {\n            fibfib = 0;\n        } else if (n ==
    2) {\n            fibfib = 1;\n        } else {\n            fibfib = Fibfib(n
    - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib72 = \n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqhd29hvs.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpqhd29hvs.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0)\n            return 0;\n        if (n == 1)\n            return
    1;\n        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib72 = \n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqhd29hvs.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpqhd29hvs.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib72 = \n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqhd29hvs.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpqhd29hvs.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        if (n == 3) return 1;\n        return Fibfib(n-1)
    + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90f5ed367d1d4cdf895c7ef49724110c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90f5ed367d1d4cdf895c7ef49724110c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1;\n        long
    fibfib5 = fibfib2;\n        long fibfib6 = fibfibfib3;\n        long fibfib7 =
    fibfib4;\n        long fibfib8 = fibfib5;\n        long fibfib9 = fibfib6;\n        long
    fibfib10 = fibfib7;\n        long fibfib11 = fibfib8;\n        long fibfib12 =
    fibfib9;\n        long fibfib13 = fibfib10;\n        long fibfib14 = fibfib11;\n
    \       long fibfib15 = fibfib12;\n        long fibfib16 = fibfib13;\n        long
    fibfib17 = fibfib14;\n        long fibfib18 = fibfib15;\n        long fibfib19
    = fibfib16;\n        long fibfib20 = fibfib17;\n        long fibfib21 = fibfib18;\n
    \       long fibfib22 = fibfib19;\n        long fibfib23 = fibfib20;\n        long
    fibfib24 = fibfib21;\n        long fibfib25 = fibfib22;\n        long fibfib26
    = fibfib23;\n        long fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n
    \       long fibfib29 = fibfib26;\n        long fibfib30 = fibfib27;\n        long
    fibfib31 = fibfib28;\n        long fibfib32 = fibfib29;\n        long fibfib33
    = fibfib30;\n        long fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n
    \       long fibfib36 = fibfib33;\n        long fibfib37 = fibfib34;\n        long
    fibfib38 = fibfib35;\n        long fibfib39 = fibfib36;\n        long fibfib40
    = fibfib37;\n        long fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n
    \       long fibfib43 = fibfib40;\n        long fibfib44 = fibfib41;\n        long
    fibfib45 = fibfib42;\n        long fibfib46 = fibfib43;\n        long fibfib47
    = fibfib44;\n        long fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n
    \       long fibfib50 = fib\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps_b1x5wi.cs(72,28): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib2 = 1;\n        long fibfib3
    = 1;\n        long fibfib4 = 1;\n        long fibfib5 = 1;\n        long fibfib6
    = 1;\n        long fibfib7 = 1;\n        long fibfib8 = 1;\n        long fibfib9
    = 1;\n        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long fibfib12
    = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long fibfib15
    = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long fibfib18
    = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long fibfib21
    = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long fibfib24
    = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long fibfib27
    = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long fibfib30
    = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long fibfib33
    = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long fibfib36
    = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long fibfib39
    = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long fibfib42
    = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long fibfib45
    = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long fibfib48
    = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long fibfib51
    = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long fibfib54
    = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long fibfib57
    = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long fibfib60
    = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long fibfib63
    = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long fibfib66
    = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long fibfib69
    = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long fibfib72
    = 1;\n        long fibfib\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmr53gac0.cs(94,20): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n <= 3) return 0;\n        long fibfib = (long)Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc2g_6aj6.cs(23,1528): error CS1001: Identifier expected

    /tmp/tmpc2g_6aj6.cs(23,1528): error CS1026: ) expected

    /tmp/tmpc2g_6aj6.cs(23,1528): error CS1002: ; expected

    '
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0 || n == 1)\n            return n;\n        else\n            return
    Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800032
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1;\n        long
    fibfib5 = fibfib2;\n        long fibfib6 = fibfibfib3;\n        long fibfib7 =
    fibfib4;\n        long fibfib8 = fibfib5;\n        long fibfib9 = fibfib6;\n        long
    fibfib10 = fibfib7;\n        long fibfib11 = fibfib8;\n        long fibfib12 =
    fibfib9;\n        long fibfib13 = fibfib10;\n        long fibfib14 = fibfib11;\n
    \       long fibfib15 = fibfib12;\n        long fibfib16 = fibfib13;\n        long
    fibfib17 = fibfib14;\n        long fibfib18 = fibfib15;\n        long fibfib19
    = fibfib16;\n        long fibfib20 = fibfib17;\n        long fibfib21 = fibfib18;\n
    \       long fibfib22 = fibfib19;\n        long fibfib23 = fibfib20;\n        long
    fibfib24 = fibfib21;\n        long fibfib25 = fibfib22;\n        long fibfib26
    = fibfib23;\n        long fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n
    \       long fibfib29 = fibfib26;\n        long fibfib30 = fibfib27;\n        long
    fibfib31 = fibfib28;\n        long fibfib32 = fibfib29;\n        long fibfib33
    = fibfib30;\n        long fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n
    \       long fibfib36 = fibfib33;\n        long fibfib37 = fibfib34;\n        long
    fibfib38 = fibfib35;\n        long fibfib39 = fibfib36;\n        long fibfib40
    = fibfib37;\n        long fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n
    \       long fibfib43 = fibfib40;\n        long fibfib44 = fibfib41;\n        long
    fibfib45 = fibfib42;\n        long fibfib46 = fibfib43;\n        long fibfib47
    = fibfib44;\n        long fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n
    \       long fibfib50 = \n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprsmbnofa.cs(72,24): error CS1525: Invalid expression term ''}''

    /tmp/tmprsmbnofa.cs(72,24): error CS1002: ; expected

    '
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = fibfib;\n        long fibfib2
    = fibfib1;\n        long fibfib3 = fibfib2;\n        long fibfib4 = fibfib3;\n
    \       long fibfib5 = fibfib4;\n        long fibfib6 = fibfibfib5;\n        long
    fibfib7 = fibfib6;\n        long fibfib8 = fibfib7;\n        long fibfib9 = fibfib8;\n
    \       long fibfib10 = fibfib9;\n        long fibfib11 = fibfib10;\n        long
    fibfib12 = fibfib11;\n        long fibfib13 = fibfib12;\n        long fibfib14
    = fibfib13;\n        long fibfib15 = fibfib14;\n        long fibfib16 = fibfib15;\n
    \       long fibfib17 = fibfib16;\n        long fibfib18 = fibfib17;\n        long
    fibfib19 = fibfib18;\n        long fibfib20 = fibfib19;\n        long fibfib21
    = fibfib20;\n        long fibfib22 = fibfib21;\n        long fibfib23 = fibfib22;\n
    \       long fibfib24 = fibfib23;\n        long fibfib25 = fibfib24;\n        long
    fibfib26 = fibfib25;\n        long fibfib27 = fibfib26;\n        long fibfib28
    = fibfib27;\n        long fibfib29 = fibfib28;\n        long fibfib30 = fibfib29;\n
    \       long fibfib31 = fibfib30;\n        long fibfib32 = fibfib31;\n        long
    fibfib33 = fibfib32;\n        long fibfib34 = fibfib33;\n        long fibfib35
    = fibfib34;\n        long fibfib36 = fibfib35;\n        long fibfib37 = fibfib36;\n
    \       long fibfib38 = fibfib37;\n        long fibfib39 = fibfib38;\n        long
    fibfib40 = fibfib39;\n        long fibfib41 = fibfib40;\n        long fibfib42
    = fibfib41;\n        long fibfib43 = fibfib42;\n        long fibfib44 = fibfib43;\n
    \       long fibfib45 = fibfib44;\n        long fibfib46 = fibfib45;\n        long
    fibfib47 = fibfib46;\n        long fibfib48 = fibfib47;\n        long fibfib49
    = fibfib4\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpardeasvk.cs(71,32): error CS1002: ; expected

    '
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1;\n        long
    fibfib5 = fibfib2;\n        long fibfib6 = fibfibfib3;\n        long fibfib7 =
    fibfib4;\n        long fibfib8 = fibfib5;\n        long fibfib9 = fibfib6;\n        long
    fibfib10 = fibfib7;\n        long fibfib11 = fibfib8;\n        long fibfib12 =
    fibfib9;\n        long fibfib13 = fibfib10;\n        long fibfib14 = fibfib11;\n
    \       long fibfib15 = fibfib12;\n        long fibfib16 = fibfib13;\n        long
    fibfib17 = fibfib14;\n        long fibfib18 = fibfib15;\n        long fibfib19
    = fibfib16;\n        long fibfib20 = fibfib17;\n        long fibfib21 = fibfib18;\n
    \       long fibfib22 = fibfib19;\n        long fibfib23 = fibfib20;\n        long
    fibfib24 = fibfib21;\n        long fibfib25 = fibfib22;\n        long fibfib26
    = fibfib23;\n        long fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n
    \       long fibfib29 = fibfib26;\n        long fibfib30 = fibfib27;\n        long
    fibfib31 = fibfib28;\n        long fibfib32 = fibfib29;\n        long fibfib33
    = fibfib30;\n        long fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n
    \       long fibfib36 = fibfib33;\n        long fibfib37 = fibfib34;\n        long
    fibfib38 = fibfib35;\n        long fibfib39 = fibfib36;\n        long fibfib40
    = fibfib37;\n        long fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n
    \       long fibfib43 = fibfib40;\n        long fibfib44 = fibfib41;\n        long
    fibfib45 = fibfib42;\n        long fibfib46 = fibfib43;\n        long fibfib47
    = fibfib44;\n        long fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n
    \       long fibfib50 = fib\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps_b1x5wi.cs(72,28): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        if (n % 2 == 0) return Fibfib(n / 2) + Fibfib(n /
    2);\n        else return Fibfib(n / 2) + Fibfib(3 * n + 1);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0cab05f179dc42dd9f1193b588f6c56d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0cab05f179dc42dd9f1193b588f6c56d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib2 = 1;\n        long fibfib3
    = 1;\n        long fibfib4 = 1;\n        long fibfib5 = 1;\n        long fibfib6
    = 1;\n        long fibfib7 = 1;\n        long fibfib8 = 1;\n        long fibfib9
    = 1;\n        long fibfib10 = 1;\n        long fibfib11 = 1;\n        long fibfib12
    = 1;\n        long fibfib13 = 1;\n        long fibfib14 = 1;\n        long fibfib15
    = 1;\n        long fibfib16 = 1;\n        long fibfib17 = 1;\n        long fibfib18
    = 1;\n        long fibfib19 = 1;\n        long fibfib20 = 1;\n        long fibfib21
    = 1;\n        long fibfib22 = 1;\n        long fibfib23 = 1;\n        long fibfib24
    = 1;\n        long fibfib25 = 1;\n        long fibfib26 = 1;\n        long fibfib27
    = 1;\n        long fibfib28 = 1;\n        long fibfib29 = 1;\n        long fibfib30
    = 1;\n        long fibfib31 = 1;\n        long fibfib32 = 1;\n        long fibfib33
    = 1;\n        long fibfib34 = 1;\n        long fibfib35 = 1;\n        long fibfib36
    = 1;\n        long fibfib37 = 1;\n        long fibfib38 = 1;\n        long fibfib39
    = 1;\n        long fibfib40 = 1;\n        long fibfib41 = 1;\n        long fibfib42
    = 1;\n        long fibfib43 = 1;\n        long fibfib44 = 1;\n        long fibfib45
    = 1;\n        long fibfib46 = 1;\n        long fibfib47 = 1;\n        long fibfib48
    = 1;\n        long fibfib49 = 1;\n        long fibfib50 = 1;\n        long fibfib51
    = 1;\n        long fibfib52 = 1;\n        long fibfib53 = 1;\n        long fibfib54
    = 1;\n        long fibfib55 = 1;\n        long fibfib56 = 1;\n        long fibfib57
    = 1;\n        long fibfib58 = 1;\n        long fibfib59 = 1;\n        long fibfib60
    = 1;\n        long fibfib61 = 1;\n        long fibfib62 = 1;\n        long fibfib63
    = 1;\n        long fibfib64 = 1;\n        long fibfib65 = 1;\n        long fibfib66
    = 1;\n        long fibfib67 = 1;\n        long fibfib68 = 1;\n        long fibfib69
    = 1;\n        long fibfib70 = 1;\n        long fibfib71 = 1;\n        long fibfib72
    = 1;\n        long fibfib\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmr53gac0.cs(94,20): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = fibfib;\n        long fibfib2
    = fibfib1;\n        long fibfib3 = fibfib2;\n        long fibfib4 = fibfib3;\n
    \       long fibfib5 = fibfib4;\n        long fibfib6 = fibfib5;\n        long
    fibfib7 = fibfib6;\n        long fibfib8 = fibfib7;\n        long fibfib9 = fibfib8;\n
    \       long fibfib10 = fibfib9;\n        long fibfib11 = fibfib10;\n        long
    fibfib12 = fibfib11;\n        long fibfib13 = fibfib12;\n        long fibfib14
    = fibfib13;\n        long fibfib15 = fibfib14;\n        long fibfib16 = fibfib15;\n
    \       long fibfib17 = fibfib16;\n        long fibfib18 = fibfib17;\n        long
    fibfib19 = fibfib18;\n        long fibfib20 = fibfib19;\n        long fibfib21
    = fibfib20;\n        long fibfib22 = fibfib21;\n        long fibfib23 = fibfib22;\n
    \       long fibfib24 = fibfib23;\n        long fibfib25 = fibfib24;\n        long
    fibfib26 = fibfib25;\n        long fibfib27 = fibfib26;\n        long fibfib28
    = fibfib27;\n        long fibfib29 = fibfib28;\n        long fibfib30 = fibfib29;\n
    \       long fibfib31 = fibfib30;\n        long fibfib32 = fibfib31;\n        long
    fibfib33 = fibfib32;\n        long fibfib34 = fibfib33;\n        long fibfib35
    = fibfib34;\n        long fibfib36 = fibfib35;\n        long fibfib37 = fibfib36;\n
    \       long fibfib38 = fibfib37;\n        long fibfib39 = fibfib38;\n        long
    fibfib40 = fibfib39;\n        long fibfib41 = fibfib40;\n        long fibfib42
    = fibfib41;\n        long fibfib43 = fibfib42;\n        long fibfib44 = fibfib43;\n
    \       long fibfib45 = fibfib44;\n        long fibfib46 = fibfib45;\n        long
    fibfib47 = fibfib46;\n        long fibfib48 = fibfib47;\n        long fibfib49
    = fibfib48;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpe403gwnt.cs(21,24): error CS0161: ''Problem.Fibfib(long)'': not all code
    paths return a value

    '
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1 + fibfib2;\n
    \       long fibfib5 = fibfib3 + fibfib4;\n        long fibfib6 = fibfibfib5 +
    fibfib4;\n        long fibfib7 = fibfib6 + fibfib5;\n        long fibfib8 = fibfib7
    + fibfib6;\n        long fibfib9 = fibfib8 + fibfib7;\n        long fibfib10 =
    fibfib9 + fibfib8;\n        long fibfib11 = fibfib10 + fibfib9;\n        long
    fibfib12 = fibfib11 + fibfib10;\n        long fibfib13 = fibfib12 + fibfib11;\n
    \       long fibfib14 = fibfib13 + fibfib12;\n        long fibfib15 = fibfib14
    + fibfib13;\n        long fibfib16 = fibfib15 + fibfib14;\n        long fibfib17
    = fibfib16 + fibfib15;\n        long fibfib18 = fibfibfib17 + fibfib16;\n        long
    fibfib19 = fibfib18 + fibfib17;\n        long fibfib20 = fibfib19 + fibfib18;\n
    \       long fibfib21 = fibfib20 + fibfib19;\n        long fibfib22 = fibfib21
    + fibfib20;\n        long fibfib23 = fibfib22 + fibfib21;\n        long fibfib24
    = fibfib23 + fibfib22;\n        long fibfib25 = fibfib24 + fibfib23;\n        long
    fibfib26 = fibfib25 + fibfib24;\n        long fibfib27 = fibfib26 + fibfib25;\n
    \       long fibfib28 = fibfib27 + fibfib26;\n        long fibfib29 = fibfib28
    + fibfib27;\n        long fibfib30 = fibfib29 + fibfib28;\n        long fibfib31
    = fibfib30 + fibfib29;\n        long fibfib32 = fibfib31 + fibfib30;\n        long
    fibfib33 = fibfib32 + fibfib31;\n        long fibfib34 = fibfib33 + fibfib32;\n
    \       long fibfib35 = fibfib34 + fibfib33;\n        long fibfib36 = fibfib35
    + fibfib34;\n        long fibfib37 = fibfib36 + fibfib35;\n        long \n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) ==
    (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp894wkejn.cs(60,13): error CS1001: Identifier expected

    /tmp/tmp894wkejn.cs(60,13): error CS1002: ; expected

    '
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1;\n        long
    fibfib5 = fibfib2;\n        long fibfib6 = fibfibfib3;\n        long fibfib7 =
    fibfib4;\n        long fibfib8 = fibfib5;\n        long fibfib9 = fibfib6;\n        long
    fibfib10 = fibfib7;\n        long fibfib11 = fibfib8;\n        long fibfib12 =
    fibfib9;\n        long fibfib13 = fibfib10;\n        long fibfib14 = fibfib11;\n
    \       long fibfib15 = fibfib12;\n        long fibfib16 = fibfib13;\n        long
    fibfib17 = fibfib14;\n        long fibfib18 = fibfib15;\n        long fibfib19
    = fibfib16;\n        long fibfib20 = fibfib17;\n        long fibfib21 = fibfib18;\n
    \       long fibfib22 = fibfib19;\n        long fibfib23 = fibfib20;\n        long
    fibfib24 = fibfib21;\n        long fibfib25 = fibfib22;\n        long fibfib26
    = fibfib23;\n        long fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n
    \       long fibfib29 = fibfib26;\n        long fibfib30 = fibfib27;\n        long
    fibfib31 = fibfib28;\n        long fibfib32 = fibfib29;\n        long fibfib33
    = fibfib30;\n        long fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n
    \       long fibfib36 = fibfib33;\n        long fibfib37 = fibfib34;\n        long
    fibfib38 = fibfib35;\n        long fibfib39 = fibfib36;\n        long fibfib40
    = fibfib37;\n        long fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n
    \       long fibfib43 = fibfib40;\n        long fibfib44 = fibfib41;\n        long
    fibfib45 = fibfib42;\n        long fibfib46 = fibfib43;\n        long fibfib47
    = fibfib44;\n        long fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n
    \       long fibfib50 = fib\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps_b1x5wi.cs(72,28): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib7\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp98az0vck.cs(94,21): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n < 0) throw new ArgumentOutOfRangeException(\"n\");\n        if
    (n == 0) return 0;\n        if (n == 1) return 1;\n        if (n == 2) return
    1;\n        return Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1f533746233e4478926726e9008ff02d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1f533746233e4478926726e9008ff02d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1 + fibfib2 +
    fibfib3;\n        long fibfib5 = fibfib4 + fibfib4;\n        long fibfib6 = fibfibfib5
    + fibfib5;\n        long fibfib7 = fibfib6 + fibfib6;\n        long fibfib8 =
    fibfib7 + fibfib7;\n        long fibfib9 = fibfib8 + fibfib8;\n        long fibfib10
    = fibfib9 + fibfib9;\n        long fibfib11 = fibfib10 + fibfib10;\n        long
    fibfib12 = fibfib11 + fibfib11;\n        long fibfib13 = fibfib12 + fibfib12;\n
    \       long fibfib14 = fibfib13 + fibfib13;\n        long fibfib15 = fibfib14
    + fibfib14;\n        long fibfib16 = fibfib15 + fibfib15;\n        long fibfib17
    = fibfib16 + fibfib16;\n        long fibfib18 = fibfibfib17 + fibfib17;\n        long
    fibfib19 = fibfib18 + fibfib18;\n        long fibfib20 = fibfib19 + fibfib19;\n
    \       long fibfib21 = fibfib20 + fibfib20;\n        long fibfib22 = fibfib21
    + fibfib21;\n        long fibfib23 = fibfib22 + fibfib22;\n        long fibfib24
    = fibfib23 + fibfib23;\n        long fibfib25 = fibfib24 + fibfib24;\n        long
    fibfib26 = fibfib25 + fibfib25;\n        long fibfib27 = fibfib26 + fibfib26;\n
    \       long fibfib28 = fibfib27 + fibfib27;\n        long fibfib29 = fibfib28
    + fibfib28;\n        long fibfib30 = fibfib29 + fibfib29;\n        long fibfib31
    = fibfib30 + fibfib30;\n        long fibfib32 = fibfib31 + fibfib31;\n        long
    fibfib33 = fibfib32 + fibfib32;\n        long fibfib34 = fibfib33 + fibfib33;\n
    \       long fibfib35 = fibfib34 + fibfib34;\n        long fibfib36 = fibfib35
    + fibfib35;\n        long fibfib37 = fibfib36 + fibfib36\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr8p6daj5.cs(59,44): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1 + fibfib2 +
    fibfib3;\n        long fibfib5 = fibfib4 + fibfib4;\n        long fibfib6 = fibfibfib5
    + fibfib5;\n        long fibfib7 = fibfib6 + fibfib6;\n        long fibfib8 =
    fibfib7 + fibfib7;\n        long fibfib9 = fibfib8 + fibfib8;\n        long fibfib10
    = fibfib9 + fibfib9;\n        long fibfib11 = fibfib10 + fibfib10;\n        long
    fibfib12 = fibfib11 + fibfib11;\n        long fibfib13 = fibfib12 + fibfib12;\n
    \       long fibfib14 = fibfib13 + fibfib13;\n        long fibfib15 = fibfib14
    + fibfib14;\n        long fibfib16 = fibfib15 + fibfib15;\n        long fibfib17
    = fibfib16 + fibfib16;\n        long fibfib18 = fibfibfib17 + fibfib17;\n        long
    fibfib19 = fibfib18 + fibfib18;\n        long fibfib20 = fibfib19 + fibfib19;\n
    \       long fibfib21 = fibfib20 + fibfib20;\n        long fibfib22 = fibfib21
    + fibfib21;\n        long fibfib23 = fibfib22 + fibfib22;\n        long fibfib24
    = fibfib23 + fibfib23;\n        long fibfib25 = fibfib24 + fibfib24;\n        long
    fibfib26 = fibfib25 + fibfib25;\n        long fibfib27 = fibfib26 + fibfib26;\n
    \       long fibfib28 = fibfib27 + fibfib27;\n        long fibfib29 = fibfib28
    + fibfib28;\n        long fibfib30 = fibfib29 + fibfib29;\n        long fibfib31
    = fibfib30 + fibfib30;\n        long fibfib32 = fibfib31 + fibfib31;\n        long
    fibfib33 = fibfib32 + fibfib32;\n        long fibfib34 = fibfib33 + fibfib33;\n
    \       long fibfib35 = fibfib34 + fibfib34;\n        long fibfib36 = fibfib35
    + fibfib35;\n        long fibfib37 = fibfib36 + fibfib36\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr8p6daj5.cs(59,44): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 0;\n        long fibfib2
    = 0;\n        long fibfib3 = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        if (n == 1) {\n            fibfib = 1;\n        }\n        if
    (n == 2) {\n            fibfib = 1;\n        }\n        if (n >= 3) {\n            fibfib1
    = Fibfib(n - 1);\n            fibfib2 = Fibfib(n - 2);\n            fibfib3 =
    Fibfib(n - 3);\n            fibfib = fibfib1 + fibfib2 + fibfib3;\n        }\n
    \       return fibfib;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <44a5b5979a584c6c944a80fe345319a1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <44a5b5979a584c6c944a80fe345319a1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib72 = \n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqhd29hvs.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpqhd29hvs.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n < 3) {\n            return 0;\n        }\n        long fibfib
    = (long) Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(Math.Pow(\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph4hp1u5j.cs(25,1515): error CS1026: ) expected

    /tmp/tmph4hp1u5j.cs(25,1515): error CS1002: ; expected

    '
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0)\n            return 0;\n        if (n == 1)\n            return
    1;\n        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        if (n == 1) {\n            fibfib = 0;\n        }\n        if
    (n == 2) {\n            fibfib = 1;\n        }\n        if (n >= 3) {\n            fibfib
    = fibfib + Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return
    fibfib;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib72 = \n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqhd29hvs.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpqhd29hvs.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0)\n            return 0;\n        if (n == 1)\n            return
    1;\n        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1;\n        long
    fibfib5 = fibfib2;\n        long fibfib6 = fibfibfib3;\n        long fibfib7 =
    fibfib4;\n        long fibfib8 = fibfib5;\n        long fibfib9 = fibfib6;\n        long
    fibfib10 = fibfib7;\n        long fibfib11 = fibfib8;\n        long fibfib12 =
    fibfib9;\n        long fibfib13 = fibfib10;\n        long fibfib14 = fibfib11;\n
    \       long fibfib15 = fibfib12;\n        long fibfib16 = fibfib13;\n        long
    fibfib17 = fibfib14;\n        long fibfib18 = fibfib15;\n        long fibfib19
    = fibfib16;\n        long fibfib20 = fibfib17;\n        long fibfib21 = fibfib18;\n
    \       long fibfib22 = fibfib19;\n        long fibfib23 = fibfib20;\n        long
    fibfib24 = fibfib21;\n        long fibfib25 = fibfib22;\n        long fibfib26
    = fibfib23;\n        long fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n
    \       long fibfib29 = fibfib26;\n        long fibfib30 = fibfib27;\n        long
    fibfib31 = fibfib28;\n        long fibfib32 = fibfib29;\n        long fibfib33
    = fibfib30;\n        long fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n
    \       long fibfib36 = fibfib33;\n        long fibfib37 = fibfib34;\n        long
    fibfib38 = fibfib35;\n        long fibfib39 = fibfib36;\n        long fibfib40
    = fibfib37;\n        long fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n
    \       long fibfib43 = fibfib40;\n        long fibfib44 = fibfib41;\n        long
    fibfib45 = fibfib42;\n        long fibfib46 = fibfib43;\n        long fibfib47
    = fibfib44;\n        long fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n
    \       long fibfib50 = fib\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps_b1x5wi.cs(72,28): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib2 = 1;\n        long fibfib3
    = 1;\n        long fibfib4 = 0;\n        long fibfib5 = 0;\n        long fibfib6
    = 0;\n        long fibfib7 = 0;\n        long fibfib8 = 0;\n        long fibfib9
    = 0;\n        long fibfib10 = 0;\n        long fibfib11 = 0;\n        long fibfib12
    = 0;\n        long fibfib13 = 0;\n        long fibfib14 = 0;\n        long fibfib15
    = 0;\n        long fibfib16 = 0;\n        long fibfib17 = 0;\n        long fibfib18
    = 0;\n        long fibfib19 = 0;\n        long fibfib20 = 0;\n        long fibfib21
    = 0;\n        long fibfib22 = 0;\n        long fibfib23 = 0;\n        long fibfib24
    = 0;\n        long fibfib25 = 0;\n        long fibfib26 = 0;\n        long fibfib27
    = 0;\n        long fibfib28 = 0;\n        long fibfib29 = 0;\n        long fibfib30
    = 0;\n        long fibfib31 = 0;\n        long fibfib32 = 0;\n        long fibfib33
    = 0;\n        long fibfib34 = 0;\n        long fibfib35 = 0;\n        long fibfib36
    = 0;\n        long fibfib37 = 0;\n        long fibfib38 = 0;\n        long fibfib39
    = 0;\n        long fibfib40 = 0;\n        long fibfib41 = 0;\n        long fibfib42
    = 0;\n        long fibfib43 = 0;\n        long fibfib44 = 0;\n        long fibfib45
    = 0;\n        long fibfib46 = 0;\n        long fibfib47 = 0;\n        long fibfib48
    = 0;\n        long fibfib49 = 0;\n        long fibfib50 = 0;\n        long fibfib51
    = 0;\n        long fibfib52 = 0;\n        long fibfib53 = 0;\n        long fibfib54
    = 0;\n        long fibfib55 = 0;\n        long fibfib56 = 0;\n        long fibfib57
    = 0;\n        long fibfib58 = 0;\n        long fibfib59 = 0;\n        long fibfib60
    = 0;\n        long fibfib61 = 0;\n        long fibfib62 = 0;\n        long fibfib63
    = 0;\n        long fibfib64 = 0;\n        long fibfib65 = 0;\n        long fibfib66
    = 0;\n        long fibfib67 = 0;\n        long fibfib68 = 0;\n        long fibfib69
    = 0;\n        long fibfib70 = 0;\n        long fibfib71 = 0;\n        long fibfib72
    = 0;\n        long fibfib73 = 0;\n        long fibfib74\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj7qt7dd5.cs(95,22): error CS1002: ; expected

    '
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0 || n == 1) {\n            return n;\n        }\n        long
    fibfib = (long) Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        return
    fibfib;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800031
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0)\n            return 0;\n        if (n == 1)\n            return
    1;\n        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1 + fibfib2 +
    fibfib3;\n        long fibfib5 = fibfib4 + fibfib4;\n        long fibfib6 = fibfibfib5
    + fibfib5;\n        long fibfib7 = fibfib6 + fibfib6;\n        long fibfib8 =
    fibfib7 + fibfib7;\n        long fibfib9 = fibfib8 + fibfib8;\n        long fibfib10
    = fibfib9 + fibfib9;\n        long fibfib11 = fibfib10 + fibfib10;\n        long
    fibfib12 = fibfib11 + fibfib11;\n        long fibfib13 = fibfib12 + fibfib12;\n
    \       long fibfib14 = fibfib13 + fibfib13;\n        long fibfib15 = fibfib14
    + fibfib14;\n        long fibfib16 = fibfib15 + fibfib15;\n        long fibfib17
    = fibfib16 + fibfib16;\n        long fibfib18 = fibfibfib17 + fibfib17;\n        long
    fibfib19 = fibfib18 + fibfib18;\n        long fibfib20 = fibfib19 + fibfib19;\n
    \       long fibfib21 = fibfib20 + fibfib20;\n        long fibfib22 = fibfib21
    + fibfib21;\n        long fibfib23 = fibfib22 + fibfib22;\n        long fibfib24
    = fibfib23 + fibfib23;\n        long fibfib25 = fibfib24 + fibfib24;\n        long
    fibfib26 = fibfib25 + fibfib25;\n        long fibfib27 = fibfib26 + fibfib26;\n
    \       long fibfib28 = fibfib27 + fibfib27;\n        long fibfib29 = fibfib28
    + fibfib28;\n        long fibfib30 = fibfib29 + fibfib29;\n        long fibfib31
    = fibfib30 + fibfib30;\n        long fibfib32 = fibfib31 + fibfib31;\n        long
    fibfib33 = fibfib32 + fibfib32;\n        long fibfib34 = fibfib33 + fibfib33;\n
    \       long fibfib35 = fibfib34 + fibfib34;\n        long fibfib36 = fibfib35
    + fibfib35;\n        long fibfib37 = fibfib36 + fibfib36\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr8p6daj5.cs(59,44): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        else if (n == 1) {\n            fibfib = 0;\n        }\n        else
    if (n == 2) {\n            fibfib = 1;\n        }\n        else {\n            fibfib
    = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0L;\n        if (n == 1) return 1L;\n        if
    (n == 2) return 1L;\n        if (n == 3) return 1L;\n        if (n == 4) return
    2L;\n        if (n == 5) return 3L;\n        if (n == 6) return 5L;\n        if
    (n == 7) return 8L;\n        if (n == 8) return 13L;\n        if (n == 9) return
    21L;\n        if (n == 10) return 34L;\n        if (n == 11) return 55L;\n        if
    (n == 12) return 89L;\n        if (n == 13) return 144L;\n        if (n == 14)
    return 233L;\n        if (n == 15) return 377L;\n        if (n == 16) return 610L;\n
    \       if (n == 17) return 987L;\n        if (n == 18) return 1597L;\n        if
    (n == 19) return 2584L;\n        if (n == 20) return 4181L;\n        if (n ==
    21) return 6765L;\n        if (n == 22) return 10946L;\n        if (n == 23) return
    17711L;\n        if (n == 24) return 28657L;\n        if (n == 25) return 46368L;\n
    \       if (n == 26) return 75025L;\n        if (n == 27) return 121393L;\n        if
    (n == 28) return 196418L;\n        if (n == 29) return 317811L;\n        if (n
    == 30) return 514229L;\n        if (n == 31) return 832040L;\n        if (n ==
    32) return 1346269L;\n        if (n == 33) return 2178309L;\n        if (n ==
    34) return 3524578L;\n        if (n == 35) return 5702887L;\n        if (n ==
    36) return 9227465L;\n        if (n == 37) return 14930352L;\n        if (n ==
    38) return 24157817L;\n        if (n == 39) return 39088169L;\n        if (n ==
    40) return 63245986L;\n        if (n == 41) return 126971467L;\n        if (n
    == 42) return 251658243L;\n        if (n == 43) return 50331653L;\n        if
    (n == 44) return 78457126L;\n        if (n == 45) return 129614843L;\n        if
    (n == 46) return 193922967L;\n        if (n == 47) return 317587116L;\n        if
    (n == 48) return 56844641L;\n        if (n == 49) return 91880337L;\n        if
    (n == 50) return 154800873L;\n        if (n == 51) return 250475516L;\n        if
    (n == 52) return 50331653L;\n        if (n == 53\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpunloyors.cs(75,20): error CS1026: ) expected

    /tmp/tmpunloyors.cs(75,20): error CS1525: Invalid expression term ''}''

    /tmp/tmpunloyors.cs(75,20): error CS1002: ; expected

    '
  timestamp: 1659800027
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n <= 3) return 0L;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28fe27be89c5472bad71775a1062d3ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <28fe27be89c5472bad71775a1062d3ce>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        else if (n == 1) {\n            fibfib = 0;\n        }\n        else
    if (n == 2) {\n            fibfib = 1;\n        }\n        else {\n            fibfib
    = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0)\n            return 0;\n        if (n == 1)\n            return
    1;\n        if (n == 2)\n            return 1;\n        return Fibfib(n-1) + Fibfib(n-2)
    + Fibfib(n-3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bd9fb3d072d24b2c95af6946aa933af2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1;\n        long
    fibfib5 = fibfib2;\n        long fibfib6 = fibfibfib3;\n        long fibfib7 =
    fibfib4;\n        long fibfib8 = fibfib5;\n        long fibfib9 = fibfib6;\n        long
    fibfib10 = fibfib7;\n        long fibfib11 = fibfib8;\n        long fibfib12 =
    fibfib9;\n        long fibfib13 = fibfib10;\n        long fibfib14 = fibfib11;\n
    \       long fibfib15 = fibfib12;\n        long fibfib16 = fibfib13;\n        long
    fibfib17 = fibfib14;\n        long fibfib18 = fibfib15;\n        long fibfib19
    = fibfib16;\n        long fibfib20 = fibfib17;\n        long fibfib21 = fibfib18;\n
    \       long fibfib22 = fibfib19;\n        long fibfib23 = fibfib20;\n        long
    fibfib24 = fibfib21;\n        long fibfib25 = fibfib22;\n        long fibfib26
    = fibfib23;\n        long fibfib27 = fibfib24;\n        long fibfib28 = fibfib25;\n
    \       long fibfib29 = fibfib26;\n        long fibfib30 = fibfib27;\n        long
    fibfib31 = fibfib28;\n        long fibfib32 = fibfib29;\n        long fibfib33
    = fibfib30;\n        long fibfib34 = fibfib31;\n        long fibfib35 = fibfib32;\n
    \       long fibfib36 = fibfib33;\n        long fibfib37 = fibfib34;\n        long
    fibfib38 = fibfib35;\n        long fibfib39 = fibfib36;\n        long fibfib40
    = fibfib37;\n        long fibfib41 = fibfib38;\n        long fibfib42 = fibfib39;\n
    \       long fibfib43 = fibfib40;\n        long fibfib44 = fibfib41;\n        long
    fibfib45 = fibfib42;\n        long fibfib46 = fibfib43;\n        long fibfib47
    = fibfib44;\n        long fibfib48 = fibfib45;\n        long fibfib49 = fibfib46;\n
    \       long fibfib50 = fib\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps_b1x5wi.cs(72,28): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0 || n == 1)\n            return n;\n        return Fibfib(n-1)
    + Fibfib(n-2) + Fibfib(n-3);\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659800032
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib2 = 0;\n        long fibfib3
    = 0;\n        long fibfib4 = 0;\n        long fibfib5 = 0;\n        long fibfib6
    = 0;\n        long fibfib7 = 0;\n        long fibfib8 = 0;\n        long fibfib9
    = 0;\n        long fibfib10 = 0;\n        long fibfib11 = 0;\n        long fibfib12
    = 0;\n        long fibfib13 = 0;\n        long fibfib14 = 0;\n        long fibfib15
    = 0;\n        long fibfib16 = 0;\n        long fibfib17 = 0;\n        long fibfib18
    = 0;\n        long fibfib19 = 0;\n        long fibfib20 = 0;\n        long fibfib21
    = 0;\n        long fibfib22 = 0;\n        long fibfib23 = 0;\n        long fibfib24
    = 0;\n        long fibfib25 = 0;\n        long fibfib26 = 0;\n        long fibfib27
    = 0;\n        long fibfib28 = 0;\n        long fibfib29 = 0;\n        long fibfib30
    = 0;\n        long fibfib31 = 0;\n        long fibfib32 = 0;\n        long fibfib33
    = 0;\n        long fibfib34 = 0;\n        long fibfib35 = 0;\n        long fibfib36
    = 0;\n        long fibfib37 = 0;\n        long fibfib38 = 0;\n        long fibfib39
    = 0;\n        long fibfib40 = 0;\n        long fibfib41 = 0;\n        long fibfib42
    = 0;\n        long fibfib43 = 0;\n        long fibfib44 = 0;\n        long fibfib45
    = 0;\n        long fibfib46 = 0;\n        long fibfib47 = 0;\n        long fibfib48
    = 0;\n        long fibfib49 = 0;\n        long fibfib50 = 0;\n        long fibfib51
    = 0;\n        long fibfib52 = 0;\n        long fibfib53 = 0;\n        long fibfib54
    = 0;\n        long fibfib55 = 0;\n        long fibfib56 = 0;\n        long fibfib57
    = 0;\n        long fibfib58 = 0;\n        long fibfib59 = 0;\n        long fibfib60
    = 0;\n        long fibfib61 = 0;\n        long fibfib62 = 0;\n        long fibfib63
    = 0;\n        long fibfib64 = 0;\n        long fibfib65 = 0;\n        long fibfib66
    = 0;\n        long fibfib67 = 0;\n        long fibfib68 = 0;\n        long fibfib69
    = 0;\n        long fibfib70 = 0;\n        long fibfib71 = 0;\n        long fibfib72
    = 0;\n        long fibfib73 = 0;\n        long fibfib74 = 0;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpugqpwpit.cs(22,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(23,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(24,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(25,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(26,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(27,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(28,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(29,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(30,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(31,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(32,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(33,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(34,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(35,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(36,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(37,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(38,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(39,14): warning CS0219: The variable ''fibfib18'' is assigned
    but its value i'
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0 || n == 1)\n            return n;\n        if (n == 2)\n
    \           return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58585dd49a9742dbb3acf23e0a65949e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <58585dd49a9742dbb3acf23e0a65949e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = 1;\n        long fibfib5
    = 1;\n        long fibfib6 = 1;\n        long fibfib7 = 1;\n        long fibfib8
    = 1;\n        long fibfib9 = 1;\n        long fibfib10 = 1;\n        long fibfib11
    = 1;\n        long fibfib12 = 1;\n        long fibfib13 = 1;\n        long fibfib14
    = 1;\n        long fibfib15 = 1;\n        long fibfib16 = 1;\n        long fibfib17
    = 1;\n        long fibfib18 = 1;\n        long fibfib19 = 1;\n        long fibfib20
    = 1;\n        long fibfib21 = 1;\n        long fibfib22 = 1;\n        long fibfib23
    = 1;\n        long fibfib24 = 1;\n        long fibfib25 = 1;\n        long fibfib26
    = 1;\n        long fibfib27 = 1;\n        long fibfib28 = 1;\n        long fibfib29
    = 1;\n        long fibfib30 = 1;\n        long fibfib31 = 1;\n        long fibfib32
    = 1;\n        long fibfib33 = 1;\n        long fibfib34 = 1;\n        long fibfib35
    = 1;\n        long fibfib36 = 1;\n        long fibfib37 = 1;\n        long fibfib38
    = 1;\n        long fibfib39 = 1;\n        long fibfib40 = 1;\n        long fibfib41
    = 1;\n        long fibfib42 = 1;\n        long fibfib43 = 1;\n        long fibfib44
    = 1;\n        long fibfib45 = 1;\n        long fibfib46 = 1;\n        long fibfib47
    = 1;\n        long fibfib48 = 1;\n        long fibfib49 = 1;\n        long fibfib50
    = 1;\n        long fibfib51 = 1;\n        long fibfib52 = 1;\n        long fibfib53
    = 1;\n        long fibfib54 = 1;\n        long fibfib55 = 1;\n        long fibfib56
    = 1;\n        long fibfib57 = 1;\n        long fibfib58 = 1;\n        long fibfib59
    = 1;\n        long fibfib60 = 1;\n        long fibfib61 = 1;\n        long fibfib62
    = 1;\n        long fibfib63 = 1;\n        long fibfib64 = 1;\n        long fibfib65
    = 1;\n        long fibfib66 = 1;\n        long fibfib67 = 1;\n        long fibfib68
    = 1;\n        long fibfib69 = 1;\n        long fibfib70 = 1;\n        long fibfib71
    = 1;\n        long fibfib72 = \n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqhd29hvs.cs(94,24): error CS1525: Invalid expression term ''}''

    /tmp/tmpqhd29hvs.cs(94,24): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0)\n            fibfib = 0;\n
    \       else if (n == 1)\n            fibfib = 0;\n        else if (n == 2)\n
    \           fibfib = 1;\n        else\n            fibfib = Fibfib(n - 1) + Fibfib(n
    - 2) + Fibfib(n - 3);\n        return fibfib;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        if (n == 1) {\n            fibfib = 0;\n        }\n        if
    (n == 2) {\n            fibfib = 1;\n        }\n        if (n >= 3) {\n            fibfib
    = fibfib + Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return
    fibfib;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib2 = 1;\n        long fibfib3
    = 1;\n        long fibfib4 = 0;\n        long fibfib5 = 0;\n        long fibfib6
    = 0;\n        long fibfib7 = 0;\n        long fibfib8 = 0;\n        long fibfib9
    = 0;\n        long fibfib10 = 0;\n        long fibfib11 = 0;\n        long fibfib12
    = 0;\n        long fibfib13 = 0;\n        long fibfib14 = 0;\n        long fibfib15
    = 0;\n        long fibfib16 = 0;\n        long fibfib17 = 0;\n        long fibfib18
    = 0;\n        long fibfib19 = 0;\n        long fibfib20 = 0;\n        long fibfib21
    = 0;\n        long fibfib22 = 0;\n        long fibfib23 = 0;\n        long fibfib24
    = 0;\n        long fibfib25 = 0;\n        long fibfib26 = 0;\n        long fibfib27
    = 0;\n        long fibfib28 = 0;\n        long fibfib29 = 0;\n        long fibfib30
    = 0;\n        long fibfib31 = 0;\n        long fibfib32 = 0;\n        long fibfib33
    = 0;\n        long fibfib34 = 0;\n        long fibfib35 = 0;\n        long fibfib36
    = 0;\n        long fibfib37 = 0;\n        long fibfib38 = 0;\n        long fibfib39
    = 0;\n        long fibfib40 = 0;\n        long fibfib41 = 0;\n        long fibfib42
    = 0;\n        long fibfib43 = 0;\n        long fibfib44 = 0;\n        long fibfib45
    = 0;\n        long fibfib46 = 0;\n        long fibfib47 = 0;\n        long fibfib48
    = 0;\n        long fibfib49 = 0;\n        long fibfib50 = 0;\n        long fibfib51
    = 0;\n        long fibfib52 = 0;\n        long fibfib53 = 0;\n        long fibfib54
    = 0;\n        long fibfib55 = 0;\n        long fibfib56 = 0;\n        long fibfib57
    = 0;\n        long fibfib58 = 0;\n        long fibfib59 = 0;\n        long fibfib60
    = 0;\n        long fibfib61 = 0;\n        long fibfib62 = 0;\n        long fibfib63
    = 0;\n        long fibfib64 = 0;\n        long fibfib65 = 0;\n        long fibfib66
    = 0;\n        long fibfib67 = 0;\n        long fibfib68 = 0;\n        long fibfib69
    = 0;\n        long fibfib70 = 0;\n        long fibfib71 = 0;\n        long fibfib72
    = 0;\n        long fibfib73 = 0;\n        long fibfib74\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj7qt7dd5.cs(95,22): error CS1002: ; expected

    '
  timestamp: 1659800026
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n < 3) return 0L;\n        long fibfib = (1L);\n        long
    fibfib2 = fibfib;\n        long fibfib3 = fibfib2;\n        long fibfib4 = fibfib3;\n
    \       long fibfib5 = fibfib4;\n        long fibfib6 = fibfib5;\n        long
    fibfib7 = fibfib6;\n        long fibfib8 = fibfib7;\n        long fibfib9 = fibfib8;\n
    \       long fibfib10 = fibfib9;\n        long fibfib11 = fibfib10;\n        long
    fibfib12 = fibfib11;\n        long fibfib13 = fibfib12;\n        long fibfib14
    = fibfib13;\n        long fibfib15 = fibfib14;\n        long fibfib16 = fibfib15;\n
    \       long fibfib17 = fibfib16;\n        long fibfib18 = fibfib17;\n        long
    fibfib19 = fibfib18;\n        long fibfib20 = fibfib19;\n        long fibfib21
    = fibfib20;\n        long fibfib22 = fibfib21;\n        long fibfib23 = fibfib22;\n
    \       long fibfib24 = fibfib23;\n        long fibfib25 = fibfib24;\n        long
    fibfib26 = fibfib25;\n        long fibfib27 = fibfib26;\n        long fibfib28
    = fibfib27;\n        long fibfib29 = fibfib28;\n        long fibfib30 = fibfib29;\n
    \       long fibfib31 = fibfib30;\n        long fibfib32 = fibfib31;\n        long
    fibfib33 = fibfib32;\n        long fibfib34 = fibfib33;\n        long fibfib35
    = fibfib34;\n        long fibfib36 = fibfib35;\n        long fibfib37 = fibfib36;\n
    \       long fibfib38 = fibfib37;\n        long fibfib39 = fibfib38;\n        long
    fibfib40 = fibfib39;\n        long fibfib41 = fibfib40;\n        long fibfib42
    = fibfib41;\n        long fibfib43 = fibfib42;\n        long fibfib44 = fibfib43;\n
    \       long fibfib45 = fibfib44;\n        long fibfib46 = fibfib45;\n        long
    fibfib47 = fibfib46;\n        long fibfib48 = fibfib47;\n        long fibfib49
    = fibfib\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps66yr9hz.cs(71,31): error CS1002: ; expected

    '
  timestamp: 1659800027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib1 = 1;\n        long fibfib2
    = 1;\n        long fibfib3 = 1;\n        long fibfib4 = fibfibfib1 + fibfib2 +
    fibfib3;\n        long fibfib5 = fibfib4 + fibfib4;\n        long fibfib6 = fibfibfib5
    + fibfib5;\n        long fibfib7 = fibfib6 + fibfib6;\n        long fibfib8 =
    fibfib7 + fibfib7;\n        long fibfib9 = fibfib8 + fibfib8;\n        long fibfib10
    = fibfib9 + fibfib9;\n        long fibfib11 = fibfib10 + fibfib10;\n        long
    fibfib12 = fibfib11 + fibfib11;\n        long fibfib13 = fibfib12 + fibfib12;\n
    \       long fibfib14 = fibfib13 + fibfib13;\n        long fibfib15 = fibfib14
    + fibfib14;\n        long fibfib16 = fibfib15 + fibfib15;\n        long fibfib17
    = fibfib16 + fibfib16;\n        long fibfib18 = fibfibfib17 + fibfib17;\n        long
    fibfib19 = fibfib18 + fibfib18;\n        long fibfib20 = fibfib19 + fibfib19;\n
    \       long fibfib21 = fibfib20 + fibfib20;\n        long fibfib22 = fibfib21
    + fibfib21;\n        long fibfib23 = fibfib22 + fibfib22;\n        long fibfib24
    = fibfib23 + fibfib23;\n        long fibfib25 = fibfib24 + fibfib24;\n        long
    fibfib26 = fibfib25 + fibfib25;\n        long fibfib27 = fibfib26 + fibfib26;\n
    \       long fibfib28 = fibfib27 + fibfib27;\n        long fibfib29 = fibfib28
    + fibfib28;\n        long fibfib30 = fibfib29 + fibfib29;\n        long fibfib31
    = fibfib30 + fibfib30;\n        long fibfib32 = fibfib31 + fibfib31;\n        long
    fibfib33 = fibfib32 + fibfib32;\n        long fibfib34 = fibfib33 + fibfib33;\n
    \       long fibfib35 = fibfib34 + fibfib34;\n        long fibfib36 = fibfib35
    + fibfib35;\n        long fibfib37 = fibfib36 + fibfib36\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr8p6daj5.cs(59,44): error CS1002: ; expected

    '
  timestamp: 1659800025
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0L;\n        if (n == 1) return 1L;\n        if
    (n == 2) return 1L;\n        if (n == 3) return 1L;\n        if (n == 4) return
    2L;\n        if (n == 5) return 3L;\n        if (n == 6) return 5L;\n        if
    (n == 7) return 8L;\n        if (n == 8) return 13L;\n        if (n == 9) return
    21L;\n        if (n == 10) return 34L;\n        if (n == 11) return 55L;\n        if
    (n == 12) return 89L;\n        if (n == 13) return 144L;\n        if (n == 14)
    return 233L;\n        if (n == 15) return 377L;\n        if (n == 16) return 610L;\n
    \       if (n == 17) return 987L;\n        if (n == 18) return 1597L;\n        if
    (n == 19) return 2584L;\n        if (n == 20) return 4181L;\n        if (n ==
    21) return 6765L;\n        if (n == 22) return 10946L;\n        if (n == 23) return
    17711L;\n        if (n == 24) return 28657L;\n        if (n == 25) return 46368L;\n
    \       if (n == 26) return 75025L;\n        if (n == 27) return 121393L;\n        if
    (n == 28) return 196418L;\n        if (n == 29) return 317811L;\n        if (n
    == 30) return 514229L;\n        if (n == 31) return 832040L;\n        if (n ==
    32) return 1346269L;\n        if (n == 33) return 2178309L;\n        if (n ==
    34) return 3524578L;\n        if (n == 35) return 5702887L;\n        if (n ==
    36) return 9227465L;\n        if (n == 37) return 14930352L;\n        if (n ==
    38) return 24157817L;\n        if (n == 39) return 39088169L;\n        if (n ==
    40) return 63245986L;\n        if (n == 41) return 126971467L;\n        if (n
    == 42) return 251658243L;\n        if (n == 43) return 50331653L;\n        if
    (n == 44) return 100663296L;\n        if (n == 45) return 167315543L;\n        if
    (n == 46) return 327258063L;\n        if (n == 47) return 496774625L;\n        if
    (n == 48) return 805306457L;\n        if (n == 49) return 1309151649L;\n        if
    (n == 50) return 2113145521L;\n        if (n == 51) return 3433595040L;\n        if
    (n == 52) return 5557430903L;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n
    \   Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n
    \   Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n
    \   Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmqhnj76g.cs(21,24): error CS0161: ''Problem.Fibfib(long)'': not all code
    paths return a value

    '
  timestamp: 1659800027
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        long fibfib2 = 0;\n        long fibfib3
    = 0;\n        long fibfib4 = 0;\n        long fibfib5 = 0;\n        long fibfib6
    = 0;\n        long fibfib7 = 0;\n        long fibfib8 = 0;\n        long fibfib9
    = 0;\n        long fibfib10 = 0;\n        long fibfib11 = 0;\n        long fibfib12
    = 0;\n        long fibfib13 = 0;\n        long fibfib14 = 0;\n        long fibfib15
    = 0;\n        long fibfib16 = 0;\n        long fibfib17 = 0;\n        long fibfib18
    = 0;\n        long fibfib19 = 0;\n        long fibfib20 = 0;\n        long fibfib21
    = 0;\n        long fibfib22 = 0;\n        long fibfib23 = 0;\n        long fibfib24
    = 0;\n        long fibfib25 = 0;\n        long fibfib26 = 0;\n        long fibfib27
    = 0;\n        long fibfib28 = 0;\n        long fibfib29 = 0;\n        long fibfib30
    = 0;\n        long fibfib31 = 0;\n        long fibfib32 = 0;\n        long fibfib33
    = 0;\n        long fibfib34 = 0;\n        long fibfib35 = 0;\n        long fibfib36
    = 0;\n        long fibfib37 = 0;\n        long fibfib38 = 0;\n        long fibfib39
    = 0;\n        long fibfib40 = 0;\n        long fibfib41 = 0;\n        long fibfib42
    = 0;\n        long fibfib43 = 0;\n        long fibfib44 = 0;\n        long fibfib45
    = 0;\n        long fibfib46 = 0;\n        long fibfib47 = 0;\n        long fibfib48
    = 0;\n        long fibfib49 = 0;\n        long fibfib50 = 0;\n        long fibfib51
    = 0;\n        long fibfib52 = 0;\n        long fibfib53 = 0;\n        long fibfib54
    = 0;\n        long fibfib55 = 0;\n        long fibfib56 = 0;\n        long fibfib57
    = 0;\n        long fibfib58 = 0;\n        long fibfib59 = 0;\n        long fibfib60
    = 0;\n        long fibfib61 = 0;\n        long fibfib62 = 0;\n        long fibfib63
    = 0;\n        long fibfib64 = 0;\n        long fibfib65 = 0;\n        long fibfib66
    = 0;\n        long fibfib67 = 0;\n        long fibfib68 = 0;\n        long fibfib69
    = 0;\n        long fibfib70 = 0;\n        long fibfib71 = 0;\n        long fibfib72
    = 0;\n        long fibfib73 = 0;\n        long fibfib74 = 0;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpugqpwpit.cs(22,14): warning CS0219: The variable ''fibfib'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(23,14): warning CS0219: The variable ''fibfib2'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(24,14): warning CS0219: The variable ''fibfib3'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(25,14): warning CS0219: The variable ''fibfib4'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(26,14): warning CS0219: The variable ''fibfib5'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(27,14): warning CS0219: The variable ''fibfib6'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(28,14): warning CS0219: The variable ''fibfib7'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(29,14): warning CS0219: The variable ''fibfib8'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(30,14): warning CS0219: The variable ''fibfib9'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(31,14): warning CS0219: The variable ''fibfib10'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(32,14): warning CS0219: The variable ''fibfib11'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(33,14): warning CS0219: The variable ''fibfib12'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(34,14): warning CS0219: The variable ''fibfib13'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(35,14): warning CS0219: The variable ''fibfib14'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(36,14): warning CS0219: The variable ''fibfib15'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(37,14): warning CS0219: The variable ''fibfib16'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(38,14): warning CS0219: The variable ''fibfib17'' is assigned
    but its value is never used

    /tmp/tmpugqpwpit.cs(39,14): warning CS0219: The variable ''fibfib18'' is assigned
    but its value i'
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        long fibfib = 0;\n        if (n == 0) {\n            fibfib = 0;\n
    \       }\n        else if (n == 1) {\n            fibfib = 0;\n        }\n        else
    if (n == 2) {\n            fibfib = 1;\n        }\n        else {\n            fibfib
    = Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n        }\n        return fibfib;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n == 0) return 0;\n        if (n == 1) return 1;\n        if
    (n == 2) return 1;\n        return Fibfib(n-1) + Fibfib(n-2) + Fibfib(n-3);\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(Fibfib((2L))
    == (1L));\n    Debug.Assert(Fibfib((1L)) == (0L));\n    Debug.Assert(Fibfib((5L))
    == (4L));\n    Debug.Assert(Fibfib((8L)) == (24L));\n    Debug.Assert(Fibfib((10L))
    == (81L));\n    Debug.Assert(Fibfib((12L)) == (274L));\n    Debug.Assert(Fibfib((14L))
    == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <90aaea1efd624f13ab1786dc5c2334bf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800026
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // The FibFib number sequence is a sequence similar to the Fibbonacci
    sequnece that's defined as follows:\n    // fibfib(0) == 0\n    // fibfib(1) ==
    0\n    // fibfib(2) == 1\n    // fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n
    \   // Please write a function to efficiently compute the n-th element of the
    fibfib number sequence.\n    // >>> Fibfib((1L))\n    // (0L)\n    // >>> Fibfib((5L))\n
    \   // (4L)\n    // >>> Fibfib((8L))\n    // (24L)\n    public static long Fibfib(long
    n) {\n        if (n < 3) return 0;\n        if (n == 3) return 1;\n        return
    Fibfib(n - 1) + Fibfib(n - 2) + Fibfib(n - 3);\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(Fibfib((2L)) == (1L));\n    Debug.Assert(Fibfib((1L))
    == (0L));\n    Debug.Assert(Fibfib((5L)) == (4L));\n    Debug.Assert(Fibfib((8L))
    == (24L));\n    Debug.Assert(Fibfib((10L)) == (81L));\n    Debug.Assert(Fibfib((12L))
    == (274L));\n    Debug.Assert(Fibfib((14L)) == (927L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5c94ea4055b84553957d782325802c47>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5c94ea4055b84553957d782325802c47>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659800027

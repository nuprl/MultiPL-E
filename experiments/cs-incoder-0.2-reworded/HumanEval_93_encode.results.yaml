language: cs
name: HumanEval_93_encode
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            if (c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u') {\n                result += c;\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9819765ea1de4c24a4ad2eddbf08b701>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9819765ea1de4c24a4ad2eddbf08b701>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n            else {\n                result\
    \ += (char.ToUpper(c));\n            }\n        }\n        char[] vowels = new\
    \ char[] { 'a', 'e', 'i', 'o', 'u' };\n        char[] letters = new char[] { 'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z' };\n        char[] letters2 = new char[] { 'b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z' };\n        char[] letters3= new char[] { 'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'\
    \ };\n        char[] letters4= new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n  \
    \      char[] letters5= new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[]\
    \ letters6= new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n',\
    \ 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters7=\
    \ new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q',\
    \ 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters8= new char[]\
    \ { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters9= new char[] { 'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z' };\n        char[] letters10= new char[] { 'b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z' };\n        char[] letters11= new char[] { 'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', '\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyztg4rrd.cs(40,115): error CS1010: Newline in constant

    /tmp/tmpyztg4rrd.cs(40,115): error CS1011: Empty character literal

    /tmp/tmpyztg4rrd.cs(41,6): error CS1002: ; expected

    /tmp/tmpyztg4rrd.cs(42,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpyztg4rrd.cs(50,2): error CS1513: } expected

    '
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n            else {\n                result\
    \ += (char.ToUpper(c));\n            }\n        }\n        char[] vowels = new\
    \ char[] { 'a', 'e', 'i', 'o', 'u' };\n        char[] vowels2 = new char[] { 'A',\
    \ 'E', 'I', 'O', 'U' };\n        char[] vowels3 = new char[] { 'a', 'e', 'i',\
    \ 'o', 'u' };\n        char[] vowels4 = new char[] { 'A', 'E', 'I', 'O', 'U' };\n\
    \        char[] vowels5 = new char[] { 'a', 'e', 'i', 'o', 'u' };\n        char[]\
    \ vowels6 = new char[] { 'A', 'E', 'I', 'O', 'U' };\n        char[] vowels7 =\
    \ new char[] { 'a', 'e', 'i', 'o', 'u' };\n        char[] vowels8 = new char[]\
    \ { 'A', 'E', 'I', 'O', 'U' };\n        char[] vowels9 = new char[] { 'a', 'e',\
    \ 'i', 'o', 'u' };\n        char[] vowels10 = new char[] { 'A', 'E', 'I', 'O',\
    \ 'U' };\n        char[] vowels11 = new char[] { 'a', 'e', 'i', 'o', 'u' };\n\
    \        char[] vowels12 = new char[] { 'A', 'E', 'I', 'O', 'U' };\n        char[]\
    \ vowels13 = new char[] { 'a', 'e', 'i', 'o', 'u' };\n        char[] vowels14\
    \ = new char[] { 'A', 'E', 'I', 'O', 'U' };\n        char[] vowels15 = new char[]\
    \ { 'a', 'e', 'i', 'o', 'u' };\n        char[] vowels16 = new char[] { 'A', 'E',\
    \ 'I', 'O', 'U' };\n        char[] vowels17 = new char[] { 'a', 'e', 'i', 'o',\
    \ 'u' };\n        char[] vowels18 = new char[] { 'A', 'E', 'I', 'O', 'U' };\n\
    \        char[] vowels19 = new char[] { 'a', 'e', 'i', 'o', 'u' };\n        char[]\
    \ vowels20 = new char[] { 'A', 'E', 'I', 'O', 'U' };\n        char[] vowels21\
    \ = new char[] { 'a', 'e', 'i', 'o', 'u' };\n        char[] vowels22 = new char[]\
    \ { 'A', 'E', 'I', 'O', 'U' };\n        char[] vowels23\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_p10o02c.cs(51,24): error CS1002: ; expected

    '
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n            else {\n                result\
    \ += (char.ToUpper(c));\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4983ac6d4bce42468ae251954597c83a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4983ac6d4bce42468ae251954597c83a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        foreach (char c in message.Replace(\"a\"\
    , \"A\").Replace(\"e\", \"E\").Replace(\"i\", \"I\").Replace(\"o\", \"O\").Replace(\"\
    u\", \"U\").Replace(\"y\", \"Y\").Replace(\"A\", \"a\").Replace(\"E\", \"e\").Replace(\"\
    I\", \"i\").Replace(\"O\", \"o\").Replace(\"U\", \"u\").Replace(\"Y\", \"y\"))\
    \ {\n            result += (char)(c + 1);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f0ae68982fa14aa8aee1c58d2f973d03>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f0ae68982fa14aa8aee1c58d2f973d03>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in result) {\n            if (char.IsUpper(c)) {\n                result\
    \ += (char)(c - 1);\n            }\n        }\n        foreach (char c in result)\
    \ {\n            if (char.IsUpper(c)) {\n                result += (char)(c -\
    \ 1);\n            }\n        }\n        foreach (char c in result) {\n      \
    \      if (char.IsUpper(c)) {\n                result += (char)(c - 1);\n    \
    \        }\n        }\n        foreach (char c in result) {\n            if (char.IsUpper(c))\
    \ {\n                result += (char)(c - 1);\n            }\n        }\n    \
    \    foreach (char c in result) {\n            if (char.IsUpper(c)) {\n      \
    \          result += (char)(c - 1);\n            }\n        }\n        foreach\
    \ (char c in result) {\n            if (char.IsUpper(c)) {\n                result\
    \ += (char)(c - 1);\n            }\n        }\n        foreach (char c in result)\
    \ {\n            if (char.IsUpper(c)) {\n                result += (char)(c -\
    \ 1);\n            }\n        }\n        foreach (char c in result) {\n      \
    \      if (char.IsUpper(c)) {\n                result += (char)(c - 1);\n    \
    \        }\n        }\n        foreach (char c in result) {\n            if (char.IsUpper(c))\
    \ {\n                result += (char)(c - 1);\n            }\n        }\n    \
    \    foreach (char c in result) {\n            if (char.IsUpper(c)) {\n      \
    \          result += (char)(c - 1);\n            }\n        }\n        foreach\
    \ (char c in result) {\n            if (char.IsUpper(c)) {\n                result\
    \ += (char)(c - 1);\n            }\n        }\n        foreach (char c in result)\
    \ {\n            if (char.IsUpper(c)) {\n                result += (char)(c -\
    \ 1);\n            }\n        }\n        foreach (char c in result) {\n      \
    \      if (char.IsUpper(c)) {\n                result += (char)(c - 1);\n    \
    \        }\n        }\n        foreach (char c in result) {\n            if (char.IsUpper(c))\
    \ {\n                result += (char)(c - 1);\n            }\n        }\n    \
    \    foreach (char c in result) {\n            if (char.IsUpper(c)) {\n      \
    \          result += (char)(c - 1);\n            }\n        }\n        foreach\
    \ (char c in result) {\n            if (char.IsUpper(c)) {\n                result\
    \ += (char)(c - 1);\n            }\n        }\n        foreach (char c in result)\
    \ {\n            if (char.IsUpper(c)) {\n                result += (char)(c -\
    \ 1);\n            }\n        }\n        foreach (char c in result) {\n      \
    \      if (char.IsUpper(c)) {\n                result += (char)(c - 1);\n    \
    \        }\n        }\n        foreach (char c in result) {\n            if (char.IsUpper(c))\
    \ {\n                result += (char)(c - 1);\n            }\n        }\n    \
    \    foreach (char c in result) {\n            if (char.IsUpper(c)) {\n      \
    \          result += \n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_4wssce5.cs(121,26): error CS1525: Invalid expression term ''}''

    /tmp/tmp_4wssce5.cs(121,26): error CS1002: ; expected

    /tmp/tmp_4wssce5.cs(123,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp_4wssce5.cs(131,2): error CS1513: } expected

    '
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            if (c == 'a' || c == 'e' || c ==\
    \ 'i' || c == 'o' || c == 'u') {\n                result += c;\n            }\n\
    \        }\n        foreach (char c in result.ToLower()) {\n            int index\
    \ = result.IndexOf(c);\n            if (index != -1) {\n                string\
    \ temp = result.Substring(index, 1);\n                result += result.Substring(0,\
    \ index) + result.Substring(index + 1, 1);\n                result = result.Replace(temp,\
    \ result.Substring(index + 1, 1));\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index and length\
    \ must refer to a location within the string.\nParameter name: length\n  at System.String.Substring\
    \ (System.Int32 startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.Encode (System.String message) [0x000e4] in <d7b41afe38c644c4b6d8d91c91cd3d23>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <d7b41afe38c644c4b6d8d91c91cd3d23>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ and length must refer to a location within the string.\nParameter name: length\n\
    \  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.Encode (System.String\
    \ message) [0x000e4] in <d7b41afe38c644c4b6d8d91c91cd3d23>:0 \n  at Problem.Main\
    \ (System.String[] args) [0x00001] in <d7b41afe38c644c4b6d8d91c91cd3d23>:0 \n"
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c - 1);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc8de05c1b5b4641854d2ec45595c139>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc8de05c1b5b4641854d2ec45595c139>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ letter in message) {\n            int index = GetIndex(letter);\n          \
    \  if (index > -1) {\n                result += SwapCase(letter);\n          \
    \      result += GetVowel(index);\n            }\n            else {\n       \
    \         result += letter;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfg37bjvn.cs(22,25): error CS0103: The name ''GetIndex'' does not exist
    in the current context

    /tmp/tmpfg37bjvn.cs(24,27): error CS0103: The name ''SwapCase'' does not exist
    in the current context

    /tmp/tmpfg37bjvn.cs(25,27): error CS0103: The name ''GetVowel'' does not exist
    in the current context

    '
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            int index = Array.IndexOf(result,\
    \ c);\n            if (index != -1) {\n                result += (char)(index\
    \ ^ 0x20);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"\
    tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n \
    \   Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3w4rxiuq.cs(25,39): error CS1503: Argument 1: cannot convert from ''string''
    to ''System.Array''

    '
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsUpper(c)) {\n                result\
    \ += (char.ToLower(c) + message.IndexOf(c) + 1);\n            }\n            else\
    \ if (char.IsLower(c)) {\n                result += (char.ToUpper(c) + message.IndexOf(c)\
    \ + 1);\n            }\n            else {\n                result += c;\n   \
    \         }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a91d452994246b5a36344e51ce27f3d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5a91d452994246b5a36344e51ce27f3d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in result.ToCharArray()) {\n            if (char.IsUpper(c))\
    \ {\n                result += (char)(char.ToUpper(c) + 0x20);\n            }\n\
    \            else if (char.IsLower(c)) {\n                result += (char)(char.ToLower(c)\
    \ + 0x20);\n            }\n            else if (char.IsLetter(c)) {\n        \
    \        result += (char)(char.ToUpper(c) + char.ToLower(c) + 0x20);\n       \
    \     }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1dd9c442da864e0cb841d191d0b26776>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1dd9c442da864e0cb841d191d0b26776>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            if (char.IsLetter(c)) {\n     \
    \           result += (char)(c + 1);\n            }\n        }\n        foreach\
    \ (char c in result.ToLower()) {\n            if (char.IsLetter(c)) {\n      \
    \          result += (char)(c - 1);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab57f3adea9a42ebbe5e0360daddb298>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab57f3adea9a42ebbe5e0360daddb298>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in result) {\n            if (char.IsUpper(c)) {\n                result\
    \ += (char)(c + 1);\n            }\n        }\n        foreach (char c in result)\
    \ {\n            if (char.IsUpper(c)) {\n                result += (char)(c -\
    \ 1);\n            }\n        }\n        foreach (char c in result) {\n      \
    \      if (char.IsUpper(c)) {\n                result += (char)(c - 1);\n    \
    \        }\n        }\n        foreach (char c in result) {\n            if (char.IsUpper(c))\
    \ {\n                result += (char)(c + 1);\n            }\n        }\n    \
    \    return result;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <46dbd3ee11274a1a8d4cd3f273553cae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <46dbd3ee11274a1a8d4cd3f273553cae>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message) {\n            if (char.IsUpper(c)) {\n                result\
    \ += (char)(c + 1);\n            }\n        }\n        foreach (char c in message)\
    \ {\n            if (char.IsLower(c)) {\n                result += (char)(c +\
    \ 1);\n            }\n        }\n        foreach (char c in message) {\n     \
    \       if (char.IsLetter(c)) {\n                result += (char)(c + 1);\n  \
    \          }\n        }\n        foreach (char c in message) {\n            if\
    \ (char.IsLetterOrDigit(c)) {\n                result += (char)(c + 1);\n    \
    \        }\n        }\n        foreach (char c in message) {\n            if (char.IsLetterOrDigit(c)\
    \ || char.IsUpper(c)) {\n                result += (char)(c + 1);\n          \
    \  }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <517fd69ef5054d43b44d67dda02dcc1a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <517fd69ef5054d43b44d67dda02dcc1a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            int index = message.IndexOf(c);\n\
    \            if (index != -1) {\n                result += (char)(message.Substring(index,\
    \ 2) ^ 0x20);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"\
    tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n \
    \   Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo277xugb.cs(27,34): error CS0019: Operator ''^'' cannot be applied to
    operands of type ''string'' and ''int''

    '
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <32d711d8890d41e2b12d511cd59dd60d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <32d711d8890d41e2b12d511cd59dd60d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += char.ToUpper(c);\n            }\n            else {\n                result\
    \ += c;\n            }\n        }\n        char[] vowels = { 'a', 'e', 'i', 'o',\
    \ 'u' };\n        char[] letters = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[]\
    \ vowels2 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q',\
    \ 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters2 = { 'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z' };\n        char[] vowels3 = { 'b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n\
    \        char[] letters3 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] vowels4\
    \ = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters4 = { 'b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z' };\n        char[] vowels5 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n       \
    \ char[] letters5 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] vowels6 = { 'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z' };\n        char[] letters6 = { 'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'\
    \ };\n        char[] vowels7 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[]\
    \ letters7 = { 'b', 'c', 'd', 'f', 'g', '\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjzrc297e.cs(42,54): error CS1010: Newline in constant

    /tmp/tmpjzrc297e.cs(42,54): error CS1011: Empty character literal

    /tmp/tmpjzrc297e.cs(43,6): error CS1002: ; expected

    /tmp/tmpjzrc297e.cs(44,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpjzrc297e.cs(52,2): error CS1513: } expected

    '
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n        }\n        foreach (char c in\
    \ result) {\n            if (char.IsUpper(c)) {\n                result += (char.ToUpper(c));\n\
    \            }\n        }\n        char[] vowels = new char[] { 'a', 'e', 'i',\
    \ 'o', 'u' };\n        char[] letters = new char[] { 'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'\
    \ };\n        char[] letters2 = new char[] { 'A', 'B', 'C', 'D', 'F', 'G', 'H',\
    \ 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z' };\n\
    \        char[] vowels2 = new char[] { 'a', 'e', 'i', 'o', 'u' };\n        char[]\
    \ letters3 = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n',\
    \ 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters2\
    \ = new char[] { 'A', 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P',\
    \ 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z' };\n        char[] vowels3 = new\
    \ char[] { 'a', 'e', 'i', 'o', 'u' };\n        char[] letters4 = new char[] {\
    \ 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't',\
    \ 'v', 'w', 'x', 'y', 'z' };\n        char[] letters5 = new char[] { 'A', 'B',\
    \ 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V',\
    \ 'W', 'X', 'Y', 'Z' };\n        char[] vowels4 = new char[] { 'a', 'e', 'i',\
    \ 'o', 'u' };\n        char[] letters6 = new char[] { 'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'\
    \ };\n        char[] letters7 = new char[] { 'A', 'B', 'C', 'D', 'F', 'G', 'H',\
    \ 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z' };\n\
    \        char[] vowels6 = new char[] { 'a', 'e', 'i\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwq_k3hnm.cs(43,49): error CS1010: Newline in constant

    /tmp/tmpwq_k3hnm.cs(44,6): error CS1002: ; expected

    /tmp/tmpwq_k3hnm.cs(45,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpwq_k3hnm.cs(53,2): error CS1513: } expected

    '
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        foreach (char c in message.Replace(\"a\"\
    , \"A\").Replace(\"e\", \"E\").Replace(\"i\", \"I\").Replace(\"o\", \"O\").Replace(\"\
    u\", \"U\").Replace(\"y\", \"Y\").Replace(\"A\", \"a\").Replace(\"E\", \"e\").Replace(\"\
    I\", \"i\").Replace(\"O\", \"o\").Replace(\"U\", \"u\").Replace(\"Y\", \"y\"))\
    \ {\n            result += (char)(c + 1);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f0ae68982fa14aa8aee1c58d2f973d03>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f0ae68982fa14aa8aee1c58d2f973d03>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 2);\n        }\n        foreach\
    \ (char c in message) {\n            result += (char)(c - 2);\n        }\n   \
    \     foreach (char c in message) {\n            result += (char)(c - 1);\n  \
    \      }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5770513dd68c4df1a495cd7640a591b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5770513dd68c4df1a495cd7640a591b5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n        }\n        foreach (char c in\
    \ result) {\n            if (char.IsUpper(c)) {\n                result += (char.ToUpper(c));\n\
    \            }\n        }\n        char[] vowels = new char[] { 'a', 'e', 'i',\
    \ 'o', 'u' };\n        char[] letters = new char[] { 'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'\
    \ };\n        char[] vowelsLetters = new char[] { 'A', 'E', 'I', 'O', 'U' };\n\
    \        foreach (char c in result) {\n            if (vowels.Contains(c)) {\n\
    \                result += vowelsLetters[vowels.IndexOf(c)];\n            }\n\
    \            if (letters.Contains(c)) {\n                result += letters[letters.IndexOf(c)];\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3920i7ux.cs(36,48): error CS1501: No overload for method ''IndexOf'' takes
    1 arguments

    /tmp/tmp3920i7ux.cs(39,43): error CS1501: No overload for method ''IndexOf'' takes
    1 arguments

    '
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char.IsUpper(c) ? (char.ToLower(c) +\
    \ \n                ((int)c + 1).ToString()) : c);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpild4hndz.cs(22,24): error CS0173: Type of conditional expression cannot
    be determined because there is no implicit conversion between ''string'' and ''char''

    '
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <123b9de3031a43c1be195ff59a6d3398>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <123b9de3031a43c1be195ff59a6d3398>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower()\n            );\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpf4yv8f1t.cs(22,23): error CS0030: Cannot convert type ''string'' to ''char''

    '
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToUpper(c));\n            }\n            else {\n                result\
    \ += (char.ToLower(c));\n            }\n        }\n        char[] vowels = new\
    \ char[] { 'a', 'e', 'i', 'o', 'u' };\n        char[] letters = new char[] { 'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z' };\n        char[] letters2 = new char[] { 'b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z' };\n        char[] letters3 = new char[] { 'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'\
    \ };\n        char[] letters4 = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n  \
    \      char[] letters5 = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n       \
    \ char[] letters6 = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[]\
    \ letters7 = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n',\
    \ 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters8\
    \ = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q',\
    \ 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters9 = new char[]\
    \ { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters10 = new char[] { 'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z' };\n        char[] letters11 = new char[] { 'b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z' \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1uoi1vil.cs(41,6): error CS1002: ; expected

    /tmp/tmp1uoi1vil.cs(42,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp1uoi1vil.cs(50,2): error CS1513: } expected

    '
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n            else {\n                result\
    \ += (char.ToUpper(c));\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4983ac6d4bce42468ae251954597c83a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4983ac6d4bce42468ae251954597c83a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char.IsUpper(c) ? \n               \
    \ ((int)Char.ToLower(c) + 2) : \n                ((int)Char.ToUpper(c) - 2));\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5909d282bc2f4cc4abcf9956552f728a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5909d282bc2f4cc4abcf9956552f728a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message) {\n            result += (char)(c - 1);\n        }\n   \
    \     foreach (char c in message) {\n            result += (char)(c - 1);\n  \
    \      }\n        foreach (char c in message) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message) {\n            result\
    \ += (char)(c + 1);\n        }\n        foreach (char c in message) {\n      \
    \      result += (char)(c - 1);\n        }\n        foreach (char c in message)\
    \ {\n            result += (char)(c - 1);\n        }\n        foreach (char c\
    \ in message) {\n            result += (char)(c - 1);\n        }\n        foreach\
    \ (char c in message) {\n            result += (char)(c + 1);\n        }\n   \
    \     foreach (char c in message) {\n            result += (char)(c + 1);\n  \
    \      }\n        foreach (char c in message) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message) {\n            result\
    \ += (char)(c + 1);\n        }\n        foreach (char c in message) {\n      \
    \      result += (char)(c + 1);\n        }\n        foreach (char c in message)\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message) {\n            result += (char)(c + 1);\n        }\n   \
    \     foreach (char c in message) {\n            result += (char)(c + 1);\n  \
    \      }\n        foreach (char c in message) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message) {\n            result\
    \ += (char)(c + 1);\n        }\n        foreach (char c in message) {\n      \
    \      result += (char)(c + 1);\n        }\n        foreach (char c in message)\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message) {\n            result += (char)(c + 1);\n        }\n   \
    \     foreach (char c in message) {\n            result += (char)(c + 1);\n  \
    \      }\n        foreach (char c in message) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message) {\n            result\
    \ += (char)(c + 1);\n        }\n        foreach (char c in message) {\n      \
    \      result += (char)(c + 1);\n        }\n        foreach (char c in message)\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message) {\n            result += (char)(c + 1);\n        }\n   \
    \     foreach (char c in message) {\n            result += (char)(c + 1);\n  \
    \      }\n        foreach (char c in message) {\n            result += (char)(\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu76org6h.cs(115,30): error CS1525: Invalid expression term ''}''

    /tmp/tmpu76org6h.cs(115,30): error CS1026: ) expected

    /tmp/tmpu76org6h.cs(115,30): error CS1002: ; expected

    /tmp/tmpu76org6h.cs(117,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpu76org6h.cs(125,2): error CS1513: } expected

    '
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        foreach (char c in message.ToLower()) {\n\
    \            result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToLower()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToLower()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToLower()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToLower()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToLower()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToLower()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToLower()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToLower()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToLower()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToLower()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToLower()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToLower()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp67piw6lm.cs(105,36): error CS1001: Identifier expected

    /tmp/tmp67piw6lm.cs(105,36): error CS1026: ) expected

    /tmp/tmp67piw6lm.cs(105,36): error CS1525: Invalid expression term ''}''

    /tmp/tmp67piw6lm.cs(105,36): error CS1002: ; expected

    '
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        foreach (char c in \"AEIOU\") {\n            result += (char)(c\
    \ ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n \
    \           result += (char)(c ^ 0x20);\n        }\n        foreach (char c in\
    \ \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n        }\n        foreach\
    \ (char c in \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n        }\n\
    \        foreach (char c in \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        foreach (char c in \"AEIOU\") {\n            result += (char)(c\
    \ ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n \
    \           result += (char)(c ^ 0x20);\n        }\n        foreach (char c in\
    \ \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n        }\n        foreach\
    \ (char c in \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n        }\n\
    \        foreach (char c in \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        foreach (char c in \"AEIOU\") {\n            result += (char)(c\
    \ ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n \
    \           result += (char)(c ^ 0x20);\n        }\n        foreach (char c in\
    \ \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n        }\n        foreach\
    \ (char c in \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n        }\n\
    \        foreach (char c in \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        foreach (char c in \"AEIOU\") {\n            result += (char)(c\
    \ ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n \
    \           result += (char)(c ^ 0x20);\n        }\n        foreach (char c in\
    \ \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n        }\n        foreach\
    \ (char c in \"AEIO\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr0abp__k.cs(93,28): error CS1010: Newline in constant

    /tmp/tmpr0abp__k.cs(93,33): error CS1026: ) expected

    /tmp/tmpr0abp__k.cs(93,33): error CS1525: Invalid expression term ''}''

    /tmp/tmpr0abp__k.cs(93,33): error CS1002: ; expected

    '
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        foreach (char c in \"AEIOU\") {\n            result += (char)(c\
    \ ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n \
    \           result += (char)(c ^ 0x20);\n        }\n        foreach (char c in\
    \ \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n        }\n        foreach\
    \ (char c in \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n        }\n\
    \        foreach (char c in \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        foreach (char c in \"AEIOU\") {\n            result += (char)(c\
    \ ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n \
    \           result += (char)(c ^ 0x20);\n        }\n        foreach (char c in\
    \ \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n        }\n        foreach\
    \ (char c in \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n        }\n\
    \        foreach (char c in \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        foreach (char c in \"AEIOU\") {\n            result += (char)(c\
    \ ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n \
    \           result += (char)(c ^ 0x20);\n        }\n        foreach (char c in\
    \ \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n        }\n        foreach\
    \ (char c in \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n        }\n\
    \        foreach (char c in \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        foreach (char c in \"AEIOU\") {\n            result += (char)(c\
    \ ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n \
    \           result += (char)(c ^ 0x20);\n        }\n        foreach (char c in\
    \ \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n        }\n        foreach\
    \ (char c in \"AEIO\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr0abp__k.cs(93,28): error CS1010: Newline in constant

    /tmp/tmpr0abp__k.cs(93,33): error CS1026: ) expected

    /tmp/tmpr0abp__k.cs(93,33): error CS1525: Invalid expression term ''}''

    /tmp/tmpr0abp__k.cs(93,33): error CS1002: ; expected

    '
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char.ToLower(c));\n        }\n     \
    \   foreach (char c in result) {\n            int index = result.IndexOf(c);\n\
    \            if (index != -1) {\n                char nextLetter = result.ElementAtOrDefault(index\
    \ + 1);\n                if (nextLetter == 'a' || nextLetter == 'e' || nextLetter\
    \ == 'i' || nextLetter == 'o' || nextLetter == 'u' || nextLetter == 'y') {\n \
    \                   result += (nextLetter);\n                }\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f79ed9e45c0549bb9726022f945621bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f79ed9e45c0549bb9726022f945621bc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 2);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c - 1);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <18b8678c58c14177aaa95052523dc02c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <18b8678c58c14177aaa95052523dc02c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793623
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower()\n            );\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpf4yv8f1t.cs(22,23): error CS0030: Cannot convert type ''string'' to ''char''

    '
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in result.ToCharArray()) {\n            int index = GetIndex(c);\n\
    \            if (index != -1) {\n                char replacement = GetReplacement(c);\n\
    \                result += replacement;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo1y1u0oy.cs(25,25): error CS0103: The name ''GetIndex'' does not exist
    in the current context

    /tmp/tmpo1y1u0oy.cs(27,36): error CS0103: The name ''GetReplacement'' does not
    exist in the current context

    '
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n            else {\n                result\
    \ += (char.ToUpper(c));\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4983ac6d4bce42468ae251954597c83a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4983ac6d4bce42468ae251954597c83a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToUpper(c));\n            }\n            else {\n                result\
    \ += (char.ToLower(c));\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <677b855636074984a575ffcf47ced6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <677b855636074984a575ffcf47ced6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793623
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdnb5t543.cs(64,23): error CS1525: Invalid expression term ''}''

    /tmp/tmpdnb5t543.cs(64,23): error CS1026: ) expected

    /tmp/tmpdnb5t543.cs(64,23): error CS1002: ; expected

    /tmp/tmpdnb5t543.cs(66,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpdnb5t543.cs(74,2): error CS1513: } expected

    '
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ letter in message) {\n            result += (char)(letter.ToUpper());\n    \
    \    }\n        foreach (char letter in result) {\n            int index = result.IndexOf(letter);\n\
    \            if (index != -1) {\n                char nextLetter = result[index\
    \ + 1];\n                if (nextLetter == 'A' || nextLetter == 'E' || nextLetter\
    \ == 'I' || nextLetter == 'O' || nextLetter == 'U') {\n                    result\
    \ += nextLetter;\n                }\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl3hv4o0v.cs(22,37): error CS1501: No overload for method ''ToUpper'' takes
    0 arguments

    '
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <32d711d8890d41e2b12d511cd59dd60d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <32d711d8890d41e2b12d511cd59dd60d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzat0bhvp.cs(64,23): error CS1525: Invalid expression term ''}''

    /tmp/tmpzat0bhvp.cs(64,23): error CS1026: ) expected

    /tmp/tmpzat0bhvp.cs(64,23): error CS1002: ; expected

    /tmp/tmpzat0bhvp.cs(66,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpzat0bhvp.cs(74,2): error CS1513: } expected

    '
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper()) {\n\
    \            result += (char)(c + 1);\n        }\n        return result;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e9c27300238d4c34a7f4a9c50172258e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e9c27300238d4c34a7f4a9c50172258e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToUpper()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToLower()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper().ToLower())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToUpper().ToLower().ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6dc93617e3934c4ebe876ac2b369a19d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6dc93617e3934c4ebe876ac2b369a19d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793623
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ letter in message) {\n            if (char.IsUpper(letter)) {\n            \
    \    result += (char.ToLower(letter) + message.Substring(message.IndexOf(letter)\
    \ + 1, 1));\n            }\n            else if (char.IsLower(letter)) {\n   \
    \             result += (char.ToUpper(letter) + message.Substring(message.IndexOf(letter)\
    \ + 1, 1));\n            }\n            else {\n                result += letter;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <95a324057eb548eba80711028d50ddef>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: Index and length must refer to a location\
    \ within the string.\nParameter name: length\n  at System.String.Substring (System.Int32\
    \ startIndex, System.Int32 length) [0x0004c] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.Encode (System.String message) [0x00075] in <95a324057eb548eba80711028d50ddef>:0\
    \ \n  at Problem.Main (System.String[] args) [0x0001b] in <95a324057eb548eba80711028d50ddef>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ and length must refer to a location within the string.\nParameter name: length\n\
    \  at System.String.Substring (System.Int32 startIndex, System.Int32 length) [0x0004c]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.Encode (System.String\
    \ message) [0x00075] in <95a324057eb548eba80711028d50ddef>:0 \n  at Problem.Main\
    \ (System.String[] args) [0x0001b] in <95a324057eb548eba80711028d50ddef>:0 \n"
  stdout: ''
  timestamp: 1659793623
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ letter in message) {\n            result += (char)(letter.ToUpper());\n    \
    \    }\n        foreach (char letter in message) {\n            result += (char)(letter.ToLower());\n\
    \        }\n        foreach (char letter in message) {\n            result +=\
    \ (char)(letter.ToUpper());\n        }\n        foreach (char letter in message)\
    \ {\n            result += (char)(letter.ToLower());\n        }\n        foreach\
    \ (char letter in message) {\n            result += (char)(letter.ToUpper());\n\
    \        }\n        foreach (char letter in message) {\n            result +=\
    \ (char)(letter.ToLower());\n        }\n        foreach (char letter in message)\
    \ {\n            result += (char)(letter.ToUpper());\n        }\n        foreach\
    \ (char letter in message) {\n            result += (char)(letter.ToLower());\n\
    \        }\n        foreach (char letter in message) {\n            result +=\
    \ (char)(letter.ToUpper());\n        }\n        foreach (char letter in message)\
    \ {\n            result += (char)(letter.ToLower());\n        }\n        foreach\
    \ (char letter in message) {\n            result += (char)(letter.ToUpper());\n\
    \        }\n        foreach (char letter in message) {\n            result +=\
    \ (char)(letter.ToLower());\n        }\n        foreach (char letter in message)\
    \ {\n            result += (char)(letter.ToUpper());\n        }\n        foreach\
    \ (char letter in message) {\n            result += (char)(letter.ToLower());\n\
    \        }\n        foreach (char letter in message) {\n            result +=\
    \ (char)(letter.ToUpper());\n        }\n        foreach (char letter in message)\
    \ {\n            result += (char)(letter.ToLower());\n        }\n        foreach\
    \ (char letter in message) {\n            result += (char)(letter.ToUpper());\n\
    \        }\n        foreach (char letter in message) {\n            result +=\
    \ (char)(letter.ToLower());\n        }\n        foreach (char letter in message)\
    \ {\n            result += (char)(letter.ToUpper());\n        }\n        foreach\
    \ (char letter in message) {\n            result += (char)(letter.ToLower());\n\
    \        }\n        foreach (char letter in message) {\n            result +=\
    \ (char)(letter.ToUpper());\n        }\n        foreach (char letter in message)\
    \ {\n            result += (char)(letter.ToLower());\n        }\n        foreach\
    \ (char letter in message) {\n            result += (char)(letter.ToUpper());\n\
    \        }\n        foreach (char letter in message) {\n            result +=\
    \ (char)(letter.ToLower());\n        }\n        foreach (char letter in message)\
    \ {\n            result += (char)(letter.ToUpper());\n        }\n        foreach\
    \ (char letter in message) {\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1zw1t02h.cs(98,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp1zw1t02h.cs(106,2): error CS1513: } expected

    '
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 2);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            if (char.IsLetter(c)) {\n     \
    \           result += (char)(c + 2);\n            }\n        }\n        foreach\
    \ (char c in message.ToUpper()) {\n            if (char.IsLetter(c)) {\n     \
    \           result += (char)(c - 2);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a394490568eb49e0a566f455465d3086>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a394490568eb49e0a566f455465d3086>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793623
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        foreach (char c in message.ToLower()) {\n\
    \            result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToLower()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToLower()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToLower()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToLower()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToLower()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToLower()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToLower()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToLower()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToLower()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToLower()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToLower()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToLower()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp67piw6lm.cs(105,36): error CS1001: Identifier expected

    /tmp/tmp67piw6lm.cs(105,36): error CS1026: ) expected

    /tmp/tmp67piw6lm.cs(105,36): error CS1525: Invalid expression term ''}''

    /tmp/tmp67piw6lm.cs(105,36): error CS1002: ; expected

    '
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            if (char.IsLetter(c)) {\n     \
    \           result += (char)(c + 1);\n            }\n        }\n        foreach\
    \ (char c in message.ToUpper()) {\n            if (char.IsLetter(c)) {\n     \
    \           result += (char)(c + 1);\n            }\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            if (char.IsLetter(c)) {\n     \
    \           result += (char)(c + 1);\n            }\n        }\n        foreach\
    \ (char c in message.ToUpper()) {\n            if (char.IsLetter(c)) {\n     \
    \           result += (char)(c + 1);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e6c5094e2c6648b48e767cd8837734f4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e6c5094e2c6648b48e767cd8837734f4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        foreach (char c in message.Replace(\"a\"\
    , \"A\").Replace(\"e\", \"E\").Replace(\"i\", \"I\").Replace(\"o\", \"O\").Replace(\"\
    u\", \"U\").Replace(\"y\", \"Y\").Replace(\"A\", \"a\").Replace(\"E\", \"e\").Replace(\"\
    I\", \"i\").Replace(\"O\", \"o\").Replace(\"U\", \"u\").Replace(\"Y\", \"y\").Replace(\"\
    a\", \"A\").Replace(\"e\", \"E\").Replace(\"i\", \"I\").Replace(\"o\", \"O\").Replace(\"\
    u\", \"U\").Replace(\"y\", \"Y\")) {\n            result += (char)(c + 1);\n \
    \       }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <624cc3004af04224ab44067ee1fce12c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <624cc3004af04224ab44067ee1fce12c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793623
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToUpper(c));\n            }\n            else {\n                result\
    \ += (char.ToLower(c));\n            }\n        }\n        char[] vowels = { 'a',\
    \ 'e', 'i', 'o', 'u' };\n        char[] consonants = { 'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'\
    \ };\n        char[] letters = { 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n  \
    \      char[] vowels2 = { 'A', 'E', 'I', 'O', 'U' };\n        char[] consonants2\
    \ = { 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S',\
    \ 'T', 'V', 'W', 'X', 'Y', 'Z' };\n        char[] letters2 = { 'A', 'B', 'C',\
    \ 'D', 'E', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V',\
    \ 'W', 'X', 'Y', 'Z' };\n        char[] vowels3 = { 'A', 'E', 'I', 'O', 'U' };\n\
    \        char[] consonants3 = { 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M',\
    \ 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z' };\n        char[] letters3\
    \ = { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q',\
    \ 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z' };\n        char[] vowels4 = { 'A', 'E',\
    \ 'I', 'O', 'U' };\n        char[] consonants4 = { 'B', 'C', 'D', 'F', 'G', 'H',\
    \ 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z' };\n\
    \        char[] letters4 = { 'A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'J', 'K',\
    \ 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z' };\n       \
    \ char[] vowels5 = { 'A', 'E', 'I', 'O', 'U' };\n        char[] consonants5 =\
    \ { 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\"\
    )).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\"\
    )));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1m5zgy_5.cs(42,97): error CS1010: Newline in constant

    /tmp/tmp1m5zgy_5.cs(43,6): error CS1002: ; expected

    /tmp/tmp1m5zgy_5.cs(44,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp1m5zgy_5.cs(52,2): error CS1513: } expected

    '
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in result.ToCharArray()) {\n            int index = GetIndex(c);\n\
    \            if (index != -1) {\n                char replacement = GetReplacement(c);\n\
    \                result += replacement;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo1y1u0oy.cs(25,25): error CS0103: The name ''GetIndex'' does not exist
    in the current context

    /tmp/tmpo1y1u0oy.cs(27,36): error CS0103: The name ''GetReplacement'' does not
    exist in the current context

    '
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n            else {\n                result\
    \ += (char.ToUpper(c));\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4983ac6d4bce42468ae251954597c83a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4983ac6d4bce42468ae251954597c83a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in result) {\n            int index = result.IndexOf(c);\n         \
    \   if (index != -1) {\n                char replacement = GetReplacement(c, index);\n\
    \                string replacementString = ReplacementToString(replacement);\n\
    \                result += replacementString;\n            }\n        }\n    \
    \    return result;\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdsi4f3cr.cs(27,36): error CS0103: The name ''GetReplacement'' does not
    exist in the current context

    /tmp/tmpdsi4f3cr.cs(28,44): error CS0103: The name ''ReplacementToString'' does
    not exist in the current context

    '
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n            else {\n                result\
    \ += (char.ToUpper(c));\n            }\n        }\n        foreach (char c in\
    \ result) {\n            int index = result.IndexOf(c);\n            if (index\
    \ != -1) {\n                char nextChar = result[index + 1];\n             \
    \   if (char.IsUpper(c)) {\n                    result += (char.ToLower(nextChar));\n\
    \                }\n                else {\n                    result += (char.ToUpper(nextChar));\n\
    \                }\n            }\n        }\n        return result;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\"\
    )).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\"\
    )));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e12a935afe2f4560a59aa7aab4acd57f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e12a935afe2f4560a59aa7aab4acd57f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToUpper(c));\n            }\n            else {\n                result\
    \ += (char.ToLower(c));\n            }\n        }\n        char[] vowels = { 'a',\
    \ 'e', 'i', 'o', 'u' };\n        char[] consonants = { 'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'\
    \ };\n        char[] consonants2 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[]\
    \ consonants3 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] consonants4 =\
    \ { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] consonants5 = { 'b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z' };\n        char[] consonants6 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n  \
    \      char[] consonants7 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] consonants8\
    \ = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] consonants9 = { 'b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z' };\n        char[] consonants10 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n  \
    \      char[] consonants11 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] consonants12\
    \ = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', '\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"\
    tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n \
    \   Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_v_om2lf.cs(41,88): error CS1010: Newline in constant

    /tmp/tmp_v_om2lf.cs(41,88): error CS1011: Empty character literal

    /tmp/tmp_v_om2lf.cs(42,6): error CS1002: ; expected

    /tmp/tmp_v_om2lf.cs(43,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp_v_om2lf.cs(51,2): error CS1513: } expected

    '
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        foreach (char c in message.Replace(\"a\"\
    , \"A\").Replace(\"e\", \"E\").Replace(\"i\", \"I\").Replace(\"o\", \"O\").Replace(\"\
    u\", \"U\").Replace(\"y\", \"Y\").Replace(\"A\", \"a\").Replace(\"E\", \"e\").Replace(\"\
    I\", \"i\").Replace(\"O\", \"o\").Replace(\"U\", \"u\").Replace(\"Y\", \"y\"))\
    \ {\n            result += (char)(c + 1);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f0ae68982fa14aa8aee1c58d2f973d03>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f0ae68982fa14aa8aee1c58d2f973d03>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            if (char.IsLetter(c)) {\n     \
    \           result += (char)(c + 1);\n            }\n        }\n        foreach\
    \ (char c in result.ToLower()) {\n            if (char.IsLetter(c)) {\n      \
    \          result += (char)(c - 1);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab57f3adea9a42ebbe5e0360daddb298>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ab57f3adea9a42ebbe5e0360daddb298>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in result) {\n            result += (char)(c ^ 0x20);\n   \
    \     }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6fbaa615a03944999a1949c10ce11fb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6fbaa615a03944999a1949c10ce11fb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToUpper(c));\n            }\n            else {\n                result\
    \ += (char.ToLower(c));\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <677b855636074984a575ffcf47ced6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <677b855636074984a575ffcf47ced6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in result) {\n            int index = result.IndexOf(c);\n         \
    \   if (index != -1) {\n                char replacement = GetReplacement(c, index);\n\
    \                result += replacement;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbd5h6z0n.cs(27,36): error CS0103: The name ''GetReplacement'' does not
    exist in the current context

    '
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n            else {\n                result\
    \ += (char.ToUpper(c));\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4983ac6d4bce42468ae251954597c83a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4983ac6d4bce42468ae251954597c83a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            } else {\n                result += c;\n\
    \            }\n        }\n        char[] vowels = new char[] { 'a', 'e', 'i',\
    \ 'o', 'u' };\n        char[] letters = new char[] { 'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'\
    \ };\n        char[] vowelsTwo = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n  \
    \      char[] lettersTwo = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n       \
    \ char[] vowelsThree = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[]\
    \ lettersThree = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] vowelsFour\
    \ = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q',\
    \ 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] lettersFour = new\
    \ char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r',\
    \ 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] vowelsFive = new char[]\
    \ { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] lettersFive = new char[] { 'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z' };\n        char[] vowelsSix = new char[] { 'b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z' };\n        char[] lettersSix = new char[] { 'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'\
    \ };\n        char[] vowels\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbl19i6wi.cs(40,22): error CS1002: ; expected

    '
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message) {\n            result += (char)(c - 1);\n        }\n   \
    \     foreach (char c in message) {\n            if (char.IsUpper(c)) {\n    \
    \            result += (char)(c + 1);\n            }\n        }\n        foreach\
    \ (char c in message) {\n            if (char.IsUpper(c)) {\n                result\
    \ += (char)(c - 1);\n            }\n        }\n        foreach (char c in message)\
    \ {\n            if (char.IsUpper(c)) {\n                result += (char)(c +\
    \ 1);\n            }\n        }\n        foreach (char c in message) {\n     \
    \       if (char.IsUpper(c)) {\n                result += (char)(c - 1);\n   \
    \         }\n        }\n        foreach (char c in message) {\n            if\
    \ (char.IsUpper(c)) {\n                result += (char)(c + 1);\n            }\n\
    \        }\n        foreach (char c in message) {\n            if (char.IsUpper(c))\
    \ {\n                result += (char)(c - 1);\n            }\n        }\n    \
    \    foreach (char c in message) {\n            if (char.IsUpper(c)) {\n     \
    \           result += (char)(c + 1);\n            }\n        }\n        foreach\
    \ (char c in message) {\n            if (char.IsUpper(c)) {\n                result\
    \ += (char)(c - 1);\n            }\n        }\n        foreach (char c in message)\
    \ {\n            if (char.IsUpper(c)) {\n                result += (char)(c +\
    \ 1);\n            }\n        }\n        foreach (char c in message) {\n     \
    \       if (char.IsUpper(c)) {\n                result += (char)(c - 1);\n   \
    \         }\n        }\n        foreach (char c in message) {\n            if\
    \ (char.IsUpper(c)) {\n                result += (char)(c + 1);\n            }\n\
    \        }\n        foreach (char c in message) {\n            if (char.IsUpper(c))\
    \ {\n                result += (char)(c - 1);\n            }\n        }\n    \
    \    foreach (char c in message) {\n            if (char.IsUpper(c)) {\n     \
    \           result += (char)(c + 1);\n            }\n        }\n        foreach\
    \ (char c in message) {\n            if (char.IsUpper(c)) {\n                result\
    \ += (char)(c - 1);\n            }\n        }\n        foreach (char c in message)\
    \ {\n            if (char.IsUpper(c)) {\n                result += (char)(c +\
    \ 1);\n            }\n        }\n        foreach (char c in message) {\n     \
    \       if (char.IsUpper(c)) {\n                result += (char)(c - 1);\n   \
    \         }\n        }\n        foreach (char c in message) {\n            if\
    \ (char.IsUpper(c)) {\n                result += (char)(c + 1);\n            }\n\
    \        }\n        foreach (char c in message) {\n            if (char.IsUpper(c))\
    \ {\n                result += (char)(c - 1);\n            }\n        }\n    \
    \    foreach (char c in message) {\n\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpib0aaugm.cs(120,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpib0aaugm.cs(128,2): error CS1513: } expected

    '
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in result.ToCharArray()) {\n            int index = Convert.ToInt32(c.ToString());\n\
    \            char replacement = Convert.ToChar(\n                ((int)'A' + index)\
    \ % 26 + \n                ((int)'a' + index) % 26);\n            result += replacement;\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.Encode (System.String message) [0x00057] in <0b6abdb061284b73a63bb4343736348a>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <0b6abdb061284b73a63bb4343736348a>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.Encode (System.String message) [0x00057] in <0b6abdb061284b73a63bb4343736348a>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <0b6abdb061284b73a63bb4343736348a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in result.ToCharArray()) {\n            if (char.IsUpper(c))\
    \ {\n                result += (char)(c ^ 0x20);\n            }\n        }\n \
    \       return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6c73f22a369841d99ca218dfe4a1f41c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6c73f22a369841d99ca218dfe4a1f41c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793623
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n            else {\n                result\
    \ += (char.ToUpper(c));\n            }\n        }\n        char[] vowels = new\
    \ char[] { 'a', 'e', 'i', 'o', 'u' };\n        char[] letters = new char[] { 'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z' };\n        char[] letters2 = new char[] { 'B', 'C', 'D',\
    \ 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X',\
    \ 'Y', 'Z' };\n        char[] letters3= new char[] { 'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'\
    \ };\n        char[] letters4= new char[] { 'B', 'C', 'D', 'F', 'G', 'H', 'J',\
    \ 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z' };\n  \
    \      char[] letters5= new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[]\
    \ letters6= new char[] { 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N',\
    \ 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z' };\n        char[] letters7=\
    \ new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q',\
    \ 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters8= new char[]\
    \ { 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S',\
    \ 'T', 'V', 'W', 'X', 'Y', 'Z' };\n        char[] letters9= new char[] { 'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z' };\n        char[] letters10= new char[] { 'B', 'C', 'D',\
    \ 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X',\
    \ 'Y', 'Z\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi22i5xn5.cs(39,140): error CS1010: Newline in constant

    /tmp/tmpi22i5xn5.cs(40,6): error CS1002: ; expected

    /tmp/tmpi22i5xn5.cs(41,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpi22i5xn5.cs(49,2): error CS1513: } expected

    '
  timestamp: 1659793623
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        foreach (char c in \"AEIOU\") {\n            result += (char)(c\
    \ ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n \
    \           result += (char)(c ^ 0x20);\n        }\n        foreach (char c in\
    \ \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n        }\n        foreach\
    \ (char c in \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n        }\n\
    \        foreach (char c in \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        foreach (char c in \"AEIOU\") {\n            result += (char)(c\
    \ ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n \
    \           result += (char)(c ^ 0x20);\n        }\n        foreach (char c in\
    \ \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n        }\n        foreach\
    \ (char c in \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n        }\n\
    \        foreach (char c in \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        foreach (char c in \"AEIOU\") {\n            result += (char)(c\
    \ ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n \
    \           result += (char)(c ^ 0x20);\n        }\n        foreach (char c in\
    \ \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n        }\n        foreach\
    \ (char c in \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n        }\n\
    \        foreach (char c in \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        foreach (char c in \"AEIOU\") {\n            result += (char)(c\
    \ ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n \
    \           result += (char)(c ^ 0x20);\n        }\n        foreach (char c in\
    \ \"AEIOU\") {\n            result += (char)(c ^ 0x20);\n        }\n        foreach\
    \ (char c in \"AEIO\n    }\n    public static void Main(string[] args) {\n   \
    \ Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr0abp__k.cs(93,28): error CS1010: Newline in constant

    /tmp/tmpr0abp__k.cs(93,33): error CS1026: ) expected

    /tmp/tmpr0abp__k.cs(93,33): error CS1525: Invalid expression term ''}''

    /tmp/tmpr0abp__k.cs(93,33): error CS1002: ; expected

    '
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <123b9de3031a43c1be195ff59a6d3398>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <123b9de3031a43c1be195ff59a6d3398>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper()) {\n\
    \            result += (char)(c + 1);\n        }\n        return result;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e9c27300238d4c34a7f4a9c50172258e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e9c27300238d4c34a7f4a9c50172258e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in message.ToLower()) {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        foreach (char c in message.ToUpper()) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6ee72d9a4b334964ac1c53af89b1e852>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6ee72d9a4b334964ac1c53af89b1e852>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793623
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzat0bhvp.cs(64,23): error CS1525: Invalid expression term ''}''

    /tmp/tmpzat0bhvp.cs(64,23): error CS1026: ) expected

    /tmp/tmpzat0bhvp.cs(64,23): error CS1002: ; expected

    /tmp/tmpzat0bhvp.cs(66,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpzat0bhvp.cs(74,2): error CS1513: } expected

    '
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char.IsUpper(c) ? \n               \
    \ ((char)(char.ToLower(c) + 1).ToString()) : \n                ((char)(char.ToUpper(c)\
    \ + 1).ToString()));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1jb6u_g7.cs(23,18): error CS0030: Cannot convert type ''string'' to ''char''

    /tmp/tmp1jb6u_g7.cs(24,18): error CS0030: Cannot convert type ''string'' to ''char''

    '
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper()) {\n\
    \            result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToUpper()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToUpper()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToUpper()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToUpper()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToUpper()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToUpper()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToUpper()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToUpper()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToUpper()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToUpper()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToUpper()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToUpper()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprl4l03ao.cs(105,36): error CS1001: Identifier expected

    /tmp/tmprl4l03ao.cs(105,36): error CS1026: ) expected

    /tmp/tmprl4l03ao.cs(105,36): error CS1525: Invalid expression term ''}''

    /tmp/tmprl4l03ao.cs(105,36): error CS1002: ; expected

    '
  timestamp: 1659793623
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper()) {\n\
    \            result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToUpper()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToUpper()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToUpper()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToUpper()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToUpper()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToUpper()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToUpper()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToUpper()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToUpper()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToUpper()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToUpper()) {\n            result += (char)(c + 1);\n        }\n \
    \       foreach (char c in message.ToUpper()) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message.ToUpper()) {\n        \
    \    result += (char)(c + 1);\n        }\n        foreach (char c in message.\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprl4l03ao.cs(105,36): error CS1001: Identifier expected

    /tmp/tmprl4l03ao.cs(105,36): error CS1026: ) expected

    /tmp/tmprl4l03ao.cs(105,36): error CS1525: Invalid expression term ''}''

    /tmp/tmprl4l03ao.cs(105,36): error CS1002: ; expected

    '
  timestamp: 1659793623
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzat0bhvp.cs(64,23): error CS1525: Invalid expression term ''}''

    /tmp/tmpzat0bhvp.cs(64,23): error CS1026: ) expected

    /tmp/tmpzat0bhvp.cs(64,23): error CS1002: ; expected

    /tmp/tmpzat0bhvp.cs(66,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpzat0bhvp.cs(74,2): error CS1513: } expected

    '
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ letter in message) {\n            int index = GetIndex(letter);\n          \
    \  string replacement = GetReplacement(index);\n            result += replacement;\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb214y68u.cs(22,25): error CS0103: The name ''GetIndex'' does not exist
    in the current context

    /tmp/tmpb214y68u.cs(23,34): error CS0103: The name ''GetReplacement'' does not
    exist in the current context

    '
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <123b9de3031a43c1be195ff59a6d3398>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <123b9de3031a43c1be195ff59a6d3398>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in result.ToCharArray()) {\n            int index = GetIndex(c);\n\
    \            if (index > 0) {\n                char newChar = GetChar(index, c);\n\
    \                result += newChar;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp58p9jghm.cs(25,25): error CS0103: The name ''GetIndex'' does not exist
    in the current context

    /tmp/tmp58p9jghm.cs(27,32): error CS0103: The name ''GetChar'' does not exist
    in the current context

    '
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message) {\n            if (char.IsUpper(c)) {\n                result\
    \ += (char)(c + 2);\n            }\n        }\n        foreach (char c in message)\
    \ {\n            if (char.IsLower(c)) {\n                result += (char)(c +\
    \ 1);\n            }\n        }\n        foreach (char c in message) {\n     \
    \       if (char.IsLetter(c)) {\n                result += (char)(c + 1);\n  \
    \          }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <20997942203246c09496ab7668833bba>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <20997942203246c09496ab7668833bba>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793623
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += char.ToUpper(c);\n            } else {\n                result += c;\n  \
    \          }\n        }\n        foreach (char c in result) {\n            int\
    \ index = result.IndexOf(c);\n            if (index != -1) {\n               \
    \ string replacement = GetReplacement(c, index);\n                result += replacement;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_wkanx5u.cs(31,38): error CS0103: The name ''GetReplacement'' does not
    exist in the current context

    '
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper().ToLower())\
    \ {\n            result += (char)(c + 1);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <79922bf72f794f01bb0442694f8ae2b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <79922bf72f794f01bb0442694f8ae2b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n        }\n        foreach (char c in\
    \ result) {\n            if (char.IsLetter(c)) {\n                result += (char.ToUpper(c));\n\
    \            }\n        }\n        foreach (char c in result) {\n            if\
    \ (char.IsLetter(c)) {\n                result += (char.ToUpper(c));\n       \
    \     }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6fb58058b95040ecbdf7b04dc41b5482>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6fb58058b95040ecbdf7b04dc41b5482>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            if (char.IsLetter(c)) {\n     \
    \           result += (char)(c + 1);\n            }\n        }\n        foreach\
    \ (char c in message.ToUpper()) {\n            if (char.IsLetter(c)) {\n     \
    \           result += (char)(c + 1);\n            }\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            if (char.IsLetter(c)) {\n     \
    \           result += (char)(c + 2);\n            }\n        }\n        foreach\
    \ (char c in message.ToUpper()) {\n            if (char.IsLetter(c)) {\n     \
    \           result += (char)(c + 2);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <581eddf3e1c5411f9ea2bfe8a593c2b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <581eddf3e1c5411f9ea2bfe8a593c2b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in result.ToCharArray()) {\n            if (char.IsUpper(c))\
    \ {\n                result += (char)(c ^ 0x20);\n            }\n        }\n \
    \       foreach (char c in result.ToCharArray()) {\n            if (char.IsLower(c))\
    \ {\n                result += (char)(c ^ 0x20);\n            }\n        }\n \
    \       return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ceafbea9a22b4a73bfd57b54f07691be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ceafbea9a22b4a73bfd57b54f07691be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsUpper(c)) {\n                result\
    \ += (char.ToLower(c) + message.Substring(message.IndexOf(c) + 1));\n        \
    \    } else {\n                result += (char.ToUpper(c) + message.Substring(message.IndexOf(c)\
    \ + 1));\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"\
    tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n \
    \   Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f3c071bcf9194854bd30d73e0a8d8320>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f3c071bcf9194854bd30d73e0a8d8320>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToUpper(c));\n            }\n            else {\n                result\
    \ += c;\n            }\n        }\n        char[] vowels = { 'a', 'e', 'i', 'o',\
    \ 'u' };\n        char[] letters = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[]\
    \ letters2 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q',\
    \ 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters31 = { 'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z' };\n        char[] letters32 = { 'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'\
    \ };\n        char[] letters33 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[]\
    \ letters34 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q',\
    \ 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters35 = { 'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z' };\n        char[] letters36 = { 'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'\
    \ };\n        char[] letters37 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[]\
    \ letters38 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q',\
    \ 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters39 = { 'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z' };\n        char[] letters40 = { 'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'\
    \ };\n        char[] letters\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcyuza9c7.cs(42,23): error CS1002: ; expected

    '
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToUpper(c));\n            }\n            else {\n                result\
    \ += (char.ToLower(c));\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <677b855636074984a575ffcf47ced6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <677b855636074984a575ffcf47ced6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ letter in message) {\n            if (char.IsLetter(letter)) {\n           \
    \     result += (char.ToLower(letter));\n            }\n            else {\n \
    \               result += (char.ToUpper(letter));\n            }\n        }\n\
    \        return result;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <772fc700d13547f3b2795ed01d50b780>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <772fc700d13547f3b2795ed01d50b780>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n            else {\n                result\
    \ += (char.ToUpper(c));\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4983ac6d4bce42468ae251954597c83a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4983ac6d4bce42468ae251954597c83a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            if (char.IsLetter(c)) {\n     \
    \           result += (char)(c + 1);\n            }\n        }\n        foreach\
    \ (char c in message.ToUpper()) {\n            if (char.IsLetter(c)) {\n     \
    \           result += (char)(c + 1);\n            }\n        }\n        foreach\
    \ (char c in message.ToUpper()) {\n            if (char.IsLetter(c)) {\n     \
    \           result += (char)(c + 1);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <95e00555e9d84ea3bec03106154aaa16>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <95e00555e9d84ea3bec03106154aaa16>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0df2de8992ef4cc78eb93b89c2d57f69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0df2de8992ef4cc78eb93b89c2d57f69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        foreach (char c in message.Replace(\"a\"\
    , \"A\").Replace(\"e\", \"E\").Replace(\"i\", \"I\").Replace(\"o\", \"O\").Replace(\"\
    u\", \"U\").Replace(\"y\", \"Y\").Replace(\"A\", \"a\").Replace(\"E\", \"e\").Replace(\"\
    I\", \"i\").Replace(\"O\", \"o\").Replace(\"U\", \"u\").Replace(\"Y\", \"y\"))\
    \ {\n            result += (char)(c + 1);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f0ae68982fa14aa8aee1c58d2f973d03>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f0ae68982fa14aa8aee1c58d2f973d03>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        foreach (char c in message.Replace(\"a\"\
    , \"A\").Replace(\"e\", \"E\").Replace(\"i\", \"I\").Replace(\"o\", \"O\").Replace(\"\
    u\", \"U\").Replace(\"y\", \"Y\").Replace(\"A\", \"a\").Replace(\"E\", \"e\").Replace(\"\
    I\", \"i\").Replace(\"O\", \"o\").Replace(\"U\", \"u\").Replace(\"Y\", \"y\"))\
    \ {\n            result += (char)(c + 1);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f0ae68982fa14aa8aee1c58d2f973d03>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f0ae68982fa14aa8aee1c58d2f973d03>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n            else {\n                result\
    \ += (char.ToUpper(c));\n            }\n        }\n        char[] vowels = new\
    \ char[] { 'a', 'e', 'i', 'o', 'u' };\n        char[] letters = new char[] { 'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z' };\n        char[] letters2 = new char[] { 'B', 'C', 'D',\
    \ 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X',\
    \ 'Y', 'Z' };\n        char[] letters3= new char[] { 'B', 'C', 'D', 'F', 'G',\
    \ 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z'\
    \ };\n        char[] letters4= new char[] { 'B', 'C', 'D', 'F', 'G', 'H', 'J',\
    \ 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z' };\n  \
    \      char[] letters5= new char[] { 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L',\
    \ 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z' };\n        char[]\
    \ letters6= new char[] { 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N',\
    \ 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z' };\n        char[] letters7=\
    \ new char[] { 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q',\
    \ 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z' };\n        char[] letters8= new char[]\
    \ { 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S',\
    \ 'T', 'V', 'W', 'X', 'Y', 'Z' };\n        char[] letters9= new char[] { 'B',\
    \ 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V',\
    \ 'W', 'X', 'Y', 'Z' };\n        char[] letters10= new char[] { 'B', 'C', 'D',\
    \ 'F', 'G', '\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3lkcuu30.cs(39,65): error CS1010: Newline in constant

    /tmp/tmp3lkcuu30.cs(39,65): error CS1011: Empty character literal

    /tmp/tmp3lkcuu30.cs(40,6): error CS1002: ; expected

    /tmp/tmp3lkcuu30.cs(41,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp3lkcuu30.cs(49,2): error CS1513: } expected

    '
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToUpper(c));\n            }\n            else {\n                result\
    \ += (char.ToLower(c));\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <677b855636074984a575ffcf47ced6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <677b855636074984a575ffcf47ced6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <123b9de3031a43c1be195ff59a6d3398>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <123b9de3031a43c1be195ff59a6d3398>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += char.ToUpper(c);\n            }\n            else {\n                result\
    \ += c;\n            }\n        }\n        char[] vowels = new char[] { 'a', 'e',\
    \ 'i', 'o', 'u' };\n        char[] letters = new char[] { 'b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z' };\n        char[] letters2 = new char[] { 'b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n\
    \        char[] letters3 = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n       \
    \ char[] letters4 = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[]\
    \ letters5 = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n',\
    \ 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters6\
    \ = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q',\
    \ 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters7 = new char[]\
    \ { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters8 = new char[] { 'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z' };\n        char[] letters9 = new char[] { 'b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z' };\n        char[] letters10 = new char[] { 'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'\
    \ };\n        char[] letters11 = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n  \
    \      char[] letters\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprmqpx357.cs(41,23): error CS1002: ; expected

    '
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <32d711d8890d41e2b12d511cd59dd60d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <32d711d8890d41e2b12d511cd59dd60d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in result.ToCharArray()) {\n            int index = GetIndexOf(c,\
    \ new char[] {'a', 'e', 'i', 'o', 'u'});\n            if (index != -1) {\n   \
    \             char replacement = (char)(index + 1);\n                result +=\
    \ replacement;\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"\
    tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n \
    \   Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpe5obgnln.cs(25,25): error CS0103: The name ''GetIndexOf'' does not exist
    in the current context

    '
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n            else {\n                result\
    \ += (char.ToUpper(c));\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4983ac6d4bce42468ae251954597c83a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4983ac6d4bce42468ae251954597c83a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        foreach (char c in \"AEIOU\") {\n            result += (char)(c\
    \ ^ 0x20);\n        }\n        foreach (char c in \"1234567890\") {\n        \
    \    result += (char)(c ^ 0x20);\n        }\n        foreach (char c in \"!@#$%^&*()\"\
    ) {\n            result += (char)(c ^ 0x20);\n        }\n        foreach (char\
    \ c in \"~`-=_+[]{}<>?/\") {\n            result += (char)(c ^ 0x20);\n      \
    \  }\n        foreach (char c in \"1234567890\") {\n            result += (char)(c\
    \ ^ 0x20);\n        }\n        foreach (char c in \"!@#$%^&*()\") {\n        \
    \    result += (char)(c ^ 0x20);\n        }\n        foreach (char c in \"~`-=_+[]{}<>?/\"\
    ) {\n            result += (char)(c ^ 0x20);\n        }\n        foreach (char\
    \ c in \"1234567890\") {\n            result += (char)(c ^ 0x20);\n        }\n\
    \        foreach (char c in \"!@#$%^&*()\") {\n            result += (char)(c\
    \ ^ 0x20);\n        }\n        foreach (char c in \"~`-=_+[]{}<>?/\") {\n    \
    \        result += (char)(c ^ 0x20);\n        }\n        foreach (char c in \"\
    1234567890\") {\n            result += (char)(c ^ 0x20);\n        }\n        foreach\
    \ (char c in \"!@#$%^&*()\") {\n            result += (char)(c ^ 0x20);\n    \
    \    }\n        foreach (char c in \"~`-=_+[]{}<>?/\") {\n            result +=\
    \ (char)(c ^ 0x20);\n        }\n        foreach (char c in \"1234567890\") {\n\
    \            result += (char)(c ^ 0x20);\n        }\n        foreach (char c in\
    \ \"!@#$%^&*()\") {\n            result += (char)(c ^ 0x20);\n        }\n    \
    \    foreach (char c in \"~`-=_+[]{}<>?/\") {\n            result += (char)(c\
    \ ^ 0x20);\n        }\n        foreach (char c in \"1234567890\") {\n        \
    \    result += (char)(c ^ 0x20);\n        }\n        foreach (char c in \"!@#$%^&*()\"\
    ) {\n            result += (char)(c ^ 0x20);\n        }\n        foreach (char\
    \ c in \"~`-=_+[]{}<>?/\") {\n            result += (char)(c ^ 0x20);\n      \
    \  }\n        foreach (char c in \n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprsx1zogv.cs(84,27): error CS1525: Invalid expression term ''}''

    /tmp/tmprsx1zogv.cs(84,27): error CS1026: ) expected

    /tmp/tmprsx1zogv.cs(84,27): error CS1002: ; expected

    '
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0df2de8992ef4cc78eb93b89c2d57f69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0df2de8992ef4cc78eb93b89c2d57f69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <123b9de3031a43c1be195ff59a6d3398>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <123b9de3031a43c1be195ff59a6d3398>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n            else {\n                result\
    \ += (char.ToUpper(c));\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4983ac6d4bce42468ae251954597c83a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4983ac6d4bce42468ae251954597c83a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n        }\n        foreach (char c in\
    \ message) {\n            if (char.IsLetter(c)) {\n                result += (char.ToUpper(c));\n\
    \            }\n        }\n        foreach (char c in message) {\n           \
    \ if (char.IsLetter(c)) {\n                result += (char.ToUpper(c));\n    \
    \        }\n        }\n        foreach (char c in message) {\n            if (char.IsLetter(c))\
    \ {\n                result += (char.ToUpper(c));\n            }\n        }\n\
    \        foreach (char c in message) {\n            if (char.IsLetter(c)) {\n\
    \                result += (char.ToUpper(c));\n            }\n        }\n    \
    \    foreach (char c in message) {\n            if (char.IsLetter(c)) {\n    \
    \            result += (char.ToUpper(c));\n            }\n        }\n        foreach\
    \ (char c in message) {\n            if (char.IsLetter(c)) {\n               \
    \ result += (char.ToUpper(c));\n            }\n        }\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToUpper(c));\n            }\n        }\n        foreach (char c in\
    \ message) {\n            if (char.IsLetter(c)) {\n                result += (char.ToUpper(c));\n\
    \            }\n        }\n        foreach (char c in message) {\n           \
    \ if (char.IsLetter(c)) {\n                result += (char.ToUpper(c));\n    \
    \        }\n        }\n        foreach (char c in message) {\n            if (char.IsLetter(c))\
    \ {\n                result += (char.ToUpper(c));\n            }\n        }\n\
    \        foreach (char c in message) {\n            if (char.IsLetter(c)) {\n\
    \                result += (char.ToUpper(c));\n            }\n        }\n    \
    \    foreach (char c in message) {\n            if (char.IsLetter(c)) {\n    \
    \            result += (char.ToUpper(c));\n            }\n        }\n        foreach\
    \ (char c in message) {\n            if (char.IsLetter(c)) {\n               \
    \ result += (char.ToUpper(c));\n            }\n        }\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToUpper(c));\n            }\n        }\n        foreach (char c in\
    \ message) {\n            if (char.IsLetter(c)) {\n                result += (char.ToUpper(c));\n\
    \            }\n        }\n        foreach (char c in message) {\n           \
    \ if (char.IsLetter(c)) {\n                result += (char.ToUpper(c));\n    \
    \        }\n        }\n        foreach (char c in message) {\n            if (char.IsLetter(c))\
    \ {\n                result += (char.ToUpper(c));\n            }\n        }\n\
    \        foreach (\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0zvzcsho.cs(111,18): error CS1525: Invalid expression term ''}''

    /tmp/tmp0zvzcsho.cs(111,18): error CS1515: ''in'' expected

    /tmp/tmp0zvzcsho.cs(111,18): error CS0230: Type and identifier are both required
    in a foreach statement

    /tmp/tmp0zvzcsho.cs(111,18): error CS1026: ) expected

    /tmp/tmp0zvzcsho.cs(111,18): error CS1002: ; expected

    '
  timestamp: 1659793623
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in result.ToCharArray()) {\n            int index = GetIndex(c);\n\
    \            if (index != -1) {\n                char replacement = GetReplacement(c);\n\
    \                result += replacement;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo1y1u0oy.cs(25,25): error CS0103: The name ''GetIndex'' does not exist
    in the current context

    /tmp/tmpo1y1u0oy.cs(27,36): error CS0103: The name ''GetReplacement'' does not
    exist in the current context

    '
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToUpper(c));\n            }\n            else {\n                result\
    \ += (char.ToLower(c));\n            }\n        }\n        foreach (char c in\
    \ result) {\n            int index = result.IndexOf(c);\n            if (index\
    \ != -1) {\n                string vowels = \"AEIOUaeiou\";\n                string\
    \ replacement = vowels.Substring(index, 2);\n                result += replacement;\n\
    \            }\n        }\n        return result;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <40fad004301d40248a868b85338fd6e6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <40fad004301d40248a868b85338fd6e6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <32d711d8890d41e2b12d511cd59dd60d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <32d711d8890d41e2b12d511cd59dd60d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char.IsUpper(c) ? \n               \
    \ ((char)(char.ToLower(c) + 1).ToString()) \n                : ((char)(char.ToUpper(c)\
    \ - 1).ToString()));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfq9qxf_u.cs(23,18): error CS0030: Cannot convert type ''string'' to ''char''

    /tmp/tmpfq9qxf_u.cs(24,20): error CS0030: Cannot convert type ''string'' to ''char''

    '
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToUpper() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdnb5t543.cs(64,23): error CS1525: Invalid expression term ''}''

    /tmp/tmpdnb5t543.cs(64,23): error CS1026: ) expected

    /tmp/tmpdnb5t543.cs(64,23): error CS1002: ; expected

    /tmp/tmpdnb5t543.cs(66,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpdnb5t543.cs(74,2): error CS1513: } expected

    '
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char.IsUpper(c) ? \n               \
    \ ((char.IsUpper(message[message.IndexOf(c) + 1]) ? \n                    message.Substring(0,\
    \ message.IndexOf(c) + 1) + \n                    message.Substring(message.IndexOf(c)\
    \ + 1, 2) : \n                    message.Substring(0, message.IndexOf(c) + 1))\
    \ + \n                c : \n                ((char.IsUpper(message[message.IndexOf(c)\
    \ + 1]) ? \n                    message.Substring(0, message.IndexOf(c) + 1) +\
    \ \n                    message.Substring(message.IndexOf(c) + 1, 2) : \n    \
    \                message.Substring(0, message.IndexOf(c) + 1)) + \n          \
    \      char.ToLower(c)));\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"\
    tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n \
    \   Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7_i2t_2a.cs(27,19): error CS1026: ) expected

    '
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0df2de8992ef4cc78eb93b89c2d57f69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0df2de8992ef4cc78eb93b89c2d57f69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in result.ToCharArray()) {\n            int index = Convert.ToInt32(c.ToString());\n\
    \            char replacement = (char)(index + 1);\n            result += replacement;\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.Encode (System.String message) [0x00057] in <dc08306c2a32429893531b78865b27af>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <dc08306c2a32429893531b78865b27af>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.Encode (System.String message) [0x00057] in <dc08306c2a32429893531b78865b27af>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <dc08306c2a32429893531b78865b27af>:0\
    \ \n"
  stdout: ''
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        foreach (char c in \"AEIOU\") {\n            result += (char)(c\
    \ ^ 0x20);\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <39f126af9e054b9eab51287ab1d1b515>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <39f126af9e054b9eab51287ab1d1b515>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <123b9de3031a43c1be195ff59a6d3398>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <123b9de3031a43c1be195ff59a6d3398>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        foreach (char c in message.ToUpper().ToLower())\
    \ {\n            result += (char)(c + 1);\n        }\n        foreach (char c\
    \ in message.ToUpper().ToLower().ToLower()) {\n            result += (char)(c\
    \ + 1);\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ea8c6ec348d947c3b9f2b23cbbae0d7b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ea8c6ec348d947c3b9f2b23cbbae0d7b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message) {\n            if (char.IsUpper(c)) {\n                result\
    \ += (char)(c + 1);\n            }\n        }\n        foreach (char c in message)\
    \ {\n            if (char.IsLower(c)) {\n                result += (char)(c +\
    \ 1);\n            }\n        }\n        foreach (char c in message) {\n     \
    \       if (char.IsLetter(c)) {\n                result += (char)(c + 1);\n  \
    \          }\n        }\n        foreach (char c in message) {\n            if\
    \ (char.IsVowel(c)) {\n                result += (char)(c + 1);\n            }\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptpvw1isn.cs(40,22): error CS0117: ''char'' does not contain a definition
    for ''IsVowel''

    '
  timestamp: 1659793624
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char.IsUpper(c) ? \n               \
    \ ((char.IsLower(c) ? \n                    ((char.IsUpper(message[message.IndexOf(c)\
    \ + 1]) ? \n                        ((char.IsUpper(message[message.IndexOf(c)\
    \ + 2]) ? \n                            ((char.IsUpper(message[message.IndexOf(c)\
    \ + 3]) ? \n                                ((char.IsUpper(message[message.IndexOf(c)\
    \ + 4]) ? \n                                    ((char.IsUpper(message[message.IndexOf(c)\
    \ + 5]) ? \n                                        ((char.IsUpper(message[message.IndexOf(c)\
    \ + 6]) ? \n                                            ((char.IsUpper(message[message.IndexOf(c)\
    \ + 7]) ? \n                                                ((char.IsUpper(message[message.IndexOf(c)\
    \ + 8]) ? \n                                                    ((char.IsUpper(message[message.IndexOf(c)\
    \ + 9]) ? \n                                                        ((char.IsUpper(message[message.IndexOf(c)\
    \ + 10) ? \n                                                            ((char.IsUpper(message[message.IndexOf(c)\
    \ + 11) ? \n                                                                ((char.IsUpper(message[message.IndexOf(c)\
    \ + 12) ? \n                                                                 \
    \   ((char.IsUpper(message[message.IndexOf(c) + 13) ? \n                     \
    \                                                   ((char.IsUpper(message[message.IndexOf(c)\
    \ + 14) ? \n                                                                 \
    \           ((char.IsUpper(message[message.IndexOf(c) + 15) ? \n             \
    \                                                                   ((char.IsUpper(message[message.IndexOf(c)\
    \ + 16) ? \n                                                                 \
    \                   ((char.IsUpper(message[message.IndexOf(c) + 17) ? \n     \
    \                                                                            \
    \       ((char.IsUpper(message[message.IndexOf(c) + 18) ? \n                 \
    \                                                                           ((char.IsUpper(message[message.IndexOf(c)\
    \ + 19) ? \n                                                                 \
    \                               ((char.IsUpper(message[message.IndexOf(c) + 20)\
    \ ? \n                                                                       \
    \                             ((char.IsUpper(message[message.IndexOf(c) + 21)\
    \ ? \n                                                                       \
    \                                 ((char.IsUpper(message[message.IndexOf(c) +\
    \ 22) ? \n                                                                   \
    \                                         ((char.IsUpper(message[message.IndexOf(c)\
    \ + 23) ? \n                                                                 \
    \                                               ((char.IsUpper(message[message.IndexOf(c)\
    \ + 24) ? \n                                                                 \
    \                                                   ((char.IsUpper(message[message.IndexOf(c)\
    \ + 25) ? \n                                                                 \
    \                                                       ((char.IsUpper(message[message.IndexOf(c)\
    \ + 26) ? \n                                                                 \
    \                                                           ((char.IsUpper(message[message.IndexOf(c)\
    \ + 27) ? \n                                                                 \
    \                                                               ((char.Is\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl3hnyg9f.cs(33,103): error CS1003: Syntax error, '']'' expected

    /tmp/tmpl3hnyg9f.cs(34,107): error CS1003: Syntax error, '']'' expected

    /tmp/tmpl3hnyg9f.cs(35,111): error CS1003: Syntax error, '']'' expected

    /tmp/tmpl3hnyg9f.cs(36,115): error CS1003: Syntax error, '']'' expected

    /tmp/tmpl3hnyg9f.cs(37,119): error CS1003: Syntax error, '']'' expected

    /tmp/tmpl3hnyg9f.cs(38,123): error CS1003: Syntax error, '']'' expected

    /tmp/tmpl3hnyg9f.cs(39,127): error CS1003: Syntax error, '']'' expected

    /tmp/tmpl3hnyg9f.cs(40,131): error CS1003: Syntax error, '']'' expected

    /tmp/tmpl3hnyg9f.cs(41,135): error CS1003: Syntax error, '']'' expected

    /tmp/tmpl3hnyg9f.cs(42,139): error CS1003: Syntax error, '']'' expected

    /tmp/tmpl3hnyg9f.cs(43,143): error CS1003: Syntax error, '']'' expected

    /tmp/tmpl3hnyg9f.cs(44,147): error CS1003: Syntax error, '']'' expected

    /tmp/tmpl3hnyg9f.cs(45,151): error CS1003: Syntax error, '']'' expected

    /tmp/tmpl3hnyg9f.cs(46,155): error CS1003: Syntax error, '']'' expected

    /tmp/tmpl3hnyg9f.cs(47,159): error CS1003: Syntax error, '']'' expected

    /tmp/tmpl3hnyg9f.cs(48,163): error CS1003: Syntax error, '']'' expected

    /tmp/tmpl3hnyg9f.cs(49,167): error CS1003: Syntax error, '']'' expected

    /tmp/tmpl3hnyg9f.cs(50,171): error CS1003: Syntax error, '']'' expected

    /tmp/tmpl3hnyg9f.cs(51,138): error CS1026: ) expected

    /tmp/tmpl3hnyg9f.cs(51,138): error CS1003: Syntax error, '':'' expected

    /tmp/tmpl3hnyg9f.cs(51,138): error CS1525: Invalid expression term ''}''

    /tmp/tmpl3hnyg9f.cs(51,138): error CS1002: ; expected

    /tmp/tmpl3hnyg9f.cs(53,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpl3hnyg9f.cs(61,2): error CS1513: } expected

    '
  timestamp: 1659793624
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in result.ToCharArray()) {\n            if (char.IsLetter(c)) {\n  \
    \              string replacement = GetReplacement(c);\n                for (int\
    \ i = 0; i < message.Length; i++) {\n                    if (message[i] == c)\
    \ {\n                        result = result.Replace(c, replacement);\n      \
    \                  break;\n                    }\n                }\n        \
    \    }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprvjztnzv.cs(26,38): error CS0103: The name ''GetReplacement'' does not
    exist in the current context

    /tmp/tmprvjztnzv.cs(29,52): error CS1503: Argument 2: cannot convert from ''string''
    to ''char''

    '
  timestamp: 1659793624
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n            else {\n                result\
    \ += (char.ToUpper(c));\n            }\n        }\n        char[] vowels = { 'a',\
    \ 'e', 'i', 'o', 'u' };\n        char[] letters = { 'b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n\
    \        char[] letters2 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters31\
    \ = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters3111 = { 'b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z' };\n        char[] letters311123 = { 'b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n\
    \        char[] letters31112321 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[]\
    \ letters3111232111 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n',\
    \ 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters311123211111\
    \ = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters31112321111111 = { 'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z' };\n        char[] letters3111232111111123 = { 'b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z' };\n        char[] letters311123211111112321 = { 'b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z' };\n        char[] letters31112321111111232\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu0yt7_4e.cs(41,40): error CS1002: ; expected

    '
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsUpper(c)) {\n                result\
    \ += char.ToUpper(c);\n            } else {\n                result += c;\n  \
    \          }\n        }\n        char[] vowels = new char[] { 'a', 'e', 'i', 'o',\
    \ 'u' };\n        foreach (char c in result) {\n            if (vowels.Contains(c))\
    \ {\n                result += char.ToUpper(c);\n            } else {\n      \
    \          result += c;\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65dd41f08a6a4dc584e08f502e1612e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <65dd41f08a6a4dc584e08f502e1612e9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <32d711d8890d41e2b12d511cd59dd60d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <32d711d8890d41e2b12d511cd59dd60d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char.IsUpper(c) ? \n               \
    \ ((int)c - 65 + message.IndexOf(c) + 2) : \n                ((int)c + message.IndexOf(c)\
    \ + 2));\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4aa4b40fe23a46f49457516fad765cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4aa4b40fe23a46f49457516fad765cc9>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in message.ToLower()) {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        foreach (char c in message.ToUpper()) {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6ee72d9a4b334964ac1c53af89b1e852>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6ee72d9a4b334964ac1c53af89b1e852>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793623
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message) {\n            result += (char)(c - 1);\n        }\n   \
    \     foreach (char c in message) {\n            result += (char)(c - 1);\n  \
    \      }\n        foreach (char c in message) {\n            result += (char)(c\
    \ + 1);\n        }\n        foreach (char c in message) {\n            result\
    \ += (char)(c + 1);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bf6fb10dbb584ac5ba0f12449cca6230>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bf6fb10dbb584ac5ba0f12449cca6230>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in result.ToCharArray()) {\n            if (char.IsUpper(c))\
    \ {\n                result += (char)(c ^ 0x20);\n            }\n        }\n \
    \       foreach (char c in result.ToCharArray()) {\n            if (char.IsLower(c))\
    \ {\n                result += (char)(c ^ 0x20);\n            }\n        }\n \
    \       foreach (char c in result.ToCharArray()) {\n            if (char.IsLetter(c))\
    \ {\n                result += (char)(c ^ 0x20);\n            }\n        }\n \
    \       foreach (char c in result.ToCharArray()) {\n            if (char.IsDigit(c))\
    \ {\n                result += (char)(c ^ 0x20);\n            }\n        }\n \
    \       foreach (char c in result.ToCharArray()) {\n            if (char.IsPunctuation(c))\
    \ {\n                result += (char)(c ^ 0x20);\n            }\n        }\n \
    \       foreach (char c in result.ToCharArray()) {\n            if (char.IsSymbol(c))\
    \ {\n                result += (char)(c ^ 0x20);\n            }\n        }\n \
    \       foreach (char c in result.ToCharArray()) {\n            if (char.IsWhiteSpace(c))\
    \ {\n                result += (char)(c ^ 0x20);\n            }\n        }\n \
    \       foreach (char c in result.ToCharArray()) {\n            if (char.IsControl(c))\
    \ {\n                result += (char)(c ^ 0x20);\n            }\n        }\n \
    \       foreach (char c in result.ToCharArray()) {\n            if (char.IsLineFeed(c))\
    \ {\n                result += (char)(c ^ 0x20);\n            }\n        }\n \
    \       foreach (char c in result.ToCharArray()) {\n            if (char.IsControl(c))\
    \ {\n                result += (char)(c ^ 0x20);\n            }\n        }\n \
    \       foreach (char c in result.ToCharArray()) {\n            if (char.IsControl(c))\
    \ {\n                result += (char)(c ^ 0x20);\n            }\n        }\n \
    \       foreach (char c in result.ToCharArray()) {\n            if (char.IsControl(c))\
    \ {\n                result += (char)(c ^ 0x20);\n            }\n        }\n \
    \       foreach (char c in result.ToCharArray()) {\n            if (char.IsControl(c))\
    \ {\n                result += (char)(c ^ 0x20);\n            }\n        }\n \
    \       foreach (char c in result.ToCharArray()) {\n            if (char.IsControl(c))\
    \ {\n                result += (char)(c ^ 0x20);\n            }\n        }\n \
    \       foreach (char c in result.ToCharArray()) {\n            if (char.IsControl(c))\
    \ {\n                result += (char)(c ^ 0x20);\n            }\n        }\n \
    \       foreach (char c in result.ToCharArray()) {\n            if (char.IsControl(c))\
    \ {\n                result += (char\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp79zitypm.cs(101,28): error CS1525: Invalid expression term ''char''

    /tmp/tmp79zitypm.cs(101,32): error CS1026: ) expected

    /tmp/tmp79zitypm.cs(101,32): error CS1002: ; expected

    /tmp/tmp79zitypm.cs(103,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp79zitypm.cs(111,2): error CS1513: } expected

    '
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in result) {\n            if (char.IsUpper(c)) {\n                result\
    \ += (char)(c - 1);\n            }\n        }\n        foreach (char c in result)\
    \ {\n            if (char.IsUpper(c)) {\n                result += (char)(c +\
    \ 1);\n            }\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ddf1e5b10a7e42d892b78e3e7224a776>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ddf1e5b10a7e42d892b78e3e7224a776>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        foreach (char c in \"AEIOU\") {\n            result += (char)(c\
    \ ^ 0x20);\n        }\n        foreach (char c in \"AEIOU\") {\n            result\
    \ += (char)(c ^ 0x20);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <085ed10ecd254eea984ab47cfc6bd94d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <085ed10ecd254eea984ab47cfc6bd94d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToUpper(c));\n            }\n            else {\n                result\
    \ += (char.ToLower(c));\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <677b855636074984a575ffcf47ced6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <677b855636074984a575ffcf47ced6a3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793623
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n        }\n        foreach (char c in\
    \ result) {\n            if (char.IsUpper(c)) {\n                result += (char.ToUpper(c));\n\
    \            }\n        }\n        char[] vowels = { 'a', 'e', 'i', 'o', 'u' };\n\
    \        char[] letters = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] vowels2\
    \ = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters2 = { 'b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z' };\n        char[] vowels31 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n  \
    \      char[] letters31 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] vowels32\
    \ = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters32 = { 'b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z' };\n        char[] vowels33 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n  \
    \      char[] letters33 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] vowels34\
    \ = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters34 = { 'b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z' };\n        char[] vowels35 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', '\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxel3t_zx.cs(43,99): error CS1010: Newline in constant

    /tmp/tmpxel3t_zx.cs(43,99): error CS1011: Empty character literal

    /tmp/tmpxel3t_zx.cs(44,6): error CS1002: ; expected

    /tmp/tmpxel3t_zx.cs(45,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpxel3t_zx.cs(53,2): error CS1513: } expected

    '
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        foreach (char c in message.Replace(\"a\"\
    , \"A\").Replace(\"e\", \"E\").Replace(\"i\", \"I\").Replace(\"o\", \"O\").Replace(\"\
    u\", \"U\").Replace(\"y\", \"Y\").Replace(\"A\", \"a\").Replace(\"E\", \"e\").Replace(\"\
    I\", \"i\").Replace(\"O\", \"o\").Replace(\"U\", \"u\").Replace(\"Y\", \"y\"))\
    \ {\n            result += (char)(c + 1);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f0ae68982fa14aa8aee1c58d2f973d03>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f0ae68982fa14aa8aee1c58d2f973d03>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char.IsUpper(c) ? \n               \
    \ ((char)(char.ToLower(c) + 1).ToString()) :\n                ((char)(char.ToUpper(c)\
    \ + 1).ToString()));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9b69p7g0.cs(23,18): error CS0030: Cannot convert type ''string'' to ''char''

    /tmp/tmp9b69p7g0.cs(24,18): error CS0030: Cannot convert type ''string'' to ''char''

    '
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <123b9de3031a43c1be195ff59a6d3398>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <123b9de3031a43c1be195ff59a6d3398>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c - 1);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc8de05c1b5b4641854d2ec45595c139>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc8de05c1b5b4641854d2ec45595c139>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n            else {\n                result\
    \ += (char.ToUpper(c));\n            }\n        }\n        char[] vowels = new\
    \ char[] { 'a', 'e', 'i', 'o', 'u' };\n        char[] letters = new char[] { 'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z' };\n        char[] vowels2 = new char[] { 'A', 'E', 'I',\
    \ 'O', 'U' };\n        char[] letters2 = new char[] { 'B', 'C', 'D', 'F', 'G',\
    \ 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z'\
    \ };\n        char[] vowels3 = new char[] { 'a', 'e', 'i', 'o', 'u' };\n     \
    \   char[] letters3 = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[]\
    \ vowels4 = new char[] { 'A', 'E', 'I', 'O', 'U' };\n        char[] letters4 =\
    \ new char[] { 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q',\
    \ 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z' };\n        char[] vowels5 = new char[]\
    \ { 'a', 'e', 'i', 'o', 'u' };\n        char[] letters5 = new char[] { 'b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z' };\n        char[] vowels6 = new char[] { 'A', 'E', 'I', 'O',\
    \ 'U' };\n        char[] letters6 = new char[] { 'B', 'C', 'D', 'F', 'G', 'H',\
    \ 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z' };\n\
    \        char[] vowels7 = new char[] { 'a', 'e', 'i', 'o', 'u' };\n        char[]\
    \ letters7 = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n',\
    \ 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] vowels8\
    \ = new char[] { 'A', 'E', 'I', 'O', 'U' };\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9h8me7ck.cs(19,26): error CS0161: ''Problem.Encode(string)'': not all
    code paths return a value

    '
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <123b9de3031a43c1be195ff59a6d3398>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <123b9de3031a43c1be195ff59a6d3398>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in result) {\n            int index = result.IndexOf(c);\n         \
    \   if (index > 0) {\n                char temp = result[index - 1];\n       \
    \         result[index - 1] = result[index];\n                result[index] =\
    \ temp;\n            }\n        }\n        foreach (char c in result) {\n    \
    \        int index = result.IndexOf(c);\n            if (index > 0) {\n      \
    \          char temp = result[index - 1];\n                result[index - 1] =\
    \ result[index];\n                result[index] = temp;\n            }\n     \
    \   }\n        foreach (char c in result) {\n            int index = result.IndexOf(c);\n\
    \            if (index > 0) {\n                char temp = result[index - 1];\n\
    \                result[index - 1] = result[index];\n                result[index]\
    \ = temp;\n            }\n        }\n        foreach (char c in result) {\n  \
    \          int index = result.IndexOf(c);\n            if (index > 0) {\n    \
    \            char temp = result[index - 1];\n                result[index - 1]\
    \ = result[index];\n                result[index] = temp;\n            }\n   \
    \     }\n        foreach (char c in result) {\n            int index = result.IndexOf(c);\n\
    \            if (index > 0) {\n                char temp = result[index - 1];\n\
    \                result[index - 1] = result[index];\n                result[index]\
    \ = temp;\n            }\n        }\n        foreach (char c in result) {\n  \
    \          int index = result.IndexOf(c);\n            if (index > 0) {\n    \
    \            char temp = result[index - 1];\n                result[index - 1]\
    \ = result[index];\n                result[index] = temp;\n            }\n   \
    \     }\n        foreach (char c in result) {\n            int index = result.IndexOf(c);\n\
    \            if (index > 0) {\n                char temp = result[index - 1];\n\
    \                result[index - 1] = result[index];\n                result[index]\
    \ = temp;\n            }\n        }\n        foreach (char c in result) {\n  \
    \          int index = result.IndexOf(c);\n            if (index > 0) {\n    \
    \            char temp = result[index - 1];\n                result[index - 1]\
    \ = result[index];\n                result[index] = temp;\n            }\n   \
    \     }\n        foreach (char c in result) {\n            int index = result.IndexOf(c);\n\
    \            if (index > 0) {\n                char temp = result[index - 1];\n\
    \                result[index - 1] = result[index];\n                result[index]\
    \ = temp;\n            }\n        }\n        foreach (char c in result) {\n  \
    \          int index = result.IndexOf(c);\n            if (index > 0) {\n    \
    \            char temp = result[index - 1];\n                result[index - 1]\
    \ = result[index];\n                result[index] = temp;\n            }\n   \
    \     }\n        foreach (char c in result) {\n            int index = result.IndexOf(c);\n\
    \            if (index > 0) {\n                char temp = result[index - 1];\n\
    \                result[index - 1] = result[index];\n                result[index]\
    \ = temp;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkq6ix0xu.cs(112,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpkq6ix0xu.cs(120,2): error CS1513: } expected

    '
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ letter in message) {\n            result += (char)(letter + 2);\n        }\n\
    \        foreach (char letter in message) {\n            result += (char)(letter\
    \ - 2);\n        }\n        foreach (char letter in message) {\n            result\
    \ += (char)(letter + 2);\n        }\n        foreach (char letter in message)\
    \ {\n            result += (char)(letter - 2);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a413d7d9d292452880c3569a0c9dd9b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a413d7d9d292452880c3569a0c9dd9b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzat0bhvp.cs(64,23): error CS1525: Invalid expression term ''}''

    /tmp/tmpzat0bhvp.cs(64,23): error CS1026: ) expected

    /tmp/tmpzat0bhvp.cs(64,23): error CS1002: ; expected

    /tmp/tmpzat0bhvp.cs(66,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpzat0bhvp.cs(74,2): error CS1513: } expected

    '
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzat0bhvp.cs(64,23): error CS1525: Invalid expression term ''}''

    /tmp/tmpzat0bhvp.cs(64,23): error CS1026: ) expected

    /tmp/tmpzat0bhvp.cs(64,23): error CS1002: ; expected

    /tmp/tmpzat0bhvp.cs(66,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpzat0bhvp.cs(74,2): error CS1513: } expected

    '
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            int index = message.IndexOf(c);\n\
    \            if (index != -1) {\n                result += (char)(message.Substring(index,\
    \ 2) ^ 0x20);\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"\
    tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n \
    \   Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpo277xugb.cs(27,34): error CS0019: Operator ''^'' cannot be applied to
    operands of type ''string'' and ''int''

    '
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <123b9de3031a43c1be195ff59a6d3398>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <123b9de3031a43c1be195ff59a6d3398>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c - 1);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc8de05c1b5b4641854d2ec45595c139>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fc8de05c1b5b4641854d2ec45595c139>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in result) {\n            int index = Convert.ToInt32(c.ToString());\n\
    \            if (index >= 65 && index <= 90) {\n                result += (char)((index\
    \ - 65) + 65);\n            }\n            else if (index >= 97 && index <= 122)\
    \ {\n                result += (char)((index - 97) + 97);\n            }\n   \
    \         else {\n                result += c;\n            }\n        }\n   \
    \     return result;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.Encode (System.String message) [0x00058] in <556aa0d4c2ee457daf374825d021b4b3>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <556aa0d4c2ee457daf374825d021b4b3>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.Encode (System.String message) [0x00058] in <556aa0d4c2ee457daf374825d021b4b3>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <556aa0d4c2ee457daf374825d021b4b3>:0\
    \ \n"
  stdout: ''
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        foreach (char c in message.Replace(\"a\"\
    , \"A\").Replace(\"e\", \"E\").Replace(\"i\", \"I\").Replace(\"o\", \"O\").Replace(\"\
    u\", \"U\").Replace(\"y\", \"Y\").Replace(\"A\", \"a\").Replace(\"E\", \"e\").Replace(\"\
    I\", \"i\").Replace(\"O\", \"o\").Replace(\"U\", \"u\").Replace(\"Y\", \"y\"))\
    \ {\n            result += (char)(c + 1);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f0ae68982fa14aa8aee1c58d2f973d03>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f0ae68982fa14aa8aee1c58d2f973d03>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        foreach (char c in \"AEIOU\") {\n            result += (char)(c\
    \ ^ 0x20);\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <39f126af9e054b9eab51287ab1d1b515>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <39f126af9e054b9eab51287ab1d1b515>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            if (char.IsUpper(c)) {\n      \
    \          result += (char)(c + 1);\n            }\n        }\n        foreach\
    \ (char c in message.ToUpper()) {\n            if (char.IsLower(c)) {\n      \
    \          result += (char)(c + 1);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b669ff85d164c3aba37d2d2b9abefe1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b669ff85d164c3aba37d2d2b9abefe1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char.IsUpper(c) ? \n               \
    \ ((char)(char.ToLower(c) + 1).ToString()) : \n                ((char)(char.ToUpper(c)\
    \ - 1).ToString()));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph5ryj2z5.cs(23,18): error CS0030: Cannot convert type ''string'' to ''char''

    /tmp/tmph5ryj2z5.cs(24,18): error CS0030: Cannot convert type ''string'' to ''char''

    '
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ letter in message) {\n            result += (char)(letter + 2);\n        }\n\
    \        foreach (char letter in message.ToLower()) {\n            if (letter\
    \ == 'a' || letter == 'e' || letter == 'i' || letter == 'o' || letter == 'u')\
    \ {\n                result += letter;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdd28903b1754207a75380825c137e1c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fdd28903b1754207a75380825c137e1c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793625
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char.IsUpper(c) ? \n               \
    \ ((char)(char.ToLower(c) + 1).ToString()) \n                : ((char)(char.ToUpper(c)\
    \ + 1).ToString()));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp25unwnso.cs(23,18): error CS0030: Cannot convert type ''string'' to ''char''

    /tmp/tmp25unwnso.cs(24,20): error CS0030: Cannot convert type ''string'' to ''char''

    '
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ letter in message) {\n            result += (char)(letter + 2);\n        }\n\
    \        foreach (char letter in message) {\n            result += (char)(letter\
    \ - 2);\n        }\n        foreach (char letter in message) {\n            result\
    \ += (char)(letter + 2);\n        }\n        foreach (char letter in message)\
    \ {\n            result += (char)(letter - 2);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a413d7d9d292452880c3569a0c9dd9b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a413d7d9d292452880c3569a0c9dd9b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message) {\n            result += (char)(c - 1);\n        }\n   \
    \     foreach (char c in message) {\n            result += (char)(c + 2);\n  \
    \      }\n        foreach (char c in message) {\n            result += (char)(c\
    \ - 2);\n        }\n        foreach (char c in message) {\n            result\
    \ += (char)(c + 3);\n        }\n        foreach (char c in message) {\n      \
    \      result += (char)(c - 3);\n        }\n        foreach (char c in message)\
    \ {\n            result += (char)(c + 4);\n        }\n        foreach (char c\
    \ in message) {\n            result += (char)(c - 4);\n        }\n        foreach\
    \ (char c in message) {\n            result += (char)(c + 5);\n        }\n   \
    \     foreach (char c in message) {\n            result += (char)(c - 5);\n  \
    \      }\n        foreach (char c in message) {\n            result += (char)(c\
    \ + 6);\n        }\n        foreach (char c in message) {\n            result\
    \ += (char)(c - 6);\n        }\n        foreach (char c in message) {\n      \
    \      result += (char)(c + 7);\n        }\n        foreach (char c in message)\
    \ {\n            result += (char)(c - 7);\n        }\n        foreach (char c\
    \ in message) {\n            result += (char)(c + 8);\n        }\n        foreach\
    \ (char c in message) {\n            result += (char)(c - 8);\n        }\n   \
    \     foreach (char c in message) {\n            result += (char)(c + 9);\n  \
    \      }\n        foreach (char c in message) {\n            result += (char)(c\
    \ - 9);\n        }\n        foreach (char c in message) {\n            result\
    \ += (char)(c + 10);\n        }\n        foreach (char c in message) {\n     \
    \       result += (char)(c - 10);\n        }\n        foreach (char c in message)\
    \ {\n            result += (char)(c + 11);\n        }\n        foreach (char c\
    \ in message) {\n            result += (char)(c - 11);\n        }\n        foreach\
    \ (char c in message) {\n            result += (char)(c + 12);\n        }\n  \
    \      foreach (char c in message) {\n            result += (char)(c - 12);\n\
    \        }\n        foreach (char c in message) {\n            result += (char)(c\
    \ + 13);\n        }\n        foreach (char c in message) {\n            result\
    \ += (char)(c - 13);\n        }\n        foreach (char c in message) {\n     \
    \       result += (char)(c + 14);\n        }\n        foreach (char c in message)\
    \ {\n            result += (char)(c - 14);\n        }\n        foreach (char c\
    \ in message) {\n            result += (char)(c + 15);\n        }\n        foreach\
    \ (char c in message) {\n            result += (char)(c - 15);\n        }\n  \
    \      foreach (char c in message) {\n            result += (char)(c + 16);\n\
    \        }\n        foreach (char c in message) {\n            result += (char)(\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4a4grn4n.cs(115,30): error CS1525: Invalid expression term ''}''

    /tmp/tmp4a4grn4n.cs(115,30): error CS1026: ) expected

    /tmp/tmp4a4grn4n.cs(115,30): error CS1002: ; expected

    /tmp/tmp4a4grn4n.cs(117,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp4a4grn4n.cs(125,2): error CS1513: } expected

    '
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char.IsUpper(c) ? \n               \
    \ ((int)c + 1).ToString() : \n                ((int)c - 1).ToString());\n    \
    \    }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e434d5f81ce849e180b60da10c5a8b05>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e434d5f81ce849e180b60da10c5a8b05>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793625
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += char.ToUpper(c);\n            }\n            else {\n                result\
    \ += c;\n            }\n        }\n        char[] vowels = new char[] { 'a', 'e',\
    \ 'i', 'o', 'u' };\n        char[] consonants = new char[] { 'b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z' };\n        char[] letters = new char[] { 'a', 'b', 'c', 'd', 'e', 'f',\
    \ 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v',\
    \ 'w', 'x', 'y', 'z' };\n        char[] numbers = new char[] { '0', '1', '2',\
    \ '3', '4', '5', '6', '7', '8', '9' };\n        char[] punctuation = new char[]\
    \ { '.', ',', '?', '!', ':' };\n        char[] spaces = new char[] { ' ' };\n\
    \        char[] others = new char[] { '!', ':', '?', '.' };\n        char[] lettersAndNumbers\
    \ = new char[] { 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\
    \ 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z' };\n       \
    \ char[] lettersAndPunctuation = new char[] { '.', ',', '?', '!', ':' };\n   \
    \     char[] lettersAndSpaces = new char[] { 'a', 'b', 'c', 'd', 'e', 'f', 'g',\
    \ 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w',\
    \ 'x', 'y', 'z' };\n        char[] lettersAndOthers = new char[] { '!', ':', '?',\
    \ '.' };\n        char[] lettersAndLettersAndNumbers = new char[] { 'a', 'b',\
    \ 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r',\
    \ 's', 't', 'u', 'v', 'w', 'x', 'y', 'z' };\n        char[] lettersAndLettersAndPunctuation\
    \ = new char[] { '.', ',', '?', '!', ':' };\n        char[] lettersAndLettersAndSpaces\
    \ = new char[] { 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm',\
    \ 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z' };\n       \
    \ char[] lettersAndLettersAndOthers = new char[] { '!', ':', '?', '.' };\n   \
    \     char[] lettersAndLettersAndLettersAndNumber\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvxfuz4lr.cs(44,52): error CS1002: ; expected

    '
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0df2de8992ef4cc78eb93b89c2d57f69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0df2de8992ef4cc78eb93b89c2d57f69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ letter in message) {\n            if (char.IsLetter(letter)) {\n           \
    \     result += (char.ToLower(letter));\n            }\n            else {\n \
    \               result += (char.ToUpper(letter));\n            }\n        }\n\
    \        char[] vowels = new char[] { 'a', 'e', 'i', 'o', 'u' };\n        char[]\
    \ letters = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n',\
    \ 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters2\
    \ = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q',\
    \ 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters3 = new char[]\
    \ { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters4 = new char[] { 'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z' };\n        char[] letters5 = new char[] { 'b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z' };\n        char[] letters6 = new char[] { 'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'\
    \ };\n        char[] letters7 = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n  \
    \      char[] letters8 = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n       \
    \ char[] letters9 = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[]\
    \ letters10 = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n',\
    \ 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters11\
    \ = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q',\
    \ 'r', 's', 't', 'v', 'w', 'x', '\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp90hno1f6.cs(40,136): error CS1010: Newline in constant

    /tmp/tmp90hno1f6.cs(40,136): error CS1011: Empty character literal

    /tmp/tmp90hno1f6.cs(41,6): error CS1002: ; expected

    /tmp/tmp90hno1f6.cs(42,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp90hno1f6.cs(50,2): error CS1513: } expected

    '
  timestamp: 1659793624
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n            else {\n                result\
    \ += (char.ToUpper(c));\n            }\n        }\n        char[] vowels = { 'a',\
    \ 'e', 'i', 'o', 'u' };\n        char[] letters = { 'b', 'c', 'd', 'f', 'g', 'h',\
    \ 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n\
    \        char[] letters2 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters31\
    \ = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters32 = { 'b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z' };\n        char[] letters33 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n  \
    \      char[] letters34 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters35\
    \ = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters36 = { 'b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z' };\n        char[] letters37 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n  \
    \      char[] letters38 = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters39\
    \ = { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters40 = { 'b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z' };\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxm41zh2h.cs(19,26): error CS0161: ''Problem.Encode(string)'': not all
    code paths return a value

    '
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n            else {\n                result\
    \ += (char.ToUpper(c));\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4983ac6d4bce42468ae251954597c83a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4983ac6d4bce42468ae251954597c83a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            if (char.IsUpper(c)) {\n      \
    \          result += (char)(c + 1);\n            }\n        }\n        foreach\
    \ (char c in message.ToUpper()) {\n            if (char.IsUpper(c)) {\n      \
    \          result += (char)(c - 1);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca543de2caf74b59ac45ea1b3e8ea26c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ca543de2caf74b59ac45ea1b3e8ea26c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        foreach (char c in \"AEIOU\") {\n            result += (char)(c\
    \ ^ 0x20);\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <39f126af9e054b9eab51287ab1d1b515>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <39f126af9e054b9eab51287ab1d1b515>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <123b9de3031a43c1be195ff59a6d3398>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <123b9de3031a43c1be195ff59a6d3398>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)c).ToString().ToLower() +\n                ((int)c).ToString().ToUpper()\
    \ +\n                ((int)\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzat0bhvp.cs(64,23): error CS1525: Invalid expression term ''}''

    /tmp/tmpzat0bhvp.cs(64,23): error CS1026: ) expected

    /tmp/tmpzat0bhvp.cs(64,23): error CS1002: ; expected

    /tmp/tmpzat0bhvp.cs(66,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpzat0bhvp.cs(74,2): error CS1513: } expected

    '
  timestamp: 1659793622
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiouAEIOU\") {\n            int index = message.IndexOf(c);\n\
    \            if (index != -1) {\n                result += message.Substring(0,\
    \ index) + message.Substring(index + 1, 1);\n            }\n        }\n      \
    \  return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e54ba6cf765e42fead35d17d8832d2dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e54ba6cf765e42fead35d17d8832d2dc>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in \"aeiou\") {\n            result += (char)(c ^ 0x20);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <500a2f4abac14de7b2e924ae73514b9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            if (char.IsUpper(c)) {\n      \
    \          result += (char)(c + 1);\n            }\n        }\n        foreach\
    \ (char c in message.ToUpper()) {\n            if (char.IsLower(c)) {\n      \
    \          result += (char)(c + 1);\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b669ff85d164c3aba37d2d2b9abefe1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b669ff85d164c3aba37d2d2b9abefe1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in result) {\n            result += (char)(c ^ 0x20);\n   \
    \     }\n        return result;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6fbaa615a03944999a1949c10ce11fb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6fbaa615a03944999a1949c10ce11fb5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793623
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char.IsUpper(c) ? \n               \
    \ ((char)(char.ToLower(c) + 1).ToString()) \n                : ((char)(char.ToUpper(c)\
    \ - 1).ToString()));\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfq9qxf_u.cs(23,18): error CS0030: Cannot convert type ''string'' to ''char''

    /tmp/tmpfq9qxf_u.cs(24,20): error CS0030: Cannot convert type ''string'' to ''char''

    '
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 2);\n        }\n        foreach\
    \ (char c in message.ToUpper()) {\n            result += (char)(c + 2);\n    \
    \    }\n        foreach (char c in message.ToLower()) {\n            result +=\
    \ (char)(c + 2);\n        }\n        foreach (char c in message.Replace(\"a\"\
    , \"A\").Replace(\"e\", \"E\").Replace(\"i\", \"I\").Replace(\"o\", \"O\").Replace(\"\
    u\", \"U\").Replace(\"y\", \"Y\").Replace(\"A\", \"a\").Replace(\"E\", \"e\").Replace(\"\
    I\", \"i\").Replace(\"O\", \"o\").Replace(\"U\", \"u\").Replace(\"Y\", \"y\"))\
    \ {\n            result += (char)(c + 2);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8495120f0fb54c66825566948f6abd5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8495120f0fb54c66825566948f6abd5b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793625
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n            else {\n                result\
    \ += (char.ToUpper(c));\n            }\n        }\n        char[] vowels = new\
    \ char[] { 'a', 'e', 'i', 'o', 'u' };\n        foreach (char c in result) {\n\
    \            int index = Array.IndexOf(vowels, c);\n            if (index >= 0)\
    \ {\n                char replacement = vowels[index + 1];\n                result\
    \ += replacement;\n            }\n        }\n        return result;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\"\
    )).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\"\
    )));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <59bb7103b96f4d219d6d312bfb778b2a>:0 \n\nUnhandled Exception:\n\
    System.IndexOutOfRangeException: Index was outside the bounds of the array.\n\
    \  at Problem.Encode (System.String message) [0x000a7] in <59bb7103b96f4d219d6d312bfb778b2a>:0\
    \ \n  at Problem.Main (System.String[] args) [0x0001b] in <59bb7103b96f4d219d6d312bfb778b2a>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index\
    \ was outside the bounds of the array.\n  at Problem.Encode (System.String message)\
    \ [0x000a7] in <59bb7103b96f4d219d6d312bfb778b2a>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x0001b] in <59bb7103b96f4d219d6d312bfb778b2a>:0 \n"
  stdout: ''
  timestamp: 1659793625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in result) {\n            char d = (char)(c - 1);\n            if (d\
    \ >= 'a' && d <= 'z') {\n                result += (char)(d + 1);\n          \
    \  }\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <18a29b770fbe44079355948515e117c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <18a29b770fbe44079355948515e117c4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793625
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n            else {\n                result\
    \ += (char.ToUpper(c));\n            }\n        }\n        char[] vowels = new\
    \ char[] { 'a', 'e', 'i', 'o', 'u' };\n        char[] letters = new char[] { 'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z' };\n        char[] vowels2 = new char[] { 'A', 'E', 'I',\
    \ 'O', 'U' };\n        char[] letters2 = new char[] { 'B', 'C', 'D', 'F', 'G',\
    \ 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z'\
    \ };\n        char[] vowels3 = new char[] { 'a', 'e', 'i', 'o', 'u' };\n     \
    \   char[] letters3 = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l',\
    \ 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[]\
    \ vowels4 = new char[] { 'A', 'E', 'I', 'O', 'U' };\n        char[] letters4 =\
    \ new char[] { 'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q',\
    \ 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z' };\n        char[] vowels5 = new char[]\
    \ { 'a', 'e', 'i', 'o', 'u' };\n        char[] letters5 = new char[] { 'b', 'c',\
    \ 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w',\
    \ 'x', 'y', 'z' };\n        char[] vowels6 = new char[] { 'A', 'E', 'I', 'O',\
    \ 'U' };\n        char[] letters6 = new char[] { 'B', 'C', 'D', 'F', 'G', 'H',\
    \ 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z' };\n\
    \        char[] vowels7 = new char[] { 'a', 'e', 'i', 'o', 'u' };\n        char[]\
    \ letters7 = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n',\
    \ 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] vowels8\
    \ = new char[] { 'A', 'E', 'I', 'O', 'U' };\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9h8me7ck.cs(19,26): error CS0161: ''Problem.Encode(string)'': not all
    code paths return a value

    '
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0df2de8992ef4cc78eb93b89c2d57f69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0df2de8992ef4cc78eb93b89c2d57f69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToUpper(c));\n            }\n            else {\n                result\
    \ += (char.ToLower(c));\n            }\n        }\n        char[] vowels = new\
    \ char[] { 'a', 'e', 'i', 'o', 'u' };\n        char[] letters = new char[] { 'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z' };\n        char[] vowels2 = new char[] { 'b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z' };\n        char[] letters2 = new char[] { 'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'\
    \ };\n        char[] vowels3 = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j',\
    \ 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n  \
    \      char[] letters3 = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k',\
    \ 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n       \
    \ char[] vowels4 = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm',\
    \ 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters4\
    \ = new char[] { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q',\
    \ 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] vowels5 = new char[]\
    \ { 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's',\
    \ 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] letters5 = new char[] { 'b',\
    \ 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v',\
    \ 'w', 'x', 'y', 'z' };\n        char[] vowels6 = new char[] { 'b', 'c', 'd',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z' };\n        char[] letters6 = new char[] { 'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'\
    \ };\n        char\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpitfa5wh1.cs(41,13): error CS1001: Identifier expected

    /tmp/tmpitfa5wh1.cs(41,13): error CS1002: ; expected

    '
  timestamp: 1659793624
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message) {\n            result += (char)(c - 1);\n        }\n   \
    \     foreach (char c in message) {\n            result += (char)(c + 1);\n  \
    \          result += (char)(c - 1);\n        }\n        foreach (char c in message)\
    \ {\n            result += (char)(c + 1);\n            result += (char)(c - 1);\n\
    \            result += (char)(c + 1);\n            result += (char)(c - 1);\n\
    \        }\n        foreach (char c in message) {\n            result += (char)(c\
    \ + 1);\n            result += (char)(c - 1);\n            result += (char)(c\
    \ + 1);\n            result += (char)(c - 1);\n            result += (char)(c\
    \ + 1);\n            result += (char)(c - 1);\n        }\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n            result +=\
    \ (char)(c - 1);\n            result += (char)(c + 1);\n            result +=\
    \ (char)(c - 1);\n            result += (char)(c + 1);\n            result +=\
    \ (char)(c - 1);\n            result += (char)(c + 1);\n            result +=\
    \ (char)(c - 1);\n        }\n        foreach (char c in message) {\n         \
    \   result += (char)(c + 1);\n            result += (char)(c - 1);\n         \
    \   result += (char)(c + 1);\n            result += (char)(c - 1);\n         \
    \   result += (char)(c + 1);\n            result += (char)(c - 1);\n         \
    \   result += (char)(c + 1);\n            result += (char)(c - 1);\n         \
    \   result += (char)(c + 1);\n            result += (char)(c - 1);\n        }\n\
    \        foreach (char c in message) {\n            result += (char)(c + 1);\n\
    \            result += (char)(c - 1);\n            result += (char)(c + 1);\n\
    \            result += (char)(c - 1);\n            result += (char)(c + 1);\n\
    \            result += (char)(c - 1);\n            result += (char)(c + 1);\n\
    \            result += (char)(c - 1);\n            result += (char)(c + 1);\n\
    \            result += (char)(c - 1);\n            result += (char)(c + 1);\n\
    \            result += (char)(c - 1);\n        }\n        foreach (char c in message)\
    \ {\n            result += (char)(c + 1);\n            result += (char)(c - 1);\n\
    \            result += (char)(c + 1);\n            result += (char)(c - 1);\n\
    \            result += (char)(c + 1);\n            result += (char)(c - 1);\n\
    \            result += (char)(c + 1);\n            result += (char)(c - 1);\n\
    \            result += (char)(c + 1);\n            result += (char)(c - 1);\n\
    \            result += (char)(c + 1);\n            result += (char)(c - 1);\n\
    \            result += (char)(c + 1);\n            result += (char)(c - 1);\n\
    \        }\n        foreach (char c in message) {\n            result += (char)(c\
    \ + 1);\n            result += (char)(c - 1);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzqvb3yiu.cs(101,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpzqvb3yiu.cs(109,2): error CS1513: } expected

    '
  timestamp: 1659793624
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n        }\n        foreach (char c in\
    \ result) {\n            int index = result.IndexOf(c);\n            if (index\
    \ != -1) {\n                string replacement = GetReplacement(c, index);\n \
    \               result += replacement;\n            }\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpf0a6vul1.cs(29,38): error CS0103: The name ''GetReplacement'' does not
    exist in the current context

    '
  timestamp: 1659793625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c ^ 0x20);\n        }\n      \
    \  foreach (char c in result.ToCharArray()) {\n            int index = ((int)c)\
    \ - 0x20;\n            if (index >= 0 && index < 26) {\n                result\
    \ += (char)(index + 'A');\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1427f6bed0244080a73448b268f47a3c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1427f6bed0244080a73448b268f47a3c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793625
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += char.ToUpper(c);\n            }\n            else {\n                result\
    \ += c;\n            }\n        }\n        char[] vowels = new char[] { 'a', 'e',\
    \ 'i', 'o', 'u' };\n        char[] consonants = new char[] { 'b', 'c', 'd', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z' };\n        char[] letters = new char[] { 'a', 'b', 'c', 'd', 'e', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z' };\n        char[] vowelsLetters = new char[] { 'a', 'e', 'i', 'o', 'u'\
    \ };\n        char[] consonantsLetters = new char[] { 'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'\
    \ };\n        char[] lettersLetters = new char[] { 'a', 'b', 'c', 'd', 'e', 'f',\
    \ 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y',\
    \ 'z' };\n        char[] vowelsConsonants = new char[] { 'a', 'e', 'i', 'o', 'u'\
    \ };\n        char[] consonantsConsonants = new char[] { 'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'y', 'z'\
    \ };\n        char[] lettersConsonants = new char[] { 'a', 'b', 'c', 'd', 'e',\
    \ 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x',\
    \ 'y', 'z' };\n        char[] vowelsLettersConsonants = new char[] { 'a', 'e',\
    \ 'i', 'o', 'u' };\n        char[] consonantsLettersConsonants = new char[] {\
    \ 'b', 'c', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't',\
    \ 'v', 'w', 'x', 'y', 'z' };\n        char[] lettersLettersConsonants = new char[]\
    \ { 'a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q',\
    \ 'r', 's', 't', 'v', 'w', 'x', 'y', 'z' };\n        char[] vowelsConsonantsLetters\
    \ = new char[] { 'a', 'e', 'i', 'o', 'u' };\n        char[] consonantsConsonantsLetters\
    \ = new char[] {\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7svjnh05.cs(43,6): error CS1002: ; expected

    /tmp/tmp7svjnh05.cs(44,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp7svjnh05.cs(52,2): error CS1513: } expected

    '
  timestamp: 1659793624
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(\n                ((int)c).ToString().ToUpper()\
    \ + (int)((int)c).ToString().ToLower());\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbxs_eqvs.cs(23,49): error CS0030: Cannot convert type ''string'' to ''int''

    '
  timestamp: 1659793625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message) {\n            result += (char)(c - 1);\n        }\n   \
    \     foreach (char c in message) {\n            result += (char)(c - 1);\n  \
    \      }\n        foreach (char c in message) {\n            result += (char)(c\
    \ + 1);\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"\
    Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"\
    ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"tHKS KS\
    \ C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\")).Equals((\"\
    k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <30614fb942dc4bff9273dafd6317eece>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <30614fb942dc4bff9273dafd6317eece>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793625
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n            else {\n                result\
    \ += (char.ToUpper(c));\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4983ac6d4bce42468ae251954597c83a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4983ac6d4bce42468ae251954597c83a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <123b9de3031a43c1be195ff59a6d3398>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <123b9de3031a43c1be195ff59a6d3398>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in result) {\n            if (char.IsUpper(c)) {\n                result\
    \ += (char)(c - 1);\n            }\n        }\n        foreach (char c in result)\
    \ {\n            if (char.IsUpper(c)) {\n                result += (char)(c +\
    \ 1);\n            }\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ddf1e5b10a7e42d892b78e3e7224a776>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ddf1e5b10a7e42d892b78e3e7224a776>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793624
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        foreach (char c in message.Replace(\"a\"\
    , \"A\").Replace(\"e\", \"E\").Replace(\"i\", \"I\").Replace(\"o\", \"O\").Replace(\"\
    u\", \"U\").Replace(\"y\", \"Y\").Replace(\"A\", \"a\").Replace(\"E\", \"e\").Replace(\"\
    I\", \"i\").Replace(\"O\", \"o\").Replace(\"U\", \"u\").Replace(\"Y\", \"y\"))\
    \ {\n            result += (char)(c + 1);\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f0ae68982fa14aa8aee1c58d2f973d03>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f0ae68982fa14aa8aee1c58d2f973d03>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            result += (char)(c + 1);\n        }\n        foreach\
    \ (char c in message.ToLower()) {\n            result += (char)(c + 1);\n    \
    \    }\n        foreach (char c in message.ToUpper()) {\n            result +=\
    \ (char)(c + 1);\n        }\n        return result;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Encode((\"TEST\")).Equals((\"tgst\"\
    )));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"mWDCSKR\")));\n    Debug.Assert(Encode((\"\
    YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"This is a message\")).Equals((\"\
    tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"I DoNt KnOw WhAt tO WrItE\"\
    )).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <32d711d8890d41e2b12d511cd59dd60d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <32d711d8890d41e2b12d511cd59dd60d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that takes a message, and encodes in\
    \ such a \n    // way that it swaps case of all letters, replaces all vowels in\
    \ \n    // the message with the letter that appears 2 places ahead of that \n\
    \    // vowel in the english alphabet. \n    // Assume only letters. \n    //\
    \ Examples:\n    // >>> Encode((\"test\"))\n    // (\"TGST\")\n    // >>> Encode((\"\
    This is a message\"))\n    // (\"tHKS KS C MGSSCGG\")\n    public static string\
    \ Encode(string message) {\n        string result = \"\";\n        foreach (char\
    \ c in message) {\n            if (char.IsLetter(c)) {\n                result\
    \ += (char.ToLower(c));\n            }\n            else {\n                result\
    \ += (char.ToUpper(c));\n            }\n        }\n        return result;\n  \
    \  }\n    public static void Main(string[] args) {\n    Debug.Assert(Encode((\"\
    TEST\")).Equals((\"tgst\")));\n    Debug.Assert(Encode((\"Mudasir\")).Equals((\"\
    mWDCSKR\")));\n    Debug.Assert(Encode((\"YES\")).Equals((\"ygs\")));\n    Debug.Assert(Encode((\"\
    This is a message\")).Equals((\"tHKS KS C MGSSCGG\")));\n    Debug.Assert(Encode((\"\
    I DoNt KnOw WhAt tO WrItE\")).Equals((\"k dQnT kNqW wHcT Tq wRkTg\")));\n    }\n\
    \n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4983ac6d4bce42468ae251954597c83a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <4983ac6d4bce42468ae251954597c83a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793622

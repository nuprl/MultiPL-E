language: cs
name: HumanEval_147_get_max_triples
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long \n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_mznrdiw.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp_mznrdiw.cs(106,13): error CS1001: Identifier expected

    /tmp/tmp_mznrdiw.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long count = 0;\n        long max = 0;\n        for (int i = 0;
    i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n            if
    (sum > max) {\n                max = sum;\n            }\n        }\n        for
    (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    long sum = a[i] + a[j] + a[k];\n
    \                   if (sum % 3 == 0) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv_83jczt.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpv_83jczt.cs(25,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpv_83jczt.cs(26,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpv_83jczt.cs(34,26): error CS0136: A local or parameter named ''sum'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmpv_83jczt.cs(34,32): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpv_83jczt.cs(34,39): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpv_83jczt.cs(34,46): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long count = 0;\n        long temp;\n        for(int i = 1; i <=
    n; i++) {\n            for(int j = i; j <= n; j++) {\n                for(int
    k = j; k <= n; k++) {\n                    temp = a[i] + a[j] + a[k];\n                    if(temp
    % 3 == 0) {\n                        count++;\n                        sum +=
    temp;\n                    }\n                }\n            }\n        }\n        return
    sum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9l638d1l.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp9l638d1l.cs(27,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp9l638d1l.cs(27,35): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp9l638d1l.cs(27,42): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            a[i]
    = i * i - i + 1;\n            sum += a[i];\n        }\n        long max = 0;\n
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;
    j++) {\n                for (int k = j + 1; k < n; k++) {\n                    if
    (a[i] < a[j] && a[i] < a[k]) {\n                        count++;\n                    }\n
    \                   if (a[j] < a[i] && a[j] < a[k]) {\n                        count++;\n
    \                   }\n                    if (a[k] < a[i] && a[k] < a[j]) {\n
    \                       count++;\n                    }\n                    if
    (a[i] > a[j] && a[i] > a[k]) {\n                        count++;\n                    }\n
    \                   if (a[j] > a[i] && a[j] > a[k]) {\n                        count++;\n
    \                   }\n                    if (a[k] > a[i] && a[k] > a[j]) {\n
    \                       count++;\n                    }\n                }\n            }\n
    \       }\n        long sum2 = sum;\n        long sum3 = sum;\n        long sum4
    = sum;\n        long sum5 = sum;\n        long sum6 = sum;\n        long sum7
    = sum;\n        long sum8 = sum;\n        long sum9 = sum;\n        long sum10
    = sum;\n        long sum11 = sum;\n        long sum12 = sum;\n        long sum13
    = sum;\n        long sum14 = sum;\n        long sum15 = sum;\n        long sum16
    = sum;\n        long sum17 = sum;\n        long sum18 = sum;\n        long sum19
    = sum;\n        long sum20 = sum;\n        long sum21 = sum;\n        long sum22
    = sum;\n        long sum23 = sum;\n        long sum24 = sum;\n        long sum25
    = sum;\n        long sum26 = sum;\n        long sum27 = sum;\n        long sum28
    = sum;\n        long sum29 = sum;\n        long sum30 = sum;\n        long sum31
    = sum;\n        long sum32 = sum;\n        long sum33 = sum;\n        long sum34
    = sum;\n        long sum35 = sum;\n        long sum36 = sum;\n        long sum37
    = sum;\n        long sum38 = sum;\n        long sum39 = sum;\n        long sum40
    = sum;\n        long sum41 = sum;\n        long sum42 = sum;\n        long sum4\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp115nmkcq.cs(93,18): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        for (int i = 1;
    i <= n; i++) {\n            a[i - 1] = (i * i - i + 1);\n            sum += a[i
    - 1];\n            if (sum > max)\n                max = sum;\n        }\n        for
    (int i = 1; i <= n; i++) {\n            long sum = 0;\n            for (int j
    = 1; j <= n; j++) {\n                sum += a[j];\n                if (sum > max)\n
    \                   max = sum;\n            }\n            long sum = 0;\n            for
    (int k = 1; k <= n; k++) {\n                sum += a[k];\n                if (sum
    > max)\n                    max = sum;\n            }\n            if (sum % 3
    == 0)\n                count++;\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmxknvtr7.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpmxknvtr7.cs(25,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpmxknvtr7.cs(26,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpmxknvtr7.cs(31,18): error CS0136: A local or parameter named ''sum'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmpmxknvtr7.cs(33,24): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpmxknvtr7.cs(37,18): error CS0128: A local variable or function named ''sum''
    is already defined in this scope

    /tmp/tmpmxknvtr7.cs(39,24): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpmxknvtr7.cs(37,18): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long count = 0;\n        long max = 0;\n        long min = 0;\n
    \       long temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long
    temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long temp7
    = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10 =
    0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13 =
    0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 =
    0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 =
    0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 =
    0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 =
    0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 =
    0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 =
    0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 =
    0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 =
    0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 =
    0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 =
    0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 =
    0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 =
    0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 =
    0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 =
    0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 =
    0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 =
    0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 =
    0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 =
    0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 =
    0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 =
    0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 =
    0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 =
    0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0joada20.cs(106,20): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long count = 0;\n        long max = 0;\n        long min = 0;\n
    \       long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long
    sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 =
    0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n
    \       long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long
    sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18
    = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n
    \       long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long
    sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28
    = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n
    \       long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long
    sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38
    = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n
    \       long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long
    sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48
    = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n
    \       long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long
    sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long sum58
    = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n
    \       long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n        long
    sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long sum68
    = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n
    \       long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n        long
    sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long sum78
    = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n
    \       long sum82 = 0;\n        long \n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphgqao8vu.cs(106,13): error CS1001: Identifier expected

    /tmp/tmphgqao8vu.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long sum2 = 0;\n
    \       long temp2 = 0;\n        long sum3 = 0;\n        long temp3 = 0;\n        long
    sum4 = 0;\n        long temp4 = 0;\n        long sum5 = 0;\n        long temp5
    = 0;\n        long sum6 = 0;\n        long temp6 = 0;\n        long sum7 = 0;\n
    \       long temp7 = 0;\n        long sum8 = 0;\n        long temp8 = 0;\n        long
    sum9 = 0;\n        long temp9 = 0;\n        long sum10 = 0;\n        long temp10
    = 0;\n        long sum11 = 0;\n        long temp11 = 0;\n        long sum12 =
    0;\n        long temp12 = 0;\n        long sum13 = 0;\n        long temp13 = 0;\n
    \       long sum14 = 0;\n        long temp14 = 0;\n        long sum15 = 0;\n        long
    temp15 = 0;\n        long sum16 = 0;\n        long temp16 = 0;\n        long sum17
    = 0;\n        long temp17 = 0;\n        long sum18 = 0;\n        long temp18 =
    0;\n        long sum19 = 0;\n        long temp19 = 0;\n        long sum20 = 0;\n
    \       long temp20 = 0;\n        long sum21 = 0;\n        long temp21 = 0;\n
    \       long sum22 = 0;\n        long temp22 = 0;\n        long sum23 = 0;\n        long
    temp23 = 0;\n        long sum24 = 0;\n        long temp24 = 0;\n        long sum25
    = 0;\n        long temp25 = 0;\n        long sum26 = 0;\n        long temp26 =
    0;\n        long sum27 = 0;\n        long temp27 = 0;\n        long sum28 = 0;\n
    \       long temp28 = 0;\n        long sum29 = 0;\n        long temp29 = 0;\n
    \       long sum30 = 0;\n        long temp30 = 0;\n        long sum31 = 0;\n        long
    temp31 = 0;\n        long sum32 = 0;\n        long temp32 = 0;\n        long sum33
    = 0;\n        long temp33 = 0;\n        long sum34 = 0;\n        long temp34 =
    0;\n        long sum35 = 0;\n        long temp35 = 0;\n        long sum36 = 0;\n
    \       long temp36 = 0;\n        long sum37 = 0;\n        long temp37 = 0;\n
    \       long sum38 = 0;\n        long temp38 = 0;\n        long sum39 = 0;\n        long
    temp39 = 0;\n        long sum40 = 0;\n        long temp40 = 0;\n        long sum41
    = 0;\n        long temp41 = 0;\n        long sum42 = 0;\n        long temp42 =
    0;\n        long sum43 = 0;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplfuqm6nf.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmplfuqm6nf.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmplfuqm6nf.cs(22,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmplfuqm6nf.cs(23,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmplfuqm6nf.cs(24,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmplfuqm6nf.cs(25,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmplfuqm6nf.cs(26,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmplfuqm6nf.cs(27,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmplfuqm6nf.cs(28,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmplfuqm6nf.cs(29,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmplfuqm6nf.cs(30,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmplfuqm6nf.cs(31,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmplfuqm6nf.cs(32,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmplfuqm6nf.cs(33,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmplfuqm6nf.cs(34,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmplfuqm6nf.cs(35,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmplfuqm6nf.cs(36,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmplfuqm6nf.cs(37,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmplfuqm6nf.cs(38,14): warning CS0219: The variable'
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_j15sm4k.cs(106,18): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_j15sm4k.cs(106,18): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp;\n        for
    (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum
    += a[i];\n        }\n        for (int i = 0; i < n; i++) {\n            for (int
    j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n
    \                   temp = a[i] + a[j] + a[k];\n                    if (temp %
    3 == 0) {\n                        count++;\n                        if (temp
    > max) {\n                            max = temp;\n                        }\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <913877d2d23a4603a1f8e6a6f915123e>:0
    \n"
  stdout: ''
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            a[i]
    = i * i - i + 1;\n            sum += a[i];\n        }\n        long sum2 = sum;\n
    \       while (sum2 > 0) {\n            long sum3 = sum2;\n            sum2 =
    0;\n            for (int i = 0; i < n; i++) {\n                long temp = a[i];\n
    \               a[i] = temp - sum3;\n                sum2 += a[i];\n            }\n
    \           count++;\n        }\n        return count;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz7kzqlwg.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpz7kzqlwg.cs(24,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpz7kzqlwg.cs(25,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpz7kzqlwg.cs(32,29): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpz7kzqlwg.cs(33,17): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpz7kzqlwg.cs(34,25): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long min = 0;\n        long sum2 = 0;\n        long
    max2 = 0;\n        long min2 = 0;\n        long sum3 = 0;\n        long max3 =
    0;\n        long min3 = 0;\n        long sum4 = 0;\n        long max4 = 0;\n        long
    min4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n        long min5 =
    0;\n        long sum6 = 0;\n        long max6 = 0;\n        long min6 = 0;\n        long
    sum7 = 0;\n        long max7 = 0;\n        long min7 = 0;\n        long sum8 =
    0;\n        long max8 = 0;\n        long min8 = 0;\n        long sum9 = 0;\n        long
    max9 = 0;\n        long min9 = 0;\n        long sum10 = 0;\n        long max10
    = 0;\n        long min10 = 0;\n        long sum11 = 0;\n        long max11 = 0;\n
    \       long min11 = 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long
    min12 = 0;\n        long sum13 = 0;\n        long max13 = 0;\n        long min13
    = 0;\n        long sum14 = 0;\n        long max14 = 0;\n        long min14 = 0;\n
    \       long sum15 = 0;\n        long max15 = 0;\n        long min15 = 0;\n        long
    sum16 = 0;\n        long max16 = 0;\n        long min16 = 0;\n        long sum17
    = 0;\n        long max17 = 0;\n        long min17 = 0;\n        long sum18 = 0;\n
    \       long max18 = 0;\n        long min18 = 0;\n        long sum19 = 0;\n        long
    max19 = 0;\n        long min19 = 0;\n        long sum20 = 0;\n        long max20
    = 0;\n        long min20 = 0;\n        long sum21 = 0;\n        long max21 = 0;\n
    \       long min21 = 0;\n        long sum22 = 0;\n        long max22 = 0;\n        long
    min22 = 0;\n        long sum23 = 0;\n        long max23 = 0;\n        long min23
    = 0;\n        long sum24 = 0;\n        long max24 = 0;\n        long min24 = 0;\n
    \       long sum25 = 0;\n        long max25 = 0;\n        long min25 = 0;\n        long
    sum26 = 0;\n        long max26 = 0;\n        long min26 = 0;\n        long sum27
    = 0;\n        long max27 = 0;\n        long min27 = 0;\n        long sum28 = 0;\n
    \       long max28 = 0;\n        long min28 = 0;\n        long sum29 = 0;\n        long
    max29 = 0;\n        long min\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiw0tkn1z.cs(107,17): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long count = 0;\n        long max = 0;\n        for (int i = 0;
    i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n            if
    (sum > max) {\n                max = sum;\n            }\n        }\n        for
    (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    long sum = a[i] + a[j] + a[k];\n
    \                   if (sum % 3 == 0) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2y13p3pn.cs(34,26): error CS0136: A local or parameter named ''sum'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n
    \       long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long
    temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10
    = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13
    = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16
    = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19
    = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22
    = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25
    = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28
    = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31
    = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34
    = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37
    = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40
    = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43
    = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46
    = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49
    = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52
    = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55
    = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58
    = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61
    = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64
    = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67
    = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70
    = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73
    = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76
    = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79
    = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82
    = 0;\n        long temp83 = 0;\n        long temp84 = 0;\n\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj7sp0h44.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpj7sp0h44.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpj7sp0h44.cs(22,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmpj7sp0h44.cs(23,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmpj7sp0h44.cs(24,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmpj7sp0h44.cs(25,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmpj7sp0h44.cs(26,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmpj7sp0h44.cs(27,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmpj7sp0h44.cs(28,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmpj7sp0h44.cs(29,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmpj7sp0h44.cs(30,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmpj7sp0h44.cs(31,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmpj7sp0h44.cs(32,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmpj7sp0h44.cs(33,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmpj7sp0h44.cs(34,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmpj7sp0h44.cs(35,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmpj7sp0h44.cs(36,14): warning CS0219: The variable ''temp15'' is assigned
    but its value is never used

    /tmp/tmpj7sp0h44.cs(37,14): warning CS0219: The variable ''temp16'' is assigned
    but its value is never used

    /tmp/tmpj7sp0h44.cs(38,14): warning CS02'
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long sum2 = 0;\n        long max2 = 0;\n
    \       long sum3 = 0;\n        long max3 = 0;\n        long sum4 = 0;\n        long
    max4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n        long sum6 =
    0;\n        long max6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n        long
    sum8 = 0;\n        long max8 = 0;\n        long sum9 = 0;\n        long max9 =
    0;\n        long sum10 = 0;\n        long max10 = 0;\n        long sum11 = 0;\n
    \       long max11 = 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long
    sum13 = 0;\n        long max13 = 0;\n        long sum14 = 0;\n        long max14
    = 0;\n        long sum15 = 0;\n        long max15 = 0;\n        long sum16 = 0;\n
    \       long max16 = 0;\n        long sum17 = 0;\n        long max17 = 0;\n        long
    sum18 = 0;\n        long max18 = 0;\n        long sum19 = 0;\n        long max19
    = 0;\n        long sum20 = 0;\n        long max20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long sum22 = 0;\n        long max22 = 0;\n        long
    sum23 = 0;\n        long max23 = 0;\n        long sum24 = 0;\n        long max24
    = 0;\n        long sum25 = 0;\n        long max25 = 0;\n        long sum26 = 0;\n
    \       long max26 = 0;\n        long sum27 = 0;\n        long max27 = 0;\n        long
    sum28 = 0;\n        long max28 = 0;\n        long sum29 = 0;\n        long max29
    = 0;\n        long sum30 = 0;\n        long max30 = 0;\n        long sum31 = 0;\n
    \       long max31 = 0;\n        long sum32 = 0;\n        long max32 = 0;\n        long
    sum33 = 0;\n        long max33 = 0;\n        long sum34 = 0;\n        long max34
    = 0;\n        long sum35 = 0;\n        long max35 = 0;\n        long sum36 = 0;\n
    \       long max36 = 0;\n        long sum37 = 0;\n        long max37 = 0;\n        long
    sum38 = 0;\n        long max38 = 0;\n        long sum39 = 0;\n        long max39
    = 0;\n        long sum40 = 0;\n        long max40 = 0;\n        long sum41 = 0;\n
    \       long max41 = 0;\n        long sum42 = 0;\n        long max42 = 0;\n        long
    sum43 = 0;\n        long max\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd0otoi9q.cs(106,17): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        for (int i = 0;
    i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n            if
    (sum > max) {\n                max = sum;\n            }\n        }\n        for
    (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    if (a[i] < a[j] && a[i] < a[k]
    && a[j] < a[k]) {\n                        count++;\n                    }\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnv1g47lb.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpnv1g47lb.cs(25,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpnv1g47lb.cs(26,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpnv1g47lb.cs(34,25): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpnv1g47lb.cs(34,32): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpnv1g47lb.cs(34,40): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpnv1g47lb.cs(34,47): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpnv1g47lb.cs(34,55): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpnv1g47lb.cs(34,62): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long temp2 = 0;\n
    \       long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n        long
    temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long temp9
    = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12
    = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15
    = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18
    = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21
    = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24
    = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27
    = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30
    = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33
    = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36
    = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39
    = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42
    = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45
    = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48
    = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51
    = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54
    = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57
    = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60
    = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63
    = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66
    = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69
    = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72
    = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75
    = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78
    = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long temp81
    = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n        \n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp66kfkz4f.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp66kfkz4f.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp66kfkz4f.cs(22,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmp66kfkz4f.cs(23,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(24,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(25,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(26,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(27,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(28,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(29,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(30,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(31,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(32,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(33,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(34,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(35,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(36,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(37,14): warning CS0219: The variable ''temp15'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(38,14): warning CS0219:'
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long sum2 = 0;\n        long max2 = 0;\n
    \       long sum3 = 0;\n        long max3 = 0;\n        long sum4 = 0;\n        long
    max4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n        long sum6 =
    0;\n        long max6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n        long
    sum8 = 0;\n        long max8 = 0;\n        long sum9 = 0;\n        long max9 =
    0;\n        long sum10 = 0;\n        long max10 = 0;\n        long sum11 = 0;\n
    \       long max11 = 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long
    sum13 = 0;\n        long max13 = 0;\n        long sum14 = 0;\n        long max14
    = 0;\n        long sum15 = 0;\n        long max15 = 0;\n        long sum16 = 0;\n
    \       long max16 = 0;\n        long sum17 = 0;\n        long max17 = 0;\n        long
    sum18 = 0;\n        long max18 = 0;\n        long sum19 = 0;\n        long max19
    = 0;\n        long sum20 = 0;\n        long max20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long sum22 = 0;\n        long max22 = 0;\n        long
    sum23 = 0;\n        long max23 = 0;\n        long sum24 = 0;\n        long max24
    = 0;\n        long sum25 = 0;\n        long max25 = 0;\n        long sum26 = 0;\n
    \       long max26 = 0;\n        long sum27 = 0;\n        long max27 = 0;\n        long
    sum28 = 0;\n        long max28 = 0;\n        long sum29 = 0;\n        long max29
    = 0;\n        long sum30 = 0;\n        long max30 = 0;\n        long sum31 = 0;\n
    \       long max31 = 0;\n        long sum32 = 0;\n        long max32 = 0;\n        long
    sum33 = 0;\n        long max33 = 0;\n        long sum34 = 0;\n        long max34
    = 0;\n        long sum35 = 0;\n        long max35 = 0;\n        long sum36 = 0;\n
    \       long max36 = 0;\n        long sum37 = 0;\n        long max37 = 0;\n        long
    sum38 = 0;\n        long max38 = 0;\n        long sum39 = 0;\n        long max39
    = 0;\n        long sum40 = 0;\n        long max40 = 0;\n        long sum41 = 0;\n
    \       long max41 = 0;\n        long sum42 = 0;\n        long max42 = 0;\n        long
    sum43 = 0;\n        long max43\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsjmrwb0d.cs(106,19): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long sum2 = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long \n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0jxnscpx.cs(106,13): error CS1001: Identifier expected

    /tmp/tmp0jxnscpx.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp;\n        long count = 0;\n        long
    i;\n        long j;\n        long k;\n        long sum2;\n        long sum3;\n
    \       long sum4;\n        long sum5;\n        long sum6;\n        long sum7;\n
    \       long sum8;\n        long sum9;\n        long sum10;\n        long sum11;\n
    \       long sum12;\n        long sum13;\n        long sum14;\n        long sum15;\n
    \       long sum16;\n        long sum17;\n        long sum18;\n        long sum19;\n
    \       long sum20;\n        long sum21;\n        long sum22;\n        long sum23;\n
    \       long sum24;\n        long sum25;\n        long sum26;\n        long sum27;\n
    \       long sum28;\n        long sum29;\n        long sum30;\n        long sum31;\n
    \       long sum32;\n        long sum33;\n        long sum34;\n        long sum35;\n
    \       long sum36;\n        long sum37;\n        long sum38;\n        long sum39;\n
    \       long sum40;\n        long sum41;\n        long sum42;\n        long sum43;\n
    \       long sum44;\n        long sum45;\n        long sum46;\n        long sum47;\n
    \       long sum48;\n        long sum49;\n        long sum50;\n        long sum51;\n
    \       long sum52;\n        long sum53;\n        long sum54;\n        long sum55;\n
    \       long sum56;\n        long sum57;\n        long sum58;\n        long sum59;\n
    \       long sum60;\n        long sum61;\n        long sum62;\n        long sum63;\n
    \       long sum64;\n        long sum65;\n        long sum66;\n        long sum67;\n
    \       long sum68;\n        long sum69;\n        long sum70;\n        long sum71;\n
    \       long sum72;\n        long sum73;\n        long sum74;\n        long sum75;\n
    \       long sum76;\n        long sum77;\n        long sum78;\n        long sum79;\n
    \       long sum80;\n        long sum81;\n        long sum82;\n        long sum83\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpoet8oe8n.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpoet8oe8n.cs(109,19): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long \n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu85bd_nw.cs(106,13): error CS1001: Identifier expected

    /tmp/tmpu85bd_nw.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n
    \       long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long
    sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11
    = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n
    \       long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long
    sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21
    = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n
    \       long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long
    sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31
    = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long
    sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41
    = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n
    \       long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long
    sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51
    = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long
    sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61
    = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n
    \       long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long
    sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71
    = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n
    \       long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long
    sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81
    = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n
    \       long sum85 = 0;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph_9yrlpb.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmph_9yrlpb.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmph_9yrlpb.cs(22,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(23,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(24,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(25,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(26,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(27,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(28,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(29,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(30,14): warning CS0219: The variable ''sum10'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(31,14): warning CS0219: The variable ''sum11'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(32,14): warning CS0219: The variable ''sum12'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(33,14): warning CS0219: The variable ''sum13'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(34,14): warning CS0219: The variable ''sum14'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(35,14): warning CS0219: The variable ''sum15'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(36,14): warning CS0219: The variable ''sum16'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(37,14): warning CS0219: The variable ''sum17'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(38,14): warning CS0219: The variab'
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long min = 0;\n        long count = 0;\n
    \       long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long
    sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 =
    0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n
    \       long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long
    sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18
    = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n
    \       long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long
    sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28
    = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n
    \       long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long
    sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38
    = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n
    \       long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long
    sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48
    = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n
    \       long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long
    sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long sum58
    = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n
    \       long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n        long
    sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long sum68
    = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n
    \       long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n        long
    sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long sum78
    = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n
    \       long sum82 = 0;\n        long sum\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbrnhtng6.cs(106,17): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n
    \       long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long
    sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11
    = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n
    \       long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long
    sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21
    = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n
    \       long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long
    sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31
    = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long
    sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41
    = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n
    \       long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long
    sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51
    = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long
    sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61
    = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n
    \       long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long
    sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71
    = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n
    \       long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long
    sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81
    = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n
    \       long sum85\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7clfcaso.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp7clfcaso.cs(105,19): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        for (int i = 0;
    i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n            if
    (sum > max)\n                max = sum;\n        }\n        for (int i = 0; i
    < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    long sum = a[i] + a[j] + a[k];\n
    \                   if (sum % 3 == 0)\n                        count++;\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5r4k_f8b.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp;\n        long count = 0;\n        long
    sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long sum5 =
    0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long
    sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n        long sum12
    = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n
    \       long sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n        long
    sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n        long sum22
    = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n
    \       long sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long
    sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32
    = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n
    \       long sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long
    sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long sum42
    = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n
    \       long sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n        long
    sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n        long sum52
    = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n
    \       long sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n        long
    sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n        long sum62
    = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n
    \       long sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long
    sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n        long sum72
    = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n
    \       long sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n        long
    sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n        long sum82
    = 0;\n        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8f14m0l7.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp8f14m0l7.cs(106,13): error CS1001: Identifier expected

    /tmp/tmp8f14m0l7.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long min = 0;\n        long maxSum = 0;\n
    \       long minSum = 0;\n        long maxSum2 = 0;\n        long minSum2 = 0;\n
    \       long maxSum3 = 0;\n        long minSum3 = 0;\n        long maxSum4 = 0;\n
    \       long minSum4 = 0;\n        long maxSum5 = 0;\n        long minSum5 = 0;\n
    \       long maxSum6 = 0;\n        long minSum6 = 0;\n        long maxSum7 = 0;\n
    \       long minSum7 = 0;\n        long maxSum8 = 0;\n        long minSum8 = 0;\n
    \       long maxSum9 = 0;\n        long minSum9 = 0;\n        long maxSum10 =
    0;\n        long minSum10 = 0;\n        long maxSum11 = 0;\n        long minSum11
    = 0;\n        long maxSum12 = 0;\n        long minSum12 = 0;\n        long maxSum13
    = 0;\n        long minSum13 = 0;\n        long maxSum14 = 0;\n        long minSum14
    = 0;\n        long maxSum15 = 0;\n        long minSum15 = 0;\n        long maxSum16
    = 0;\n        long minSum16 = 0;\n        long maxSum17 = 0;\n        long minSum17
    = 0;\n        long maxSum18 = 0;\n        long minSum18 = 0;\n        long maxSum19
    = 0;\n        long minSum19 = 0;\n        long maxSum20 = 0;\n        long minSum20
    = 0;\n        long maxSum21 = 0;\n        long minSum21 = 0;\n        long maxSum22
    = 0;\n        long minSum22 = 0;\n        long maxSum23 = 0;\n        long minSum23
    = 0;\n        long maxSum24 = 0;\n        long minSum24 = 0;\n        long maxSum25
    = 0;\n        long minSum25 = 0;\n        long maxSum26 = 0;\n        long minSum26
    = 0;\n        long maxSum27 = 0;\n        long minSum27 = 0;\n        long maxSum28
    = 0;\n        long minSum28 = 0;\n        long maxSum29 = 0;\n        long minSum29
    = 0;\n        long maxSum30 = 0;\n        long minSum30 = 0;\n        long maxSum31
    = 0;\n        long minSum31 = 0;\n        long maxSum32 = 0;\n        long minSum32
    = 0;\n        long maxSum33 = 0;\n        long minSum33 = 0;\n        long maxSum34
    = 0;\n        long minSum34 = 0;\n        long maxSum35 = 0;\n        long minSum35
    = 0;\n        long maxSum36 = 0;\n        long \n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpynfqifml.cs(95,13): error CS1001: Identifier expected

    /tmp/tmpynfqifml.cs(95,13): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long count = 0;\n
    \       for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum
    += a[i];\n            if (sum > max) {\n                max = sum;\n            }\n
    \       }\n        for (int i = 0; i < n; i++) {\n            if (a[i] % 3 ==
    0) {\n                temp = a[i];\n                for (int j = i + 1; j < n;
    j++) {\n                    if (a[j] % 3 == 0) {\n                        temp
    += a[j];\n                        for (int k = j + 1; k < n; k++) {\n                            if
    (a[k] % 3 == 0) {\n                                temp += a[k];\n                                if
    (temp % 3 == 0) {\n                                    count++;\n                                }\n
    \                           }\n                        }\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8d74093c5a3f45e9a34d2a99bf55a26e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8d74093c5a3f45e9a34d2a99bf55a26e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp;\n        for (int i = 0; i < n;
    i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n        }\n
    \       max = sum;\n        for (int i = 0; i < n; i++) {\n            for (int
    j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n
    \                   temp = a[i] + a[j] + a[k];\n                    if (temp %
    3 == 0) {\n                        max = Math.Max(max, temp);\n                    }\n
    \               }\n            }\n        }\n        return max;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphnhekiwp.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmphnhekiwp.cs(25,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmphnhekiwp.cs(26,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmphnhekiwp.cs(32,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmphnhekiwp.cs(32,35): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmphnhekiwp.cs(32,42): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long count = 0;\n
    \       for (int i = 1; i <= n; i++) {\n            a[i - 1] = (i * i - i + 1);\n
    \           sum += a[i - 1];\n        }\n        for (int i = 1; i <= n; i++)
    {\n            for (int j = 1; j <= n; j++) {\n                for (int k = 1;
    k <= n; k++) {\n                    if (i == j && j == k) {\n                        continue;\n
    \                   }\n                    temp = a[i - 1] + a[j - 1] + a[k -
    1];\n                    if (temp % 3 == 0) {\n                        count++;\n
    \                       if (temp > max) {\n                            max = temp;\n
    \                       }\n                    }\n                }\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsykko82m.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpsykko82m.cs(26,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpsykko82m.cs(27,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpsykko82m.cs(35,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpsykko82m.cs(35,39): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpsykko82m.cs(35,50): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n
    \       long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long
    sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11
    = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n
    \       long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long
    sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21
    = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n
    \       long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long
    sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31
    = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long
    sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41
    = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n
    \       long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long
    sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51
    = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long
    sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61
    = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n
    \       long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long
    sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71
    = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n
    \       long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long
    sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81
    = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n
    \       long sum85 = 0;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph_9yrlpb.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmph_9yrlpb.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmph_9yrlpb.cs(22,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(23,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(24,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(25,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(26,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(27,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(28,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(29,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(30,14): warning CS0219: The variable ''sum10'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(31,14): warning CS0219: The variable ''sum11'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(32,14): warning CS0219: The variable ''sum12'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(33,14): warning CS0219: The variable ''sum13'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(34,14): warning CS0219: The variable ''sum14'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(35,14): warning CS0219: The variable ''sum15'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(36,14): warning CS0219: The variable ''sum16'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(37,14): warning CS0219: The variable ''sum17'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(38,14): warning CS0219: The variab'
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long min = 0;\n        long count = 0;\n
    \       long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long
    sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 =
    0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n
    \       long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long
    sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18
    = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n
    \       long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long
    sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28
    = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n
    \       long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long
    sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38
    = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n
    \       long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long
    sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48
    = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n
    \       long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long
    sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long sum58
    = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n
    \       long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n        long
    sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long sum68
    = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n
    \       long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n        long
    sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long sum78
    = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n
    \       long sum82 = 0;\n        long sum\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbrnhtng6.cs(106,17): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        for (int i = 0;
    i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n            if
    (sum > max) {\n                max = sum;\n            }\n        }\n        for
    (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    long sum = 0;\n                    for
    (int l = 0; l < n; l++) {\n                        sum += a[l];\n                    }\n
    \                   if (sum % 3 == 0) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv42xa75p.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpv42xa75p.cs(25,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpv42xa75p.cs(26,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpv42xa75p.cs(34,26): error CS0136: A local or parameter named ''sum'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmpv42xa75p.cs(36,32): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long sumOfSquares
    = 0;\n        long squareOfSum = 0;\n        long sumOfSquareOfSquares = 0;\n
    \       long squareOfSumOfSquares = 0;\n        long sumOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOf\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0ppplzix.cs(69,27): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long min = 0;\n        long maxTriples =
    0;\n        long minTriples = 0;\n        long sumTriples = 0;\n        long sumTriples
    = 0;\n        long sumTriples = 0;\n        long sumTriples = 0;\n        long
    sumTriples = 0;\n        long sumTriples = 0;\n        long sumTriples = 0;\n
    \       long sumTriples = 0;\n        long sumTriples = 0;\n        long sumTriples
    = 0;\n        long sumTriples = 0;\n        long sumTriples = 0;\n        long
    sumTriples = 0;\n        long sumTriples = 0;\n        long sumTriples = 0;\n
    \       long sumTriples = 0;\n        long sumTriples = 0;\n        long sumTriples
    = 0;\n        long sumTriples = 0;\n        long sumTriples = 0;\n        long
    sumTriples = 0;\n        long sumTriples = 0;\n        long sumTriples = 0;\n
    \       long sumTriples = 0;\n        long sumTriples = 0;\n        long sumTriples
    = 0;\n        long sumTriples = 0;\n        long sumTriples = 0;\n        long
    sumTriples = 0;\n        long sumTriples = 0;\n        long sumTriples = 0;\n
    \       long sumTriples = 0;\n        long sumTriples = 0;\n        long sumTriples
    = 0;\n        long sumTriples = 0;\n        long sumTriples = 0;\n        long
    sumTriples = 0;\n        long sumTriples = 0;\n        long sumTriples = 0;\n
    \       long sumTriples = 0;\n        long sumTriples = 0;\n        long sumTriples
    = 0;\n        long sumTriples = 0;\n        long sumTriples = 0;\n        long
    sumTriples = 0;\n        long sumTriples = 0;\n        long sumTriples = 0;\n
    \       long sumTriples = 0;\n        long sumTriples = 0;\n        long sumTriples
    = 0;\n        long sumTriples = 0;\n        long sumTriples = 0;\n        long
    sumTriples = 0;\n        long sumTriples = 0;\n        long sumTriples = 0;\n
    \       long sumTriples = 0;\n        long sumTriples = 0;\n        long sumTriples
    = 0;\n        long sumTriples = 0;\n        long sumTriples = 0;\n        long
    sumTriples = 0;\n        long sumTriples = 0;\n        long sumTriples = 0;\n
    \       long sumTriples = 0;\n        long sumTriples = 0;\n        long sumTriples
    = 0;\n        long sumTriples = 0;\n        long sumTriples = 0;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpn2jmjxa4.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpn2jmjxa4.cs(27,14): error CS0128: A local variable or function named ''sumTriples''
    is already defined in this scope

    /tmp/tmpn2jmjxa4.cs(28,14): error CS0128: A local variable or function named ''sumTriples''
    is already defined in this scope

    /tmp/tmpn2jmjxa4.cs(29,14): error CS0128: A local variable or function named ''sumTriples''
    is already defined in this scope

    /tmp/tmpn2jmjxa4.cs(30,14): error CS0128: A local variable or function named ''sumTriples''
    is already defined in this scope

    /tmp/tmpn2jmjxa4.cs(31,14): error CS0128: A local variable or function named ''sumTriples''
    is already defined in this scope

    /tmp/tmpn2jmjxa4.cs(32,14): error CS0128: A local variable or function named ''sumTriples''
    is already defined in this scope

    /tmp/tmpn2jmjxa4.cs(33,14): error CS0128: A local variable or function named ''sumTriples''
    is already defined in this scope

    /tmp/tmpn2jmjxa4.cs(34,14): error CS0128: A local variable or function named ''sumTriples''
    is already defined in this scope

    /tmp/tmpn2jmjxa4.cs(35,14): error CS0128: A local variable or function named ''sumTriples''
    is already defined in this scope

    /tmp/tmpn2jmjxa4.cs(36,14): error CS0128: A local variable or function named ''sumTriples''
    is already defined in this scope

    /tmp/tmpn2jmjxa4.cs(37,14): error CS0128: A local variable or function named ''sumTriples''
    is already defined in this scope

    /tmp/tmpn2jmjxa4.cs(38,14): error CS0128: A local variable or function named ''sumTriples''
    is already defined in this scope

    /tmp/tmpn2jmjxa4.cs(39,14): error CS0128: A local variable or function named ''sumTriples''
    is already defined in this scope

    /tmp/tmpn2jmjxa4.cs(40,14): error CS0128: A local variable or function named ''sumTriples''
    is already defined in this scope

    /tmp/tmpn2jmjxa4.cs(41,14): error CS0128: A local variable or function named ''sumTriples''
    is already define'
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n
    \       long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long
    sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11
    = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n
    \       long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long
    sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21
    = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n
    \       long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long
    sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31
    = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long
    sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41
    = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n
    \       long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long
    sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51
    = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long
    sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61
    = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n
    \       long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long
    sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71
    = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n
    \       long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long
    sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81
    = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n
    \       long sum85 = 0;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph_9yrlpb.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmph_9yrlpb.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmph_9yrlpb.cs(22,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(23,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(24,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(25,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(26,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(27,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(28,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(29,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(30,14): warning CS0219: The variable ''sum10'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(31,14): warning CS0219: The variable ''sum11'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(32,14): warning CS0219: The variable ''sum12'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(33,14): warning CS0219: The variable ''sum13'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(34,14): warning CS0219: The variable ''sum14'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(35,14): warning CS0219: The variable ''sum15'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(36,14): warning CS0219: The variable ''sum16'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(37,14): warning CS0219: The variable ''sum17'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(38,14): warning CS0219: The variab'
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long count = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmput8nbui2.cs(106,18): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long sum2 = 0;\n
    \       long max2 = 0;\n        long count2 = 0;\n        long sum3 = 0;\n        long
    max3 = 0;\n        long count3 = 0;\n        long sum4 = 0;\n        long max4
    = 0;\n        long count4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n
    \       long count5 = 0;\n        long sum6 = 0;\n        long max6 = 0;\n        long
    count6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n        long count7
    = 0;\n        long sum8 = 0;\n        long max8 = 0;\n        long count8 = 0;\n
    \       long sum9 = 0;\n        long max9 = 0;\n        long count9 = 0;\n        long
    sum10 = 0;\n        long max10 = 0;\n        long count10 = 0;\n        long sum11
    = 0;\n        long max11 = 0;\n        long count11 = 0;\n        long sum12 =
    0;\n        long max12 = 0;\n        long count12 = 0;\n        long sum13 = 0;\n
    \       long max13 = 0;\n        long count13 = 0;\n        long sum14 = 0;\n
    \       long max14 = 0;\n        long count14 = 0;\n        long sum15 = 0;\n
    \       long max15 = 0;\n        long count15 = 0;\n        long sum16 = 0;\n
    \       long max16 = 0;\n        long count16 = 0;\n        long sum17 = 0;\n
    \       long max17 = 0;\n        long count17 = 0;\n        long sum18 = 0;\n
    \       long max18 = 0;\n        long count18 = 0;\n        long sum19 = 0;\n
    \       long max19 = 0;\n        long count19 = 0;\n        long sum20 = 0;\n
    \       long max20 = 0;\n        long count20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long count21 = 0;\n        long sum22 = 0;\n
    \       long max22 = 0;\n        long count22 = 0;\n        long sum23 = 0;\n
    \       long max23 = 0;\n        long count23 = 0;\n        long sum24 = 0;\n
    \       long max24 = 0;\n        long count24 = 0;\n        long sum25 = 0;\n
    \       long max25 = 0;\n        long count25 = 0;\n        long sum26 = 0;\n
    \       long max26 = 0;\n        long count26 = 0;\n        long sum27 = 0;\n
    \       long max27 = 0;\n        long count27 = 0;\n        long sum28 = 0;\n
    \       long max28 = 0;\n        long count28 = 0;\n        long sum29 = 0;\n
    \       long max29 = 0;\n        long count29\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpin32jv4u.cs(107,21): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        for (int i = 0;
    i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n            if
    (sum > max) {\n                max = sum;\n            }\n        }\n        for
    (int i = 0; i < n; i++) {\n            count += (a[i] + a[i] + a[i]) % 3 == 0;\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgfxfd2x5.cs(32,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp;\n        for
    (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum
    += a[i];\n            if (sum > max) {\n                max = sum;\n            }\n
    \       }\n        for (int i = 0; i < n; i++) {\n            for (int j = i +
    1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    temp
    = a[i] + a[j] + a[k];\n                    if (temp % 3 == 0) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk5kmr8_u.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpk5kmr8_u.cs(26,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpk5kmr8_u.cs(27,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpk5kmr8_u.cs(35,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpk5kmr8_u.cs(35,35): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpk5kmr8_u.cs(35,42): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long \n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_mznrdiw.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp_mznrdiw.cs(106,13): error CS1001: Identifier expected

    /tmp/tmp_mznrdiw.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        for (int i = 0;
    i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n            if
    (sum > max)\n                max = sum;\n        }\n        for (int i = 0; i
    < n; i++) {\n            long sum = 0;\n            for (int j = i + 1; j < n;
    j++) {\n                for (int k = j + 1; k < n; k++) {\n                    sum
    += a[j] * a[k] - a[j] * a[j] - a[k] * a[k];\n                }\n            }\n
    \           if (sum % 3 == 0)\n                count++;\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqrc1_pnw.cs(31,18): error CS0136: A local or parameter named ''sum'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n
    \       long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long
    sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11
    = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n
    \       long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long
    sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21
    = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n
    \       long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long
    sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31
    = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long
    sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41
    = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n
    \       long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long
    sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51
    = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long
    sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61
    = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n
    \       long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long
    sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71
    = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n
    \       long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long
    sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81
    = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n
    \       long sum85 = 0;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph_9yrlpb.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmph_9yrlpb.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmph_9yrlpb.cs(22,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(23,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(24,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(25,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(26,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(27,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(28,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(29,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(30,14): warning CS0219: The variable ''sum10'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(31,14): warning CS0219: The variable ''sum11'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(32,14): warning CS0219: The variable ''sum12'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(33,14): warning CS0219: The variable ''sum13'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(34,14): warning CS0219: The variable ''sum14'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(35,14): warning CS0219: The variable ''sum15'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(36,14): warning CS0219: The variable ''sum16'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(37,14): warning CS0219: The variable ''sum17'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(38,14): warning CS0219: The variab'
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n
    \       long temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long
    temp7 = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10
    = 0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13
    = 0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16
    = 0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19
    = 0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22
    = 0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25
    = 0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28
    = 0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31
    = 0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34
    = 0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37
    = 0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40
    = 0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43
    = 0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46
    = 0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49
    = 0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52
    = 0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55
    = 0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58
    = 0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61
    = 0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64
    = 0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67
    = 0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70
    = 0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73
    = 0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76
    = 0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79
    = 0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82
    = 0;\n        long temp83 = 0;\n        long temp84 = 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpobvzsklf.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_j15sm4k.cs(106,18): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n
    \       long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long
    sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11
    = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n
    \       long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long
    sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21
    = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n
    \       long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long
    sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31
    = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long
    sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41
    = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n
    \       long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long
    sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51
    = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long
    sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61
    = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n
    \       long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long
    sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71
    = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n
    \       long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long
    sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81
    = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n
    \       long sum85 = 0;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph_9yrlpb.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmph_9yrlpb.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmph_9yrlpb.cs(22,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(23,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(24,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(25,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(26,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(27,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(28,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(29,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(30,14): warning CS0219: The variable ''sum10'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(31,14): warning CS0219: The variable ''sum11'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(32,14): warning CS0219: The variable ''sum12'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(33,14): warning CS0219: The variable ''sum13'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(34,14): warning CS0219: The variable ''sum14'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(35,14): warning CS0219: The variable ''sum15'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(36,14): warning CS0219: The variable ''sum16'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(37,14): warning CS0219: The variable ''sum17'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(38,14): warning CS0219: The variab'
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long min = 0;\n        long maxSum = 0;\n
    \       long minSum = 0;\n        long maxSum2 = 0;\n        long minSum2 = 0;\n
    \       long maxSum3 = 0;\n        long minSum3 = 0;\n        long maxSum4 = 0;\n
    \       long minSum4 = 0;\n        long maxSum5 = 0;\n        long minSum5 = 0;\n
    \       long maxSum6 = 0;\n        long minSum6 = 0;\n        long maxSum7 = 0;\n
    \       long minSum7 = 0;\n        long maxSum8 = 0;\n        long minSum8 = 0;\n
    \       long maxSum9 = 0;\n        long minSum9 = 0;\n        long maxSum10 =
    0;\n        long minSum10 = 0;\n        long maxSum11 = 0;\n        long minSum11
    = 0;\n        long maxSum12 = 0;\n        long minSum12 = 0;\n        long maxSum13
    = 0;\n        long minSum13 = 0;\n        long maxSum14 = 0;\n        long minSum14
    = 0;\n        long maxSum15 = 0;\n        long minSum15 = 0;\n        long maxSum16
    = 0;\n        long minSum16 = 0;\n        long maxSum17 = 0;\n        long minSum17
    = 0;\n        long maxSum18 = 0;\n        long minSum18 = 0;\n        long maxSum19
    = 0;\n        long minSum19 = 0;\n        long maxSum20 = 0;\n        long minSum20
    = 0;\n        long maxSum21 = 0;\n        long minSum21 = 0;\n        long maxSum22
    = 0;\n        long minSum22 = 0;\n        long maxSum23 = 0;\n        long minSum23
    = 0;\n        long maxSum24 = 0;\n        long minSum24 = 0;\n        long maxSum25
    = 0;\n        long minSum25 = 0;\n        long maxSum26 = 0;\n        long minSum26
    = 0;\n        long maxSum27 = 0;\n        long minSum27 = 0;\n        long maxSum28
    = 0;\n        long minSum28 = 0;\n        long maxSum29 = 0;\n        long minSum29
    = 0;\n        long maxSum30 = 0;\n        long minSum30 = 0;\n        long maxSum31
    = 0;\n        long minSum31 = 0;\n        long maxSum32 = 0;\n        long minSum32
    = 0;\n        long maxSum33 = 0;\n        long minSum33 = 0;\n        long maxSum34
    = 0;\n        long minSum34 = 0;\n        long maxSum35 = 0;\n        long minSum35
    = 0;\n        long maxSum36 = 0;\n        long \n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpynfqifml.cs(95,13): error CS1001: Identifier expected

    /tmp/tmpynfqifml.cs(95,13): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n
    \       long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long
    sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11
    = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n
    \       long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long
    sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21
    = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n
    \       long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long
    sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31
    = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long
    sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41
    = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n
    \       long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long
    sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51
    = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long
    sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61
    = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n
    \       long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long
    sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71
    = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n
    \       long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long
    sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81
    = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n
    \       long sum85 = 0;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph_9yrlpb.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmph_9yrlpb.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmph_9yrlpb.cs(22,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(23,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(24,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(25,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(26,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(27,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(28,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(29,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(30,14): warning CS0219: The variable ''sum10'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(31,14): warning CS0219: The variable ''sum11'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(32,14): warning CS0219: The variable ''sum12'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(33,14): warning CS0219: The variable ''sum13'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(34,14): warning CS0219: The variable ''sum14'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(35,14): warning CS0219: The variable ''sum15'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(36,14): warning CS0219: The variable ''sum16'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(37,14): warning CS0219: The variable ''sum17'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(38,14): warning CS0219: The variab'
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_j15sm4k.cs(106,18): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long count = 0;\n
    \       for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum
    += a[i];\n            if (sum > max) {\n                max = sum;\n                temp
    = i;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            count
    += a[i] > temp ? 1 : 0;\n        }\n        return count;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi282pl31.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpi282pl31.cs(26,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpi282pl31.cs(27,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpi282pl31.cs(34,22): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp;\n        long
    temp2;\n        for (int i = 1; i <= n; i++) {\n            a[i] = i * i - i +
    1;\n            sum += a[i];\n            if (sum > max) {\n                max
    = sum;\n            }\n        }\n        for (int i = 1; i <= n; i++) {\n            count
    = 0;\n            for (int j = 1; j <= n; j++) {\n                for (int k =
    1; k <= n; k++) {\n                    temp = a[i] + a[j] + a[k];\n                    if
    (temp % 3 == 0) {\n                        count++;\n                    }\n                }\n
    \           }\n            if (count > temp2) {\n                temp2 = count;\n
    \           }\n        }\n        return temp2;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj1e23n62.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long maxCount = 0;\n        long maxSum =
    0;\n        long sumOfSquares = 0;\n        long sumOfSquareOfMax = 0;\n        long
    sumOfSquareOfMaxCount = 0;\n        long sumOfSquareOfMaxSum = 0;\n        long
    sumOfSquareOfMaxSumCount = 0;\n        long sumOfSquareOfMaxSumCount2 = 0;\n        long
    sumOfSquareOfMaxSumCount3 = 0;\n        long sumOfSquareOfMaxSumCount4 = 0;\n
    \       long sumOfSquareOfMaxSumCount5 = 0;\n        long sumOfSquareOfMaxSumCount6
    = 0;\n        long sumOfSquareOfMaxSumCount7 = 0;\n        long sumOfSquareOfMaxSumCount8
    = 0;\n        long sumOfSquareOfMaxSumCount9 = 0;\n        long sumOfSquareOfMaxSumCount10
    = 0;\n        long sumOfSquareOfMaxSumCount11 = 0;\n        long sumOfSquareOfMaxSumCount12
    = 0;\n        long sumOfSquareOfMaxSumCount13 = 0;\n        long sumOfSquareOfMaxSumCount14
    = 0;\n        long sumOfSquareOfMaxSumCount15 = 0;\n        long sumOfSquareOfMaxSumCount16
    = 0;\n        long sumOfSquareOfMaxSumCount17 = 0;\n        long sumOfSquareOfMaxSumCount18
    = 0;\n        long sumOfSquareOfMaxSumCount19 = 0;\n        long sumOfSquareOfMaxSumCount20
    = 0;\n        long sumOfSquareOfMaxSumCount21 = 0;\n        long sumOfSquareOfMaxSumCount22
    = 0;\n        long sumOfSquareOfMaxSumCount23 = 0;\n        long sumOfSquareOfMaxSumCount24
    = 0;\n        long sumOfSquareOfMaxSumCount25 = 0;\n        long sumOfSquareOfMaxSumCount26
    = 0;\n        long sumOfSquareOfMaxSumCount27 = 0;\n        long sumOfSquareOfMaxSumCount28
    = 0;\n        long sumOfSquareOfMaxSumCount29 = 0;\n        long sumOfSquareOfMaxSumCount30
    = 0;\n        long sumOfSquareOfMaxSumCount31 = 0;\n        long sumOfSquareOfMaxSumCount32
    = 0;\n        long sumOfSquareOfMaxSumCount33 = 0;\n        long sumOfSquareOfMaxSumCount34
    = 0;\n        long sumOfSquareOfMaxSumCount35 = 0;\n        long sumOfSquareOfMaxSumCount36
    = 0;\n        long sumOfSquareOfMaxSumCount37 = 0;\n        long sumOfSquareOfMax\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgm8ijn2s.cs(66,30): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long \n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_mznrdiw.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp_mznrdiw.cs(106,13): error CS1001: Identifier expected

    /tmp/tmp_mznrdiw.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long i = 0;\n        long
    j = 0;\n        long k = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n
    \       long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long
    sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10
    = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n
    \       long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n        long
    sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long sum20
    = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n
    \       long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n        long
    sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long sum30
    = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n
    \       long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long
    sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40
    = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n
    \       long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long
    sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50
    = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n
    \       long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n        long
    sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long sum60
    = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n
    \       long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n        long
    sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long sum70
    = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n
    \       long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long
    sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n        long sum80
    = 0;\n        long sum81 = 0;\n\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmca492b7.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpmca492b7.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpmca492b7.cs(22,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmpmca492b7.cs(23,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(24,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmpmca492b7.cs(25,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmpmca492b7.cs(26,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmpmca492b7.cs(27,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(28,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(29,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(30,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(31,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(32,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(33,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(34,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(35,14): warning CS0219: The variable ''sum10'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(36,14): warning CS0219: The variable ''sum11'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(37,14): warning CS0219: The variable ''sum12'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(38,14): warning CS0219: The variable ''sum13'' is '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long temp = 0;\n        long count = 0;\n        long sum2 = 0;\n
    \       long temp2 = 0;\n        long count2 = 0;\n        long sum3 = 0;\n        long
    temp3 = 0;\n        long count3 = 0;\n        long sum4 = 0;\n        long temp4
    = 0;\n        long count4 = 0;\n        long sum5 = 0;\n        long temp5 = 0;\n
    \       long count5 = 0;\n        long sum6 = 0;\n        long temp6 = 0;\n        long
    count6 = 0;\n        long sum7 = 0;\n        long temp7 = 0;\n        long count7
    = 0;\n        long sum8 = 0;\n        long temp8 = 0;\n        long count8 = 0;\n
    \       long sum9 = 0;\n        long temp9 = 0;\n        long count9 = 0;\n        long
    sum10 = 0;\n        long temp10 = 0;\n        long count10 = 0;\n        long
    sum11 = 0;\n        long temp11 = 0;\n        long count11 = 0;\n        long
    sum12 = 0;\n        long temp12 = 0;\n        long count12 = 0;\n        long
    sum13 = 0;\n        long temp13 = 0;\n        long count13 = 0;\n        long
    sum14 = 0;\n        long temp14 = 0;\n        long count14 = 0;\n        long
    sum15 = 0;\n        long temp15 = 0;\n        long count15 = 0;\n        long
    sum16 = 0;\n        long temp16 = 0;\n        long count16 = 0;\n        long
    sum17 = 0;\n        long temp17 = 0;\n        long count17 = 0;\n        long
    sum18 = 0;\n        long temp18 = 0;\n        long count18 = 0;\n        long
    sum19 = 0;\n        long temp19 = 0;\n        long count19 = 0;\n        long
    sum20 = 0;\n        long temp20 = 0;\n        long count20 = 0;\n        long
    sum21 = 0;\n        long temp21 = 0;\n        long count21 = 0;\n        long
    sum22 = 0;\n        long temp22 = 0;\n        long count22 = 0;\n        long
    sum23 = 0;\n        long temp23 = 0;\n        long count23 = 0;\n        long
    sum24 = 0;\n        long temp24 = 0;\n        long count24 = 0;\n        long
    sum25 = 0;\n        long temp25 = 0;\n        long count25 = 0;\n        long
    sum26 = 0;\n        long temp26 = 0;\n        long count26 = 0;\n        long
    sum27 = 0;\n        long temp27 = 0;\n        long count27 = 0;\n        long
    sum28 = 0;\n        long temp28 = 0;\n        long count28 = 0;\n        long
    sum29 = 0;\n        long temp29 = 0;\n        long count\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppuuxpsym.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmppuuxpsym.cs(107,19): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long temp = 0;\n        long count = 0;\n        long sum2 = 0;\n
    \       long temp2 = 0;\n        long count2 = 0;\n        long sum3 = 0;\n        long
    temp3 = 0;\n        long count3 = 0;\n        long sum4 = 0;\n        long temp4
    = 0;\n        long count4 = 0;\n        long sum5 = 0;\n        long temp5 = 0;\n
    \       long count5 = 0;\n        long sum6 = 0;\n        long temp6 = 0;\n        long
    count6 = 0;\n        long sum7 = 0;\n        long temp7 = 0;\n        long count7
    = 0;\n        long sum8 = 0;\n        long temp8 = 0;\n        long count8 = 0;\n
    \       long sum9 = 0;\n        long temp9 = 0;\n        long count9 = 0;\n        long
    sum10 = 0;\n        long temp10 = 0;\n        long count10 = 0;\n        long
    sum11 = 0;\n        long temp11 = 0;\n        long count11 = 0;\n        long
    sum12 = 0;\n        long temp12 = 0;\n        long count12 = 0;\n        long
    sum13 = 0;\n        long temp13 = 0;\n        long count13 = 0;\n        long
    sum14 = 0;\n        long temp14 = 0;\n        long count14 = 0;\n        long
    sum15 = 0;\n        long temp15 = 0;\n        long count15 = 0;\n        long
    sum16 = 0;\n        long temp16 = 0;\n        long count16 = 0;\n        long
    sum17 = 0;\n        long temp17 = 0;\n        long count17 = 0;\n        long
    sum18 = 0;\n        long temp18 = 0;\n        long count18 = 0;\n        long
    sum19 = 0;\n        long temp19 = 0;\n        long count19 = 0;\n        long
    sum20 = 0;\n        long temp20 = 0;\n        long count20 = 0;\n        long
    sum21 = 0;\n        long temp21 = 0;\n        long count21 = 0;\n        long
    sum22 = 0;\n        long temp22 = 0;\n        long count22 = 0;\n        long
    sum23 = 0;\n        long temp23 = 0;\n        long count23 = 0;\n        long
    sum24 = 0;\n        long temp24 = 0;\n        long count24 = 0;\n        long
    sum25 = 0;\n        long temp25 = 0;\n        long count25 = 0;\n        long
    sum26 = 0;\n        long temp26 = 0;\n        long count26 = 0;\n        long
    sum27 = 0;\n        long temp27 = 0;\n        long count27 = 0;\n        long
    sum28 = 0;\n        long temp28 = 0;\n        long count28 = 0;\n        long
    sum29 = 0;\n        long temp29 = 0;\n        long count29\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk05u4mox.cs(107,21): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long count = 0;\n
    \       for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum
    += a[i];\n            if (sum > max) {\n                max = sum;\n            }\n
    \       }\n        for (int i = 0; i < n; i++) {\n            temp = sum - a[i];\n
    \           if (temp > 0) {\n                count++;\n            }\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsx4tm934.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpsx4tm934.cs(26,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpsx4tm934.cs(27,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpsx4tm934.cs(33,26): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long sum2 = 0;\n        long max2 = 0;\n
    \       long sum3 = 0;\n        long max3 = 0;\n        long sum4 = 0;\n        long
    max4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n        long sum6 =
    0;\n        long max6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n        long
    sum8 = 0;\n        long max8 = 0;\n        long sum9 = 0;\n        long max9 =
    0;\n        long sum10 = 0;\n        long max10 = 0;\n        long sum11 = 0;\n
    \       long max11 = 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long
    sum13 = 0;\n        long max13 = 0;\n        long sum14 = 0;\n        long max14
    = 0;\n        long sum15 = 0;\n        long max15 = 0;\n        long sum16 = 0;\n
    \       long max16 = 0;\n        long sum17 = 0;\n        long max17 = 0;\n        long
    sum18 = 0;\n        long max18 = 0;\n        long sum19 = 0;\n        long max19
    = 0;\n        long sum20 = 0;\n        long max20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long sum22 = 0;\n        long max22 = 0;\n        long
    sum23 = 0;\n        long max23 = 0;\n        long sum24 = 0;\n        long max24
    = 0;\n        long sum25 = 0;\n        long max25 = 0;\n        long sum26 = 0;\n
    \       long max26 = 0;\n        long sum27 = 0;\n        long max27 = 0;\n        long
    sum28 = 0;\n        long max28 = 0;\n        long sum29 = 0;\n        long max29
    = 0;\n        long sum30 = 0;\n        long max30 = 0;\n        long sum31 = 0;\n
    \       long max31 = 0;\n        long sum32 = 0;\n        long max32 = 0;\n        long
    sum33 = 0;\n        long max33 = 0;\n        long sum34 = 0;\n        long max34
    = 0;\n        long sum35 = 0;\n        long max35 = 0;\n        long sum36 = 0;\n
    \       long max36 = 0;\n        long sum37 = 0;\n        long max37 = 0;\n        long
    sum38 = 0;\n        long max38 = 0;\n        long sum39 = 0;\n        long max39
    = 0;\n        long sum40 = 0;\n        long max40 = 0;\n        long sum41 = 0;\n
    \       long max41 = 0;\n        long sum42 = 0;\n        long max42 = 0;\n        long
    sum43 = 0;\n        long max\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbsuni6j2.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpbsuni6j2.cs(106,17): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            a[i]
    = i * i - i + 1;\n            sum += a[i];\n            if (sum > max)\n                max
    = sum;\n        }\n        long sum2 = 0;\n        for (int i = 0; i < n; i++)
    {\n            long sum3 = a[i];\n            for (int j = 0; j < n; j++) {\n
    \               long sum4 = a[j];\n                for (int k = 0; k < n; k++)
    {\n                    long sum5 = a[k];\n                    sum2 += sum3 + sum4
    + sum5;\n                }\n            }\n        }\n        return sum2;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_fnwj5y7.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp_fnwj5y7.cs(24,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp_fnwj5y7.cs(25,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp_fnwj5y7.cs(31,25): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp_fnwj5y7.cs(33,29): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp_fnwj5y7.cs(35,33): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long temp2 = 0;\n
    \       long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n        long
    temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long temp9
    = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12
    = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15
    = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18
    = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21
    = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24
    = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27
    = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30
    = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33
    = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36
    = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39
    = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42
    = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45
    = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48
    = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51
    = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54
    = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57
    = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60
    = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63
    = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66
    = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69
    = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72
    = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75
    = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78
    = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long temp81
    = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n        \n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp66kfkz4f.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp66kfkz4f.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp66kfkz4f.cs(22,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmp66kfkz4f.cs(23,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(24,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(25,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(26,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(27,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(28,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(29,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(30,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(31,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(32,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(33,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(34,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(35,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(36,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(37,14): warning CS0219: The variable ''temp15'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(38,14): warning CS0219:'
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            a[i]
    = i * i - i + 1;\n            sum += a[i];\n            if (sum > max)\n                max
    = sum;\n        }\n        long count = 0;\n        for (int i = 0; i < n; i++)
    {\n            for (int j = i + 1; j < n; j++) {\n                for (int k =
    j + 1; k < n; k++) {\n                    if (a[i] == a[j] + a[k]) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0_a94k7a.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long min = 0;\n        long count = 0;\n
    \       long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long
    sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 =
    0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n
    \       long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long
    sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18
    = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n
    \       long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long
    sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28
    = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n
    \       long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long
    sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38
    = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n
    \       long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long
    sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48
    = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n
    \       long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long
    sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long sum58
    = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n
    \       long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n        long
    sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long sum68
    = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n
    \       long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n        long
    sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long sum78
    = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n
    \       long sum82 = 0;\n        long sum\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbrnhtng6.cs(106,17): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long sumOfSquares = 0;\n        long maxOfSquares
    = 0;\n        long count = 0;\n        long sumOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n        long
    maxOfSquareOfSquares = 0;\n        long maxOfSquareOfSquares = 0;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppowcg_at.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmppowcg_at.cs(28,14): error CS0128: A local variable or function named ''maxOfSquareOfSquares''
    is already defined in this scope

    /tmp/tmppowcg_at.cs(29,14): error CS0128: A local variable or function named ''maxOfSquareOfSquares''
    is already defined in this scope

    /tmp/tmppowcg_at.cs(30,14): error CS0128: A local variable or function named ''maxOfSquareOfSquares''
    is already defined in this scope

    /tmp/tmppowcg_at.cs(31,14): error CS0128: A local variable or function named ''maxOfSquareOfSquares''
    is already defined in this scope

    /tmp/tmppowcg_at.cs(32,14): error CS0128: A local variable or function named ''maxOfSquareOfSquares''
    is already defined in this scope

    /tmp/tmppowcg_at.cs(33,14): error CS0128: A local variable or function named ''maxOfSquareOfSquares''
    is already defined in this scope

    /tmp/tmppowcg_at.cs(34,14): error CS0128: A local variable or function named ''maxOfSquareOfSquares''
    is already defined in this scope

    /tmp/tmppowcg_at.cs(35,14): error CS0128: A local variable or function named ''maxOfSquareOfSquares''
    is already defined in this scope

    /tmp/tmppowcg_at.cs(36,14): error CS0128: A local variable or function named ''maxOfSquareOfSquares''
    is already defined in this scope

    /tmp/tmppowcg_at.cs(37,14): error CS0128: A local variable or function named ''maxOfSquareOfSquares''
    is already defined in this scope

    /tmp/tmppowcg_at.cs(38,14): error CS0128: A local variable or function named ''maxOfSquareOfSquares''
    is already defined in this scope

    /tmp/tmppowcg_at.cs(39,14): error CS0128: A local variable or function named ''maxOfSquareOfSquares''
    is already defined in this scope

    /tmp/tmppowcg_at.cs(40,14): error CS0128: A local variable or function named ''maxOfSquareOfSquares''
    is already defined in this scope

    /tmp/tmppowcg_at.cs(41,14): error CS0128: A local variable or function named ''maxOfSquareOfSquares'' '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_j15sm4k.cs(106,18): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long maxIndex = 0;\n        long sumIndex
    = 0;\n        long sumIndex2 = 0;\n        long sumIndex3 = 0;\n        long sumIndex4
    = 0;\n        long sumIndex5 = 0;\n        long sumIndex6 = 0;\n        long sumIndex7
    = 0;\n        long sumIndex8 = 0;\n        long sumIndex9 = 0;\n        long sumIndex10
    = 0;\n        long sumIndex11 = 0;\n        long sumIndex12 = 0;\n        long
    sumIndex13 = 0;\n        long sumIndex14 = 0;\n        long sumIndex15 = 0;\n
    \       long sumIndex16 = 0;\n        long sumIndex17 = 0;\n        long sumIndex18
    = 0;\n        long sumIndex19 = 0;\n        long sumIndex20 = 0;\n        long
    sumIndex21 = 0;\n        long sumIndex22 = 0;\n        long sumIndex23 = 0;\n
    \       long sumIndex24 = 0;\n        long sumIndex25 = 0;\n        long sumIndex26
    = 0;\n        long sumIndex27 = 0;\n        long sumIndex28 = 0;\n        long
    sumIndex29 = 0;\n        long sumIndex30 = 0;\n        long sumIndex31 = 0;\n
    \       long sumIndex32 = 0;\n        long sumIndex33 = 0;\n        long sumIndex34
    = 0;\n        long sumIndex35 = 0;\n        long sumIndex36 = 0;\n        long
    sumIndex37 = 0;\n        long sumIndex38 = 0;\n        long sumIndex39 = 0;\n
    \       long sumIndex40 = 0;\n        long sumIndex41 = 0;\n        long sumIndex42
    = 0;\n        long sumIndex43 = 0;\n        long sumIndex44 = 0;\n        long
    sumIndex45 = 0;\n        long sumIndex46 = 0;\n        long sumIndex47 = 0;\n
    \       long sumIndex48 = 0;\n        long sumIndex49 = 0;\n        long sumIndex50
    = 0;\n        long sumIndex51 = 0;\n        long sumIndex52 = 0;\n        long
    sumIndex53 = 0;\n        long sumIndex54 = 0;\n        long sumIndex55 = 0;\n
    \       long sumIndex56 = 0;\n        long sumIndex57 = 0;\n        long sumIndex58
    = 0;\n        long sumIndex59 = 0;\n        long sumIndex60 = 0;\n        long
    sumIndex61 = 0;\n        long sumIndex62 = 0;\n        long sumIndex63 = 0;\n
    \       long sumIndex64 = 0;\n        long sumIndex65 = 0;\n        long sumIndex66
    = 0;\n        long sumIndex67 = 0;\n        long sumIndex68 = 0;\n        long
    sumIndex69 = 0;\n        long sumIndex70 = 0;\n        long sum\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpng0n6qvr.cs(94,17): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long count = 0;\n        long max = 0;\n        long min = 0;\n
    \       long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long
    sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 =
    0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n
    \       long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long
    sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18
    = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n
    \       long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long
    sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28
    = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n
    \       long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long
    sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38
    = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n
    \       long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long
    sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48
    = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n
    \       long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long
    sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long sum58
    = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n
    \       long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n        long
    sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long sum68
    = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n
    \       long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n        long
    sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long sum78
    = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n
    \       long sum82 = 0;\n        long \n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphgqao8vu.cs(106,13): error CS1001: Identifier expected

    /tmp/tmphgqao8vu.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long maxCount = 0;\n        long maxTriple
    = 0;\n        long maxTripleCount = 0;\n        long maxTripleSum = 0;\n        long
    maxTripleSumCount = 0;\n        long maxTripleSumCount2 = 0;\n        long maxTripleSumCount3
    = 0;\n        long maxTripleSumCount4 = 0;\n        long maxTripleSumCount5 =
    0;\n        long maxTripleSumCount6 = 0;\n        long maxTripleSumCount7 = 0;\n
    \       long maxTripleSumCount8 = 0;\n        long maxTripleSumCount9 = 0;\n        long
    maxTripleSumCount10 = 0;\n        long maxTripleSumCount11 = 0;\n        long
    maxTripleSumCount12 = 0;\n        long maxTripleSumCount13 = 0;\n        long
    maxTripleSumCount14 = 0;\n        long maxTripleSumCount15 = 0;\n        long
    maxTripleSumCount16 = 0;\n        long maxTripleSumCount17 = 0;\n        long
    maxTripleSumCount18 = 0;\n        long maxTripleSumCount19 = 0;\n        long
    maxTripleSumCount20 = 0;\n        long maxTripleSumCount21 = 0;\n        long
    maxTripleSumCount22 = 0;\n        long maxTripleSumCount23 = 0;\n        long
    maxTripleSumCount24 = 0;\n        long maxTripleSumCount25 = 0;\n        long
    maxTripleSumCount26 = 0;\n        long maxTripleSumCount27 = 0;\n        long
    maxTripleSumCount28 = 0;\n        long maxTripleSumCount29 = 0;\n        long
    maxTripleSumCount30 = 0;\n        long maxTripleSumCount31 = 0;\n        long
    maxTripleSumCount32 = 0;\n        long maxTripleSumCount33 = 0;\n        long
    maxTripleSumCount34 = 0;\n        long maxTripleSumCount35 = 0;\n        long
    maxTripleSumCount36 = 0;\n        long maxTripleSumCount37 = 0;\n        long
    maxTripleSumCount38 = 0;\n        long maxTripleSumCount39 = 0;\n        long
    maxTripleSumCount40 = 0;\n        long maxTripleSumCount41 = 0;\n        long
    maxTripleSumCount42 = 0;\n        long maxTripleSumCount43 = 0;\n        long
    maxTripleSumCount44 = 0;\n        long maxTripleSumCount45 = 0;\n        long
    maxTripleSumCount46 = 0;\n        long maxTripleSumCount47 = 0;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpadu2b6dt.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long count = 0;\n        long max = 0;\n        long min = 0;\n
    \       long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long
    sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 =
    0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n
    \       long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long
    sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18
    = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n
    \       long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long
    sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28
    = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n
    \       long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long
    sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38
    = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n
    \       long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long
    sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48
    = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n
    \       long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long
    sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long sum58
    = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n
    \       long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n        long
    sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long sum68
    = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n
    \       long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n        long
    sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long sum78
    = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n
    \       long sum82 = 0;\n        long sum\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqnrkmyhf.cs(106,17): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long maxSum = 0;\n        long maxSum2 =
    0;\n        long maxSum3 = 0;\n        long maxSum4 = 0;\n        long maxSum5
    = 0;\n        long maxSum6 = 0;\n        long maxSum7 = 0;\n        long maxSum8
    = 0;\n        long maxSum9 = 0;\n        long maxSum10 = 0;\n        long maxSum11
    = 0;\n        long maxSum12 = 0;\n        long maxSum13 = 0;\n        long maxSum14
    = 0;\n        long maxSum15 = 0;\n        long maxSum16 = 0;\n        long maxSum17
    = 0;\n        long maxSum18 = 0;\n        long maxSum19 = 0;\n        long maxSum20
    = 0;\n        long maxSum21 = 0;\n        long maxSum22 = 0;\n        long maxSum23
    = 0;\n        long maxSum24 = 0;\n        long maxSum25 = 0;\n        long maxSum26
    = 0;\n        long maxSum27 = 0;\n        long maxSum28 = 0;\n        long maxSum29
    = 0;\n        long maxSum30 = 0;\n        long maxSum31 = 0;\n        long maxSum32
    = 0;\n        long maxSum33 = 0;\n        long maxSum34 = 0;\n        long maxSum35
    = 0;\n        long maxSum36 = 0;\n        long maxSum37 = 0;\n        long maxSum38
    = 0;\n        long maxSum39 = 0;\n        long maxSum40 = 0;\n        long maxSum41
    = 0;\n        long maxSum42 = 0;\n        long maxSum43 = 0;\n        long maxSum44
    = 0;\n        long maxSum45 = 0;\n        long maxSum46 = 0;\n        long maxSum47
    = 0;\n        long maxSum48 = 0;\n        long maxSum49 = 0;\n        long maxSum50
    = 0;\n        long maxSum51 = 0;\n        long maxSum52 = 0;\n        long maxSum53
    = 0;\n        long maxSum54 = 0;\n        long maxSum55 = 0;\n        long maxSum56
    = 0;\n        long maxSum57 = 0;\n        long maxSum58 = 0;\n        long maxSum59
    = 0;\n        long maxSum60 = 0;\n        long maxSum61 = 0;\n        long maxSum62
    = 0;\n        long maxSum63 = 0;\n        long maxSum64 = 0;\n        long maxSum65
    = 0;\n        long maxSum66 = 0;\n        long maxSum67 = 0;\n        long maxSum68
    = 0;\n        long maxSum69 = 0;\n        long maxSum70 = 0;\n        long maxSum71
    = 0;\n        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph4e7fxde.cs(94,13): error CS1001: Identifier expected

    /tmp/tmph4e7fxde.cs(94,13): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long count = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmput8nbui2.cs(106,18): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long sum2 = 0;\n        long max2 = 0;\n
    \       long sum3 = 0;\n        long max3 = 0;\n        long sum4 = 0;\n        long
    max4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n        long sum6 =
    0;\n        long max6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n        long
    sum8 = 0;\n        long max8 = 0;\n        long sum9 = 0;\n        long max9 =
    0;\n        long sum10 = 0;\n        long max10 = 0;\n        long sum11 = 0;\n
    \       long max11 = 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long
    sum13 = 0;\n        long max13 = 0;\n        long sum14 = 0;\n        long max14
    = 0;\n        long sum15 = 0;\n        long max15 = 0;\n        long sum16 = 0;\n
    \       long max16 = 0;\n        long sum17 = 0;\n        long max17 = 0;\n        long
    sum18 = 0;\n        long max18 = 0;\n        long sum19 = 0;\n        long max19
    = 0;\n        long sum20 = 0;\n        long max20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long sum22 = 0;\n        long max22 = 0;\n        long
    sum23 = 0;\n        long max23 = 0;\n        long sum24 = 0;\n        long max24
    = 0;\n        long sum25 = 0;\n        long max25 = 0;\n        long sum26 = 0;\n
    \       long max26 = 0;\n        long sum27 = 0;\n        long max27 = 0;\n        long
    sum28 = 0;\n        long max28 = 0;\n        long sum29 = 0;\n        long max29
    = 0;\n        long sum30 = 0;\n        long max30 = 0;\n        long sum31 = 0;\n
    \       long max31 = 0;\n        long sum32 = 0;\n        long max32 = 0;\n        long
    sum33 = 0;\n        long max33 = 0;\n        long sum34 = 0;\n        long max34
    = 0;\n        long sum35 = 0;\n        long max35 = 0;\n        long sum36 = 0;\n
    \       long max36 = 0;\n        long sum37 = 0;\n        long max37 = 0;\n        long
    sum38 = 0;\n        long max38 = 0;\n        long sum39 = 0;\n        long max39
    = 0;\n        long sum40 = 0;\n        long max40 = 0;\n        long sum41 = 0;\n
    \       long max41 = 0;\n        long sum42 = 0;\n        long max42 = 0;\n        long
    sum43 = 0;\n        long max43\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsjmrwb0d.cs(106,19): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_j15sm4k.cs(106,18): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        Array.Sort(a);\n
    \       int count = 0;\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    if (a[i] < a[j] && a[i] < a[k] && a[j] < a[k]) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d3f07d84a10f4c5d9bb444e7425bf6b8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d3f07d84a10f4c5d9bb444e7425bf6b8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n
    \       long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long
    sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11
    = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n
    \       long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long
    sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21
    = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n
    \       long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long
    sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31
    = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long
    sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41
    = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n
    \       long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long
    sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51
    = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long
    sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61
    = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n
    \       long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long
    sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71
    = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n
    \       long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long
    sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81
    = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n
    \       long sum85 = 0;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph_9yrlpb.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmph_9yrlpb.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmph_9yrlpb.cs(22,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(23,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(24,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(25,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(26,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(27,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(28,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(29,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(30,14): warning CS0219: The variable ''sum10'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(31,14): warning CS0219: The variable ''sum11'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(32,14): warning CS0219: The variable ''sum12'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(33,14): warning CS0219: The variable ''sum13'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(34,14): warning CS0219: The variable ''sum14'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(35,14): warning CS0219: The variable ''sum15'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(36,14): warning CS0219: The variable ''sum16'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(37,14): warning CS0219: The variable ''sum17'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(38,14): warning CS0219: The variab'
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long min = 0;\n        long count = 0;\n
    \       long sum2 = 0;\n        long max2 = 0;\n        long min2 = 0;\n        long
    count2 = 0;\n        long sum3 = 0;\n        long max3 = 0;\n        long min3
    = 0;\n        long count3 = 0;\n        long sum4 = 0;\n        long max4 = 0;\n
    \       long min4 = 0;\n        long count4 = 0;\n        long sum5 = 0;\n        long
    max5 = 0;\n        long min5 = 0;\n        long count5 = 0;\n        long sum6
    = 0;\n        long max6 = 0;\n        long min6 = 0;\n        long count6 = 0;\n
    \       long sum7 = 0;\n        long max7 = 0;\n        long min7 = 0;\n        long
    count7 = 0;\n        long sum8 = 0;\n        long max8 = 0;\n        long min8
    = 0;\n        long count8 = 0;\n        long sum9 = 0;\n        long max9 = 0;\n
    \       long min9 = 0;\n        long count9 = 0;\n        long sum10 = 0;\n        long
    max10 = 0;\n        long min10 = 0;\n        long count10 = 0;\n        long sum11
    = 0;\n        long max11 = 0;\n        long min11 = 0;\n        long count11 =
    0;\n        long sum12 = 0;\n        long max12 = 0;\n        long min12 = 0;\n
    \       long count12 = 0;\n        long sum13 = 0;\n        long max13 = 0;\n
    \       long min13 = 0;\n        long count13 = 0;\n        long sum14 = 0;\n
    \       long max14 = 0;\n        long min14 = 0;\n        long count14 = 0;\n
    \       long sum15 = 0;\n        long max15 = 0;\n        long min15 = 0;\n        long
    count15 = 0;\n        long sum16 = 0;\n        long max16 = 0;\n        long min16
    = 0;\n        long count16 = 0;\n        long sum17 = 0;\n        long max17 =
    0;\n        long min17 = 0;\n        long count17 = 0;\n        long sum18 = 0;\n
    \       long max18 = 0;\n        long min18 = 0;\n        long count18 = 0;\n
    \       long sum19 = 0;\n        long max19 = 0;\n        long min19 = 0;\n        long
    count19 = 0;\n        long sum20 = 0;\n        long max20 = 0;\n        long min20
    = 0;\n        long count20 = 0;\n        long sum21 = 0;\n        long max21 =
    0;\n        long min21 = 0;\n        long count21 = 0;\n        long sum22 = 0;\n
    \       long max22 = 0;\n        long min22 = 0;\n        long \n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_g40yfwj.cs(108,13): error CS1001: Identifier expected

    /tmp/tmp_g40yfwj.cs(108,13): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long \n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_mznrdiw.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp_mznrdiw.cs(106,13): error CS1001: Identifier expected

    /tmp/tmp_mznrdiw.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long min = 0;\n        long count = 0;\n
    \       long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long
    sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 =
    0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n
    \       long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long
    sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18
    = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n
    \       long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long
    sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28
    = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n
    \       long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long
    sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38
    = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n
    \       long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long
    sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48
    = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n
    \       long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long
    sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long sum58
    = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n
    \       long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n        long
    sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long sum68
    = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n
    \       long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n        long
    sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long sum78
    = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n
    \       long sum82 = 0;\n        long sum\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbrnhtng6.cs(106,17): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_j15sm4k.cs(106,18): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            a[i]
    = i * i - i + 1;\n            sum += a[i];\n            if (sum > max) {\n                max
    = sum;\n            }\n        }\n        long count = 0;\n        for (int i
    = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    if (a[i] == a[j] && a[j] ==
    a[k] && a[i] % 3 == 0) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0oxmaf0z.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp0oxmaf0z.cs(24,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp0oxmaf0z.cs(25,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp0oxmaf0z.cs(34,25): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp0oxmaf0z.cs(34,33): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp0oxmaf0z.cs(34,41): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp0oxmaf0z.cs(34,49): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp0oxmaf0z.cs(34,57): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long count = 0;\n        long max = 0;\n        long temp = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp98s9400s.cs(106,18): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        for (int i = 1; i < n; i++) {\n            sum
    = 0;\n            for (int j = i; j < n; j++) {\n                for (int k =
    j; k < n; k++) {\n                    sum += a[k];\n                }\n            }\n
    \           if (sum % 3 == 0) {\n                max = Math.Max(max, sum);\n            }\n
    \           a[i] = sum;\n        }\n        return max;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpj510qr6q.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpj510qr6q.cs(27,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpj510qr6q.cs(33,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long \n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu85bd_nw.cs(106,13): error CS1001: Identifier expected

    /tmp/tmpu85bd_nw.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long sum2 = 0;\n
    \       long max2 = 0;\n        long count2 = 0;\n        long sum3 = 0;\n        long
    max3 = 0;\n        long count3 = 0;\n        long sum4 = 0;\n        long max4
    = 0;\n        long count4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n
    \       long count5 = 0;\n        long sum6 = 0;\n        long max6 = 0;\n        long
    count6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n        long count7
    = 0;\n        long sum8 = 0;\n        long max8 = 0;\n        long count8 = 0;\n
    \       long sum9 = 0;\n        long max9 = 0;\n        long count9 = 0;\n        long
    sum10 = 0;\n        long max10 = 0;\n        long count10 = 0;\n        long sum11
    = 0;\n        long max11 = 0;\n        long count11 = 0;\n        long sum12 =
    0;\n        long max12 = 0;\n        long count12 = 0;\n        long sum13 = 0;\n
    \       long max13 = 0;\n        long count13 = 0;\n        long sum14 = 0;\n
    \       long max14 = 0;\n        long count14 = 0;\n        long sum15 = 0;\n
    \       long max15 = 0;\n        long count15 = 0;\n        long sum16 = 0;\n
    \       long max16 = 0;\n        long count16 = 0;\n        long sum17 = 0;\n
    \       long max17 = 0;\n        long count17 = 0;\n        long sum18 = 0;\n
    \       long max18 = 0;\n        long count18 = 0;\n        long sum19 = 0;\n
    \       long max19 = 0;\n        long count19 = 0;\n        long sum20 = 0;\n
    \       long max20 = 0;\n        long count20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long count21 = 0;\n        long sum22 = 0;\n
    \       long max22 = 0;\n        long count22 = 0;\n        long sum23 = 0;\n
    \       long max23 = 0;\n        long count23 = 0;\n        long sum24 = 0;\n
    \       long max24 = 0;\n        long count24 = 0;\n        long sum25 = 0;\n
    \       long max25 = 0;\n        long count25 = 0;\n        long sum26 = 0;\n
    \       long max26 = 0;\n        long count26 = 0;\n        long sum27 = 0;\n
    \       long max27 = 0;\n        long count27 = 0;\n        long sum28 = 0;\n
    \       long max28 = 0;\n        long count28 = 0;\n        long sum29 = 0;\n
    \       long max29 = 0;\n        long count\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9x6d1pgw.cs(107,19): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            a[i]
    = i * i - i + 1;\n            sum += a[i];\n            if (sum > max) {\n                max
    = sum;\n            }\n        }\n        long count = 0;\n        for (int i
    = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    if (a[i] < a[j] && a[i] < a[k]
    && a[j] < a[k]) {\n                        count++;\n                    }\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx8i3nsxa.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long count = 0;\n        long max = 0;\n        long min = 0;\n
    \       long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long
    sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 =
    0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n
    \       long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long
    sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18
    = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n
    \       long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long
    sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28
    = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n
    \       long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long
    sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38
    = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n
    \       long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long
    sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48
    = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n
    \       long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long
    sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long sum58
    = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n
    \       long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n        long
    sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long sum68
    = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n
    \       long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n        long
    sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long sum78
    = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n
    \       long sum82 = 0;\n        long sum\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqnrkmyhf.cs(106,17): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long temp = 0;\n        long sum2 = 0;\n        long temp2 = 0;\n
    \       long sum3 = 0;\n        long temp3 = 0;\n        long sum4 = 0;\n        long
    temp4 = 0;\n        long sum5 = 0;\n        long temp5 = 0;\n        long sum6
    = 0;\n        long temp6 = 0;\n        long sum7 = 0;\n        long temp7 = 0;\n
    \       long sum8 = 0;\n        long temp8 = 0;\n        long sum9 = 0;\n        long
    temp9 = 0;\n        long sum10 = 0;\n        long temp10 = 0;\n        long sum11
    = 0;\n        long temp11 = 0;\n        long sum12 = 0;\n        long temp12 =
    0;\n        long sum13 = 0;\n        long temp13 = 0;\n        long sum14 = 0;\n
    \       long temp14 = 0;\n        long sum15 = 0;\n        long temp15 = 0;\n
    \       long sum16 = 0;\n        long temp16 = 0;\n        long sum17 = 0;\n        long
    temp17 = 0;\n        long sum18 = 0;\n        long temp18 = 0;\n        long sum19
    = 0;\n        long temp19 = 0;\n        long sum20 = 0;\n        long temp20 =
    0;\n        long sum21 = 0;\n        long temp21 = 0;\n        long sum22 = 0;\n
    \       long temp22 = 0;\n        long sum23 = 0;\n        long temp23 = 0;\n
    \       long sum24 = 0;\n        long temp24 = 0;\n        long sum25 = 0;\n        long
    temp25 = 0;\n        long sum26 = 0;\n        long temp26 = 0;\n        long sum27
    = 0;\n        long temp27 = 0;\n        long sum28 = 0;\n        long temp28 =
    0;\n        long sum29 = 0;\n        long temp29 = 0;\n        long sum30 = 0;\n
    \       long temp30 = 0;\n        long sum31 = 0;\n        long temp31 = 0;\n
    \       long sum32 = 0;\n        long temp32 = 0;\n        long sum33 = 0;\n        long
    temp33 = 0;\n        long sum34 = 0;\n        long temp34 = 0;\n        long sum35
    = 0;\n        long temp35 = 0;\n        long sum36 = 0;\n        long temp36 =
    0;\n        long sum37 = 0;\n        long temp37 = 0;\n        long sum38 = 0;\n
    \       long temp38 = 0;\n        long sum39 = 0;\n        long temp39 = 0;\n
    \       long sum40 = 0;\n        long temp40 = 0;\n        long sum41 = 0;\n        long
    temp41 = 0;\n        long sum42 = 0;\n        long temp42 = 0;\n        long sum43
    = 0;\n        long temp\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3xs1udwa.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp3xs1udwa.cs(106,18): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long count = 0;\n        long max = 0;\n        long min = 0;\n
    \       long temp = 0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long
    temp4 = 0;\n        long temp5 = 0;\n        long temp6 = 0;\n        long temp7
    = 0;\n        long temp8 = 0;\n        long temp9 = 0;\n        long temp10 =
    0;\n        long temp11 = 0;\n        long temp12 = 0;\n        long temp13 =
    0;\n        long temp14 = 0;\n        long temp15 = 0;\n        long temp16 =
    0;\n        long temp17 = 0;\n        long temp18 = 0;\n        long temp19 =
    0;\n        long temp20 = 0;\n        long temp21 = 0;\n        long temp22 =
    0;\n        long temp23 = 0;\n        long temp24 = 0;\n        long temp25 =
    0;\n        long temp26 = 0;\n        long temp27 = 0;\n        long temp28 =
    0;\n        long temp29 = 0;\n        long temp30 = 0;\n        long temp31 =
    0;\n        long temp32 = 0;\n        long temp33 = 0;\n        long temp34 =
    0;\n        long temp35 = 0;\n        long temp36 = 0;\n        long temp37 =
    0;\n        long temp38 = 0;\n        long temp39 = 0;\n        long temp40 =
    0;\n        long temp41 = 0;\n        long temp42 = 0;\n        long temp43 =
    0;\n        long temp44 = 0;\n        long temp45 = 0;\n        long temp46 =
    0;\n        long temp47 = 0;\n        long temp48 = 0;\n        long temp49 =
    0;\n        long temp50 = 0;\n        long temp51 = 0;\n        long temp52 =
    0;\n        long temp53 = 0;\n        long temp54 = 0;\n        long temp55 =
    0;\n        long temp56 = 0;\n        long temp57 = 0;\n        long temp58 =
    0;\n        long temp59 = 0;\n        long temp60 = 0;\n        long temp61 =
    0;\n        long temp62 = 0;\n        long temp63 = 0;\n        long temp64 =
    0;\n        long temp65 = 0;\n        long temp66 = 0;\n        long temp67 =
    0;\n        long temp68 = 0;\n        long temp69 = 0;\n        long temp70 =
    0;\n        long temp71 = 0;\n        long temp72 = 0;\n        long temp73 =
    0;\n        long temp74 = 0;\n        long temp75 = 0;\n        long temp76 =
    0;\n        long temp77 = 0;\n        long temp78 = 0;\n        long temp79 =
    0;\n        long temp80 = 0;\n        long temp81 = 0;\n        long temp82\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0joada20.cs(106,20): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long sum2 = 0;\n        long max2 = 0;\n
    \       long sum3 = 0;\n        long max3 = 0;\n        long sum4 = 0;\n        long
    max4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n        long sum6 =
    0;\n        long max6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n        long
    sum8 = 0;\n        long max8 = 0;\n        long sum9 = 0;\n        long max9 =
    0;\n        long sum10 = 0;\n        long max10 = 0;\n        long sum11 = 0;\n
    \       long max11 = 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long
    sum13 = 0;\n        long max13 = 0;\n        long sum14 = 0;\n        long max14
    = 0;\n        long sum15 = 0;\n        long max15 = 0;\n        long sum16 = 0;\n
    \       long max16 = 0;\n        long sum17 = 0;\n        long max17 = 0;\n        long
    sum18 = 0;\n        long max18 = 0;\n        long sum19 = 0;\n        long max19
    = 0;\n        long sum20 = 0;\n        long max20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long sum22 = 0;\n        long max22 = 0;\n        long
    sum23 = 0;\n        long max23 = 0;\n        long sum24 = 0;\n        long max24
    = 0;\n        long sum25 = 0;\n        long max25 = 0;\n        long sum26 = 0;\n
    \       long max26 = 0;\n        long sum27 = 0;\n        long max27 = 0;\n        long
    sum28 = 0;\n        long max28 = 0;\n        long sum29 = 0;\n        long max29
    = 0;\n        long sum30 = 0;\n        long max30 = 0;\n        long sum31 = 0;\n
    \       long max31 = 0;\n        long sum32 = 0;\n        long max32 = 0;\n        long
    sum33 = 0;\n        long max33 = 0;\n        long sum34 = 0;\n        long max34
    = 0;\n        long sum35 = 0;\n        long max35 = 0;\n        long sum36 = 0;\n
    \       long max36 = 0;\n        long sum37 = 0;\n        long max37 = 0;\n        long
    sum38 = 0;\n        long max38 = 0;\n        long sum39 = 0;\n        long max39
    = 0;\n        long sum40 = 0;\n        long max40 = 0;\n        long sum41 = 0;\n
    \       long max41 = 0;\n        long sum42 = 0;\n        long max42 = 0;\n        long
    sum43 = 0;\n        long max43\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsjmrwb0d.cs(106,19): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long sum2 = 0;\n
    \       long sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long
    sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 =
    0;\n        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n
    \       long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long
    sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n        long sum19
    = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n
    \       long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long
    sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29
    = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n
    \       long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long
    sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long sum39
    = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n
    \       long sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long
    sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n        long sum49
    = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n
    \       long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long
    sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n        long sum59
    = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n
    \       long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long
    sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long sum69
    = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n
    \       long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long
    sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n        long sum79
    = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n
    \       long sum83 = 0;\n        long \n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7hqxhdi4.cs(106,13): error CS1001: Identifier expected

    /tmp/tmp7hqxhdi4.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long sum2 = 0;\n        long max2 = 0;\n
    \       long sum3 = 0;\n        long max3 = 0;\n        long sum4 = 0;\n        long
    max4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n        long sum6 =
    0;\n        long max6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n        long
    sum8 = 0;\n        long max8 = 0;\n        long sum9 = 0;\n        long max9 =
    0;\n        long sum10 = 0;\n        long max10 = 0;\n        long sum11 = 0;\n
    \       long max11 = 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long
    sum13 = 0;\n        long max13 = 0;\n        long sum14 = 0;\n        long max14
    = 0;\n        long sum15 = 0;\n        long max15 = 0;\n        long sum16 = 0;\n
    \       long max16 = 0;\n        long sum17 = 0;\n        long max17 = 0;\n        long
    sum18 = 0;\n        long max18 = 0;\n        long sum19 = 0;\n        long max19
    = 0;\n        long sum20 = 0;\n        long max20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long sum22 = 0;\n        long max22 = 0;\n        long
    sum23 = 0;\n        long max23 = 0;\n        long sum24 = 0;\n        long max24
    = 0;\n        long sum25 = 0;\n        long max25 = 0;\n        long sum26 = 0;\n
    \       long max26 = 0;\n        long sum27 = 0;\n        long max27 = 0;\n        long
    sum28 = 0;\n        long max28 = 0;\n        long sum29 = 0;\n        long max29
    = 0;\n        long sum30 = 0;\n        long max30 = 0;\n        long sum31 = 0;\n
    \       long max31 = 0;\n        long sum32 = 0;\n        long max32 = 0;\n        long
    sum33 = 0;\n        long max33 = 0;\n        long sum34 = 0;\n        long max34
    = 0;\n        long sum35 = 0;\n        long max35 = 0;\n        long sum36 = 0;\n
    \       long max36 = 0;\n        long sum37 = 0;\n        long max37 = 0;\n        long
    sum38 = 0;\n        long max38 = 0;\n        long sum39 = 0;\n        long max39
    = 0;\n        long sum40 = 0;\n        long max40 = 0;\n        long sum41 = 0;\n
    \       long max41 = 0;\n        long sum42 = 0;\n        long max42 = 0;\n        long
    sum43 = 0;\n        long max43\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsjmrwb0d.cs(106,19): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long sum2 = 0;\n        long max2 = 0;\n
    \       long sum3 = 0;\n        long max3 = 0;\n        long sum4 = 0;\n        long
    max4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n        long sum6 =
    0;\n        long max6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n        long
    sum8 = 0;\n        long max8 = 0;\n        long sum9 = 0;\n        long max9 =
    0;\n        long sum10 = 0;\n        long max10 = 0;\n        long sum11 = 0;\n
    \       long max11 = 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long
    sum13 = 0;\n        long max13 = 0;\n        long sum14 = 0;\n        long max14
    = 0;\n        long sum15 = 0;\n        long max15 = 0;\n        long sum16 = 0;\n
    \       long max16 = 0;\n        long sum17 = 0;\n        long max17 = 0;\n        long
    sum18 = 0;\n        long max18 = 0;\n        long sum19 = 0;\n        long max19
    = 0;\n        long sum20 = 0;\n        long max20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long sum22 = 0;\n        long max22 = 0;\n        long
    sum23 = 0;\n        long max23 = 0;\n        long sum24 = 0;\n        long max24
    = 0;\n        long sum25 = 0;\n        long max25 = 0;\n        long sum26 = 0;\n
    \       long max26 = 0;\n        long sum27 = 0;\n        long max27 = 0;\n        long
    sum28 = 0;\n        long max28 = 0;\n        long sum29 = 0;\n        long max29
    = 0;\n        long sum30 = 0;\n        long max30 = 0;\n        long sum31 = 0;\n
    \       long max31 = 0;\n        long sum32 = 0;\n        long max32 = 0;\n        long
    sum33 = 0;\n        long max33 = 0;\n        long sum34 = 0;\n        long max34
    = 0;\n        long sum35 = 0;\n        long max35 = 0;\n        long sum36 = 0;\n
    \       long max36 = 0;\n        long sum37 = 0;\n        long max37 = 0;\n        long
    sum38 = 0;\n        long max38 = 0;\n        long sum39 = 0;\n        long max39
    = 0;\n        long sum40 = 0;\n        long max40 = 0;\n        long sum41 = 0;\n
    \       long max41 = 0;\n        long sum42 = 0;\n        long max42 = 0;\n        long
    sum43 = 0;\n        long max\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd0otoi9q.cs(106,17): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        Array.Sort(a);\n
    \       long sum = 0;\n        long max = 0;\n        long count = 0;\n        for
    (int i = 0; i < a.Length; i++) {\n            long j = i;\n            while (j
    < a.Length && a[j] < a[j + 1]) {\n                j++;\n            }\n            long
    k = i;\n            while (k < a.Length && a[k] < a[k + 1]) {\n                k++;\n
    \           }\n            if (j < k) {\n                sum += a[j] * a[j] *
    a[k];\n                max = Math.Max(max, sum);\n                count++;\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside
    the bounds of the array.\n  at Problem.GetMaxTriples (System.Int64 n) [0x0003a]
    in <5bb6a4b29203435f8e3179c65f0b7f04>:0 \n  at Problem.Main (System.String[] args)
    [0x00001] in <5bb6a4b29203435f8e3179c65f0b7f04>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.IndexOutOfRangeException: Index was outside the bounds of the array.\n
    \ at Problem.GetMaxTriples (System.Int64 n) [0x0003a] in <5bb6a4b29203435f8e3179c65f0b7f04>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <5bb6a4b29203435f8e3179c65f0b7f04>:0
    \n"
  stdout: ''
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long count = 0;\n
    \       long sum2 = 0;\n        long temp2 = 0;\n        long count2 = 0;\n        long
    sum3 = 0;\n        long temp3 = 0;\n        long count3 = 0;\n        long sum4
    = 0;\n        long temp4 = 0;\n        long count4 = 0;\n        long sum5 = 0;\n
    \       long temp5 = 0;\n        long count5 = 0;\n        long sum6 = 0;\n        long
    temp6 = 0;\n        long count6 = 0;\n        long sum7 = 0;\n        long temp7
    = 0;\n        long count7 = 0;\n        long sum8 = 0;\n        long temp8 = 0;\n
    \       long count8 = 0;\n        long sum9 = 0;\n        long temp9 = 0;\n        long
    count9 = 0;\n        long sum10 = 0;\n        long temp10 = 0;\n        long count10
    = 0;\n        long sum11 = 0;\n        long temp11 = 0;\n        long count11
    = 0;\n        long sum12 = 0;\n        long temp12 = 0;\n        long count12
    = 0;\n        long sum13 = 0;\n        long temp13 = 0;\n        long count13
    = 0;\n        long sum14 = 0;\n        long temp14 = 0;\n        long count14
    = 0;\n        long sum15 = 0;\n        long temp15 = 0;\n        long count15
    = 0;\n        long sum16 = 0;\n        long temp16 = 0;\n        long count16
    = 0;\n        long sum17 = 0;\n        long temp17 = 0;\n        long count17
    = 0;\n        long sum18 = 0;\n        long temp18 = 0;\n        long count18
    = 0;\n        long sum19 = 0;\n        long temp19 = 0;\n        long count19
    = 0;\n        long sum20 = 0;\n        long temp20 = 0;\n        long count20
    = 0;\n        long sum21 = 0;\n        long temp21 = 0;\n        long count21
    = 0;\n        long sum22 = 0;\n        long temp22 = 0;\n        long count22
    = 0;\n        long sum23 = 0;\n        long temp23 = 0;\n        long count23
    = 0;\n        long sum24 = 0;\n        long temp24 = 0;\n        long count24
    = 0;\n        long sum25 = 0;\n        long temp25 = 0;\n        long count25
    = 0;\n        long sum26 = 0;\n        long temp26 = 0;\n        long count26
    = 0;\n        long sum27 = 0;\n        long temp27 = 0;\n        long count27
    = 0;\n        long sum28 = 0;\n        long temp28 = 0;\n        long count28
    = 0;\n        long sum29 = 0;\n        long temp29\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpk4s8coaw.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpk4s8coaw.cs(107,20): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long count = 0;\n        long max = 0;\n        long min = 0;\n
    \       long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long
    sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 =
    0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n
    \       long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long
    sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18
    = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n
    \       long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long
    sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28
    = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n
    \       long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long
    sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38
    = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n
    \       long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long
    sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48
    = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n
    \       long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long
    sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long sum58
    = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n
    \       long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n        long
    sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long sum68
    = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n
    \       long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n        long
    sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long sum78
    = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n
    \       long sum82 = 0;\n        long \n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmphgqao8vu.cs(106,13): error CS1001: Identifier expected

    /tmp/tmphgqao8vu.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long min = 0;\n        long sum2 = 0;\n        long
    max2 = 0;\n        long min2 = 0;\n        long sum3 = 0;\n        long max3 =
    0;\n        long min3 = 0;\n        long sum4 = 0;\n        long max4 = 0;\n        long
    min4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n        long min5 =
    0;\n        long sum6 = 0;\n        long max6 = 0;\n        long min6 = 0;\n        long
    sum7 = 0;\n        long max7 = 0;\n        long min7 = 0;\n        long sum8 =
    0;\n        long max8 = 0;\n        long min8 = 0;\n        long sum9 = 0;\n        long
    max9 = 0;\n        long min9 = 0;\n        long sum10 = 0;\n        long max10
    = 0;\n        long min10 = 0;\n        long sum11 = 0;\n        long max11 = 0;\n
    \       long min11 = 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long
    min12 = 0;\n        long sum13 = 0;\n        long max13 = 0;\n        long min13
    = 0;\n        long sum14 = 0;\n        long max14 = 0;\n        long min14 = 0;\n
    \       long sum15 = 0;\n        long max15 = 0;\n        long min15 = 0;\n        long
    sum16 = 0;\n        long max16 = 0;\n        long min16 = 0;\n        long sum17
    = 0;\n        long max17 = 0;\n        long min17 = 0;\n        long sum18 = 0;\n
    \       long max18 = 0;\n        long min18 = 0;\n        long sum19 = 0;\n        long
    max19 = 0;\n        long min19 = 0;\n        long sum20 = 0;\n        long max20
    = 0;\n        long min20 = 0;\n        long sum21 = 0;\n        long max21 = 0;\n
    \       long min21 = 0;\n        long sum22 = 0;\n        long max22 = 0;\n        long
    min22 = 0;\n        long sum23 = 0;\n        long max23 = 0;\n        long min23
    = 0;\n        long sum24 = 0;\n        long max24 = 0;\n        long min24 = 0;\n
    \       long sum25 = 0;\n        long max25 = 0;\n        long min25 = 0;\n        long
    sum26 = 0;\n        long max26 = 0;\n        long min26 = 0;\n        long sum27
    = 0;\n        long max27 = 0;\n        long min27 = 0;\n        long sum28 = 0;\n
    \       long max28 = 0;\n        long min28 = 0;\n        long sum29 = 0;\n        long
    max29 = 0;\n        long min\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiw0tkn1z.cs(107,17): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            a[i]
    = i * i - i + 1;\n            sum += a[i];\n            if (sum > max) {\n                max
    = sum;\n            }\n        }\n        long triple = 0;\n        for (int i
    = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                for
    (int k = 0; k < n; k++) {\n                    if (i == j && j == k) {\n                        continue;\n
    \                   }\n                    long sum = a[i] + a[j] + a[k];\n                    if
    (sum % 3 == 0) {\n                        triple++;\n                    }\n                }\n
    \           }\n        }\n        return triple;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpl4_cjmv2.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long i = 0;\n        long
    j = 0;\n        long k = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n
    \       long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long
    sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10
    = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n
    \       long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n        long
    sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long sum20
    = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n
    \       long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n        long
    sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long sum30
    = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n
    \       long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long
    sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40
    = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n
    \       long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long
    sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50
    = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n
    \       long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n        long
    sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long sum60
    = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n
    \       long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n        long
    sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long sum70
    = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n
    \       long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long
    sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n        long sum80
    = 0;\n        long sum81 = 0;\n\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmca492b7.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpmca492b7.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpmca492b7.cs(22,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmpmca492b7.cs(23,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(24,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmpmca492b7.cs(25,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmpmca492b7.cs(26,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmpmca492b7.cs(27,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(28,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(29,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(30,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(31,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(32,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(33,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(34,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(35,14): warning CS0219: The variable ''sum10'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(36,14): warning CS0219: The variable ''sum11'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(37,14): warning CS0219: The variable ''sum12'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(38,14): warning CS0219: The variable ''sum13'' is '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long min = 0;\n        long maxSum = 0;\n
    \       long minSum = 0;\n        long sumOfSquares = 0;\n        long sumOfSquareOfMin
    = 0;\n        long sumOfSquareOfMax = 0;\n        long sumOfSquareOfSum = 0;\n
    \       long sumOfSquareOfSumOfMin = 0;\n        long sumOfSquareOfSumOfMax =
    0;\n        long sumOfSquareOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfMin
    = 0;\n        long sumOfSquareOfSumOfSumOfMax = 0;\n        long sumOfSquareOfSumOfSumOfSum
    = 0;\n        long sumOfSquareOfSumOfSumOfSumOfMin = 0;\n        long sumOfSquareOfSumOfSumOfSumOfMax
    = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfMin
    = 0;\n        long sumOfSquareOfSumOfSumOfSumOfMax = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSum
    = 0;\n        long sumOfSquareOfSumOfSumOfSumOfMin = 0;\n        long sumOfSquareOfSumOfSumOfSumOfMax
    = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfMin
    = 0;\n        long sumOfSquareOfSumOfSumOfSumOfMax = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSum
    = 0;\n        long sumOfSquareOfSumOfSumOfSumOfMin = 0;\n        long sumOfSquareOfSumOfSumOfSumOfMax
    = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfMin
    = 0;\n        long sumOfSquareOfSumOfSumOfSumOfMax = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSum
    = 0;\n        long sumOfSquareOfSumOfSumOfSumOfMin = 0;\n        long sumOfSquareOfSumOfSumOfSumOfMax
    = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSum = 0;\n        long sumOfSquareOfSumOfSumOfSumOfMin
    = 0;\n        long sumOfSquareOfSumOfSumOfSumOfMax = 0;\n        long sumOfSquareOfSumOfSumOfSumOfSum
    = 0;\n        long sumOfSquareOfSumOfSumOfSum\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp3jvhvcw1.cs(60,40): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            a[i]
    = i * i - i + 1;\n            sum += a[i];\n            if (sum > max) {\n                max
    = sum;\n            }\n        }\n        long maxSum = 0;\n        for (int i
    = 0; i < n; i++) {\n            long sum = 0;\n            for (int j = i; j <
    n; j++) {\n                sum += a[j];\n            }\n            if (sum >
    maxSum) {\n                maxSum = sum;\n            }\n        }\n        long
    maxSum2 = 0;\n        for (int i = 0; i < n; i++) {\n            long sum = 0;\n
    \           for (int j = i; j < n; j++) {\n                sum += a[j];\n            }\n
    \           if (sum > maxSum2) {\n                maxSum2 = sum;\n            }\n
    \       }\n        long maxSum3 = 0;\n        for (int i = 0; i < n; i++) {\n
    \           long sum = 0;\n            for (int j = i; j < n; j++) {\n                sum
    += a[j];\n            }\n            if (sum > maxSum3) {\n                maxSum3
    = sum;\n            }\n        }\n        long maxSum4 = 0;\n        for (int
    i = 0; i < n; i++) {\n            long sum = 0;\n            for (int j = i; j
    < n; j++) {\n                sum += a[j];\n            }\n            if (sum
    > maxSum4) {\n                maxSum4 = sum;\n            }\n        }\n        long
    maxSum5 = 0;\n        for (int i = 0; i < n; i++) {\n            long sum = 0;\n
    \           for (int j = i; j < n; j++) {\n                sum += a[j];\n            }\n
    \           if (sum > maxSum5) {\n                maxSum5 = sum;\n            }\n
    \       }\n        long maxSum6 = 0;\n        for (int i = 0; i < n; i++) {\n
    \           long sum = 0;\n            for (int j = i; j < n; j++) {\n                sum
    += a[j];\n            }\n            if (sum > maxSum6) {\n                maxSum6
    = sum;\n            }\n        }\n        long maxSum7 = 0;\n        for (int
    i = 0; i < n; i++) {\n            long sum = 0;\n            for (int j = i; j
    < n; j++) {\n                sum += a[j];\n            }\n            if (sum
    > maxSum7) {\n                maxSum7 = sum;\n            }\n        }\n        long
    maxSum8 = 0;\n        for (int i = 0; i < n; i++) {\n            long sum = 0;\n
    \           for (int j = i; j < n; j++) {\n                sum += a[j];\n            }\n
    \           if (sum > maxSum8) {\n                maxSum8 = sum;\n            }\n
    \       }\n        long maxSum9 = 0;\n        for (int i = 0; i < n; i++) {\n
    \           long sum = 0;\n            for (int j = i; j < n; j++) {\n                sum
    += a[j];\n            }\n            if (sum\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyy8mcd63.cs(116,20): error CS1026: ) expected

    /tmp/tmpyy8mcd63.cs(116,20): error CS1525: Invalid expression term ''}''

    /tmp/tmpyy8mcd63.cs(116,20): error CS1002: ; expected

    /tmp/tmpyy8mcd63.cs(118,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpyy8mcd63.cs(125,2): error CS1513: } expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long maxTriples = 0;\n        long maxTriplesCount
    = 0;\n        long maxTripleSum = 0;\n        long maxTripleSumCount = 0;\n        long
    maxTripleSumCount2 = 0;\n        long maxTripleSumCount3 = 0;\n        long maxTripleSumCount4
    = 0;\n        long maxTripleSumCount5 = 0;\n        long maxTripleSumCount6 =
    0;\n        long maxTripleSumCount7 = 0;\n        long maxTripleSumCount8 = 0;\n
    \       long maxTripleSumCount9 = 0;\n        long maxTripleSumCount10 = 0;\n
    \       long maxTripleSumCount11 = 0;\n        long maxTripleSumCount12 = 0;\n
    \       long maxTripleSumCount13 = 0;\n        long maxTripleSumCount14 = 0;\n
    \       long maxTripleSumCount15 = 0;\n        long maxTripleSumCount16 = 0;\n
    \       long maxTripleSumCount17 = 0;\n        long maxTripleSumCount18 = 0;\n
    \       long maxTripleSumCount19 = 0;\n        long maxTripleSumCount20 = 0;\n
    \       long maxTripleSumCount21 = 0;\n        long maxTripleSumCount22 = 0;\n
    \       long maxTripleSumCount23 = 0;\n        long maxTripleSumCount24 = 0;\n
    \       long maxTripleSumCount25 = 0;\n        long maxTripleSumCount26 = 0;\n
    \       long maxTripleSumCount27 = 0;\n        long maxTripleSumCount28 = 0;\n
    \       long maxTripleSumCount29 = 0;\n        long maxTripleSumCount30 = 0;\n
    \       long maxTripleSumCount31 = 0;\n        long maxTripleSumCount32 = 0;\n
    \       long maxTripleSumCount33 = 0;\n        long maxTripleSumCount34 = 0;\n
    \       long maxTripleSumCount35 = 0;\n        long maxTripleSumCount36 = 0;\n
    \       long maxTripleSumCount37 = 0;\n        long maxTripleSumCount38 = 0;\n
    \       long maxTripleSumCount39 = 0;\n        long maxTripleSumCount40 = 0;\n
    \       long maxTripleSumCount41 = 0;\n        long maxTripleSumCount42 = 0;\n
    \       long maxTripleSumCount43 = 0;\n        long maxTripleSumCount44 = 0;\n
    \       long maxTripleSumCount45 = 0;\n        long maxTripleSumCount46 = 0;\n
    \       long maxTripleSumCount47 = 0;\n        long maxTri\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx2888y2b.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpx2888y2b.cs(73,20): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long count = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long \n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpvm9akil_.cs(106,13): error CS1001: Identifier expected

    /tmp/tmpvm9akil_.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long i = 0;\n        long
    j = 0;\n        long k = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n
    \       long sum4 = 0;\n        long sum5 = 0;\n        long sum6 = 0;\n        long
    sum7 = 0;\n        long sum8 = 0;\n        long sum9 = 0;\n        long sum10
    = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n
    \       long sum14 = 0;\n        long sum15 = 0;\n        long sum16 = 0;\n        long
    sum17 = 0;\n        long sum18 = 0;\n        long sum19 = 0;\n        long sum20
    = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n
    \       long sum24 = 0;\n        long sum25 = 0;\n        long sum26 = 0;\n        long
    sum27 = 0;\n        long sum28 = 0;\n        long sum29 = 0;\n        long sum30
    = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n
    \       long sum34 = 0;\n        long sum35 = 0;\n        long sum36 = 0;\n        long
    sum37 = 0;\n        long sum38 = 0;\n        long sum39 = 0;\n        long sum40
    = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n
    \       long sum44 = 0;\n        long sum45 = 0;\n        long sum46 = 0;\n        long
    sum47 = 0;\n        long sum48 = 0;\n        long sum49 = 0;\n        long sum50
    = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n
    \       long sum54 = 0;\n        long sum55 = 0;\n        long sum56 = 0;\n        long
    sum57 = 0;\n        long sum58 = 0;\n        long sum59 = 0;\n        long sum60
    = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n
    \       long sum64 = 0;\n        long sum65 = 0;\n        long sum66 = 0;\n        long
    sum67 = 0;\n        long sum68 = 0;\n        long sum69 = 0;\n        long sum70
    = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n
    \       long sum74 = 0;\n        long sum75 = 0;\n        long sum76 = 0;\n        long
    sum77 = 0;\n        long sum78 = 0;\n        long sum79 = 0;\n        long sum80
    = 0;\n        long sum81 = 0;\n\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmca492b7.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpmca492b7.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpmca492b7.cs(22,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmpmca492b7.cs(23,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(24,14): warning CS0219: The variable ''i'' is assigned but
    its value is never used

    /tmp/tmpmca492b7.cs(25,14): warning CS0219: The variable ''j'' is assigned but
    its value is never used

    /tmp/tmpmca492b7.cs(26,14): warning CS0219: The variable ''k'' is assigned but
    its value is never used

    /tmp/tmpmca492b7.cs(27,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(28,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(29,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(30,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(31,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(32,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(33,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(34,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(35,14): warning CS0219: The variable ''sum10'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(36,14): warning CS0219: The variable ''sum11'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(37,14): warning CS0219: The variable ''sum12'' is assigned
    but its value is never used

    /tmp/tmpmca492b7.cs(38,14): warning CS0219: The variable ''sum13'' is '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        for (int i = 0;
    i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n            if
    (sum > max) {\n                max = sum;\n            }\n        }\n        for
    (int i = 0; i < n; i++) {\n            long sum = 0;\n            for (int j =
    i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    sum
    += a[j] * a[k] - a[j] * a[k] - a[k] * a[j];\n                }\n            }\n
    \           if (sum % 3 == 0) {\n                count++;\n            }\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9tl7faxr.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp9tl7faxr.cs(25,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp9tl7faxr.cs(26,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp9tl7faxr.cs(32,18): error CS0136: A local or parameter named ''sum'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmp9tl7faxr.cs(35,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp9tl7faxr.cs(35,35): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp9tl7faxr.cs(35,42): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp9tl7faxr.cs(35,49): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp9tl7faxr.cs(35,56): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp9tl7faxr.cs(35,63): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long sum2 = 0;\n
    \       long max2 = 0;\n        long count2 = 0;\n        long sum3 = 0;\n        long
    max3 = 0;\n        long count3 = 0;\n        long sum4 = 0;\n        long max4
    = 0;\n        long count4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n
    \       long count5 = 0;\n        long sum6 = 0;\n        long max6 = 0;\n        long
    count6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n        long count7
    = 0;\n        long sum8 = 0;\n        long max8 = 0;\n        long count8 = 0;\n
    \       long sum9 = 0;\n        long max9 = 0;\n        long count9 = 0;\n        long
    sum10 = 0;\n        long max10 = 0;\n        long count10 = 0;\n        long sum11
    = 0;\n        long max11 = 0;\n        long count11 = 0;\n        long sum12 =
    0;\n        long max12 = 0;\n        long count12 = 0;\n        long sum13 = 0;\n
    \       long max13 = 0;\n        long count13 = 0;\n        long sum14 = 0;\n
    \       long max14 = 0;\n        long count14 = 0;\n        long sum15 = 0;\n
    \       long max15 = 0;\n        long count15 = 0;\n        long sum16 = 0;\n
    \       long max16 = 0;\n        long count16 = 0;\n        long sum17 = 0;\n
    \       long max17 = 0;\n        long count17 = 0;\n        long sum18 = 0;\n
    \       long max18 = 0;\n        long count18 = 0;\n        long sum19 = 0;\n
    \       long max19 = 0;\n        long count19 = 0;\n        long sum20 = 0;\n
    \       long max20 = 0;\n        long count20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long count21 = 0;\n        long sum22 = 0;\n
    \       long max22 = 0;\n        long count22 = 0;\n        long sum23 = 0;\n
    \       long max23 = 0;\n        long count23 = 0;\n        long sum24 = 0;\n
    \       long max24 = 0;\n        long count24 = 0;\n        long sum25 = 0;\n
    \       long max25 = 0;\n        long count25 = 0;\n        long sum26 = 0;\n
    \       long max26 = 0;\n        long count26 = 0;\n        long sum27 = 0;\n
    \       long max27 = 0;\n        long count27 = 0;\n        long sum28 = 0;\n
    \       long max28 = 0;\n        long count28 = 0;\n        long sum29 = 0;\n
    \       long max29 = 0;\n        long count29\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpin32jv4u.cs(107,21): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp;\n        long
    temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n        long
    temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n        long
    temp10;\n        long temp11;\n        long temp12;\n        long temp13;\n        long
    temp14;\n        long temp15;\n        long temp16;\n        long temp17;\n        long
    temp18;\n        long temp19;\n        long temp20;\n        long temp21;\n        long
    temp22;\n        long temp23;\n        long temp24;\n        long temp25;\n        long
    temp26;\n        long temp27;\n        long temp28;\n        long temp29;\n        long
    temp30;\n        long temp31;\n        long temp32;\n        long temp33;\n        long
    temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n        long
    temp38;\n        long temp39;\n        long temp40;\n        long temp41;\n        long
    temp42;\n        long temp43;\n        long temp44;\n        long temp45;\n        long
    temp46;\n        long temp47;\n        long temp48;\n        long temp49;\n        long
    temp50;\n        long temp51;\n        long temp52;\n        long temp53;\n        long
    temp54;\n        long temp55;\n        long temp56;\n        long temp57;\n        long
    temp58;\n        long temp59;\n        long temp60;\n        long temp61;\n        long
    temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n        long
    temp66;\n        long temp67;\n        long temp68;\n        long temp69;\n        long
    temp70;\n        long temp71;\n        long temp72;\n        long temp73;\n        long
    temp74;\n        long temp75;\n        long temp76;\n        long temp77;\n        long
    temp78;\n        long temp79;\n        long temp80;\n        long temp81;\n        long
    temp82;\n        long temp83;\n        long temp84;\n        long temp85;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa500nu4e.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpa500nu4e.cs(22,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmpa500nu4e.cs(23,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmpa500nu4e.cs(24,14): warning CS0168: The variable ''temp'' is declared
    but never used

    /tmp/tmpa500nu4e.cs(25,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    /tmp/tmpa500nu4e.cs(26,14): warning CS0168: The variable ''temp3'' is declared
    but never used

    /tmp/tmpa500nu4e.cs(27,14): warning CS0168: The variable ''temp4'' is declared
    but never used

    /tmp/tmpa500nu4e.cs(28,14): warning CS0168: The variable ''temp5'' is declared
    but never used

    /tmp/tmpa500nu4e.cs(29,14): warning CS0168: The variable ''temp6'' is declared
    but never used

    /tmp/tmpa500nu4e.cs(30,14): warning CS0168: The variable ''temp7'' is declared
    but never used

    /tmp/tmpa500nu4e.cs(31,14): warning CS0168: The variable ''temp8'' is declared
    but never used

    /tmp/tmpa500nu4e.cs(32,14): warning CS0168: The variable ''temp9'' is declared
    but never used

    /tmp/tmpa500nu4e.cs(33,14): warning CS0168: The variable ''temp10'' is declared
    but never used

    /tmp/tmpa500nu4e.cs(34,14): warning CS0168: The variable ''temp11'' is declared
    but never used

    /tmp/tmpa500nu4e.cs(35,14): warning CS0168: The variable ''temp12'' is declared
    but never used

    /tmp/tmpa500nu4e.cs(36,14): warning CS0168: The variable ''temp13'' is declared
    but never used

    /tmp/tmpa500nu4e.cs(37,14): warning CS0168: The variable ''temp14'' is declared
    but never used

    /tmp/tmpa500nu4e.cs(38,14): warning CS0168: The variable ''temp15'' is declared
    but never used

    /tmp/tmpa500nu4e.cs(39,14): warning CS0168: The variable ''temp16'' is declared
    but never used

    /tmp/tmpa500nu4e.cs(40,14): warning CS0168: The variable ''temp17'' is declared
    but never used

    /tmp/tmpa500nu4e.cs(41,14): warning CS0'
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long count = 0;\n
    \       for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum
    += a[i];\n            if (sum > max) {\n                max = sum;\n            }\n
    \       }\n        for (int i = 0; i < n; i++) {\n            temp = sum - a[i];\n
    \           if (temp > 0) {\n                count++;\n            }\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_0dg51zl.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659798085
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        for (int i = 1; i < n; i++) {\n            sum += a[i];\n            a[i]
    = sum;\n        }\n        long max = 0;\n        long sum2 = 0;\n        for
    (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    long temp = a[i] + a[j] + a[k];\n
    \                   if (temp % 3 == 0) {\n                        max++;\n                        sum2
    += temp;\n                    }\n                }\n            }\n        }\n
    \       return sum2;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10dfa36f8fcc450e8a352db62085947c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10dfa36f8fcc450e8a352db62085947c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        for (int i = 0;
    i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n            if
    (sum > max) {\n                max = sum;\n                count = 0;\n            }\n
    \           if (sum == max) {\n                count++;\n            }\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu2jgezeg.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpu2jgezeg.cs(25,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpu2jgezeg.cs(26,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long sum2 = 0;\n
    \       long max2 = 0;\n        long count2 = 0;\n        long sum3 = 0;\n        long
    max3 = 0;\n        long count3 = 0;\n        long sum4 = 0;\n        long max4
    = 0;\n        long count4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n
    \       long count5 = 0;\n        long sum6 = 0;\n        long max6 = 0;\n        long
    count6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n        long count7
    = 0;\n        long sum8 = 0;\n        long max8 = 0;\n        long count8 = 0;\n
    \       long sum9 = 0;\n        long max9 = 0;\n        long count9 = 0;\n        long
    sum10 = 0;\n        long max10 = 0;\n        long count10 = 0;\n        long sum11
    = 0;\n        long max11 = 0;\n        long count11 = 0;\n        long sum12 =
    0;\n        long max12 = 0;\n        long count12 = 0;\n        long sum13 = 0;\n
    \       long max13 = 0;\n        long count13 = 0;\n        long sum14 = 0;\n
    \       long max14 = 0;\n        long count14 = 0;\n        long sum15 = 0;\n
    \       long max15 = 0;\n        long count15 = 0;\n        long sum16 = 0;\n
    \       long max16 = 0;\n        long count16 = 0;\n        long sum17 = 0;\n
    \       long max17 = 0;\n        long count17 = 0;\n        long sum18 = 0;\n
    \       long max18 = 0;\n        long count18 = 0;\n        long sum19 = 0;\n
    \       long max19 = 0;\n        long count19 = 0;\n        long sum20 = 0;\n
    \       long max20 = 0;\n        long count20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long count21 = 0;\n        long sum22 = 0;\n
    \       long max22 = 0;\n        long count22 = 0;\n        long sum23 = 0;\n
    \       long max23 = 0;\n        long count23 = 0;\n        long sum24 = 0;\n
    \       long max24 = 0;\n        long count24 = 0;\n        long sum25 = 0;\n
    \       long max25 = 0;\n        long count25 = 0;\n        long sum26 = 0;\n
    \       long max26 = 0;\n        long count26 = 0;\n        long sum27 = 0;\n
    \       long max27 = 0;\n        long count27 = 0;\n        long sum28 = 0;\n
    \       long max28 = 0;\n        long count28 = 0;\n        long sum29 = 0;\n
    \       long max29 = 0;\n        long count\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppokqw14u.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmppokqw14u.cs(107,19): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            a[i]
    = i * i - i + 1;\n            sum += a[i];\n            if (sum > max) {\n                max
    = sum;\n            }\n        }\n        long ans = 0;\n        for (int i =
    0; i < n; i++) {\n            long sum = 0;\n            for (int j = i; j < n;
    j++) {\n                sum += a[j];\n            }\n            if (sum % 3 ==
    0) {\n                ans += 1;\n            }\n        }\n        return ans;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiaee3_fp.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long sum2 = 0;\n
    \       long max2 = 0;\n        long count2 = 0;\n        long sum3 = 0;\n        long
    max3 = 0;\n        long count3 = 0;\n        long sum4 = 0;\n        long max4
    = 0;\n        long count4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n
    \       long count5 = 0;\n        long sum6 = 0;\n        long max6 = 0;\n        long
    count6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n        long count7
    = 0;\n        long sum8 = 0;\n        long max8 = 0;\n        long count8 = 0;\n
    \       long sum9 = 0;\n        long max9 = 0;\n        long count9 = 0;\n        long
    sum10 = 0;\n        long max10 = 0;\n        long count10 = 0;\n        long sum11
    = 0;\n        long max11 = 0;\n        long count11 = 0;\n        long sum12 =
    0;\n        long max12 = 0;\n        long count12 = 0;\n        long sum13 = 0;\n
    \       long max13 = 0;\n        long count13 = 0;\n        long sum14 = 0;\n
    \       long max14 = 0;\n        long count14 = 0;\n        long sum15 = 0;\n
    \       long max15 = 0;\n        long count15 = 0;\n        long sum16 = 0;\n
    \       long max16 = 0;\n        long count16 = 0;\n        long sum17 = 0;\n
    \       long max17 = 0;\n        long count17 = 0;\n        long sum18 = 0;\n
    \       long max18 = 0;\n        long count18 = 0;\n        long sum19 = 0;\n
    \       long max19 = 0;\n        long count19 = 0;\n        long sum20 = 0;\n
    \       long max20 = 0;\n        long count20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long count21 = 0;\n        long sum22 = 0;\n
    \       long max22 = 0;\n        long count22 = 0;\n        long sum23 = 0;\n
    \       long max23 = 0;\n        long count23 = 0;\n        long sum24 = 0;\n
    \       long max24 = 0;\n        long count24 = 0;\n        long sum25 = 0;\n
    \       long max25 = 0;\n        long count25 = 0;\n        long sum26 = 0;\n
    \       long max26 = 0;\n        long count26 = 0;\n        long sum27 = 0;\n
    \       long max27 = 0;\n        long count27 = 0;\n        long sum28 = 0;\n
    \       long max28 = 0;\n        long count28 = 0;\n        long sum29 = 0;\n
    \       long max29 = 0;\n        long count29\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpin32jv4u.cs(107,21): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long count = 0;\n        long max = 0;\n        long temp = 0;\n
    \       for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum
    += a[i];\n        }\n        for (int i = 0; i < n; i++) {\n            for (int
    j = 0; j < n; j++) {\n                for (int k = 0; k < n; k++) {\n                    if
    (i == j && j == k) {\n                        continue;\n                    }\n
    \                   temp = a[i] + a[j] + a[k];\n                    if (temp %
    3 == 0) {\n                        count++;\n                    }\n                    if
    (temp > max) {\n                        max = temp;\n                    }\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb7ewaev2.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpb7ewaev2.cs(26,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpb7ewaev2.cs(27,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpb7ewaev2.cs(35,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpb7ewaev2.cs(35,35): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpb7ewaev2.cs(35,42): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long min = 0;\n        long count = 0;\n
    \       long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long
    sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 =
    0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n
    \       long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long
    sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18
    = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n
    \       long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long
    sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28
    = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n
    \       long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long
    sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38
    = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n
    \       long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long
    sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48
    = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n
    \       long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long
    sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long sum58
    = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n
    \       long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n        long
    sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long sum68
    = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n
    \       long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n        long
    sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long sum78
    = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n
    \       long sum82 = 0;\n        long \n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdhfagdes.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpdhfagdes.cs(106,13): error CS1001: Identifier expected

    /tmp/tmpdhfagdes.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            a[i]
    = i * i - i + 1;\n            sum += a[i];\n            if (sum > max) {\n                max
    = sum;\n            }\n        }\n        long triple = 0;\n        for (int i
    = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                if
    (i != j && a[i] < a[j]) {\n                    for (int k = 0; k < n; k++) {\n
    \                       if (a[i] + a[j] + a[k] == max) {\n                            triple++;\n
    \                       }\n                    }\n                }\n            }\n
    \       }\n        return triple;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5t97olge.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp5t97olge.cs(24,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp5t97olge.cs(25,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp5t97olge.cs(33,31): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp5t97olge.cs(33,38): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp5t97olge.cs(35,29): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp5t97olge.cs(35,36): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp5t97olge.cs(35,43): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long max
    = 0;\n        long sum = 0;\n        long temp = 0;\n        long temp2 = 0;\n
    \       long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n        long
    temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long temp9
    = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12
    = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15
    = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18
    = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21
    = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24
    = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27
    = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30
    = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33
    = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36
    = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39
    = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42
    = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45
    = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48
    = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51
    = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54
    = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57
    = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60
    = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63
    = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66
    = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69
    = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72
    = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75
    = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78
    = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long temp81
    = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxbatpbkj.cs(21,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmpxbatpbkj.cs(22,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpxbatpbkj.cs(23,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmpxbatpbkj.cs(24,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmpxbatpbkj.cs(25,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmpxbatpbkj.cs(26,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmpxbatpbkj.cs(27,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmpxbatpbkj.cs(28,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmpxbatpbkj.cs(29,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmpxbatpbkj.cs(30,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmpxbatpbkj.cs(31,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmpxbatpbkj.cs(32,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmpxbatpbkj.cs(33,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmpxbatpbkj.cs(34,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmpxbatpbkj.cs(35,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmpxbatpbkj.cs(36,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmpxbatpbkj.cs(37,14): warning CS0219: The variable ''temp15'' is assigned
    but its value is never used

    /tmp/tmpxbatpbkj.cs(38,14): warning CS0219: The variable ''temp16'' is assigned
    but its value is never used

    /tmp/tmpxbatpbkj.cs(39,14): w'
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long maxSum = 0;\n        long maxSum2 =
    0;\n        long maxSum3 = 0;\n        long maxSum4 = 0;\n        long maxSum5
    = 0;\n        long maxSum6 = 0;\n        long maxSum7 = 0;\n        long maxSum8
    = 0;\n        long maxSum9 = 0;\n        long maxSum10 = 0;\n        long maxSum11
    = 0;\n        long maxSum12 = 0;\n        long maxSum13 = 0;\n        long maxSum14
    = 0;\n        long maxSum15 = 0;\n        long maxSum16 = 0;\n        long maxSum17
    = 0;\n        long maxSum18 = 0;\n        long maxSum19 = 0;\n        long maxSum20
    = 0;\n        long maxSum21 = 0;\n        long maxSum22 = 0;\n        long maxSum23
    = 0;\n        long maxSum24 = 0;\n        long maxSum25 = 0;\n        long maxSum26
    = 0;\n        long maxSum27 = 0;\n        long maxSum28 = 0;\n        long maxSum29
    = 0;\n        long maxSum30 = 0;\n        long maxSum31 = 0;\n        long maxSum32
    = 0;\n        long maxSum33 = 0;\n        long maxSum34 = 0;\n        long maxSum35
    = 0;\n        long maxSum36 = 0;\n        long maxSum37 = 0;\n        long maxSum38
    = 0;\n        long maxSum39 = 0;\n        long maxSum40 = 0;\n        long maxSum41
    = 0;\n        long maxSum42 = 0;\n        long maxSum43 = 0;\n        long maxSum44
    = 0;\n        long maxSum45 = 0;\n        long maxSum46 = 0;\n        long maxSum47
    = 0;\n        long maxSum48 = 0;\n        long maxSum49 = 0;\n        long maxSum50
    = 0;\n        long maxSum51 = 0;\n        long maxSum52 = 0;\n        long maxSum53
    = 0;\n        long maxSum54 = 0;\n        long maxSum55 = 0;\n        long maxSum56
    = 0;\n        long maxSum57 = 0;\n        long maxSum58 = 0;\n        long maxSum59
    = 0;\n        long maxSum60 = 0;\n        long maxSum61 = 0;\n        long maxSum62
    = 0;\n        long maxSum63 = 0;\n        long maxSum64 = 0;\n        long maxSum65
    = 0;\n        long maxSum66 = 0;\n        long maxSum67 = 0;\n        long maxSum68
    = 0;\n        long maxSum69 = 0;\n        long maxSum70 = 0;\n        long maxSum71
    = 0;\n        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph4e7fxde.cs(94,13): error CS1001: Identifier expected

    /tmp/tmph4e7fxde.cs(94,13): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long temp2 = 0;\n
    \       long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n        long
    temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long temp9
    = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12
    = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15
    = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18
    = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21
    = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24
    = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27
    = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30
    = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33
    = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36
    = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39
    = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42
    = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45
    = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48
    = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51
    = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54
    = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57
    = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60
    = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63
    = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66
    = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69
    = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72
    = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75
    = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78
    = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long temp81
    = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n        \n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp66kfkz4f.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp66kfkz4f.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp66kfkz4f.cs(22,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmp66kfkz4f.cs(23,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(24,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(25,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(26,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(27,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(28,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(29,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(30,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(31,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(32,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(33,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(34,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(35,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(36,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(37,14): warning CS0219: The variable ''temp15'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(38,14): warning CS0219:'
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long sum2 = 0;\n
    \       long max2 = 0;\n        long count2 = 0;\n        long sum3 = 0;\n        long
    max3 = 0;\n        long count3 = 0;\n        long sum4 = 0;\n        long max4
    = 0;\n        long count4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n
    \       long count5 = 0;\n        long sum6 = 0;\n        long max6 = 0;\n        long
    count6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n        long count7
    = 0;\n        long sum8 = 0;\n        long max8 = 0;\n        long count8 = 0;\n
    \       long sum9 = 0;\n        long max9 = 0;\n        long count9 = 0;\n        long
    sum10 = 0;\n        long max10 = 0;\n        long count10 = 0;\n        long sum11
    = 0;\n        long max11 = 0;\n        long count11 = 0;\n        long sum12 =
    0;\n        long max12 = 0;\n        long count12 = 0;\n        long sum13 = 0;\n
    \       long max13 = 0;\n        long count13 = 0;\n        long sum14 = 0;\n
    \       long max14 = 0;\n        long count14 = 0;\n        long sum15 = 0;\n
    \       long max15 = 0;\n        long count15 = 0;\n        long sum16 = 0;\n
    \       long max16 = 0;\n        long count16 = 0;\n        long sum17 = 0;\n
    \       long max17 = 0;\n        long count17 = 0;\n        long sum18 = 0;\n
    \       long max18 = 0;\n        long count18 = 0;\n        long sum19 = 0;\n
    \       long max19 = 0;\n        long count19 = 0;\n        long sum20 = 0;\n
    \       long max20 = 0;\n        long count20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long count21 = 0;\n        long sum22 = 0;\n
    \       long max22 = 0;\n        long count22 = 0;\n        long sum23 = 0;\n
    \       long max23 = 0;\n        long count23 = 0;\n        long sum24 = 0;\n
    \       long max24 = 0;\n        long count24 = 0;\n        long sum25 = 0;\n
    \       long max25 = 0;\n        long count25 = 0;\n        long sum26 = 0;\n
    \       long max26 = 0;\n        long count26 = 0;\n        long sum27 = 0;\n
    \       long max27 = 0;\n        long count27 = 0;\n        long sum28 = 0;\n
    \       long max28 = 0;\n        long count28 = 0;\n        long sum29 = 0;\n
    \       long max29 = 0;\n        long count\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppokqw14u.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmppokqw14u.cs(107,19): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long sum2 = 0;\n
    \       long sum3 = 0;\n        long sum4 = 0;\n        long sum5 = 0;\n        long
    sum6 = 0;\n        long sum7 = 0;\n        long sum8 = 0;\n        long sum9 =
    0;\n        long sum10 = 0;\n        long sum11 = 0;\n        long sum12 = 0;\n
    \       long sum13 = 0;\n        long sum14 = 0;\n        long sum15 = 0;\n        long
    sum16 = 0;\n        long sum17 = 0;\n        long sum18 = 0;\n        long sum19
    = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n        long sum22 = 0;\n
    \       long sum23 = 0;\n        long sum24 = 0;\n        long sum25 = 0;\n        long
    sum26 = 0;\n        long sum27 = 0;\n        long sum28 = 0;\n        long sum29
    = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n        long sum32 = 0;\n
    \       long sum33 = 0;\n        long sum34 = 0;\n        long sum35 = 0;\n        long
    sum36 = 0;\n        long sum37 = 0;\n        long sum38 = 0;\n        long sum39
    = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n        long sum42 = 0;\n
    \       long sum43 = 0;\n        long sum44 = 0;\n        long sum45 = 0;\n        long
    sum46 = 0;\n        long sum47 = 0;\n        long sum48 = 0;\n        long sum49
    = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n        long sum52 = 0;\n
    \       long sum53 = 0;\n        long sum54 = 0;\n        long sum55 = 0;\n        long
    sum56 = 0;\n        long sum57 = 0;\n        long sum58 = 0;\n        long sum59
    = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n        long sum62 = 0;\n
    \       long sum63 = 0;\n        long sum64 = 0;\n        long sum65 = 0;\n        long
    sum66 = 0;\n        long sum67 = 0;\n        long sum68 = 0;\n        long sum69
    = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n        long sum72 = 0;\n
    \       long sum73 = 0;\n        long sum74 = 0;\n        long sum75 = 0;\n        long
    sum76 = 0;\n        long sum77 = 0;\n        long sum78 = 0;\n        long sum79
    = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n        long sum82 = 0;\n
    \       long sum83 = 0;\n        long \n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7hqxhdi4.cs(106,13): error CS1001: Identifier expected

    /tmp/tmp7hqxhdi4.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long count = 0;\n
    \       for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;
    j++) {\n                for (int k = j + 1; k < n; k++) {\n                    temp
    = a[i] + a[j] + a[k];\n                    if (temp % 3 == 0) {\n                        count++;\n
    \                       if (temp > max)\n                            max = temp;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4pi20yuz.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp4pi20yuz.cs(26,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp4pi20yuz.cs(31,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp4pi20yuz.cs(31,35): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp4pi20yuz.cs(31,42): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp4pi20yuz.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long min = 0;\n        long maxSum = 0;\n
    \       long minSum = 0;\n        long maxSum2 = 0;\n        long minSum2 = 0;\n
    \       long maxSum3 = 0;\n        long minSum3 = 0;\n        long maxSum4 = 0;\n
    \       long minSum4 = 0;\n        long maxSum5 = 0;\n        long minSum5 = 0;\n
    \       long maxSum6 = 0;\n        long minSum6 = 0;\n        long maxSum7 = 0;\n
    \       long minSum7 = 0;\n        long maxSum8 = 0;\n        long minSum8 = 0;\n
    \       long maxSum9 = 0;\n        long minSum9 = 0;\n        long maxSum10 =
    0;\n        long minSum10 = 0;\n        long maxSum11 = 0;\n        long minSum11
    = 0;\n        long maxSum12 = 0;\n        long minSum12 = 0;\n        long maxSum13
    = 0;\n        long minSum13 = 0;\n        long maxSum14 = 0;\n        long minSum14
    = 0;\n        long maxSum15 = 0;\n        long minSum15 = 0;\n        long maxSum16
    = 0;\n        long minSum16 = 0;\n        long maxSum17 = 0;\n        long minSum17
    = 0;\n        long maxSum18 = 0;\n        long minSum18 = 0;\n        long maxSum19
    = 0;\n        long minSum19 = 0;\n        long maxSum20 = 0;\n        long minSum20
    = 0;\n        long maxSum21 = 0;\n        long minSum21 = 0;\n        long maxSum22
    = 0;\n        long minSum22 = 0;\n        long maxSum23 = 0;\n        long minSum23
    = 0;\n        long maxSum24 = 0;\n        long minSum24 = 0;\n        long maxSum25
    = 0;\n        long minSum25 = 0;\n        long maxSum26 = 0;\n        long minSum26
    = 0;\n        long maxSum27 = 0;\n        long minSum27 = 0;\n        long maxSum28
    = 0;\n        long minSum28 = 0;\n        long maxSum29 = 0;\n        long minSum29
    = 0;\n        long maxSum30 = 0;\n        long minSum30 = 0;\n        long maxSum31
    = 0;\n        long minSum31 = 0;\n        long maxSum32 = 0;\n        long minSum32
    = 0;\n        long maxSum33 = 0;\n        long minSum33 = 0;\n        long maxSum34
    = 0;\n        long minSum34 = 0;\n        long maxSum35 = 0;\n        long minSum35
    = 0;\n        long maxSum36 = 0;\n        \n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgttx068m.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpgttx068m.cs(22,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmpgttx068m.cs(23,14): warning CS0219: The variable ''min'' is assigned but
    its value is never used

    /tmp/tmpgttx068m.cs(24,14): warning CS0219: The variable ''maxSum'' is assigned
    but its value is never used

    /tmp/tmpgttx068m.cs(25,14): warning CS0219: The variable ''minSum'' is assigned
    but its value is never used

    /tmp/tmpgttx068m.cs(26,14): warning CS0219: The variable ''maxSum2'' is assigned
    but its value is never used

    /tmp/tmpgttx068m.cs(27,14): warning CS0219: The variable ''minSum2'' is assigned
    but its value is never used

    /tmp/tmpgttx068m.cs(28,14): warning CS0219: The variable ''maxSum3'' is assigned
    but its value is never used

    /tmp/tmpgttx068m.cs(29,14): warning CS0219: The variable ''minSum3'' is assigned
    but its value is never used

    /tmp/tmpgttx068m.cs(30,14): warning CS0219: The variable ''maxSum4'' is assigned
    but its value is never used

    /tmp/tmpgttx068m.cs(31,14): warning CS0219: The variable ''minSum4'' is assigned
    but its value is never used

    /tmp/tmpgttx068m.cs(32,14): warning CS0219: The variable ''maxSum5'' is assigned
    but its value is never used

    /tmp/tmpgttx068m.cs(33,14): warning CS0219: The variable ''minSum5'' is assigned
    but its value is never used

    /tmp/tmpgttx068m.cs(34,14): warning CS0219: The variable ''maxSum6'' is assigned
    but its value is never used

    /tmp/tmpgttx068m.cs(35,14): warning CS0219: The variable ''minSum6'' is assigned
    but its value is never used

    /tmp/tmpgttx068m.cs(36,14): warning CS0219: The variable ''maxSum7'' is assigned
    but its value is never used

    /tmp/tmpgttx068m.cs(37,14): warning CS0219: The variable ''minSum7'' is assigned
    but its value is never used

    /tmp/tmpgttx068m.cs(38,14): warning CS0219: The variable ''maxSum8'' is assigned
    but its value is never used

    /tmp/tmpg'
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n
    \       long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long
    sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11
    = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n
    \       long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long
    sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21
    = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n
    \       long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long
    sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31
    = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long
    sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41
    = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n
    \       long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long
    sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51
    = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long
    sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61
    = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n
    \       long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long
    sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71
    = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n
    \       long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long
    sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81
    = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n
    \       long sum85\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7clfcaso.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp7clfcaso.cs(105,19): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long count = 0;\n        for (int i = 0; i < n; i++) {\n            a[i]
    = i * i - i + 1;\n            sum += a[i];\n        }\n        for (int i = 0;
    i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    if (a[i] < a[j] && a[i] < a[k])
    {\n                        count++;\n                    }\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9d9dd6bc2084d5086caf78876cc857c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e9d9dd6bc2084d5086caf78876cc857c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n
    \       long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long
    sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11
    = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n
    \       long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long
    sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21
    = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n
    \       long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long
    sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31
    = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long
    sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41
    = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n
    \       long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long
    sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51
    = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long
    sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61
    = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n
    \       long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long
    sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71
    = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n
    \       long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long
    sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81
    = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n
    \       long sum85\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7clfcaso.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp7clfcaso.cs(105,19): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long \n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu85bd_nw.cs(106,13): error CS1001: Identifier expected

    /tmp/tmpu85bd_nw.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n
    \       long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long
    sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11
    = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n
    \       long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long
    sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21
    = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n
    \       long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long
    sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31
    = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long
    sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41
    = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n
    \       long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long
    sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51
    = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long
    sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61
    = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n
    \       long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long
    sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71
    = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n
    \       long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long
    sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81
    = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n
    \       long sum85 = 0;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph_9yrlpb.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmph_9yrlpb.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmph_9yrlpb.cs(22,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(23,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(24,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(25,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(26,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(27,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(28,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(29,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(30,14): warning CS0219: The variable ''sum10'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(31,14): warning CS0219: The variable ''sum11'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(32,14): warning CS0219: The variable ''sum12'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(33,14): warning CS0219: The variable ''sum13'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(34,14): warning CS0219: The variable ''sum14'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(35,14): warning CS0219: The variable ''sum15'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(36,14): warning CS0219: The variable ''sum16'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(37,14): warning CS0219: The variable ''sum17'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(38,14): warning CS0219: The variab'
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long min = 0;\n        long count = 0;\n
    \       long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long
    sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 =
    0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n
    \       long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long
    sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18
    = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n
    \       long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long
    sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28
    = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n
    \       long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long
    sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38
    = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n
    \       long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long
    sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48
    = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n
    \       long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long
    sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long sum58
    = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n
    \       long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n        long
    sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long sum68
    = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n
    \       long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n        long
    sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long sum78
    = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n
    \       long sum82 = 0;\n        long sum\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbrnhtng6.cs(106,17): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long temp2 = 0;\n
    \       long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n        long
    temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long temp9
    = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12
    = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15
    = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18
    = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21
    = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24
    = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27
    = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30
    = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33
    = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36
    = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39
    = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42
    = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45
    = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48
    = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51
    = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54
    = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57
    = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60
    = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63
    = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66
    = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69
    = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72
    = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75
    = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78
    = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long temp81
    = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n        \n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp66kfkz4f.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp66kfkz4f.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp66kfkz4f.cs(22,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmp66kfkz4f.cs(23,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(24,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(25,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(26,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(27,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(28,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(29,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(30,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(31,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(32,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(33,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(34,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(35,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(36,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(37,14): warning CS0219: The variable ''temp15'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(38,14): warning CS0219:'
  timestamp: 1659798085
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp;\n        for(int
    i = 1; i < n; i++) {\n            for(int j = i; j < n; j++) {\n                for(int
    k = j; k < n; k++) {\n                    temp = a[i] + a[j] + a[k];\n                    if(temp
    % 3 == 0) {\n                        sum += temp;\n                        if(sum
    > max) {\n                            max = sum;\n                            count
    = 0;\n                        }\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <291636dfc461435f841a76412fe460d3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <291636dfc461435f841a76412fe460d3>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n
    \       long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long
    sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11
    = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n
    \       long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long
    sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21
    = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n
    \       long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long
    sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31
    = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long
    sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41
    = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n
    \       long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long
    sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51
    = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long
    sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61
    = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n
    \       long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long
    sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71
    = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n
    \       long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long
    sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81
    = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n
    \       long sum85 = 0;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph_9yrlpb.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmph_9yrlpb.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmph_9yrlpb.cs(22,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(23,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(24,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(25,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(26,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(27,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(28,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(29,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(30,14): warning CS0219: The variable ''sum10'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(31,14): warning CS0219: The variable ''sum11'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(32,14): warning CS0219: The variable ''sum12'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(33,14): warning CS0219: The variable ''sum13'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(34,14): warning CS0219: The variable ''sum14'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(35,14): warning CS0219: The variable ''sum15'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(36,14): warning CS0219: The variable ''sum16'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(37,14): warning CS0219: The variable ''sum17'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(38,14): warning CS0219: The variab'
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_j15sm4k.cs(106,18): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        for (int i = 0;
    i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n            if
    (sum > max) {\n                max = sum;\n            }\n        }\n        for
    (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    long sum = a[i] + a[j] + a[k];\n
    \                   if (sum % 3 == 0) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpt4t08dfs.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long count = 0;\n        long temp;\n        long temp2;\n        for
    (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        for
    (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    temp = a[i] + a[j] + a[k];\n
    \                   if (temp % 3 == 0) {\n                        count++;\n                        sum
    += temp;\n                    }\n                }\n            }\n        }\n
    \       return (sum % 3 == 0) ? count : 0;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpqn0porcm.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpqn0porcm.cs(26,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpqn0porcm.cs(31,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpqn0porcm.cs(31,35): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpqn0porcm.cs(31,42): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpqn0porcm.cs(24,14): warning CS0168: The variable ''temp2'' is declared
    but never used

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            a[i]
    = i * i - i + 1;\n            sum += a[i];\n            if (sum > max) {\n                max
    = sum;\n            }\n        }\n        long count = 0;\n        for (int i
    = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    if (a[i] < a[j] && a[j] < a[k]
    && a[i] < max) {\n                        count++;\n                    }\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcrdkyt11.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpcrdkyt11.cs(24,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpcrdkyt11.cs(25,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpcrdkyt11.cs(34,25): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpcrdkyt11.cs(34,32): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpcrdkyt11.cs(34,40): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpcrdkyt11.cs(34,47): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpcrdkyt11.cs(34,55): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long maxTriples = 0;\n        long temp =
    0;\n        long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n
    \       long temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long
    temp8 = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11
    = 0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14
    = 0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17
    = 0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20
    = 0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23
    = 0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26
    = 0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29
    = 0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32
    = 0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35
    = 0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38
    = 0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41
    = 0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44
    = 0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47
    = 0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50
    = 0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53
    = 0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56
    = 0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59
    = 0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62
    = 0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65
    = 0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68
    = 0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71
    = 0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74
    = 0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77
    = 0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80
    = 0;\n        long temp81 = 0;\n        long temp82 = 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpy7op5cmg.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long temp = 0;\n        long count = 0;\n        for (int i = 0;
    i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        for (int
    i = 0; i < n; i++) {\n            for (int j = 0; j < n; j++) {\n                for
    (int k = 0; k < n; k++) {\n                    if (a[i] < a[j] && a[j] < a[k])
    {\n                        temp = a[i] + a[j] + a[k];\n                        if
    (temp % 3 == 0) {\n                            count++;\n                            sum
    += temp;\n                        }\n                    }\n                }\n
    \           }\n        }\n        return sum;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpi0k6fswh.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpi0k6fswh.cs(25,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpi0k6fswh.cs(30,25): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpi0k6fswh.cs(30,32): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpi0k6fswh.cs(30,40): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpi0k6fswh.cs(30,47): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpi0k6fswh.cs(31,32): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpi0k6fswh.cs(31,39): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpi0k6fswh.cs(31,46): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long count = 0;\n        long temp = 0;\n        for (int i = 0;
    i < n; i++) {\n            a[i] = i * i - i + 1;\n        }\n        for (int
    i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    temp = a[i] + a[j] + a[k];\n
    \                   if (temp % 3 == 0) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa16qq12_.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpa16qq12_.cs(25,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpa16qq12_.cs(30,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpa16qq12_.cs(30,35): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpa16qq12_.cs(30,42): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpa16qq12_.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long count = 0;\n        long temp;\n        for (int i = 1; i <=
    n; i++) {\n            a[i - 1] = (i * i - i + 1);\n        }\n        for (int
    i = 1; i <= n; i++) {\n            for (int j = 1; j <= n; j++) {\n                for
    (int k = 1; k <= n; k++) {\n                    temp = a[i] + a[j] + a[k];\n                    if
    (temp % 3 == 0) {\n                        count++;\n                    }\n                }\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpussjpp92.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpussjpp92.cs(25,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpussjpp92.cs(30,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpussjpp92.cs(30,35): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpussjpp92.cs(30,42): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpussjpp92.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long count = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmput8nbui2.cs(106,18): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        Array.Sort(a);\n
    \       long max = 0;\n        long sum = 0;\n        long count = 0;\n        for(int
    i = 0; i < n; i++) {\n            sum += a[i];\n            if((sum % 3) == 0)
    {\n                count++;\n                max = Math.Max(max, sum);\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <43f8db1d92c349409c20d7b165f6a031>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <43f8db1d92c349409c20d7b165f6a031>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long count = 0;\n        long max = 0;\n        long min = 0;\n
    \       long max2 = 0;\n        long min2 = 0;\n        long max3 = 0;\n        long
    min3 = 0;\n        long max4 = 0;\n        long min4 = 0;\n        long max5 =
    0;\n        long min5 = 0;\n        long max6 = 0;\n        long min6 = 0;\n        long
    max7 = 0;\n        long min7 = 0;\n        long max8 = 0;\n        long min8 =
    0;\n        long max9 = 0;\n        long min9 = 0;\n        long max10 = 0;\n
    \       long min10 = 0;\n        long max11 = 0;\n        long min11 = 0;\n        long
    max12 = 0;\n        long min12 = 0;\n        long max13 = 0;\n        long min13
    = 0;\n        long max14 = 0;\n        long min14 = 0;\n        long max15 = 0;\n
    \       long min15 = 0;\n        long max16 = 0;\n        long min16 = 0;\n        long
    max17 = 0;\n        long min17 = 0;\n        long max18 = 0;\n        long min18
    = 0;\n        long max19 = 0;\n        long min19 = 0;\n        long max20 = 0;\n
    \       long min20 = 0;\n        long max21 = 0;\n        long min21 = 0;\n        long
    max22 = 0;\n        long min22 = 0;\n        long max23 = 0;\n        long min23
    = 0;\n        long max24 = 0;\n        long min24 = 0;\n        long max25 = 0;\n
    \       long min25 = 0;\n        long max26 = 0;\n        long min26 = 0;\n        long
    max27 = 0;\n        long min27 = 0;\n        long max28 = 0;\n        long min28
    = 0;\n        long max29 = 0;\n        long min29 = 0;\n        long max30 = 0;\n
    \       long min30 = 0;\n        long max31 = 0;\n        long min31 = 0;\n        long
    max32 = 0;\n        long min32 = 0;\n        long max33 = 0;\n        long min33
    = 0;\n        long max34 = 0;\n        long min34 = 0;\n        long max35 = 0;\n
    \       long min35 = 0;\n        long max36 = 0;\n        long min36 = 0;\n        long
    max37 = 0;\n        long min37 = 0;\n        long max38 = 0;\n        long min38
    = 0;\n        long max39 = 0;\n        long min39 = 0;\n        long max40 = 0;\n
    \       long min40 = 0;\n        long max41 = 0;\n        long min41 = 0;\n        long
    max42 = 0;\n        long min42 = 0;\n        \n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyx_k57l_.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpyx_k57l_.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmpyx_k57l_.cs(22,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmpyx_k57l_.cs(23,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmpyx_k57l_.cs(24,14): warning CS0219: The variable ''min'' is assigned but
    its value is never used

    /tmp/tmpyx_k57l_.cs(25,14): warning CS0219: The variable ''max2'' is assigned
    but its value is never used

    /tmp/tmpyx_k57l_.cs(26,14): warning CS0219: The variable ''min2'' is assigned
    but its value is never used

    /tmp/tmpyx_k57l_.cs(27,14): warning CS0219: The variable ''max3'' is assigned
    but its value is never used

    /tmp/tmpyx_k57l_.cs(28,14): warning CS0219: The variable ''min3'' is assigned
    but its value is never used

    /tmp/tmpyx_k57l_.cs(29,14): warning CS0219: The variable ''max4'' is assigned
    but its value is never used

    /tmp/tmpyx_k57l_.cs(30,14): warning CS0219: The variable ''min4'' is assigned
    but its value is never used

    /tmp/tmpyx_k57l_.cs(31,14): warning CS0219: The variable ''max5'' is assigned
    but its value is never used

    /tmp/tmpyx_k57l_.cs(32,14): warning CS0219: The variable ''min5'' is assigned
    but its value is never used

    /tmp/tmpyx_k57l_.cs(33,14): warning CS0219: The variable ''max6'' is assigned
    but its value is never used

    /tmp/tmpyx_k57l_.cs(34,14): warning CS0219: The variable ''min6'' is assigned
    but its value is never used

    /tmp/tmpyx_k57l_.cs(35,14): warning CS0219: The variable ''max7'' is assigned
    but its value is never used

    /tmp/tmpyx_k57l_.cs(36,14): warning CS0219: The variable ''min7'' is assigned
    but its value is never used

    /tmp/tmpyx_k57l_.cs(37,14): warning CS0219: The variable ''max8'' is assigned
    but its value is never used

    /tmp/tmpyx_k57l_.cs(38,14): warning CS0219: The variable ''min8'''
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long maxSum = 0;\n        long maxSum2 =
    0;\n        long maxSum3 = 0;\n        long maxSum4 = 0;\n        long maxSum5
    = 0;\n        long maxSum6 = 0;\n        long maxSum7 = 0;\n        long maxSum8
    = 0;\n        long maxSum9 = 0;\n        long maxSum10 = 0;\n        long maxSum11
    = 0;\n        long maxSum12 = 0;\n        long maxSum13 = 0;\n        long maxSum14
    = 0;\n        long maxSum15 = 0;\n        long maxSum16 = 0;\n        long maxSum17
    = 0;\n        long maxSum18 = 0;\n        long maxSum19 = 0;\n        long maxSum20
    = 0;\n        long maxSum21 = 0;\n        long maxSum22 = 0;\n        long maxSum23
    = 0;\n        long maxSum24 = 0;\n        long maxSum25 = 0;\n        long maxSum26
    = 0;\n        long maxSum27 = 0;\n        long maxSum28 = 0;\n        long maxSum29
    = 0;\n        long maxSum30 = 0;\n        long maxSum31 = 0;\n        long maxSum32
    = 0;\n        long maxSum33 = 0;\n        long maxSum34 = 0;\n        long maxSum35
    = 0;\n        long maxSum36 = 0;\n        long maxSum37 = 0;\n        long maxSum38
    = 0;\n        long maxSum39 = 0;\n        long maxSum40 = 0;\n        long maxSum41
    = 0;\n        long maxSum42 = 0;\n        long maxSum43 = 0;\n        long maxSum44
    = 0;\n        long maxSum45 = 0;\n        long maxSum46 = 0;\n        long maxSum47
    = 0;\n        long maxSum48 = 0;\n        long maxSum49 = 0;\n        long maxSum50
    = 0;\n        long maxSum51 = 0;\n        long maxSum52 = 0;\n        long maxSum53
    = 0;\n        long maxSum54 = 0;\n        long maxSum55 = 0;\n        long maxSum56
    = 0;\n        long maxSum57 = 0;\n        long maxSum58 = 0;\n        long maxSum59
    = 0;\n        long maxSum60 = 0;\n        long maxSum61 = 0;\n        long maxSum62
    = 0;\n        long maxSum63 = 0;\n        long maxSum64 = 0;\n        long maxSum65
    = 0;\n        long maxSum66 = 0;\n        long maxSum67 = 0;\n        long maxSum68
    = 0;\n        long maxSum69 = 0;\n        long maxSum70 = 0;\n        long maxSum71
    = 0;\n        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpni_mfvp9.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long \n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_mznrdiw.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp_mznrdiw.cs(106,13): error CS1001: Identifier expected

    /tmp/tmp_mznrdiw.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long count = 0;\n        long sum2 = 0;\n        long count2 = 0;\n
    \       long sum3 = 0;\n        long count3 = 0;\n        long sum4 = 0;\n        long
    count4 = 0;\n        long sum5 = 0;\n        long count5 = 0;\n        long sum6
    = 0;\n        long count6 = 0;\n        long sum7 = 0;\n        long count7 =
    0;\n        long sum8 = 0;\n        long count8 = 0;\n        long sum9 = 0;\n
    \       long count9 = 0;\n        long sum10 = 0;\n        long count10 = 0;\n
    \       long sum11 = 0;\n        long count11 = 0;\n        long sum12 = 0;\n
    \       long count12 = 0;\n        long sum13 = 0;\n        long count13 = 0;\n
    \       long sum14 = 0;\n        long count14 = 0;\n        long sum15 = 0;\n
    \       long count15 = 0;\n        long sum16 = 0;\n        long count16 = 0;\n
    \       long sum17 = 0;\n        long count17 = 0;\n        long sum18 = 0;\n
    \       long count18 = 0;\n        long sum19 = 0;\n        long count19 = 0;\n
    \       long sum20 = 0;\n        long count20 = 0;\n        long sum21 = 0;\n
    \       long count21 = 0;\n        long sum22 = 0;\n        long count22 = 0;\n
    \       long sum23 = 0;\n        long count23 = 0;\n        long sum24 = 0;\n
    \       long count24 = 0;\n        long sum25 = 0;\n        long count25 = 0;\n
    \       long sum26 = 0;\n        long count26 = 0;\n        long sum27 = 0;\n
    \       long count27 = 0;\n        long sum28 = 0;\n        long count28 = 0;\n
    \       long sum29 = 0;\n        long count29 = 0;\n        long sum30 = 0;\n
    \       long count30 = 0;\n        long sum31 = 0;\n        long count31 = 0;\n
    \       long sum32 = 0;\n        long count32 = 0;\n        long sum33 = 0;\n
    \       long count33 = 0;\n        long sum34 = 0;\n        long count34 = 0;\n
    \       long sum35 = 0;\n        long count35 = 0;\n        long sum36 = 0;\n
    \       long count36 = 0;\n        long sum37 = 0;\n        long count37 = 0;\n
    \       long sum38 = 0;\n        long count38 = 0;\n        long sum39 = 0;\n
    \       long count39 = 0;\n        long sum40 = 0;\n        long count40 = 0;\n
    \       long sum41 = 0;\n        long count41 = 0;\n        long sum42 = 0;\n
    \       long count42 = 0;\n        long sum43 = 0;\n        long count43 = 0;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp451i5_au.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp451i5_au.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp451i5_au.cs(22,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmp451i5_au.cs(23,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmp451i5_au.cs(24,14): warning CS0219: The variable ''count2'' is assigned
    but its value is never used

    /tmp/tmp451i5_au.cs(25,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmp451i5_au.cs(26,14): warning CS0219: The variable ''count3'' is assigned
    but its value is never used

    /tmp/tmp451i5_au.cs(27,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmp451i5_au.cs(28,14): warning CS0219: The variable ''count4'' is assigned
    but its value is never used

    /tmp/tmp451i5_au.cs(29,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmp451i5_au.cs(30,14): warning CS0219: The variable ''count5'' is assigned
    but its value is never used

    /tmp/tmp451i5_au.cs(31,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmp451i5_au.cs(32,14): warning CS0219: The variable ''count6'' is assigned
    but its value is never used

    /tmp/tmp451i5_au.cs(33,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmp451i5_au.cs(34,14): warning CS0219: The variable ''count7'' is assigned
    but its value is never used

    /tmp/tmp451i5_au.cs(35,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmp451i5_au.cs(36,14): warning CS0219: The variable ''count8'' is assigned
    but its value is never used

    /tmp/tmp451i5_au.cs(37,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmp451i5_au.cs(38,14): warning CS0219: The'
  timestamp: 1659798086
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        Array.Sort(a);\n
    \       long sum = 0;\n        long count = 0;\n        for (int i = 0; i < n;
    i++) {\n            sum += a[i];\n            if (sum % 3 == 0) {\n                count++;\n
    \           }\n        }\n        return count;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e50b5fcc702543668cdda3eec17d9bb7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e50b5fcc702543668cdda3eec17d9bb7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n
    \       long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long
    sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11
    = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n
    \       long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long
    sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21
    = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n
    \       long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long
    sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31
    = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long
    sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41
    = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n
    \       long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long
    sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51
    = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long
    sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61
    = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n
    \       long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long
    sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71
    = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n
    \       long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long
    sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81
    = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n
    \       long sum85 = 0;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph_9yrlpb.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmph_9yrlpb.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmph_9yrlpb.cs(22,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(23,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(24,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(25,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(26,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(27,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(28,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(29,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(30,14): warning CS0219: The variable ''sum10'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(31,14): warning CS0219: The variable ''sum11'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(32,14): warning CS0219: The variable ''sum12'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(33,14): warning CS0219: The variable ''sum13'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(34,14): warning CS0219: The variable ''sum14'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(35,14): warning CS0219: The variable ''sum15'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(36,14): warning CS0219: The variable ''sum16'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(37,14): warning CS0219: The variable ''sum17'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(38,14): warning CS0219: The variab'
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long maxTriples = 0;\n        long temp;\n
    \       for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum
    += a[i];\n        }\n        for (int i = 0; i < n; i++) {\n            temp =
    sum;\n            sum = 0;\n            for (int j = 0; j < n; j++) {\n                sum
    += a[j];\n                if (sum > temp) {\n                    temp = sum;\n
    \               }\n            }\n            if (temp % 3 == 0) {\n                maxTriples
    += 1;\n                if (max < temp) {\n                    max = temp;\n                }\n
    \           }\n        }\n        return maxTriples;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpz6b7hmeq.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpz6b7hmeq.cs(26,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpz6b7hmeq.cs(27,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpz6b7hmeq.cs(33,24): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long temp2 = 0;\n
    \       long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n        long
    temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long temp9
    = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12
    = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15
    = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18
    = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21
    = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24
    = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27
    = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30
    = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33
    = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36
    = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39
    = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42
    = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45
    = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48
    = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51
    = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54
    = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57
    = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60
    = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63
    = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66
    = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69
    = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72
    = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75
    = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78
    = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long temp81
    = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n        \n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp66kfkz4f.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp66kfkz4f.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp66kfkz4f.cs(22,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmp66kfkz4f.cs(23,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(24,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(25,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(26,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(27,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(28,14): warning CS0219: The variable ''temp6'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(29,14): warning CS0219: The variable ''temp7'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(30,14): warning CS0219: The variable ''temp8'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(31,14): warning CS0219: The variable ''temp9'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(32,14): warning CS0219: The variable ''temp10'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(33,14): warning CS0219: The variable ''temp11'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(34,14): warning CS0219: The variable ''temp12'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(35,14): warning CS0219: The variable ''temp13'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(36,14): warning CS0219: The variable ''temp14'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(37,14): warning CS0219: The variable ''temp15'' is assigned
    but its value is never used

    /tmp/tmp66kfkz4f.cs(38,14): warning CS0219:'
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long maxSum = 0;\n        long maxSum2 =
    0;\n        long maxSum3 = 0;\n        long maxSum4 = 0;\n        long maxSum5
    = 0;\n        long maxSum6 = 0;\n        long maxSum7 = 0;\n        long maxSum8
    = 0;\n        long maxSum9 = 0;\n        long maxSum10 = 0;\n        long maxSum11
    = 0;\n        long maxSum12 = 0;\n        long maxSum13 = 0;\n        long maxSum14
    = 0;\n        long maxSum15 = 0;\n        long maxSum16 = 0;\n        long maxSum17
    = 0;\n        long maxSum18 = 0;\n        long maxSum19 = 0;\n        long maxSum20
    = 0;\n        long maxSum21 = 0;\n        long maxSum22 = 0;\n        long maxSum23
    = 0;\n        long maxSum24 = 0;\n        long maxSum25 = 0;\n        long maxSum26
    = 0;\n        long maxSum27 = 0;\n        long maxSum28 = 0;\n        long maxSum29
    = 0;\n        long maxSum30 = 0;\n        long maxSum31 = 0;\n        long maxSum32
    = 0;\n        long maxSum33 = 0;\n        long maxSum34 = 0;\n        long maxSum35
    = 0;\n        long maxSum36 = 0;\n        long maxSum37 = 0;\n        long maxSum38
    = 0;\n        long maxSum39 = 0;\n        long maxSum40 = 0;\n        long maxSum41
    = 0;\n        long maxSum42 = 0;\n        long maxSum43 = 0;\n        long maxSum44
    = 0;\n        long maxSum45 = 0;\n        long maxSum46 = 0;\n        long maxSum47
    = 0;\n        long maxSum48 = 0;\n        long maxSum49 = 0;\n        long maxSum50
    = 0;\n        long maxSum51 = 0;\n        long maxSum52 = 0;\n        long maxSum53
    = 0;\n        long maxSum54 = 0;\n        long maxSum55 = 0;\n        long maxSum56
    = 0;\n        long maxSum57 = 0;\n        long maxSum58 = 0;\n        long maxSum59
    = 0;\n        long maxSum60 = 0;\n        long maxSum61 = 0;\n        long maxSum62
    = 0;\n        long maxSum63 = 0;\n        long maxSum64 = 0;\n        long maxSum65
    = 0;\n        long maxSum66 = 0;\n        long maxSum67 = 0;\n        long maxSum68
    = 0;\n        long maxSum69 = 0;\n        long maxSum70 = 0;\n        long maxSum71
    = 0;\n        long \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph4e7fxde.cs(94,13): error CS1001: Identifier expected

    /tmp/tmph4e7fxde.cs(94,13): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long temp2 = 0;\n
    \       long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n        long
    temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long temp9
    = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12
    = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15
    = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18
    = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21
    = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24
    = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27
    = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30
    = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33
    = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36
    = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39
    = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42
    = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45
    = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48
    = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51
    = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54
    = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57
    = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60
    = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63
    = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66
    = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69
    = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72
    = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75
    = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78
    = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long temp81
    = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsyvxe_tu.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long count = 0;\n
    \       long sum2 = 0;\n        long temp2 = 0;\n        long count2 = 0;\n        long
    sum3 = 0;\n        long temp3 = 0;\n        long count3 = 0;\n        long sum4
    = 0;\n        long temp4 = 0;\n        long count4 = 0;\n        long sum5 = 0;\n
    \       long temp5 = 0;\n        long count5 = 0;\n        long sum6 = 0;\n        long
    temp6 = 0;\n        long count6 = 0;\n        long sum7 = 0;\n        long temp7
    = 0;\n        long count7 = 0;\n        long sum8 = 0;\n        long temp8 = 0;\n
    \       long count8 = 0;\n        long sum9 = 0;\n        long temp9 = 0;\n        long
    count9 = 0;\n        long sum10 = 0;\n        long temp10 = 0;\n        long count10
    = 0;\n        long sum11 = 0;\n        long temp11 = 0;\n        long count11
    = 0;\n        long sum12 = 0;\n        long temp12 = 0;\n        long count12
    = 0;\n        long sum13 = 0;\n        long temp13 = 0;\n        long count13
    = 0;\n        long sum14 = 0;\n        long temp14 = 0;\n        long count14
    = 0;\n        long sum15 = 0;\n        long temp15 = 0;\n        long count15
    = 0;\n        long sum16 = 0;\n        long temp16 = 0;\n        long count16
    = 0;\n        long sum17 = 0;\n        long temp17 = 0;\n        long count17
    = 0;\n        long sum18 = 0;\n        long temp18 = 0;\n        long count18
    = 0;\n        long sum19 = 0;\n        long temp19 = 0;\n        long count19
    = 0;\n        long sum20 = 0;\n        long temp20 = 0;\n        long count20
    = 0;\n        long sum21 = 0;\n        long temp21 = 0;\n        long count21
    = 0;\n        long sum22 = 0;\n        long temp22 = 0;\n        long count22
    = 0;\n        long sum23 = 0;\n        long temp23 = 0;\n        long count23
    = 0;\n        long sum24 = 0;\n        long temp24 = 0;\n        long count24
    = 0;\n        long sum25 = 0;\n        long temp25 = 0;\n        long count25
    = 0;\n        long sum26 = 0;\n        long temp26 = 0;\n        long count26
    = 0;\n        long sum27 = 0;\n        long temp27 = 0;\n        long count27
    = 0;\n        long sum28 = 0;\n        long temp28 = 0;\n        long count28
    = 0;\n        long sum29 = 0;\n        long temp29 = 0;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_czdsflz.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp_czdsflz.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmp_czdsflz.cs(22,14): warning CS0219: The variable ''max'' is assigned but
    its value is never used

    /tmp/tmp_czdsflz.cs(23,14): warning CS0219: The variable ''temp'' is assigned
    but its value is never used

    /tmp/tmp_czdsflz.cs(24,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmp_czdsflz.cs(25,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmp_czdsflz.cs(26,14): warning CS0219: The variable ''temp2'' is assigned
    but its value is never used

    /tmp/tmp_czdsflz.cs(27,14): warning CS0219: The variable ''count2'' is assigned
    but its value is never used

    /tmp/tmp_czdsflz.cs(28,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmp_czdsflz.cs(29,14): warning CS0219: The variable ''temp3'' is assigned
    but its value is never used

    /tmp/tmp_czdsflz.cs(30,14): warning CS0219: The variable ''count3'' is assigned
    but its value is never used

    /tmp/tmp_czdsflz.cs(31,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmp_czdsflz.cs(32,14): warning CS0219: The variable ''temp4'' is assigned
    but its value is never used

    /tmp/tmp_czdsflz.cs(33,14): warning CS0219: The variable ''count4'' is assigned
    but its value is never used

    /tmp/tmp_czdsflz.cs(34,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmp_czdsflz.cs(35,14): warning CS0219: The variable ''temp5'' is assigned
    but its value is never used

    /tmp/tmp_czdsflz.cs(36,14): warning CS0219: The variable ''count5'' is assigned
    but its value is never used

    /tmp/tmp_czdsflz.cs(37,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmp_czdsflz.cs(38,14): warning CS0219: The va'
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long \n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu85bd_nw.cs(106,13): error CS1001: Identifier expected

    /tmp/tmpu85bd_nw.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long maxTriples = 0;\n        long sumTriples
    = 0;\n        long sumTriples2 = 0;\n        long sumTriples3 = 0;\n        long
    sumTriples4 = 0;\n        long sumTriples5 = 0;\n        long sumTriples6 = 0;\n
    \       long sumTriples7 = 0;\n        long sumTriples8 = 0;\n        long sumTriples9
    = 0;\n        long sumTriples10 = 0;\n        long sumTriples11 = 0;\n        long
    sumTriples12 = 0;\n        long sumTriples13 = 0;\n        long sumTriples14 =
    0;\n        long sumTriples15 = 0;\n        long sumTriples16 = 0;\n        long
    sumTriples17 = 0;\n        long sumTriples18 = 0;\n        long sumTriples19 =
    0;\n        long sumTriples20 = 0;\n        long sumTriples21 = 0;\n        long
    sumTriples22 = 0;\n        long sumTriples23 = 0;\n        long sumTriples24 =
    0;\n        long sumTriples25 = 0;\n        long sumTriples26 = 0;\n        long
    sumTriples27 = 0;\n        long sumTriples28 = 0;\n        long sumTriples29 =
    0;\n        long sumTriples30 = 0;\n        long sumTriples31 = 0;\n        long
    sumTriples32 = 0;\n        long sumTriples33 = 0;\n        long sumTriples34 =
    0;\n        long sumTriples35 = 0;\n        long sumTriples36 = 0;\n        long
    sumTriples37 = 0;\n        long sumTriples38 = 0;\n        long sumTriples39 =
    0;\n        long sumTriples40 = 0;\n        long sumTriples41 = 0;\n        long
    sumTriples42 = 0;\n        long sumTriples43 = 0;\n        long sumTriples44 =
    0;\n        long sumTriples45 = 0;\n        long sumTriples46 = 0;\n        long
    sumTriples47 = 0;\n        long sumTriples48 = 0;\n        long sumTriples49 =
    0;\n        long sumTriples50 = 0;\n        long sumTriples51 = 0;\n        long
    sumTriples52 = 0;\n        long sumTriples53 = 0;\n        long sumTriples54 =
    0;\n        long sumTriples55\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_5i13tb5.cs(78,26): error CS1002: ; expected

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_j15sm4k.cs(106,18): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long sum2 = 0;\n        long max2 = 0;\n
    \       long sum3 = 0;\n        long max3 = 0;\n        long sum4 = 0;\n        long
    max4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n        long sum6 =
    0;\n        long max6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n        long
    sum8 = 0;\n        long max8 = 0;\n        long sum9 = 0;\n        long max9 =
    0;\n        long sum10 = 0;\n        long max10 = 0;\n        long sum11 = 0;\n
    \       long max11 = 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long
    sum13 = 0;\n        long max13 = 0;\n        long sum14 = 0;\n        long max14
    = 0;\n        long sum15 = 0;\n        long max15 = 0;\n        long sum16 = 0;\n
    \       long max16 = 0;\n        long sum17 = 0;\n        long max17 = 0;\n        long
    sum18 = 0;\n        long max18 = 0;\n        long sum19 = 0;\n        long max19
    = 0;\n        long sum20 = 0;\n        long max20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long sum22 = 0;\n        long max22 = 0;\n        long
    sum23 = 0;\n        long max23 = 0;\n        long sum24 = 0;\n        long max24
    = 0;\n        long sum25 = 0;\n        long max25 = 0;\n        long sum26 = 0;\n
    \       long max26 = 0;\n        long sum27 = 0;\n        long max27 = 0;\n        long
    sum28 = 0;\n        long max28 = 0;\n        long sum29 = 0;\n        long max29
    = 0;\n        long sum30 = 0;\n        long max30 = 0;\n        long sum31 = 0;\n
    \       long max31 = 0;\n        long sum32 = 0;\n        long max32 = 0;\n        long
    sum33 = 0;\n        long max33 = 0;\n        long sum34 = 0;\n        long max34
    = 0;\n        long sum35 = 0;\n        long max35 = 0;\n        long sum36 = 0;\n
    \       long max36 = 0;\n        long sum37 = 0;\n        long max37 = 0;\n        long
    sum38 = 0;\n        long max38 = 0;\n        long sum39 = 0;\n        long max39
    = 0;\n        long sum40 = 0;\n        long max40 = 0;\n        long sum41 = 0;\n
    \       long max41 = 0;\n        long sum42 = 0;\n        long max42 = 0;\n        long
    sum43 = 0;\n        long max43\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsjmrwb0d.cs(106,19): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            a[i]
    = i * i - i + 1;\n            sum += a[i];\n            if (sum > max) {\n                max
    = sum;\n            }\n        }\n        long triple = 0;\n        for (int i
    = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    triple += a[i];\n                    triple
    += a[j];\n                    triple += a[k];\n                    if (triple
    % 3 == 0) {\n                        return triple;\n                    }\n                }\n
    \           }\n        }\n        return 0;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5fe8bd45794d426f9460996d1655e23a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5fe8bd45794d426f9460996d1655e23a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798087
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        for (int i = 1;
    i <= n; i++) {\n            a[i - 1] = (i * i - i + 1);\n            sum += a[i
    - 1];\n            if (sum % 3 == 0) {\n                max = Math.Max(max, sum);\n
    \               count++;\n            }\n        }\n        return count;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2f440fc4b27140f28d4f11fe55edf544>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2f440fc4b27140f28d4f11fe55edf544>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798087
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long sum2 = 0;\n        long max2 = 0;\n
    \       long sum3 = 0;\n        long max3 = 0;\n        long sum4 = 0;\n        long
    max4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n        long sum6 =
    0;\n        long max6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n        long
    sum8 = 0;\n        long max8 = 0;\n        long sum9 = 0;\n        long max9 =
    0;\n        long sum10 = 0;\n        long max10 = 0;\n        long sum11 = 0;\n
    \       long max11 = 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long
    sum13 = 0;\n        long max13 = 0;\n        long sum14 = 0;\n        long max14
    = 0;\n        long sum15 = 0;\n        long max15 = 0;\n        long sum16 = 0;\n
    \       long max16 = 0;\n        long sum17 = 0;\n        long max17 = 0;\n        long
    sum18 = 0;\n        long max18 = 0;\n        long sum19 = 0;\n        long max19
    = 0;\n        long sum20 = 0;\n        long max20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long sum22 = 0;\n        long max22 = 0;\n        long
    sum23 = 0;\n        long max23 = 0;\n        long sum24 = 0;\n        long max24
    = 0;\n        long sum25 = 0;\n        long max25 = 0;\n        long sum26 = 0;\n
    \       long max26 = 0;\n        long sum27 = 0;\n        long max27 = 0;\n        long
    sum28 = 0;\n        long max28 = 0;\n        long sum29 = 0;\n        long max29
    = 0;\n        long sum30 = 0;\n        long max30 = 0;\n        long sum31 = 0;\n
    \       long max31 = 0;\n        long sum32 = 0;\n        long max32 = 0;\n        long
    sum33 = 0;\n        long max33 = 0;\n        long sum34 = 0;\n        long max34
    = 0;\n        long sum35 = 0;\n        long max35 = 0;\n        long sum36 = 0;\n
    \       long max36 = 0;\n        long sum37 = 0;\n        long max37 = 0;\n        long
    sum38 = 0;\n        long max38 = 0;\n        long sum39 = 0;\n        long max39
    = 0;\n        long sum40 = 0;\n        long max40 = 0;\n        long sum41 = 0;\n
    \       long max41 = 0;\n        long sum42 = 0;\n        long max42 = 0;\n        long
    sum43 = 0;\n        long max43\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsjmrwb0d.cs(106,19): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long sum2 = 0;\n        long max2 = 0;\n
    \       long sum3 = 0;\n        long max3 = 0;\n        long sum4 = 0;\n        long
    max4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n        long sum6 =
    0;\n        long max6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n        long
    sum8 = 0;\n        long max8 = 0;\n        long sum9 = 0;\n        long max9 =
    0;\n        long sum10 = 0;\n        long max10 = 0;\n        long sum11 = 0;\n
    \       long max11 = 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long
    sum13 = 0;\n        long max13 = 0;\n        long sum14 = 0;\n        long max14
    = 0;\n        long sum15 = 0;\n        long max15 = 0;\n        long sum16 = 0;\n
    \       long max16 = 0;\n        long sum17 = 0;\n        long max17 = 0;\n        long
    sum18 = 0;\n        long max18 = 0;\n        long sum19 = 0;\n        long max19
    = 0;\n        long sum20 = 0;\n        long max20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long sum22 = 0;\n        long max22 = 0;\n        long
    sum23 = 0;\n        long max23 = 0;\n        long sum24 = 0;\n        long max24
    = 0;\n        long sum25 = 0;\n        long max25 = 0;\n        long sum26 = 0;\n
    \       long max26 = 0;\n        long sum27 = 0;\n        long max27 = 0;\n        long
    sum28 = 0;\n        long max28 = 0;\n        long sum29 = 0;\n        long max29
    = 0;\n        long sum30 = 0;\n        long max30 = 0;\n        long sum31 = 0;\n
    \       long max31 = 0;\n        long sum32 = 0;\n        long max32 = 0;\n        long
    sum33 = 0;\n        long max33 = 0;\n        long sum34 = 0;\n        long max34
    = 0;\n        long sum35 = 0;\n        long max35 = 0;\n        long sum36 = 0;\n
    \       long max36 = 0;\n        long sum37 = 0;\n        long max37 = 0;\n        long
    sum38 = 0;\n        long max38 = 0;\n        long sum39 = 0;\n        long max39
    = 0;\n        long sum40 = 0;\n        long max40 = 0;\n        long sum41 = 0;\n
    \       long max41 = 0;\n        long sum42 = 0;\n        long max42 = 0;\n        long
    sum43 = 0;\n        long max\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbsuni6j2.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpbsuni6j2.cs(106,17): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long count = 0;\n        long temp;\n        for (int i = 1; i <=
    n; i++) {\n            temp = i * i - i + 1;\n            a[i - 1] = temp;\n            sum
    += temp;\n        }\n        for (int i = 1; i <= n; i++) {\n            for (int
    j = 1; j <= n; j++) {\n                for (int k = 1; k <= n; k++) {\n                    if
    (a[j - 1] + a[k - 1] == sum) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpimad_zwg.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659798086
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \           sum += a[i];\n        }\n        long max = 0;\n        for (int i
    = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    if (a[i] < a[j] && a[j] < a[k])
    {\n                        long temp = a[i] + a[j] + a[k];\n                        if
    (temp % 3 == 0) {\n                            max = Math.Max(max, temp);\n                        }\n
    \                   }\n                }\n            }\n        }\n        return
    max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a34fc5c2aa26438786729b93a1086520>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a34fc5c2aa26438786729b93a1086520>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798087
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long count = 0;\n
    \       for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum
    += a[i];\n        }\n        max = sum;\n        for (int i = 0; i < n; i++) {\n
    \           for (int j = i + 1; j < n; j++) {\n                for (int k = j
    + 1; k < n; k++) {\n                    temp = a[i] + a[j] + a[k];\n                    if
    (temp % 3 == 0) {\n                        count++;\n                        if
    (temp > max) {\n                            max = temp;\n                        }\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpu73_j956.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpu73_j956.cs(26,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpu73_j956.cs(27,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpu73_j956.cs(33,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpu73_j956.cs(33,35): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpu73_j956.cs(33,42): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long min = 1;\n        long count = 0;\n
    \       long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n        long
    sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long sum8 =
    0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11 = 0;\n
    \       long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n        long
    sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long sum18
    = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21 = 0;\n
    \       long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n        long
    sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long sum28
    = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31 = 0;\n
    \       long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n        long
    sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long sum38
    = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41 = 0;\n
    \       long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n        long
    sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long sum48
    = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51 = 0;\n
    \       long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n        long
    sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long sum58
    = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61 = 0;\n
    \       long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n        long
    sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long sum68
    = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71 = 0;\n
    \       long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n        long
    sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long sum78
    = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81 = 0;\n
    \       long sum82 = 0;\n        long \n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpf_kxh1fb.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpf_kxh1fb.cs(106,13): error CS1001: Identifier expected

    /tmp/tmpf_kxh1fb.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long sum2 = 0;\n
    \       long max2 = 0;\n        long count2 = 0;\n        long sum3 = 0;\n        long
    max3 = 0;\n        long count3 = 0;\n        long sum4 = 0;\n        long max4
    = 0;\n        long count4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n
    \       long count5 = 0;\n        long sum6 = 0;\n        long max6 = 0;\n        long
    count6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n        long count7
    = 0;\n        long sum8 = 0;\n        long max8 = 0;\n        long count8 = 0;\n
    \       long sum9 = 0;\n        long max9 = 0;\n        long count9 = 0;\n        long
    sum10 = 0;\n        long max10 = 0;\n        long count10 = 0;\n        long sum11
    = 0;\n        long max11 = 0;\n        long count11 = 0;\n        long sum12 =
    0;\n        long max12 = 0;\n        long count12 = 0;\n        long sum13 = 0;\n
    \       long max13 = 0;\n        long count13 = 0;\n        long sum14 = 0;\n
    \       long max14 = 0;\n        long count14 = 0;\n        long sum15 = 0;\n
    \       long max15 = 0;\n        long count15 = 0;\n        long sum16 = 0;\n
    \       long max16 = 0;\n        long count16 = 0;\n        long sum17 = 0;\n
    \       long max17 = 0;\n        long count17 = 0;\n        long sum18 = 0;\n
    \       long max18 = 0;\n        long count18 = 0;\n        long sum19 = 0;\n
    \       long max19 = 0;\n        long count19 = 0;\n        long sum20 = 0;\n
    \       long max20 = 0;\n        long count20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long count21 = 0;\n        long sum22 = 0;\n
    \       long max22 = 0;\n        long count22 = 0;\n        long sum23 = 0;\n
    \       long max23 = 0;\n        long count23 = 0;\n        long sum24 = 0;\n
    \       long max24 = 0;\n        long count24 = 0;\n        long sum25 = 0;\n
    \       long max25 = 0;\n        long count25 = 0;\n        long sum26 = 0;\n
    \       long max26 = 0;\n        long count26 = 0;\n        long sum27 = 0;\n
    \       long max27 = 0;\n        long count27 = 0;\n        long sum28 = 0;\n
    \       long max28 = 0;\n        long count28 = 0;\n        long sum29 = 0;\n
    \       long max29 = 0;\n        long count\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9x6d1pgw.cs(107,19): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long count = 0;\n        long temp = 0;\n        long temp2 = 0;\n
    \       long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n        long
    temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long temp9
    = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12
    = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15
    = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18
    = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21
    = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24
    = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27
    = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30
    = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33
    = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36
    = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39
    = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42
    = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45
    = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48
    = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51
    = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54
    = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57
    = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60
    = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63
    = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66
    = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69
    = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72
    = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75
    = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78
    = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long temp81
    = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n        \n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmptqx5spjs.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n
    \       long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long
    sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11
    = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n
    \       long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long
    sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21
    = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n
    \       long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long
    sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31
    = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long
    sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41
    = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n
    \       long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long
    sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51
    = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long
    sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61
    = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n
    \       long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long
    sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71
    = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n
    \       long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long
    sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81
    = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n
    \       long sum85\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7clfcaso.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp7clfcaso.cs(105,19): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long temp;\n        long count = 0;\n        long temp2;\n        long
    temp3;\n        long temp4;\n        long temp5;\n        long temp6;\n        long
    temp7;\n        long temp8;\n        long temp9;\n        long temp10;\n        long
    temp11;\n        long temp12;\n        long temp13;\n        long temp14;\n        long
    temp15;\n        long temp16;\n        long temp17;\n        long temp18;\n        long
    temp19;\n        long temp20;\n        long temp21;\n        long temp22;\n        long
    temp23;\n        long temp24;\n        long temp25;\n        long temp26;\n        long
    temp27;\n        long temp28;\n        long temp29;\n        long temp30;\n        long
    temp31;\n        long temp32;\n        long temp33;\n        long temp34;\n        long
    temp35;\n        long temp36;\n        long temp37;\n        long temp38;\n        long
    temp39;\n        long temp40;\n        long temp41;\n        long temp42;\n        long
    temp43;\n        long temp44;\n        long temp45;\n        long temp46;\n        long
    temp47;\n        long temp48;\n        long temp49;\n        long temp50;\n        long
    temp51;\n        long temp52;\n        long temp53;\n        long temp54;\n        long
    temp55;\n        long temp56;\n        long temp57;\n        long temp58;\n        long
    temp59;\n        long temp60;\n        long temp61;\n        long temp62;\n        long
    temp63;\n        long temp64;\n        long temp65;\n        long temp66;\n        long
    temp67;\n        long temp68;\n        long temp69;\n        long temp70;\n        long
    temp71;\n        long temp72;\n        long temp73;\n        long temp74;\n        long
    temp75;\n        long temp76;\n        long temp77;\n        long temp78;\n        long
    temp79;\n        long temp80;\n        long temp81;\n        long temp82;\n        long
    temp83;\n        long temp84;\n        long temp85;\n        long temp86\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppv9_f60k.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmppv9_f60k.cs(108,20): error CS1002: ; expected

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long sumOfSquares = 0;\n        long sumOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquares = 0;\n        long
    sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquare\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbwi4lqib.cs(44,73): error CS1002: ; expected

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        for (int i = 0; i < n; i++) {\n            a[i]
    = i * i - i + 1;\n            sum += a[i];\n            if (sum > max) {\n                max
    = sum;\n            }\n        }\n        long maxSum = 0;\n        for (int i
    = 0; i < n; i++) {\n            long sum = 0;\n            for (int j = 0; j <
    n; j++) {\n                for (int k = 0; k < n; k++) {\n                    sum
    += a[j] * a[j] * a[k];\n                }\n            }\n            if (sum
    > maxSum) {\n                maxSum = sum;\n            }\n        }\n        return
    maxSum;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpy0js7n9k.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpy0js7n9k.cs(24,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpy0js7n9k.cs(25,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpy0js7n9k.cs(32,18): error CS0136: A local or parameter named ''sum'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmpy0js7n9k.cs(35,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpy0js7n9k.cs(35,35): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpy0js7n9k.cs(35,42): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798087
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long sum2 = 0;\n        long max2 = 0;\n
    \       long sum3 = 0;\n        long max3 = 0;\n        long sum4 = 0;\n        long
    max4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n        long sum6 =
    0;\n        long max6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n        long
    sum8 = 0;\n        long max8 = 0;\n        long sum9 = 0;\n        long max9 =
    0;\n        long sum10 = 0;\n        long max10 = 0;\n        long sum11 = 0;\n
    \       long max11 = 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long
    sum13 = 0;\n        long max13 = 0;\n        long sum14 = 0;\n        long max14
    = 0;\n        long sum15 = 0;\n        long max15 = 0;\n        long sum16 = 0;\n
    \       long max16 = 0;\n        long sum17 = 0;\n        long max17 = 0;\n        long
    sum18 = 0;\n        long max18 = 0;\n        long sum19 = 0;\n        long max19
    = 0;\n        long sum20 = 0;\n        long max20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long sum22 = 0;\n        long max22 = 0;\n        long
    sum23 = 0;\n        long max23 = 0;\n        long sum24 = 0;\n        long max24
    = 0;\n        long sum25 = 0;\n        long max25 = 0;\n        long sum26 = 0;\n
    \       long max26 = 0;\n        long sum27 = 0;\n        long max27 = 0;\n        long
    sum28 = 0;\n        long max28 = 0;\n        long sum29 = 0;\n        long max29
    = 0;\n        long sum30 = 0;\n        long max30 = 0;\n        long sum31 = 0;\n
    \       long max31 = 0;\n        long sum32 = 0;\n        long max32 = 0;\n        long
    sum33 = 0;\n        long max33 = 0;\n        long sum34 = 0;\n        long max34
    = 0;\n        long sum35 = 0;\n        long max35 = 0;\n        long sum36 = 0;\n
    \       long max36 = 0;\n        long sum37 = 0;\n        long max37 = 0;\n        long
    sum38 = 0;\n        long max38 = 0;\n        long sum39 = 0;\n        long max39
    = 0;\n        long sum40 = 0;\n        long max40 = 0;\n        long sum41 = 0;\n
    \       long max41 = 0;\n        long sum42 = 0;\n        long max42 = 0;\n        long
    sum43 = 0;\n        long max43\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsjmrwb0d.cs(106,19): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n
    \       long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long
    sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11
    = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n
    \       long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long
    sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21
    = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n
    \       long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long
    sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31
    = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long
    sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41
    = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n
    \       long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long
    sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51
    = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long
    sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61
    = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n
    \       long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long
    sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71
    = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n
    \       long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long
    sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81
    = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n
    \       long sum85\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7clfcaso.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp7clfcaso.cs(105,19): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long maxTriples = 0;\n        for (int i
    = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n
    \           if (sum > max) {\n                max = sum;\n                maxTriples
    = i;\n            }\n        }\n        return maxTriples;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0hn6ki82.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp0hn6ki82.cs(25,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp0hn6ki82.cs(26,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798087
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long temp\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_j15sm4k.cs(106,18): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp;\n        long
    temp2;\n        long temp3;\n        long temp4;\n        long temp5;\n        long
    temp6;\n        long temp7;\n        long temp8;\n        long temp9;\n        long
    temp10;\n        long temp11;\n        long temp12;\n        long temp13;\n        long
    temp14;\n        long temp15;\n        long temp16;\n        long temp17;\n        long
    temp18;\n        long temp19;\n        long temp20;\n        long temp21;\n        long
    temp22;\n        long temp23;\n        long temp24;\n        long temp25;\n        long
    temp26;\n        long temp27;\n        long temp28;\n        long temp29;\n        long
    temp30;\n        long temp31;\n        long temp32;\n        long temp33;\n        long
    temp34;\n        long temp35;\n        long temp36;\n        long temp37;\n        long
    temp38;\n        long temp39;\n        long temp40;\n        long temp41;\n        long
    temp42;\n        long temp43;\n        long temp44;\n        long temp45;\n        long
    temp46;\n        long temp47;\n        long temp48;\n        long temp49;\n        long
    temp50;\n        long temp51;\n        long temp52;\n        long temp53;\n        long
    temp54;\n        long temp55;\n        long temp56;\n        long temp57;\n        long
    temp58;\n        long temp59;\n        long temp60;\n        long temp61;\n        long
    temp62;\n        long temp63;\n        long temp64;\n        long temp65;\n        long
    temp66;\n        long temp67;\n        long temp68;\n        long temp69;\n        long
    temp70;\n        long temp71;\n        long temp72;\n        long temp73;\n        long
    temp74;\n        long temp75;\n        long temp76;\n        long temp77;\n        long
    temp78;\n        long temp79;\n        long temp80;\n        long temp81;\n        long
    temp82;\n        long temp83;\n        long temp84;\n        long temp85;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprofxjmtc.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long count = 0;\n        long temp;\n        for(int i = 1; i <=
    n; i++) {\n            for(int j = 1; j <= n; j++) {\n                for(int
    k = 1; k <= n; k++) {\n                    if(i + j + k == n) {\n                        temp
    = a[i] + a[j] + a[k];\n                        if(temp % 3 == 0) {\n                            count++;\n
    \                       }\n                    }\n                }\n            }\n
    \       }\n        return count;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzbdyl_cu.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpzbdyl_cu.cs(28,32): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpzbdyl_cu.cs(28,39): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpzbdyl_cu.cs(28,46): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpzbdyl_cu.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    '
  timestamp: 1659798087
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n
    \       long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long
    sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11
    = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n
    \       long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long
    sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21
    = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n
    \       long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long
    sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31
    = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long
    sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41
    = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n
    \       long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long
    sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51
    = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long
    sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61
    = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n
    \       long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long
    sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71
    = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n
    \       long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long
    sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81
    = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n
    \       long sum85 = 0;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph_9yrlpb.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmph_9yrlpb.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmph_9yrlpb.cs(22,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(23,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(24,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(25,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(26,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(27,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(28,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(29,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(30,14): warning CS0219: The variable ''sum10'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(31,14): warning CS0219: The variable ''sum11'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(32,14): warning CS0219: The variable ''sum12'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(33,14): warning CS0219: The variable ''sum13'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(34,14): warning CS0219: The variable ''sum14'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(35,14): warning CS0219: The variable ''sum15'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(36,14): warning CS0219: The variable ''sum16'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(37,14): warning CS0219: The variable ''sum17'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(38,14): warning CS0219: The variab'
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        for (int i = 0;
    i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n            if
    (sum > max) {\n                max = sum;\n            }\n        }\n        for
    (int i = 0; i < n; i++) {\n            count += a[i] % 3 == 0 ? 1 : 0;\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp2qcf1wq6.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp2qcf1wq6.cs(25,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp2qcf1wq6.cs(26,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp2qcf1wq6.cs(32,22): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798087
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long sumOfSquares
    = 0;\n        long squareOfSum = 0;\n        long squareOfSquares = 0;\n        long
    temp;\n        long temp2;\n        long temp3;\n        long temp4;\n        long
    temp5;\n        long temp6;\n        long temp7;\n        long temp8;\n        long
    temp9;\n        long temp10;\n        long temp11;\n        long temp12;\n        long
    temp13;\n        long temp14;\n        long temp15;\n        long temp16;\n        long
    temp17;\n        long temp18;\n        long temp19;\n        long temp20;\n        long
    temp21;\n        long temp22;\n        long temp23;\n        long temp24;\n        long
    temp25;\n        long temp26;\n        long temp27;\n        long temp28;\n        long
    temp29;\n        long temp30;\n        long temp31;\n        long temp32;\n        long
    temp33;\n        long temp34;\n        long temp35;\n        long temp36;\n        long
    temp37;\n        long temp38;\n        long temp39;\n        long temp40;\n        long
    temp41;\n        long temp42;\n        long temp43;\n        long temp44;\n        long
    temp45;\n        long temp46;\n        long temp47;\n        long temp48;\n        long
    temp49;\n        long temp50;\n        long temp51;\n        long temp52;\n        long
    temp53;\n        long temp54;\n        long temp55;\n        long temp56;\n        long
    temp57;\n        long temp58;\n        long temp59;\n        long temp60;\n        long
    temp61;\n        long temp62;\n        long temp63;\n        long temp64;\n        long
    temp65;\n        long temp66;\n        long temp67;\n        long temp68;\n        long
    temp69;\n        long temp70;\n        long temp71;\n        long temp72;\n        long
    temp73;\n        long temp74;\n        long temp75;\n        long temp76;\n        long
    temp77;\n        long temp78;\n        long temp79;\n        long temp80;\n        long
    temp81;\n        long \n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkc7cd6pm.cs(108,13): error CS1001: Identifier expected

    /tmp/tmpkc7cd6pm.cs(108,13): error CS1002: ; expected

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long sum2 = 0;\n
    \       long max2 = 0;\n        long count2 = 0;\n        long sum3 = 0;\n        long
    max3 = 0;\n        long count3 = 0;\n        long sum4 = 0;\n        long max4
    = 0;\n        long count4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n
    \       long count5 = 0;\n        long sum6 = 0;\n        long max6 = 0;\n        long
    count6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n        long count7
    = 0;\n        long sum8 = 0;\n        long max8 = 0;\n        long count8 = 0;\n
    \       long sum9 = 0;\n        long max9 = 0;\n        long count9 = 0;\n        long
    sum10 = 0;\n        long max10 = 0;\n        long count10 = 0;\n        long sum11
    = 0;\n        long max11 = 0;\n        long count11 = 0;\n        long sum12 =
    0;\n        long max12 = 0;\n        long count12 = 0;\n        long sum13 = 0;\n
    \       long max13 = 0;\n        long count13 = 0;\n        long sum14 = 0;\n
    \       long max14 = 0;\n        long count14 = 0;\n        long sum15 = 0;\n
    \       long max15 = 0;\n        long count15 = 0;\n        long sum16 = 0;\n
    \       long max16 = 0;\n        long count16 = 0;\n        long sum17 = 0;\n
    \       long max17 = 0;\n        long count17 = 0;\n        long sum18 = 0;\n
    \       long max18 = 0;\n        long count18 = 0;\n        long sum19 = 0;\n
    \       long max19 = 0;\n        long count19 = 0;\n        long sum20 = 0;\n
    \       long max20 = 0;\n        long count20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long count21 = 0;\n        long sum22 = 0;\n
    \       long max22 = 0;\n        long count22 = 0;\n        long sum23 = 0;\n
    \       long max23 = 0;\n        long count23 = 0;\n        long sum24 = 0;\n
    \       long max24 = 0;\n        long count24 = 0;\n        long sum25 = 0;\n
    \       long max25 = 0;\n        long count25 = 0;\n        long sum26 = 0;\n
    \       long max26 = 0;\n        long count26 = 0;\n        long sum27 = 0;\n
    \       long max27 = 0;\n        long count27 = 0;\n        long sum28 = 0;\n
    \       long max28 = 0;\n        long count28 = 0;\n        long sum29 = 0;\n
    \       long max29 = 0;\n        long count29\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpin32jv4u.cs(107,21): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long temp = 0;\n        long count = 0;\n        long max = 0;\n
    \       long temp2 = 0;\n        long temp3 = 0;\n        long temp4 = 0;\n        long
    temp5 = 0;\n        long temp6 = 0;\n        long temp7 = 0;\n        long temp8
    = 0;\n        long temp9 = 0;\n        long temp10 = 0;\n        long temp11 =
    0;\n        long temp12 = 0;\n        long temp13 = 0;\n        long temp14 =
    0;\n        long temp15 = 0;\n        long temp16 = 0;\n        long temp17 =
    0;\n        long temp18 = 0;\n        long temp19 = 0;\n        long temp20 =
    0;\n        long temp21 = 0;\n        long temp22 = 0;\n        long temp23 =
    0;\n        long temp24 = 0;\n        long temp25 = 0;\n        long temp26 =
    0;\n        long temp27 = 0;\n        long temp28 = 0;\n        long temp29 =
    0;\n        long temp30 = 0;\n        long temp31 = 0;\n        long temp32 =
    0;\n        long temp33 = 0;\n        long temp34 = 0;\n        long temp35 =
    0;\n        long temp36 = 0;\n        long temp37 = 0;\n        long temp38 =
    0;\n        long temp39 = 0;\n        long temp40 = 0;\n        long temp41 =
    0;\n        long temp42 = 0;\n        long temp43 = 0;\n        long temp44 =
    0;\n        long temp45 = 0;\n        long temp46 = 0;\n        long temp47 =
    0;\n        long temp48 = 0;\n        long temp49 = 0;\n        long temp50 =
    0;\n        long temp51 = 0;\n        long temp52 = 0;\n        long temp53 =
    0;\n        long temp54 = 0;\n        long temp55 = 0;\n        long temp56 =
    0;\n        long temp57 = 0;\n        long temp58 = 0;\n        long temp59 =
    0;\n        long temp60 = 0;\n        long temp61 = 0;\n        long temp62 =
    0;\n        long temp63 = 0;\n        long temp64 = 0;\n        long temp65 =
    0;\n        long temp66 = 0;\n        long temp67 = 0;\n        long temp68 =
    0;\n        long temp69 = 0;\n        long temp70 = 0;\n        long temp71 =
    0;\n        long temp72 = 0;\n        long temp73 = 0;\n        long temp74 =
    0;\n        long temp75 = 0;\n        long temp76 = 0;\n        long temp77 =
    0;\n        long temp78 = 0;\n        long temp79 = 0;\n        long temp80 =
    0;\n        long temp81 = 0;\n        long temp82 = 0;\n        long \n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4m5mjmx3.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp4m5mjmx3.cs(106,13): error CS1001: Identifier expected

    /tmp/tmp4m5mjmx3.cs(106,13): error CS1002: ; expected

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long sum2 = 0;\n
    \       long max2 = 0;\n        long count2 = 0;\n        long sum3 = 0;\n        long
    max3 = 0;\n        long count3 = 0;\n        long sum4 = 0;\n        long max4
    = 0;\n        long count4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n
    \       long count5 = 0;\n        long sum6 = 0;\n        long max6 = 0;\n        long
    count6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n        long count7
    = 0;\n        long sum8 = 0;\n        long max8 = 0;\n        long count8 = 0;\n
    \       long sum9 = 0;\n        long max9 = 0;\n        long count9 = 0;\n        long
    sum10 = 0;\n        long max10 = 0;\n        long count10 = 0;\n        long sum11
    = 0;\n        long max11 = 0;\n        long count11 = 0;\n        long sum12 =
    0;\n        long max12 = 0;\n        long count12 = 0;\n        long sum13 = 0;\n
    \       long max13 = 0;\n        long count13 = 0;\n        long sum14 = 0;\n
    \       long max14 = 0;\n        long count14 = 0;\n        long sum15 = 0;\n
    \       long max15 = 0;\n        long count15 = 0;\n        long sum16 = 0;\n
    \       long max16 = 0;\n        long count16 = 0;\n        long sum17 = 0;\n
    \       long max17 = 0;\n        long count17 = 0;\n        long sum18 = 0;\n
    \       long max18 = 0;\n        long count18 = 0;\n        long sum19 = 0;\n
    \       long max19 = 0;\n        long count19 = 0;\n        long sum20 = 0;\n
    \       long max20 = 0;\n        long count20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long count21 = 0;\n        long sum22 = 0;\n
    \       long max22 = 0;\n        long count22 = 0;\n        long sum23 = 0;\n
    \       long max23 = 0;\n        long count23 = 0;\n        long sum24 = 0;\n
    \       long max24 = 0;\n        long count24 = 0;\n        long sum25 = 0;\n
    \       long max25 = 0;\n        long count25 = 0;\n        long sum26 = 0;\n
    \       long max26 = 0;\n        long count26 = 0;\n        long sum27 = 0;\n
    \       long max27 = 0;\n        long count27 = 0;\n        long sum28 = 0;\n
    \       long max28 = 0;\n        long count28 = 0;\n        long sum29 = 0;\n
    \       long max29 = 0;\n        long count29\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpin32jv4u.cs(107,21): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        for (int i = 0;
    i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n            if
    (sum > max)\n                max = sum;\n        }\n        for (int i = 0; i
    < n; i++) {\n            long sum = 0;\n            for (int j = 0; j < n; j++)
    {\n                for (int k = 0; k < n; k++) {\n                    sum += a[j]
    * a[j] * a[k];\n                }\n            }\n            if (sum % 3 == 0)\n
    \               count++;\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw18pmgqk.cs(31,18): error CS0136: A local or parameter named ''sum'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    '
  timestamp: 1659798087
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n
    \       long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long
    sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11
    = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n
    \       long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long
    sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21
    = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n
    \       long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long
    sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31
    = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long
    sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41
    = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n
    \       long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long
    sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51
    = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long
    sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61
    = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n
    \       long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long
    sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71
    = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n
    \       long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long
    sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81
    = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n
    \       long sum85 = 0;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmph_9yrlpb.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmph_9yrlpb.cs(21,14): warning CS0219: The variable ''sum'' is assigned but
    its value is never used

    /tmp/tmph_9yrlpb.cs(22,14): warning CS0219: The variable ''sum2'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(23,14): warning CS0219: The variable ''sum3'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(24,14): warning CS0219: The variable ''sum4'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(25,14): warning CS0219: The variable ''sum5'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(26,14): warning CS0219: The variable ''sum6'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(27,14): warning CS0219: The variable ''sum7'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(28,14): warning CS0219: The variable ''sum8'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(29,14): warning CS0219: The variable ''sum9'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(30,14): warning CS0219: The variable ''sum10'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(31,14): warning CS0219: The variable ''sum11'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(32,14): warning CS0219: The variable ''sum12'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(33,14): warning CS0219: The variable ''sum13'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(34,14): warning CS0219: The variable ''sum14'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(35,14): warning CS0219: The variable ''sum15'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(36,14): warning CS0219: The variable ''sum16'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(37,14): warning CS0219: The variable ''sum17'' is assigned
    but its value is never used

    /tmp/tmph_9yrlpb.cs(38,14): warning CS0219: The variab'
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long count = 0;\n
    \       for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum
    += a[i];\n            if (sum > max) {\n                max = sum;\n            }\n
    \       }\n        for (int i = 0; i < n; i++) {\n            temp = sum - a[i];\n
    \           if (temp % 3 == 0) {\n                count++;\n            }\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpjzrc9ngh.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        for (int i = 0;
    i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n            if
    (sum > max) {\n                max = sum;\n            }\n        }\n        for
    (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    long sum = 0;\n                    for
    (int l = 0; l < n; l++) {\n                        sum += a[l];\n                    }\n
    \                   if (sum % 3 == 0) {\n                        count++;\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpv42xa75p.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpv42xa75p.cs(25,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpv42xa75p.cs(26,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpv42xa75p.cs(34,26): error CS0136: A local or parameter named ''sum'' cannot
    be declared in this scope because that name is used in an enclosing local scope
    to define a local or parameter

    /tmp/tmpv42xa75p.cs(36,32): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp;\n        for
    (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum
    += a[i];\n            if (sum > max) {\n                max = sum;\n            }\n
    \       }\n        for (int i = 0; i < n; i++) {\n            for (int j = i +
    1; j < n; j++) {\n                for (int k = j + 1; k < n; k++) {\n                    temp
    = a[i] + a[j] + a[k];\n                    if (temp % 3 == 0) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpkzcffg55.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long count = 0;\n
    \       for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum
    += a[i];\n            if (sum > max) {\n                max = sum;\n            }\n
    \       }\n        for (int i = 0; i < n; i++) {\n            temp = sum - a[i];\n
    \           if (temp > 0) {\n                count++;\n            }\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsx4tm934.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpsx4tm934.cs(26,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpsx4tm934.cs(27,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpsx4tm934.cs(33,26): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp;\n        long count = 0;\n        for
    (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum
    += a[i];\n            if (sum > max) {\n                max = sum;\n            }\n
    \       }\n        for (int i = 0; i < n; i++) {\n            temp = sum - a[i];\n
    \           if (temp > 0) {\n                count++;\n            }\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8kbtqrxc.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmp8kbtqrxc.cs(26,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp8kbtqrxc.cs(27,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmp8kbtqrxc.cs(33,26): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798087
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long sum2 = 0;\n        long sum3 = 0;\n        long sum4 = 0;\n
    \       long sum5 = 0;\n        long sum6 = 0;\n        long sum7 = 0;\n        long
    sum8 = 0;\n        long sum9 = 0;\n        long sum10 = 0;\n        long sum11
    = 0;\n        long sum12 = 0;\n        long sum13 = 0;\n        long sum14 = 0;\n
    \       long sum15 = 0;\n        long sum16 = 0;\n        long sum17 = 0;\n        long
    sum18 = 0;\n        long sum19 = 0;\n        long sum20 = 0;\n        long sum21
    = 0;\n        long sum22 = 0;\n        long sum23 = 0;\n        long sum24 = 0;\n
    \       long sum25 = 0;\n        long sum26 = 0;\n        long sum27 = 0;\n        long
    sum28 = 0;\n        long sum29 = 0;\n        long sum30 = 0;\n        long sum31
    = 0;\n        long sum32 = 0;\n        long sum33 = 0;\n        long sum34 = 0;\n
    \       long sum35 = 0;\n        long sum36 = 0;\n        long sum37 = 0;\n        long
    sum38 = 0;\n        long sum39 = 0;\n        long sum40 = 0;\n        long sum41
    = 0;\n        long sum42 = 0;\n        long sum43 = 0;\n        long sum44 = 0;\n
    \       long sum45 = 0;\n        long sum46 = 0;\n        long sum47 = 0;\n        long
    sum48 = 0;\n        long sum49 = 0;\n        long sum50 = 0;\n        long sum51
    = 0;\n        long sum52 = 0;\n        long sum53 = 0;\n        long sum54 = 0;\n
    \       long sum55 = 0;\n        long sum56 = 0;\n        long sum57 = 0;\n        long
    sum58 = 0;\n        long sum59 = 0;\n        long sum60 = 0;\n        long sum61
    = 0;\n        long sum62 = 0;\n        long sum63 = 0;\n        long sum64 = 0;\n
    \       long sum65 = 0;\n        long sum66 = 0;\n        long sum67 = 0;\n        long
    sum68 = 0;\n        long sum69 = 0;\n        long sum70 = 0;\n        long sum71
    = 0;\n        long sum72 = 0;\n        long sum73 = 0;\n        long sum74 = 0;\n
    \       long sum75 = 0;\n        long sum76 = 0;\n        long sum77 = 0;\n        long
    sum78 = 0;\n        long sum79 = 0;\n        long sum80 = 0;\n        long sum81
    = 0;\n        long sum82 = 0;\n        long sum83 = 0;\n        long sum84 = 0;\n
    \       long sum85\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp7clfcaso.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmp7clfcaso.cs(105,19): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long sum2 = 0;\n
    \       long max2 = 0;\n        long count2 = 0;\n        long sum3 = 0;\n        long
    max3 = 0;\n        long count3 = 0;\n        long sum4 = 0;\n        long max4
    = 0;\n        long count4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n
    \       long count5 = 0;\n        long sum6 = 0;\n        long max6 = 0;\n        long
    count6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n        long count7
    = 0;\n        long sum8 = 0;\n        long max8 = 0;\n        long count8 = 0;\n
    \       long sum9 = 0;\n        long max9 = 0;\n        long count9 = 0;\n        long
    sum10 = 0;\n        long max10 = 0;\n        long count10 = 0;\n        long sum11
    = 0;\n        long max11 = 0;\n        long count11 = 0;\n        long sum12 =
    0;\n        long max12 = 0;\n        long count12 = 0;\n        long sum13 = 0;\n
    \       long max13 = 0;\n        long count13 = 0;\n        long sum14 = 0;\n
    \       long max14 = 0;\n        long count14 = 0;\n        long sum15 = 0;\n
    \       long max15 = 0;\n        long count15 = 0;\n        long sum16 = 0;\n
    \       long max16 = 0;\n        long count16 = 0;\n        long sum17 = 0;\n
    \       long max17 = 0;\n        long count17 = 0;\n        long sum18 = 0;\n
    \       long max18 = 0;\n        long count18 = 0;\n        long sum19 = 0;\n
    \       long max19 = 0;\n        long count19 = 0;\n        long sum20 = 0;\n
    \       long max20 = 0;\n        long count20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long count21 = 0;\n        long sum22 = 0;\n
    \       long max22 = 0;\n        long count22 = 0;\n        long sum23 = 0;\n
    \       long max23 = 0;\n        long count23 = 0;\n        long sum24 = 0;\n
    \       long max24 = 0;\n        long count24 = 0;\n        long sum25 = 0;\n
    \       long max25 = 0;\n        long count25 = 0;\n        long sum26 = 0;\n
    \       long max26 = 0;\n        long count26 = 0;\n        long sum27 = 0;\n
    \       long max27 = 0;\n        long count27 = 0;\n        long sum28 = 0;\n
    \       long max28 = 0;\n        long count28 = 0;\n        long sum29 = 0;\n
    \       long max29 = 0;\n        long count\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp9x6d1pgw.cs(107,19): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        for (int i = 0;
    i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n            if
    (sum > max)\n                max = sum;\n        }\n        for (int i = 0; i
    < n; i++) {\n            long sum = 0;\n            for (int j = i; j < n; j++)
    {\n                sum += a[j];\n            }\n            if (sum % 3 == 0)\n
    \               count++;\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa1734tgh.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp;\n        for(int
    i = 1; i < n; i++) {\n            for(int j = i; j < n; j++) {\n                for(int
    k = j; k < n; k++) {\n                    temp = a[i] + a[j] + a[k];\n                    if(temp
    % 3 == 0) {\n                        a[i - 1] = temp;\n                        sum++;\n
    \                       if(sum > max) {\n                            max = sum;\n
    \                           count = 1;\n                        }\n                        else
    {\n                            count++;\n                        }\n                    }\n
    \               }\n            }\n        }\n        return count;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwwyobnao.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpwwyobnao.cs(28,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpwwyobnao.cs(28,35): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpwwyobnao.cs(28,42): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpwwyobnao.cs(30,25): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798087
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long temp = 0;\n        long temp2 = 0;\n
    \       long temp3 = 0;\n        long temp4 = 0;\n        long temp5 = 0;\n        long
    temp6 = 0;\n        long temp7 = 0;\n        long temp8 = 0;\n        long temp9
    = 0;\n        long temp10 = 0;\n        long temp11 = 0;\n        long temp12
    = 0;\n        long temp13 = 0;\n        long temp14 = 0;\n        long temp15
    = 0;\n        long temp16 = 0;\n        long temp17 = 0;\n        long temp18
    = 0;\n        long temp19 = 0;\n        long temp20 = 0;\n        long temp21
    = 0;\n        long temp22 = 0;\n        long temp23 = 0;\n        long temp24
    = 0;\n        long temp25 = 0;\n        long temp26 = 0;\n        long temp27
    = 0;\n        long temp28 = 0;\n        long temp29 = 0;\n        long temp30
    = 0;\n        long temp31 = 0;\n        long temp32 = 0;\n        long temp33
    = 0;\n        long temp34 = 0;\n        long temp35 = 0;\n        long temp36
    = 0;\n        long temp37 = 0;\n        long temp38 = 0;\n        long temp39
    = 0;\n        long temp40 = 0;\n        long temp41 = 0;\n        long temp42
    = 0;\n        long temp43 = 0;\n        long temp44 = 0;\n        long temp45
    = 0;\n        long temp46 = 0;\n        long temp47 = 0;\n        long temp48
    = 0;\n        long temp49 = 0;\n        long temp50 = 0;\n        long temp51
    = 0;\n        long temp52 = 0;\n        long temp53 = 0;\n        long temp54
    = 0;\n        long temp55 = 0;\n        long temp56 = 0;\n        long temp57
    = 0;\n        long temp58 = 0;\n        long temp59 = 0;\n        long temp60
    = 0;\n        long temp61 = 0;\n        long temp62 = 0;\n        long temp63
    = 0;\n        long temp64 = 0;\n        long temp65 = 0;\n        long temp66
    = 0;\n        long temp67 = 0;\n        long temp68 = 0;\n        long temp69
    = 0;\n        long temp70 = 0;\n        long temp71 = 0;\n        long temp72
    = 0;\n        long temp73 = 0;\n        long temp74 = 0;\n        long temp75
    = 0;\n        long temp76 = 0;\n        long temp77 = 0;\n        long temp78
    = 0;\n        long temp79 = 0;\n        long temp80 = 0;\n        long temp81
    = 0;\n        long temp82 = 0;\n        long temp83 = 0;\n\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n
    \   Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsyvxe_tu.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long sum2 = 0;\n
    \       long max2 = 0;\n        long count2 = 0;\n        long sum3 = 0;\n        long
    max3 = 0;\n        long count3 = 0;\n        long sum4 = 0;\n        long max4
    = 0;\n        long count4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n
    \       long count5 = 0;\n        long sum6 = 0;\n        long max6 = 0;\n        long
    count6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n        long count7
    = 0;\n        long sum8 = 0;\n        long max8 = 0;\n        long count8 = 0;\n
    \       long sum9 = 0;\n        long max9 = 0;\n        long count9 = 0;\n        long
    sum10 = 0;\n        long max10 = 0;\n        long count10 = 0;\n        long sum11
    = 0;\n        long max11 = 0;\n        long count11 = 0;\n        long sum12 =
    0;\n        long max12 = 0;\n        long count12 = 0;\n        long sum13 = 0;\n
    \       long max13 = 0;\n        long count13 = 0;\n        long sum14 = 0;\n
    \       long max14 = 0;\n        long count14 = 0;\n        long sum15 = 0;\n
    \       long max15 = 0;\n        long count15 = 0;\n        long sum16 = 0;\n
    \       long max16 = 0;\n        long count16 = 0;\n        long sum17 = 0;\n
    \       long max17 = 0;\n        long count17 = 0;\n        long sum18 = 0;\n
    \       long max18 = 0;\n        long count18 = 0;\n        long sum19 = 0;\n
    \       long max19 = 0;\n        long count19 = 0;\n        long sum20 = 0;\n
    \       long max20 = 0;\n        long count20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long count21 = 0;\n        long sum22 = 0;\n
    \       long max22 = 0;\n        long count22 = 0;\n        long sum23 = 0;\n
    \       long max23 = 0;\n        long count23 = 0;\n        long sum24 = 0;\n
    \       long max24 = 0;\n        long count24 = 0;\n        long sum25 = 0;\n
    \       long max25 = 0;\n        long count25 = 0;\n        long sum26 = 0;\n
    \       long max26 = 0;\n        long count26 = 0;\n        long sum27 = 0;\n
    \       long max27 = 0;\n        long count27 = 0;\n        long sum28 = 0;\n
    \       long max28 = 0;\n        long count28 = 0;\n        long sum29 = 0;\n
    \       long max29 = 0;\n        long count29\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpin32jv4u.cs(107,21): error CS1002: ; expected

    '
  timestamp: 1659798085
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long sumOfSquares = 0;\n        long sumOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquares = 0;\n        long
    sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOfSquares
    = 0;\n        long sumOfSquareOfSquareOfSquareOfSquareOfSquareOfSquareOf\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgo19cj11.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    /tmp/tmpgo19cj11.cs(44,67): error CS1002: ; expected

    '
  timestamp: 1659798086
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long temp = 0;\n        long count = 0;\n        for (int i = 0;
    i < n; i++) {\n            a[i] = i * i - i + 1;\n            sum += a[i];\n        }\n
    \       for (int i = 0; i < n; i++) {\n            for (int j = i + 1; j < n;
    j++) {\n                for (int k = j + 1; k < n; k++) {\n                    temp
    = a[i] + a[j] + a[k];\n                    if (temp % 3 == 0) {\n                        count++;\n
    \                   }\n                }\n            }\n        }\n        return
    count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpoxho_2j2.cs(20,18): error CS0029: Cannot implicitly convert type ''long[]''
    to ''long''

    /tmp/tmpoxho_2j2.cs(25,13): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpoxho_2j2.cs(26,20): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpoxho_2j2.cs(31,28): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpoxho_2j2.cs(31,35): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    /tmp/tmpoxho_2j2.cs(31,42): error CS0021: Cannot apply indexing with [] to an
    expression of type ''long''

    '
  timestamp: 1659798087
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a[] = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long count = 0;\n        long temp;\n        long
    temp2;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i +
    1;\n            sum += a[i];\n            if (sum > max) {\n                max
    = sum;\n            }\n        }\n        for (int i = 0; i < n; i++) {\n            for
    (int j = i + 1; j < n; j++) {\n                for (int k = j + 1; k < n; k++)
    {\n                    temp = a[i];\n                    a[i] = a[j];\n                    a[j]
    = a[k];\n                    temp2 = a[i] + a[j] + a[k];\n                    if
    (temp2 > max) {\n                        max = temp2;\n                    }\n
    \               }\n            }\n        }\n        for (int i = 0; i < n; i++)
    {\n            if (a[i] > max) {\n                count++;\n            }\n        }\n
    \       return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr7vts7uy.cs(20,15): error CS0650: Bad array declarator: To declare a managed
    array the rank specifier precedes the variable''s identifier. To declare a fixed
    size buffer field, use the fixed keyword before the field type.

    '
  timestamp: 1659798087
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long a = new long[n];\n        long sum
    = 0;\n        long max = 0;\n        long sum2 = 0;\n        long max2 = 0;\n
    \       long sum3 = 0;\n        long max3 = 0;\n        long sum4 = 0;\n        long
    max4 = 0;\n        long sum5 = 0;\n        long max5 = 0;\n        long sum6 =
    0;\n        long max6 = 0;\n        long sum7 = 0;\n        long max7 = 0;\n        long
    sum8 = 0;\n        long max8 = 0;\n        long sum9 = 0;\n        long max9 =
    0;\n        long sum10 = 0;\n        long max10 = 0;\n        long sum11 = 0;\n
    \       long max11 = 0;\n        long sum12 = 0;\n        long max12 = 0;\n        long
    sum13 = 0;\n        long max13 = 0;\n        long sum14 = 0;\n        long max14
    = 0;\n        long sum15 = 0;\n        long max15 = 0;\n        long sum16 = 0;\n
    \       long max16 = 0;\n        long sum17 = 0;\n        long max17 = 0;\n        long
    sum18 = 0;\n        long max18 = 0;\n        long sum19 = 0;\n        long max19
    = 0;\n        long sum20 = 0;\n        long max20 = 0;\n        long sum21 = 0;\n
    \       long max21 = 0;\n        long sum22 = 0;\n        long max22 = 0;\n        long
    sum23 = 0;\n        long max23 = 0;\n        long sum24 = 0;\n        long max24
    = 0;\n        long sum25 = 0;\n        long max25 = 0;\n        long sum26 = 0;\n
    \       long max26 = 0;\n        long sum27 = 0;\n        long max27 = 0;\n        long
    sum28 = 0;\n        long max28 = 0;\n        long sum29 = 0;\n        long max29
    = 0;\n        long sum30 = 0;\n        long max30 = 0;\n        long sum31 = 0;\n
    \       long max31 = 0;\n        long sum32 = 0;\n        long max32 = 0;\n        long
    sum33 = 0;\n        long max33 = 0;\n        long sum34 = 0;\n        long max34
    = 0;\n        long sum35 = 0;\n        long max35 = 0;\n        long sum36 = 0;\n
    \       long max36 = 0;\n        long sum37 = 0;\n        long max37 = 0;\n        long
    sum38 = 0;\n        long max38 = 0;\n        long sum39 = 0;\n        long max39
    = 0;\n        long sum40 = 0;\n        long max40 = 0;\n        long sum41 = 0;\n
    \       long max41 = 0;\n        long sum42 = 0;\n        long max42 = 0;\n        long
    sum43 = 0;\n        long max43\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(GetMaxTriples((5L)) == (1L));\n    Debug.Assert(GetMaxTriples((6L))
    == (4L));\n    Debug.Assert(GetMaxTriples((10L)) == (36L));\n    Debug.Assert(GetMaxTriples((100L))
    == (53361L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsjmrwb0d.cs(106,19): error CS1002: ; expected

    '
  timestamp: 1659798084
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // You are given a positive integer n. You have to create an integer
    list a of length n.\n    // For each i (1 \u2264 i \u2264 n), the value of a[i]
    = i * i - i + 1.\n    // Return the number of triples (a[i], a[j], a[k]) of a
    where i < j < k, \n    // and a[i] + a[j] + a[k] is a multiple of 3.\n    // Example
    :\n    // >>> GetMaxTriples((5L))\n    // (1L)\n    // Explanation: \n    // a
    = [1, 3, 7, 13, 21]\n    // The only valid triple is (1, 7, 13).\n    public static
    long GetMaxTriples(long n) {\n        long[] a = new long[n];\n        long sum
    = 0;\n        for (int i = 0; i < n; i++) {\n            a[i] = i * i - i + 1;\n
    \           sum += a[i];\n        }\n        long max = 0;\n        for (int i
    = 0; i < n; i++) {\n            for (int j = i + 1; j < n; j++) {\n                for
    (int k = j + 1; k < n; k++) {\n                    if (a[i] == a[j] && a[j] ==
    a[k]) {\n                        long temp = a[i] + a[j] + a[k];\n                        if
    (temp % 3 == 0) {\n                            max = Math.Max(max, temp);\n                        }\n
    \                   }\n                }\n            }\n        }\n        return
    max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GetMaxTriples((5L))
    == (1L));\n    Debug.Assert(GetMaxTriples((6L)) == (4L));\n    Debug.Assert(GetMaxTriples((10L))
    == (36L));\n    Debug.Assert(GetMaxTriples((100L)) == (53361L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10b8cd49814f4fbb88af314f2d680d11>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <10b8cd49814f4fbb88af314f2d680d11>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659798087

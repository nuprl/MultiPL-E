name: HumanEval_22_filter_integers
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Filter given list of any csthon values only for integers\n \
  \   // >>> FilterIntegers((new List<object>(new string[]{(string)\"a\", (string)3.14f,\
  \ (string)5L})))\n    // (new List<long>(new long[]{(long)5L}))\n    // >>> FilterIntegers((new\
  \ List<object>(new object[]{1L, 2L, 3L, \"abc\", new List<object>()})))\n    //\
  \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L}))\n    public static\
  \ List<long> FilterIntegers(List<object> values) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FilterIntegers((new\
  \ List<object>())).Equals((new List<long>())));\n    Debug.Assert(FilterIntegers((new\
  \ List<object>(new object[]{4L, new List<object>(), 23.2f, 9L, \"adasd\"}))).Equals((new\
  \ List<long>(new long[]{(long)4L, (long)9L}))));\n    Debug.Assert(FilterIntegers((new\
  \ List<object>(new object[]{3L, \"c\", 3L, 3L, \"a\", \"b\"}))).Equals((new List<long>(new\
  \ long[]{(long)3L, (long)3L, (long)3L}))));\n    }\n\n}\n"
completions: ["        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is long) {\n                result.Add((long)value);\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is long) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            long value;\n            if (value is long)\
    \ {\n                value = (long)value;\n            } else if (value is int)\
    \ {\n                value = (int)value;\n            } else {\n             \
    \   throw new ArgumentException(\"Only integers are allowed\");\n            }\n\
    \            result.Add(value);\n        }\n        return result;", "       \
    \ List<long> result = new List<long>();\n        foreach (object value in values)\
    \ {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is long) {\n                result.Add((long)value);\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is long) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        var result = new\
    \ List<long>();\n        foreach (var value in values) {\n            if (value\
    \ is long) {\n                result.Add((long)value);\n            }\n      \
    \  }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is int) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is long) {\n                result.Add((long)value);\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is long) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is long) {\n                result.Add((long)value);\n          \
    \  } else if (value is int) {\n                result.Add((int)value);\n     \
    \       } else if (value is double) {\n                result.Add((double)value);\n\
    \            } else if (value is string) {\n                result.Add((string)value);\n\
    \            } else {\n                result.Add(0);\n            }\n       \
    \ }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is long) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is int) {\n                result.Add((long)value);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (object value in values) {\n          \
    \  if (value is long) {\n                result.Add((long)value);\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (object value in values) {\n            if (value is long) {\n\
    \                result.Add((long)value);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (object\
    \ value in values) {\n            if (value is long) {\n                result.Add((long)value);\n\
    \            } else if (value is int) {\n                result.Add((int)value);\n\
    \            } else if (value is string) {\n                result.Add((long)long.Parse((string)value));\n\
    \            } else if (value is List<object>) {\n                result.AddRange(FilterIntegers((List<object>)value));\n\
    \            }\n        }\n        return result;"]
stop_tokens:
- "\n    }\n"

language: cs
name: HumanEval_35_max_element
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ maxValue = long.MinValue;\n        foreach (long value in l) {\n           \
    \ if (value > maxValue) {\n                maxValue = value;\n            }\n\
    \        }\n        return maxValue;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ max = i;\n        }\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (var i in l) {\n            if (i > max) {\n     \
    \           max = i;\n            }\n        }\n        return max;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long x in l) {\n            if (x > max) {\n    \
    \            max = x;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\n\
    \                max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\n\
    \                max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ max = i;\n        }\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n  \
    \              max = i;\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long x in l)\n            if (x > max)\n\
    \                max = x;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0L;\n        foreach (long i in l) {\n            if (i > max) {\n   \
    \             max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0L;\n        foreach (long i in l) {\n            if (i > max) {\n   \
    \             max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\n\
    \                max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\n\
    \                max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (var item in l) {\n            if (item > max) {\n\
    \                max = item;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.Max();\n        foreach (long i in l)\n            if (i < max)\n  \
    \              max = i;\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7b0069054da14fc6b75f0a98cac10ad5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7b0069054da14fc6b75f0a98cac10ad5>:0 \n"
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\n\
    \                max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long x in l) {\n            if (x > max) {\n    \
    \            max = x;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long x in l)\n            if (x > max)\n\
    \                max = x;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n  \
    \              max = i;\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\n\
    \                max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.Max();\n        foreach (var e in l) {\n            if (e > max) max\
    \ = e;\n        }\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n  \
    \              max = i;\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) max = i;\n\
    \        }\n        return max;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ maxValue = long.MinValue;\n        foreach (long value in l) {\n           \
    \ if (value > maxValue) {\n                maxValue = value;\n            }\n\
    \        }\n        return maxValue;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0L;\n        foreach (long i in l) {\n            if (i > max) {\n   \
    \             max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ max = i;\n        }\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n  \
    \              max = i;\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = long.MinValue;\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792496
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ maxValue = long.MinValue;\n        foreach (long value in l) {\n           \
    \ if (value > maxValue) {\n                maxValue = value;\n            }\n\
    \        }\n        return maxValue;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0L;\n        foreach (long i in l) {\n            if (i > max) {\n   \
    \             max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n  \
    \              max = i;\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0L;\n        foreach (long i in l) {\n            if (i > max) {\n   \
    \             max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\n\
    \                max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = long.MinValue;\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792496
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ maxValue = long.MinValue;\n        foreach (long value in l) {\n           \
    \ if (value > maxValue) {\n                maxValue = value;\n            }\n\
    \        }\n        return maxValue;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) max = i;\n\
    \        }\n        return max;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (var i in l) {\n            if (i > max) {\n     \
    \           max = i;\n            }\n        }\n        return max;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n  \
    \              max = i;\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\n\
    \                max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\n\
    \                max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.Max();\n        foreach (long x in l)\n            if (x > max)\n  \
    \              max = x;\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\n\
    \                max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ max = i;\n        }\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long x in l) {\n            if (x > max) {\n    \
    \            max = x;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) max = i;\n\
    \        }\n        return max;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ max = i;\n        }\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.Max();\n        foreach (long i in l) {\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        return max;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (var i in l) {\n            if (i > max) {\n     \
    \           max = i;\n            }\n        }\n        return max;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (var i in l) {\n            if (i > max) {\n     \
    \           max = i;\n            }\n        }\n        return max;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long x in l)\n            if (x > max)\n\
    \                max = x;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0L;\n        foreach (long i in l) {\n            if (i > max) {\n   \
    \             max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ max = i;\n        }\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\n\
    \                max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (var item in l) {\n            if (item > max) {\n\
    \                max = item;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ maxValue = long.MinValue;\n        foreach (long value in l) {\n           \
    \ if (value > maxValue) {\n                maxValue = value;\n            }\n\
    \        }\n        return maxValue;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.Max();\n        foreach (long x in l)\n            if (x > max)\n  \
    \              max = x;\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.Max();\n        foreach (long i in l) {\n            if (i > max)\n\
    \                max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long x in l)\n            if (x > max)\n\
    \                max = x;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ max = i;\n        }\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) max = i;\n\
    \        }\n        return max;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\n\
    \                max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (var i in l) {\n            if (i > max) {\n     \
    \           max = i;\n            }\n        }\n        return max;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\n\
    \                max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\n\
    \                max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\n\
    \                max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n  \
    \              max = i;\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = long.MinValue;\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792496
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (var item in l) {\n            if (item > max) {\n\
    \                max = item;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (var item in l) {\n            if (item > max) {\n\
    \                max = item;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long x in l)\n            if (x > max)\n\
    \                max = x;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.Max();\n        foreach (long x in l)\n            if (x > max)\n  \
    \              max = x;\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (var i in l) {\n            if (i > max) {\n     \
    \           max = i;\n            }\n        }\n        return max;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n  \
    \              max = i;\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ max = i;\n        }\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\n\
    \                max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (var i in l) {\n            if (i > max) {\n     \
    \           max = i;\n            }\n        }\n        return max;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (var i in l) {\n            if (i > max) max = i;\n\
    \        }\n        return max;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\n\
    \                max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (long i in l) {\n            if (i > max) {\n    \
    \            max = i;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ max = i;\n        }\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = long.MinValue;\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792496
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ max = i;\n        }\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = 0;\n        foreach (var item in l) {\n            if (item > max) {\n\
    \                max = item;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l)\n            if (i > max)\n\
    \                max = i;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.Max();\n        foreach (long i in l)\n            if (i > max)\n  \
    \              max = i;\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)5L,\
    \ (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L, (long)0L, (long)124L,\
    \ (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long i in l) {\n            if (i > max)\n\
    \                max = i;\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new\
    \ List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L,\
    \ (long)9L, (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\
    \n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return maximum element in the list.\n    // >>> MaxElement((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})))\n    // (3L)\n    //\
    \ >>> MaxElement((new List<long>(new long[]{(long)5L, (long)3L, (long)-5L, (long)2L,\
    \ (long)-3L, (long)3L, (long)9L, (long)0L, (long)123L, (long)1L, (long)-10L})))\n\
    \    // (123L)\n    public static long MaxElement(List<long> l) {\n        long\
    \ max = l.First();\n        foreach (long x in l)\n            if (x > max)\n\
    \                max = x;\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(MaxElement((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L}))) == (3L));\n    Debug.Assert(MaxElement((new List<long>(new\
    \ long[]{(long)5L, (long)3L, (long)-5L, (long)2L, (long)-3L, (long)3L, (long)9L,\
    \ (long)0L, (long)124L, (long)1L, (long)-10L}))) == (124L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659792579

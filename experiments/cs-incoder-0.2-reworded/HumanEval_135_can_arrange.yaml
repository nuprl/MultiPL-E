name: HumanEval_135_can_arrange
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Create a function which returns the largest index of an element\
  \ which\n    // is not greater than or equal to the element immediately preceding\
  \ it. If\n    // no such element exists then return -1. The given list will not\
  \ contain\n    // duplicate values.\n    // Examples:\n    // >>> CanArrange((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L})))\n \
  \   // (3L)\n    // >>> CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
  \ (long)3L})))\n    // (-1L)\n    public static long CanArrange(List<long> arr)\
  \ {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CanArrange((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)4L, (long)3L, (long)5L}))) ==\
  \ (3L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)1L, (long)2L,\
  \ (long)4L, (long)5L}))) == (-1L));\n    Debug.Assert(CanArrange((new List<long>(new\
  \ long[]{(long)1L, (long)4L, (long)2L, (long)5L, (long)6L, (long)7L, (long)8L, (long)9L,\
  \ (long)10L}))) == (2L));\n    Debug.Assert(CanArrange((new List<long>(new long[]{(long)4L,\
  \ (long)8L, (long)5L, (long)7L, (long)3L}))) == (4L));\n    Debug.Assert(CanArrange((new\
  \ List<long>())) == (-1L));\n    }\n\n}\n"
completions: ["        long largest = arr.First();\n        long index = 0;\n    \
    \    for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest)\
    \ {\n                index = i;\n                largest = arr[i];\n         \
    \   }\n        }\n        return index;", "        long maxIndex = -1;\n     \
    \   long maxVal = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n   \
    \         if (arr[i] > maxVal) {\n                maxVal = arr[i];\n         \
    \       maxIndex = i;\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxVal = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n          \
    \  if (arr[i] > maxVal) {\n                maxVal = arr[i];\n                maxIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n\
    \                maxValue = arr[i];\n            }\n        }\n        return\
    \ maxIndex;", "        long max = arr.First();\n        long index = 0;\n    \
    \    foreach (var item in arr.Skip(1)) {\n            if (item > max) {\n    \
    \            max = item;\n                index = arr.IndexOf(item);\n       \
    \     }\n        }\n        return index;", "        long max = arr.First();\n\
    \        long maxIndex = 0;\n        for (int i = 1; i < arr.Count; i++) {\n \
    \           if (arr[i] > max) {\n                max = arr[i];\n             \
    \   maxIndex = i;\n            }\n        }\n        return maxIndex;", "    \
    \    long max = -1;\n        long maxIndex = 0;\n        long currentMax = arr[0];\n\
    \        long currentMaxIndex = 0;\n        foreach (long i in arr) {\n      \
    \      if (i > currentMax) {\n                currentMax = i;\n              \
    \  currentMaxIndex = maxIndex;\n            }\n            if (i == currentMax)\
    \ {\n                maxIndex = currentMaxIndex + 1;\n            }\n        }\n\
    \        return maxIndex;", "        long maxIndex = -1;\n        long currentIndex\
    \ = -1;\n        long previousIndex = -1;\n        foreach (long i in arr) {\n\
    \            if (currentIndex == -1) {\n                currentIndex = i;\n  \
    \              previousIndex = i;\n            } else if (i > currentIndex) {\n\
    \                currentIndex = i;\n                previousIndex = i;\n     \
    \       } else if (i == currentIndex) {\n                previousIndex = i;\n\
    \            }\n        }\n        if (currentIndex == -1) {\n            return\
    \ -1;\n        }\n        if (previousIndex > currentIndex) {\n            return\
    \ -1;\n        }\n        return maxIndex;", "        long maxIndex = -1;\n  \
    \      long maxVal = arr.First();\n        for (int i = 1; i < arr.Count; i++)\
    \ {\n            if (arr[i] > maxVal) {\n                maxIndex = i;\n     \
    \           maxVal = arr[i];\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = 0;\n        long currentValue\
    \ = arr[0];\n        bool found = false;\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (currentValue < arr[i]) {\n                currentValue\
    \ = arr[i];\n                currentIndex = i;\n            }\n            if\
    \ (currentValue == arr[i]) {\n                found = true;\n            }\n \
    \       }\n        if (found) {\n            maxIndex = currentIndex;\n      \
    \  }\n        return maxIndex;", "        long max = arr.First();\n        long\
    \ maxIndex = -1;\n        for (int i = 1; i < arr.Count; i++) {\n            if\
    \ (arr[i] > max) {\n                max = arr[i];\n                maxIndex =\
    \ i;\n            }\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long currentIndex = 0;\n        long currentValue = arr[0];\n\
    \        while (currentIndex < arr.Count - 1) {\n            currentValue = arr[currentIndex\
    \ + 1];\n            if (currentValue <= currentIndex) {\n                currentIndex++;\n\
    \                continue;\n            }\n            currentIndex++;\n     \
    \       maxIndex = currentIndex;\n        }\n        return maxIndex;", "    \
    \    long maxIndex = -1;\n        long currentIndex = 0;\n        long currentValue\
    \ = arr[0];\n        bool found = false;\n        foreach (long value in arr)\
    \ {\n            if (currentValue <= value) {\n                currentIndex++;\n\
    \                currentValue = value;\n                found = true;\n      \
    \      }\n            else {\n                if (found) {\n                 \
    \   maxIndex = currentIndex;\n                }\n                currentIndex\
    \ = 0;\n                currentValue = value;\n                found = false;\n\
    \            }\n        }\n        return maxIndex;", "        long max = -1;\n\
    \        long maxIndex = 0;\n        foreach (var item in arr) {\n           \
    \ if (item > max) {\n                max = item;\n                maxIndex = arr.IndexOf(item);\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n\
    \                maxValue = arr[i];\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long currentIndex = 0;\n        long currentValue = arr[0];\n       \
    \ while (currentIndex < arr.Count) {\n            currentValue = arr[currentIndex];\n\
    \            if (currentValue <= currentIndex) {\n                currentIndex++;\n\
    \                continue;\n            }\n            currentIndex++;\n     \
    \       maxIndex = currentIndex;\n        }\n        return maxIndex;", "    \
    \    long maxIndex = -1;\n        long currentIndex = 0;\n        long currentValue\
    \ = arr[0];\n        long previousValue = arr[0];\n        foreach (long value\
    \ in arr) {\n            if (value > currentValue) {\n                currentIndex\
    \ = currentValue;\n                currentValue = value;\n            }\n    \
    \        if (value > previousValue) {\n                maxIndex = currentIndex;\n\
    \                previousValue = currentValue;\n            }\n        }\n   \
    \     return maxIndex;", "        long maxIndex = -1;\n        long maxValue =\
    \ arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = arr[i];\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long currentIndex = 0;\n        long maxValue = arr[0];\n     \
    \   foreach (long value in arr) {\n            if (value > maxValue) {\n     \
    \           maxValue = value;\n                maxIndex = currentIndex;\n    \
    \        }\n            currentIndex++;\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxVal = arr[0];\n        long currentVal\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxVal) {\n                maxIndex = i;\n                maxVal = arr[i];\n\
    \            }\n            if (arr[i] < currentVal) {\n                currentVal\
    \ = arr[i];\n            }\n        }\n        return maxIndex;", "        long\
    \ max = arr.First();\n        long maxIndex = arr.IndexOf(max);\n        foreach\
    \ (long i in arr) {\n            if (i > max) {\n                max = i;\n  \
    \              maxIndex = arr.IndexOf(max);\n            }\n        }\n      \
    \  return maxIndex;", "        long maxIndex = -1;\n        long currentIndex\
    \ = 0;\n        long currentValue = arr[0];\n        long previousValue = arr[0];\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] < currentValue)\
    \ {\n                currentValue = arr[i];\n                currentIndex = i;\n\
    \            }\n            if (arr[i] > previousValue) {\n                maxIndex\
    \ = currentIndex;\n                previousValue = arr[i];\n            }\n  \
    \      }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ currentIndex = arr.Count - 1;\n        while (currentIndex >= 0) {\n       \
    \     if (arr[currentIndex] <= arr[currentIndex - 1]) {\n                maxIndex\
    \ = currentIndex;\n            }\n            currentIndex--;\n        }\n   \
    \     return maxIndex;", "        long maxIndex = -1;\n        long maxValue =\
    \ arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = arr[i];\n\
    \            }\n        }\n        return maxIndex;", "        long max = -1;\n\
    \        long maxIndex = -1;\n        long currentMax = arr[0];\n        long\
    \ currentMaxIndex = -1;\n        foreach (long i in arr) {\n            if (i\
    \ > currentMax) {\n                currentMax = i;\n                currentMaxIndex\
    \ = maxIndex;\n            }\n            if (i == currentMax) {\n           \
    \     maxIndex = currentMaxIndex;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = 0;\n        long currentValue\
    \ = arr[0];\n        bool found = false;\n        foreach (long value in arr)\
    \ {\n            if (value > currentValue) {\n                currentValue = value;\n\
    \                currentIndex = currentValue;\n                found = false;\n\
    \            }\n            else if (value == currentValue) {\n              \
    \  found = true;\n            }\n            if (found) {\n                if\
    \ (maxIndex < currentIndex) {\n                    maxIndex = currentIndex;\n\
    \                }\n            }\n        }\n        return maxIndex;", "   \
    \     long max = arr.First();\n        long index = 0;\n        foreach (long\
    \ i in arr) {\n            if (i > max) {\n                max = i;\n        \
    \        index = i;\n            }\n        }\n        return index;", "     \
    \   long largest = arr.First();\n        long previous = arr.First();\n      \
    \  foreach (long i in arr) {\n            if (i > largest) {\n               \
    \ largest = i;\n            }\n            if (i < previous) {\n             \
    \   previous = i;\n            }\n        }\n        return largest;", "     \
    \   long maxIndex = -1;\n        long currentIndex = 0;\n        long currentValue\
    \ = arr[0];\n        foreach (long value in arr) {\n            if (value > currentValue)\
    \ {\n                currentValue = value;\n                currentIndex = currentValue;\n\
    \            }\n            else if (value == currentValue) {\n              \
    \  currentIndex++;\n            }\n            if (currentIndex > maxIndex) {\n\
    \                maxIndex = currentIndex;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long currentIndex = 0;\n \
    \       foreach (long i in arr) {\n            if (currentIndex == maxIndex) {\n\
    \                maxIndex = i;\n            } else if (currentIndex < maxIndex)\
    \ {\n                currentIndex = i;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxVal = arr[0];\n  \
    \      for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxVal)\
    \ {\n                maxIndex = i;\n                maxVal = arr[i];\n       \
    \     }\n        }\n        return maxIndex;", "        long largest = arr.First();\n\
    \        long previous = arr.First();\n        foreach (long i in arr) {\n   \
    \         if (i > largest) {\n                largest = i;\n            }\n  \
    \          if (i < previous) {\n                return -1;\n            }\n  \
    \          previous = i;\n        }\n        return largest;", "        long max\
    \ = arr.First();\n        long maxIndex = -1;\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] < max) {\n                max = arr[i];\n   \
    \             maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long max = arr.First();\n        long maxIndex = -1;\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n            \
    \    max = arr[i];\n                maxIndex = i;\n            }\n        }\n\
    \        return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        long currentIndex = -1;\n        foreach (long value in arr)\
    \ {\n            if (value > maxValue) {\n                maxValue = value;\n\
    \                maxIndex = currentIndex;\n            }\n            currentIndex++;\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxVal = arr[0];\n        foreach (long val in arr) {\n            if (val >\
    \ maxVal) {\n                maxIndex = maxVal;\n                maxVal = val;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxValue = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = 0;\n        long currentValue\
    \ = arr[0];\n        bool found = false;\n        foreach (long value in arr)\
    \ {\n            if (value > currentValue) {\n                currentValue = value;\n\
    \                currentIndex = currentValue;\n                found = false;\n\
    \            }\n            if (value == currentValue && value > currentIndex)\
    \ {\n                currentIndex = value;\n                found = true;\n  \
    \          }\n        }\n        if (found) {\n            maxIndex = currentIndex;\n\
    \        }\n        return maxIndex;", "        long max = arr.First();\n    \
    \    long index = 0;\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] >= max) {\n                max = arr[i];\n                index\
    \ = i;\n            }\n        }\n        return index;", "        long maxIndex\
    \ = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n\
    \                maxValue = arr[i];\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long currentIndex = 0;\n        long currentValue = arr[0];\n       \
    \ bool found = false;\n        foreach (long value in arr) {\n            if (value\
    \ > currentValue) {\n                currentValue = value;\n                currentIndex\
    \ = currentValue;\n                found = true;\n            }\n            if\
    \ (found) {\n                maxIndex = Math.Max(maxIndex, currentIndex);\n  \
    \          }\n        }\n        return maxIndex;", "        long largest = arr.First();\n\
    \        long current = arr.First();\n        bool found = false;\n        foreach\
    \ (long i in arr) {\n            if (i > current) {\n                found = true;\n\
    \            }\n            if (found) {\n                current = i;\n     \
    \           largest = i;\n            }\n        }\n        return largest;",
  "        long maxIndex = -1;\n        long currentIndex = arr.Count - 1;\n     \
    \   bool found = false;\n        while (currentIndex >= 0) {\n            if (arr[currentIndex]\
    \ <= arr[currentIndex - 1]) {\n                currentIndex--;\n            }\
    \ else {\n                found = true;\n                maxIndex = currentIndex;\n\
    \            }\n        }\n        if (!found) {\n            return -1;\n   \
    \     }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ currentIndex = 0;\n        foreach (long i in arr) {\n            if (currentIndex\
    \ == maxIndex) {\n                maxIndex = i;\n            }\n            else\
    \ if (currentIndex < maxIndex) {\n                currentIndex = i;\n        \
    \    }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n \
    \       long maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n\
    \            if (arr[i] > maxValue) {\n                maxIndex = i;\n       \
    \         maxValue = arr[i];\n            }\n        }\n        return maxIndex;",
  "        long max = arr.First();\n        long maxIndex = -1;\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] >= max) {\n           \
    \     max = arr[i];\n                maxIndex = i;\n            }\n        }\n\
    \        return maxIndex;", "        long max = arr.First();\n        long maxIndex\
    \ = -1;\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > max) {\n                max = arr[i];\n                maxIndex = i;\n   \
    \         }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxVal = arr[0];\n        foreach (long val in arr) {\n        \
    \    if (val > maxVal) {\n                maxVal = val;\n                maxIndex\
    \ = val;\n            }\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long currentIndex = 0;\n        long currentValue = arr[0];\n\
    \        foreach (long value in arr) {\n            if (value > currentValue)\
    \ {\n                currentIndex = currentValue;\n                currentValue\
    \ = value;\n            }\n        }\n        if (currentIndex > maxIndex) {\n\
    \            maxIndex = currentIndex;\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        foreach\
    \ (long value in arr) {\n            if (value >= maxValue) {\n              \
    \  maxIndex = value;\n                maxValue = value;\n            }\n     \
    \   }\n        return maxIndex;", "        long maxIndex = -1;\n        long currentIndex\
    \ = 0;\n        long currentValue = arr[0];\n        foreach (long value in arr)\
    \ {\n            if (currentValue <= value) {\n                currentIndex++;\n\
    \                currentValue = value;\n            }\n            else {\n  \
    \              maxIndex = currentIndex;\n                currentIndex = 0;\n \
    \               currentValue = value;\n            }\n        }\n        return\
    \ maxIndex;", "        long max = arr.First();\n        long maxIndex = arr.IndexOf(max);\n\
    \        if (maxIndex == 0) return -1;\n        long maxPrev = arr.ElementAt(maxIndex\
    \ - 1);\n        long maxNext = arr.ElementAt(maxIndex + 1);\n        if (maxNext\
    \ > maxPrev) {\n            return maxIndex;\n        }\n        return -1;",
  "        long maxIndex = -1;\n        long currentIndex = arr.Count - 1;\n     \
    \   while (currentIndex >= 0) {\n            if (arr[currentIndex] <= arr[currentIndex\
    \ - 1]) {\n                maxIndex = currentIndex;\n            }\n         \
    \   currentIndex--;\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long maxValue = arr[0];\n        long currentValue = arr[0];\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n            if (arr[i] < currentValue) {\n                currentValue\
    \ = arr[i];\n            }\n        }\n        return maxIndex;", "        long\
    \ max = arr.First();\n        long maxIndex = -1;\n        for (int i = 1; i <\
    \ arr.Count; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = -1;\n        long previousIndex\
    \ = -1;\n        foreach (long i in arr) {\n            if (currentIndex == -1)\
    \ {\n                currentIndex = i;\n                previousIndex = i;\n \
    \           } else if (i > currentIndex) {\n                currentIndex = i;\n\
    \                previousIndex = currentIndex;\n            } else if (i == currentIndex)\
    \ {\n                previousIndex = currentIndex;\n            }\n        }\n\
    \        if (currentIndex != -1) {\n            foreach (long i in arr) {\n  \
    \              if (i == currentIndex) {\n                    maxIndex = Math.Max(maxIndex,\
    \ previousIndex);\n                }\n            }\n        }\n        return\
    \ maxIndex;", "        long largest = -1;\n        long index = 0;\n        long\
    \ current = arr[0];\n        bool found = false;\n        for (int i = 1; i <\
    \ arr.Count; i++) {\n            if (current < arr[i]) {\n                index\
    \ = i;\n                current = arr[i];\n                found = true;\n   \
    \         }\n        }\n        if (found) {\n            largest = index;\n \
    \       }\n        return largest;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        long currentValue = arr[0];\n        for (int i\
    \ = 1; i < arr.Count; i++) {\n            if (arr[i] > currentValue) {\n     \
    \           currentValue = arr[i];\n                maxIndex = i;\n          \
    \  }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n   \
    \     long maxValue = arr[0];\n        foreach (long value in arr) {\n       \
    \     if (value > maxValue) {\n                maxValue = value;\n           \
    \     maxIndex = value;\n            }\n        }\n        return maxIndex;",
  "        long max = arr.First();\n        long min = 0;\n        foreach (long i\
    \ in arr) {\n            if (i > max) {\n                max = i;\n          \
    \  }\n            if (i < min) {\n                min = i;\n            }\n  \
    \      }\n        if (max > min) {\n            return -1;\n        }\n      \
    \  return max;", "        long max = arr.First();\n        long maxIndex = -1;\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] <= max)\
    \ {\n                max = arr[i];\n                maxIndex = i;\n          \
    \  }\n        }\n        return maxIndex;", "        long max = arr.First();\n\
    \        long maxIndex = -1;\n        for (int i = 1; i < arr.Count; i++) {\n\
    \            if (arr[i] > max) {\n                max = arr[i];\n            \
    \    maxIndex = i;\n            }\n        }\n        return maxIndex;", "   \
    \     long maxIndex = -1;\n        long maxVal = arr[0];\n        for (int i =\
    \ 1; i < arr.Count; i++) {\n            if (arr[i] > maxVal) {\n             \
    \   maxIndex = i;\n                maxVal = arr[i];\n            }\n        }\n\
    \        return maxIndex;", "        long max = arr.First();\n        long maxIndex\
    \ = -1;\n        foreach (long i in arr) {\n            if (i > max) {\n     \
    \           max = i;\n                maxIndex = arr.IndexOf(max);\n         \
    \   }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n  \
    \      long maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n\
    \            if (arr[i] > maxValue) {\n                maxValue = arr[i];\n  \
    \              maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = 0;\n        long currentValue\
    \ = arr[0];\n        bool found = false;\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] <= currentValue) {\n                currentIndex\
    \ = i;\n                currentValue = arr[i];\n                found = true;\n\
    \            }\n        }\n        if (found) {\n            maxIndex = currentIndex;\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        long currentIndex = -1;\n        foreach (long value\
    \ in arr) {\n            if (value > maxValue) {\n                maxValue = value;\n\
    \                maxIndex = currentIndex;\n            }\n            currentIndex++;\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long currentIndex = -1;\n        long previousIndex\
    \ = -1;\n        foreach (long i in arr) {\n            if (currentIndex == -1)\
    \ {\n                currentIndex = i;\n                previousIndex = i;\n \
    \           } else if (currentIndex > i) {\n                currentIndex = i;\n\
    \                previousIndex = currentIndex;\n            }\n        }\n   \
    \     if (currentIndex > maxIndex) {\n            maxIndex = currentIndex;\n \
    \       }\n        return maxIndex;", "        long max = -1;\n        long maxIndex\
    \ = -1;\n        long current = 0;\n        foreach (long i in arr) {\n      \
    \      if (i > max) {\n                max = i;\n                maxIndex = current;\n\
    \            }\n            current++;\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxVal = arr[0];\n        for (int i\
    \ = 1; i < arr.Count; i++) {\n            if (arr[i] > maxVal) {\n           \
    \     maxIndex = i;\n                maxVal = arr[i];\n            }\n       \
    \ }\n        return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = arr[i];\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxVal = arr.First();\n        foreach (long val in arr) {\n\
    \            if (val > maxVal) {\n                maxVal = val;\n            \
    \    maxIndex = arr.IndexOf(val);\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        long currentIndex\
    \ = -1;\n        foreach (long value in arr) {\n            if (value > maxValue)\
    \ {\n                maxValue = value;\n                maxIndex = currentIndex;\n\
    \            }\n            currentIndex++;\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxValue = arr[i];\n                maxIndex = i;\n            }\n \
    \       }\n        return maxIndex;", "        long largest = arr.First();\n \
    \       long index = 0;\n        for (int i = 1; i < arr.Count; i++) {\n     \
    \       if (arr[i] > largest) {\n                largest = arr[i];\n         \
    \       index = i;\n            }\n        }\n        return index;", "      \
    \  long max = arr.First();\n        long maxIndex = -1;\n        for (int i =\
    \ 1; i < arr.Count; i++) {\n            if (arr[i] >= max) {\n               \
    \ max = arr[i];\n                maxIndex = i;\n            }\n        }\n   \
    \     return maxIndex;", "        long maxIndex = -1;\n        long maxValue =\
    \ arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxValue = arr[i];\n                maxIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long largest\
    \ = arr.First();\n        long index = 0;\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > largest) {\n                index = i;\n  \
    \              largest = arr[i];\n            }\n        }\n        return index;",
  "        long maxIndex = -1;\n        long currentIndex = 0;\n        long currentValue\
    \ = arr[0];\n        long previousValue = arr[0];\n        for (int i = 1; i <\
    \ arr.Count; i++) {\n            if (arr[i] < currentValue) {\n              \
    \  currentIndex = i;\n                currentValue = arr[i];\n            }\n\
    \            if (arr[i] > previousValue) {\n                maxIndex = currentIndex;\n\
    \                previousValue = arr[i];\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxVal = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n\
    \            if (arr[i] > maxVal) {\n                maxIndex = i;\n         \
    \       maxVal = arr[i];\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = 0;\n        long currentValue\
    \ = arr[0];\n        bool found = false;\n        foreach (long value in arr)\
    \ {\n            if (value > currentValue) {\n                currentValue = value;\n\
    \                currentIndex = currentValue;\n                found = true;\n\
    \            }\n            else if (value == currentValue && found == true) {\n\
    \                maxIndex = currentIndex;\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long currentIndex = 0;\n \
    \       long currentValue = arr[0];\n        foreach (long value in arr) {\n \
    \           if (value > currentValue) {\n                currentValue = value;\n\
    \                currentIndex = currentValue;\n            }\n        }\n    \
    \    if (currentIndex > maxIndex) {\n            maxIndex = currentIndex;\n  \
    \      }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long max = arr.First();\n        long maxIndex = -1;\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] <= max) {\n           \
    \     max = arr[i];\n                maxIndex = i;\n            }\n        }\n\
    \        return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        foreach (long value in arr) {\n            if (value <= maxValue)\
    \ {\n                maxIndex = arr.IndexOf(value);\n                break;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = arr[0];\n        foreach (long i in arr) {\n  \
    \          if (i > maxValue) {\n                maxIndex = i;\n              \
    \  maxValue = i;\n            }\n        }\n        return maxIndex;", "     \
    \   long maxIndex = -1;\n        long maxValue = arr[0];\n        long currentIndex\
    \ = 0;\n        foreach (long value in arr) {\n            if (value > maxValue)\
    \ {\n                maxIndex = currentIndex;\n                maxValue = value;\n\
    \            }\n            currentIndex++;\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        long currentIndex = -1;\n        bool found = false;\n\
    \        foreach (long value in arr) {\n            if (value > maxValue) {\n\
    \                maxIndex = currentIndex;\n                maxValue = value;\n\
    \            }\n            if (value == maxValue) {\n                found =\
    \ true;\n            }\n            currentIndex++;\n        }\n        if (!found)\
    \ {\n            maxIndex = -1;\n        }\n        return maxIndex;", "     \
    \   long largest = arr.First();\n        long index = arr.IndexOf(largest);\n\
    \        if (index != -1) {\n            while (index != 0 && arr[index - 1] >=\
    \ largest) {\n                index--;\n            }\n        }\n        return\
    \ index;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n   \
    \     for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxValue = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        return maxIndex;", "        long max = arr.First();\n\
    \        long maxIndex = 0;\n        for (int i = 1; i < arr.Count; i++) {\n \
    \           if (arr[i] <= max) {\n                max = arr[i];\n            \
    \    maxIndex = i;\n            }\n        }\n        return maxIndex;", "   \
    \     long max = arr.First();\n        long maxIndex = -1;\n        for (int i\
    \ = 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n              \
    \  max = arr[i];\n                maxIndex = i;\n            }\n        }\n  \
    \      return maxIndex;", "        long maxIndex = -1;\n        long currentIndex\
    \ = 0;\n        long currentMax = arr[0];\n        foreach (long i in arr) {\n\
    \            if (i > currentMax) {\n                currentMax = i;\n        \
    \        currentIndex = maxIndex;\n            }\n            else if (i < currentMax)\
    \ {\n                currentMax = i;\n                currentIndex = maxIndex;\n\
    \            }\n            else if (i == currentMax) {\n                currentIndex++;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long currentIndex = 0;\n        long currentValue = arr[0];\n \
    \       bool found = false;\n        foreach (long value in arr) {\n         \
    \   if (value > currentValue) {\n                currentValue = value;\n     \
    \           currentIndex = currentValue;\n                found = true;\n    \
    \        }\n            else if (value == currentValue && value > currentIndex)\
    \ {\n                currentIndex = value;\n            }\n        }\n       \
    \ if (found) {\n            maxIndex = currentIndex;\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxVal = arr[0];\n  \
    \      for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxVal)\
    \ {\n                maxIndex = i;\n                maxVal = arr[i];\n       \
    \     }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long currentIndex = 0;\n        long currentValue = arr[0];\n       \
    \ bool found = false;\n        foreach (long value in arr) {\n            if (value\
    \ > currentValue) {\n                currentValue = value;\n                currentIndex\
    \ = currentValue;\n                found = true;\n            }\n            if\
    \ (found) {\n                maxIndex = Math.Max(maxIndex, currentIndex);\n  \
    \          }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = arr[0];\n        long currentValue = arr[0];\n      \
    \  for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n\
    \                maxIndex = i;\n                maxValue = arr[i];\n         \
    \   }\n            if (arr[i] < currentValue) {\n                currentValue\
    \ = arr[i];\n            }\n        }\n        return maxIndex;", "        long\
    \ max = arr.First();\n        long maxIndex = -1;\n        for (int i = 1; i <\
    \ arr.Count; i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long max = arr.First();\n        long maxIndex = -1;\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > max) {\n            \
    \    max = arr[i];\n                maxIndex = i;\n            }\n        }\n\
    \        return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = arr[i];\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = arr[0];\n        foreach (long i in arr) {\n  \
    \          if (i > maxValue) {\n                maxIndex = i;\n              \
    \  maxValue = i;\n            }\n        }\n        return maxIndex;", "     \
    \   long maxIndex = -1;\n        long maxValue = arr[0];\n        long currentIndex\
    \ = 0;\n        foreach (long value in arr) {\n            if (value <= maxValue)\
    \ {\n                currentIndex++;\n            }\n            if (value > maxValue)\
    \ {\n                maxIndex = currentIndex;\n                maxValue = value;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxValue = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        long currentValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > currentValue) {\n                maxIndex = i;\n                maxValue =\
    \ currentValue;\n            }\n            currentValue = arr[i];\n        }\n\
    \        return maxIndex;", "        long maxIndex = -1;\n        long maxVal\
    \ = arr[0];\n        long index = 0;\n        foreach (long val in arr) {\n  \
    \          if (val > maxVal) {\n                maxVal = val;\n              \
    \  maxIndex = index;\n            }\n            index++;\n        }\n       \
    \ return maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++)\
    \ {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n   \
    \             maxValue = arr[i];\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = arr.Count - 1;\n     \
    \   while (currentIndex >= 0) {\n            if (arr[currentIndex] <= arr[currentIndex\
    \ - 1]) {\n                maxIndex = currentIndex;\n            } else {\n  \
    \              currentIndex--;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxVal = arr[0];\n        for (int i\
    \ = 1; i < arr.Count; i++) {\n            if (arr[i] > maxVal) {\n           \
    \     maxIndex = i;\n                maxVal = arr[i];\n            }\n       \
    \ }\n        return maxIndex;", "        long maxIndex = -1;\n        long currentIndex\
    \ = 0;\n        long currentValue = arr[0];\n        foreach (long value in arr)\
    \ {\n            if (currentValue <= value) {\n                currentIndex++;\n\
    \                currentValue = value;\n            }\n            else {\n  \
    \              if (currentIndex > maxIndex) {\n                    maxIndex =\
    \ currentIndex;\n                }\n                currentIndex = 0;\n      \
    \          currentValue = value;\n            }\n        }\n        return maxIndex;",
  "        long largest = arr.First();\n        long index = 0;\n        foreach (long\
    \ i in arr) {\n            if (i > largest) {\n                index = arr.IndexOf(largest);\n\
    \                largest = i;\n            }\n        }\n        return index;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxValue = arr[i];\n          \
    \      maxIndex = i;\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxValue = arr[i];\n                maxIndex = i;\n            }\n \
    \       }\n        return maxIndex;", "        long max = arr.First();\n     \
    \   long maxIndex = -1;\n        for (int i = 1; i < arr.Count; i++) {\n     \
    \       if (arr[i] >= max) {\n                max = arr[i];\n                maxIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long max\
    \ = arr.First();\n        long maxIndex = -1;\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > max) {\n                max = arr[i];\n   \
    \             maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        long currentValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = arr[i];\n\
    \            }\n            if (arr[i] < currentValue) {\n                currentValue\
    \ = arr[i];\n            }\n        }\n        return maxIndex;", "        long\
    \ max = arr.First();\n        long maxIndex = -1;\n        foreach (long i in\
    \ arr) {\n            if (i > max) {\n                max = i;\n             \
    \   maxIndex = arr.IndexOf(max);\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = 0;\n        long currentValue\
    \ = arr[0];\n        foreach (long value in arr) {\n            if (value >= currentValue)\
    \ {\n                currentIndex++;\n                currentValue = value;\n\
    \            }\n            else {\n                if (currentIndex > maxIndex)\
    \ {\n                    maxIndex = currentIndex;\n                }\n       \
    \         currentIndex = 0;\n                currentValue = value;\n         \
    \   }\n        }\n        if (currentIndex > maxIndex) {\n            maxIndex\
    \ = currentIndex;\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxValue = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        foreach (long\
    \ i in arr) {\n            if (i > maxValue) {\n                maxIndex = i;\n\
    \                maxValue = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ currentIndex = arr.Count - 1;\n        while (currentIndex >= 0) {\n       \
    \     if (arr[currentIndex] <= arr[currentIndex - 1]) {\n                currentIndex--;\n\
    \            } else {\n                maxIndex = currentIndex;\n            \
    \    break;\n            }\n        }\n        return maxIndex;", "        long\
    \ maxIndex = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i <\
    \ arr.Count; i++) {\n            if (arr[i] > maxValue) {\n                maxValue\
    \ = arr[i];\n                maxIndex = i;\n            }\n        }\n       \
    \ return maxIndex;", "        long max = arr.First();\n        long maxIndex =\
    \ -1;\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] <=\
    \ max) {\n                max = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long maxValue = arr[0];\n        long currentIndex = 0;\n        foreach\
    \ (long value in arr) {\n            if (value > maxValue) {\n               \
    \ maxIndex = currentIndex;\n                maxValue = value;\n            }\n\
    \            currentIndex++;\n        }\n        return maxIndex;", "        long\
    \ max = arr.First();\n        long maxIndex = -1;\n        for (int i = 1; i <\
    \ arr.Count; i++) {\n            if (arr[i] <= max) {\n                max = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = 0;\n        long currentValue\
    \ = arr[0];\n        bool found = false;\n        for (int i = 0; i < arr.Count;\
    \ i++) {\n            if (currentValue <= arr[i]) {\n                currentIndex++;\n\
    \                currentValue = arr[i];\n            }\n            else {\n \
    \               currentIndex++;\n                currentValue = arr[i];\n    \
    \            maxIndex = currentIndex;\n                found = true;\n       \
    \     }\n        }\n        if (!found) {\n            maxIndex = -1;\n      \
    \  }\n        return maxIndex;", "        long max = arr.First();\n        long\
    \ maxIndex = -1;\n        foreach (long i in arr) {\n            if (i > max)\
    \ {\n                max = i;\n                maxIndex = arr.IndexOf(max);\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n\
    \                maxValue = arr[i];\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n\
    \        foreach (long i in arr) {\n            if (i > maxValue) {\n        \
    \        maxIndex = i;\n                maxValue = i;\n            }\n       \
    \ }\n        return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = arr[i];\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long currentIndex = 0;\n        long currentValue = arr[0];\n \
    \       bool found = false;\n        for (int i = 1; i < arr.Count; i++) {\n \
    \           if (currentValue <= arr[i]) {\n                currentIndex = i;\n\
    \                currentValue = arr[i];\n                found = true;\n     \
    \       }\n        }\n        if (found) {\n            maxIndex = currentIndex;\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxValue = arr[i];\n                maxIndex = i;\n            }\n \
    \       }\n        return maxIndex;", "        long max = -1;\n        long curr\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > curr) {\n                max = i;\n            }\n            curr = arr[i];\n\
    \        }\n        return max;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = arr[i];\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long currentIndex = 0;\n        long currentValue = arr[0];\n \
    \       bool found = false;\n        foreach (long value in arr) {\n         \
    \   if (value > currentValue) {\n                currentValue = value;\n     \
    \           currentIndex = currentValue;\n                found = false;\n   \
    \         }\n            else if (value == currentValue) {\n                found\
    \ = true;\n            }\n            if (found) {\n                maxIndex =\
    \ Math.Max(maxIndex, currentIndex);\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxIndex = i;\n                maxValue = arr[i];\n     \
    \       }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long currentIndex = 0;\n        long maxValue = arr[0];\n        foreach\
    \ (long value in arr) {\n            if (value > maxValue) {\n               \
    \ maxValue = value;\n                maxIndex = currentIndex;\n            }\n\
    \            currentIndex++;\n        }\n        return maxIndex;", "        long\
    \ maxIndex = -1;\n        long maxVal = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxVal) {\n                maxIndex = i;\n\
    \                maxVal = arr[i];\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = 0;\n        long currentValue\
    \ = arr[0];\n        foreach (long value in arr) {\n            if (value >= currentValue)\
    \ {\n                currentIndex++;\n                currentValue = value;\n\
    \            }\n            else {\n                if (currentIndex > maxIndex)\
    \ {\n                    maxIndex = currentIndex;\n                }\n       \
    \         currentIndex = 0;\n                currentValue = value;\n         \
    \   }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n  \
    \      long maxValue = arr[0];\n        long currentIndex = -1;\n        long\
    \ currentValue = arr[0];\n        for (int i = 0; i < arr.Count; i++) {\n    \
    \        if (currentValue < arr[i]) {\n                currentIndex = i;\n   \
    \             currentValue = arr[i];\n            }\n            if (currentValue\
    \ > maxValue) {\n                maxIndex = currentIndex;\n                maxValue\
    \ = currentValue;\n            }\n        }\n        return maxIndex;", "    \
    \    long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int i\
    \ = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n         \
    \       maxValue = arr[i];\n                maxIndex = i;\n            }\n   \
    \     }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxVal = arr.First();\n        foreach (long val in arr) {\n            if (val\
    \ > maxVal) {\n                maxVal = val;\n                maxIndex = arr.IndexOf(val);\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long currentIndex = -1;\n        long currentValue = arr[0];\n\
    \        bool found = false;\n        for (int i = 1; i < arr.Count; i++) {\n\
    \            if (arr[i] <= currentValue) {\n                currentIndex = i;\n\
    \                currentValue = arr[i];\n            }\n            if (arr[i]\
    \ > currentValue && !found) {\n                maxIndex = currentIndex;\n    \
    \            found = true;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxValue = arr[i];\n                maxIndex = i;\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        long currentIndex\
    \ = -1;\n        bool found = false;\n        foreach (long value in arr) {\n\
    \            if (value > maxValue) {\n                maxValue = value;\n    \
    \            maxIndex = currentIndex;\n            }\n            currentIndex++;\n\
    \            if (value == maxValue) {\n                found = true;\n       \
    \     }\n        }\n        if (!found) {\n            return -1;\n        }\n\
    \        return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxValue = arr[i];\n                maxIndex\
    \ = i;\n            }\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxIndex = i;\n\
    \                maxValue = arr[i];\n            }\n        }\n        return\
    \ maxIndex;", "        long max = arr.First();\n        long maxIndex = -1;\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > max)\
    \ {\n                max = arr[i];\n                maxIndex = i;\n          \
    \  }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n   \
    \     long maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n\
    \            if (arr[i] > maxValue) {\n                maxIndex = i;\n       \
    \         maxValue = arr[i];\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        long currentIndex\
    \ = -1;\n        foreach (long value in arr) {\n            if (value >= maxValue)\
    \ {\n                maxIndex = currentIndex;\n                maxValue = value;\n\
    \            }\n            currentIndex++;\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxVal = arr[0];\n        for (int i\
    \ = 1; i < arr.Count; i++) {\n            if (arr[i] > maxVal) {\n           \
    \     maxIndex = i;\n                maxVal = arr[i];\n            }\n       \
    \ }\n        return maxIndex;", "        long largest = arr.First();\n       \
    \ long previous = arr.First();\n        foreach (long i in arr) {\n          \
    \  if (i > largest) {\n                largest = i;\n            }\n         \
    \   if (i < previous) {\n                return -1;\n            }\n         \
    \   previous = i;\n        }\n        return largest;", "        long maxIndex\
    \ = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] > maxValue) {\n                maxValue = arr[i];\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxValue = arr[i];\n                maxIndex = i;\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        long currentIndex = arr.IndexOf(maxValue);\n   \
    \     while (currentIndex >= 0) {\n            if (arr[currentIndex] <= maxValue)\
    \ {\n                maxValue = arr[currentIndex];\n                maxIndex =\
    \ currentIndex;\n            }\n            currentIndex = arr.IndexOf(maxValue,\
    \ currentIndex + 1);\n        }\n        return maxIndex;", "        long maxIndex\
    \ = -1;\n        long maxValue = arr[0];\n        long currentValue = arr[0];\n\
    \        bool found = false;\n        for (int i = 1; i < arr.Count; i++) {\n\
    \            if (arr[i] > currentValue) {\n                currentValue = arr[i];\n\
    \                maxIndex = i;\n                found = false;\n            }\
    \ else if (arr[i] == currentValue && !found) {\n                found = true;\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long currentIndex = 0;\n        long currentValue = arr[0];\n \
    \       while (currentIndex < arr.Count) {\n            if (currentValue <= arr[currentIndex])\
    \ {\n                currentIndex++;\n                currentValue = arr[currentIndex];\n\
    \            } else {\n                if (currentIndex > maxIndex) {\n      \
    \              maxIndex = currentIndex;\n                }\n                currentIndex++;\n\
    \                currentValue = arr[currentIndex];\n            }\n        }\n\
    \        return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        long currentIndex = 0;\n        foreach (long value in arr)\
    \ {\n            if (value > maxValue) {\n                maxValue = value;\n\
    \                maxIndex = currentIndex;\n            }\n            currentIndex++;\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ currentIndex = -1;\n        long previousIndex = -1;\n        foreach (long\
    \ i in arr) {\n            if (currentIndex == -1) {\n                currentIndex\
    \ = i;\n            }\n            if (currentIndex > i) {\n                currentIndex\
    \ = i;\n            }\n            if (currentIndex < i) {\n                previousIndex\
    \ = currentIndex;\n                currentIndex = i;\n            }\n        \
    \    if (currentIndex > maxIndex) {\n                maxIndex = currentIndex;\n\
    \            }\n        }\n        if (maxIndex == -1) {\n            return -1;\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        long currentIndex = -1;\n        long currentValue\
    \ = arr[0];\n        foreach (long value in arr) {\n            if (value > currentValue)\
    \ {\n                currentIndex = maxIndex;\n                currentValue =\
    \ value;\n            }\n            if (value > maxValue) {\n               \
    \ maxIndex = currentIndex;\n                maxValue = currentValue;\n       \
    \     }\n        }\n        return maxIndex;", "        long largest = arr.First();\n\
    \        long index = 0;\n        for (int i = 1; i < arr.Count; i++) {\n    \
    \        if (arr[i] > largest) {\n                index = i;\n               \
    \ largest = arr[i];\n            }\n        }\n        return index;", "     \
    \   long max = arr.First();\n        long maxIndex = -1;\n        for (int i =\
    \ 1; i < arr.Count; i++) {\n            if (arr[i] <= max) {\n               \
    \ max = arr[i];\n                maxIndex = i;\n            }\n        }\n   \
    \     return maxIndex;", "        long maxIndex = -1;\n        long maxValue =\
    \ arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = arr[i];\n\
    \            }\n        }\n        return maxIndex;", "        long max = arr.First();\n\
    \        long maxIndex = -1;\n        for (int i = 1; i < arr.Count; i++) {\n\
    \            if (arr[i] <= max) {\n                max = Math.Max(max, arr[i]);\n\
    \                maxIndex = i;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxIndex = i;\n                maxValue = arr[i];\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxVal = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n          \
    \  if (arr[i] > maxVal) {\n                maxIndex = i;\n                maxVal\
    \ = arr[i];\n            }\n        }\n        return maxIndex;", "        long\
    \ maxIndex = -1;\n        long currentIndex = 0;\n        long maxValue = arr[0];\n\
    \        foreach (long value in arr) {\n            if (value > maxValue) {\n\
    \                maxValue = value;\n                maxIndex = currentIndex;\n\
    \            }\n            currentIndex++;\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n       \
    \         maxValue = arr[i];\n                maxIndex = i;\n            }\n \
    \       }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxVal = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n          \
    \  if (arr[i] > maxVal) {\n                maxIndex = i;\n                maxVal\
    \ = arr[i];\n            }\n        }\n        return maxIndex;", "        long\
    \ maxIndex = -1;\n        long maxValue = arr[0];\n        for (int i = 1; i <\
    \ arr.Count; i++) {\n            if (arr[i] > maxValue) {\n                maxIndex\
    \ = i;\n                maxValue = arr[i];\n            }\n        }\n       \
    \ return maxIndex;", "        long maxIndex = -1;\n        long currentIndex =\
    \ 0;\n        long currentValue = arr[0];\n        bool found = false;\n     \
    \   foreach (long value in arr) {\n            if (value > currentValue) {\n \
    \               currentValue = value;\n                currentIndex = currentValue;\n\
    \                found = true;\n            }\n        }\n        if (found) {\n\
    \            while (currentIndex < currentValue) {\n                maxIndex =\
    \ currentIndex;\n                currentIndex++;\n            }\n        }\n \
    \       return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        long currentValue = arr[0];\n        for (int i = 1; i <\
    \ arr.Count; i++) {\n            if (arr[i] > currentValue) {\n              \
    \  maxIndex = i;\n                maxValue = currentValue;\n            }\n  \
    \          currentValue = arr[i];\n        }\n        return maxIndex;", "   \
    \     long largest = arr.First();\n        long index = 0;\n        foreach (long\
    \ i in arr) {\n            if (i > largest) {\n                index = arr.IndexOf(largest);\n\
    \                largest = i;\n            }\n        }\n        return index;",
  "        long maxIndex = -1;\n        long currentIndex = 0;\n        long currentValue\
    \ = arr[0];\n        bool found = false;\n        foreach (long value in arr)\
    \ {\n            if (value > currentValue) {\n                currentValue = value;\n\
    \                currentIndex = currentValue;\n                found = false;\n\
    \            }\n            else if (value == currentValue) {\n              \
    \  found = true;\n            }\n            if (found) {\n                maxIndex\
    \ = Math.Max(maxIndex, currentIndex);\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n\
    \        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue)\
    \ {\n                maxValue = arr[i];\n                maxIndex = i;\n     \
    \       }\n        }\n        return maxIndex;", "        long maxIndex = -1;\n\
    \        long currentIndex = 0;\n        foreach (long i in arr) {\n         \
    \   if (currentIndex == maxIndex) {\n                maxIndex = i;\n         \
    \   }\n            else if (currentIndex < maxIndex && i <= maxIndex) {\n    \
    \            currentIndex++;\n            }\n        }\n        return maxIndex;",
  "        long maxIndex = -1;\n        long currentIndex = 0;\n        long currentMax\
    \ = arr[0];\n        foreach (long value in arr) {\n            if (currentMax\
    \ < value) {\n                currentMax = value;\n                currentIndex\
    \ = currentMax;\n            }\n            if (currentIndex > maxIndex) {\n \
    \               maxIndex = currentIndex;\n            }\n            currentIndex++;\n\
    \        }\n        return maxIndex;", "        long max = arr.First();\n    \
    \    long maxIndex = -1;\n        for (int i = 1; i < arr.Count; i++) {\n    \
    \        if (arr[i] >= max) {\n                max = arr[i];\n               \
    \ maxIndex = i;\n            }\n        }\n        return maxIndex;", "      \
    \  long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int i =\
    \ 1; i < arr.Count; i++) {\n            if (arr[i] > maxValue) {\n           \
    \     maxValue = arr[i];\n                maxIndex = i;\n            }\n     \
    \   }\n        return maxIndex;", "        long maxIndex = -1;\n        long maxValue\
    \ = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n            if (arr[i]\
    \ > maxValue) {\n                maxIndex = i;\n                maxValue = arr[i];\n\
    \            }\n        }\n        return maxIndex;", "        long maxIndex =\
    \ -1;\n        long maxValue = arr[0];\n        for (int i = 1; i < arr.Count;\
    \ i++) {\n            if (arr[i] >= maxValue) {\n                maxIndex = i;\n\
    \                maxValue = arr[i];\n            }\n        }\n        return\
    \ maxIndex;", "        long maxIndex = -1;\n        long maxValue = arr[0];\n\
    \        long currentIndex = 0;\n        foreach (long value in arr) {\n     \
    \       if (value > maxValue) {\n                maxIndex = currentIndex;\n  \
    \              maxValue = value;\n            }\n            currentIndex++;\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxValue = arr[i];\n          \
    \      maxIndex = i;\n            }\n        }\n        return maxIndex;", " \
    \       long maxIndex = -1;\n        long maxValue = arr[0];\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] >= maxValue) {\n      \
    \          maxIndex = i;\n                maxValue = arr[i];\n            }\n\
    \        }\n        return maxIndex;", "        long maxIndex = -1;\n        long\
    \ maxValue = arr[0];\n        for (int i = 1; i < arr.Count; i++) {\n        \
    \    if (arr[i] > maxValue) {\n                maxIndex = i;\n               \
    \ maxValue = arr[i];\n            }\n        }\n        return maxIndex;", " \
    \       long largest = arr.First();\n        long index = 0;\n        for (int\
    \ i = 1; i < arr.Count; i++) {\n            if (arr[i] > largest) {\n        \
    \        index = i;\n                largest = arr[i];\n            }\n      \
    \  }\n        return index;"]
stop_tokens:
- "\n    }\n"

language: cs
name: HumanEval_18_how_many_times
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        bool found = false;\n\
    \        do {\n            found = false;\n            start = str.IndexOf(substring,\
    \ start);\n            if (start == -1) {\n                break;\n          \
    \  }\n            end = str.IndexOf(substring, start + 1);\n            if (end\
    \ == -1) {\n                end = str.Length;\n            }\n            count\
    \ += end - start;\n            found = true;\n        } while (end != str.Length);\n\
    \        return count;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmo92efek.cs(23,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpmo92efek.cs(23,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpmo92efek.cs(27,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpmo92efek.cs(27,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpmo92efek.cs(20,14): warning CS0219: The variable ''found'' is assigned
    but its value is never used

    '
  timestamp: 1659797681
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += HowManyTimes(str.Substring(0,\
    \ str.Length - 1), substring) + HowManyTimes(str, substring);\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659797687
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[1]) {\n                count\
    \ += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n            }\n\
    \            else {\n                count++;\n            }\n        }\n    \
    \    return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside\
    \ the bounds of the array.\n  at Problem.HowManyTimes (System.String str, System.String\
    \ substring) [0x00040] in <8464942203c6467586156def47dbf063>:0 \n  at Problem.HowManyTimes\
    \ (System.String str, System.String substring) [0x00035] in <8464942203c6467586156def47dbf063>:0\
    \ \n  at Problem.Main (System.String[] args) [0x0001a] in <8464942203c6467586156def47dbf063>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index\
    \ was outside the bounds of the array.\n  at Problem.HowManyTimes (System.String\
    \ str, System.String substring) [0x00040] in <8464942203c6467586156def47dbf063>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00035]\
    \ in <8464942203c6467586156def47dbf063>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x0001a] in <8464942203c6467586156def47dbf063>:0 \n"
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        long startIndex = 0;\n        long endIndex = 0;\n        bool found\
    \ = false;\n        bool foundSubstring = false;\n        bool foundSubstringIndex\
    \ = false;\n        bool foundSubstringIndex2 = false;\n        bool foundSubstringIndex3\
    \ = false;\n        bool foundSubstringIndex4 = false;\n        bool foundSubstringIndex5\
    \ = false;\n        bool foundSubstringIndex6 = false;\n        bool foundSubstringIndex7\
    \ = false;\n        bool foundSubstringIndex8 = false;\n        bool foundSubstringIndex9\
    \ = false;\n        bool foundSubstringIndex10 = false;\n        bool foundSubstringIndex11\
    \ = false;\n        bool foundSubstringIndex12 = false;\n        bool foundSubstringIndex13\
    \ = false;\n        bool foundSubstringIndex14 = false;\n        bool foundSubstringIndex15\
    \ = false;\n        bool foundSubstringIndex16 = false;\n        bool foundSubstringIndex17\
    \ = false;\n        bool foundSubstringIndex18 = false;\n        bool foundSubstringIndex19\
    \ = false;\n        bool foundSubstringIndex20 = false;\n        bool foundSubstringIndex21\
    \ = false;\n        bool foundSubstringIndex22 = false;\n        bool foundSubstringIndex23\
    \ = false;\n        bool foundSubstringIndex24 = false;\n        bool foundSubstringIndex25\
    \ = false;\n        bool foundSubstringIndex26 = false;\n        bool foundSubstringIndex27\
    \ = false;\n        bool foundSubstringIndex28 = false;\n        bool foundSubstringIndex29\
    \ = false;\n        bool foundSubstringIndex30 = false;\n        bool foundSubstringIndex31\
    \ = false;\n        bool foundSubstringIndex32 = false;\n        bool foundSubstringIndex33\
    \ = false;\n        bool foundSubstringIndex34 = false;\n        bool foundSubstringIndex35\
    \ = false;\n        bool foundSubstringIndex36 = false;\n        bool foundSubstringIndex37\
    \ = false;\n        bool foundSubstringIndex38 = false;\n        bool foundSubstringIndex39\
    \ = false;\n        bool foundSubstringIndex40 = false;\n        bool foundSubstringIndex41\
    \ = false;\n        bool foundSubstringIndex42 = false;\n        bool foundSubstringIndex43\
    \ = false;\n        bool foundSubstringIndex44 = false;\n        bool foundSubstringIndex45\
    \ = false;\n        bool foundSubstringIndex46 = false;\n        bool foundSubstringIndex47\
    \ = false;\n        bool foundSubstringIndex48 = false;\n        bool foundSubstringIndex49\
    \ = false;\n        bool foundSubstringIndex50 = false;\n        bool foundSubstringIndex51\
    \ = false;\n        bool foundSub\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpybwtcfi7.cs(76,22): error CS1002: ; expected

    '
  timestamp: 1659797681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += 1;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <59f7be8e352a481095ec8f3053f568f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <59f7be8e352a481095ec8f3053f568f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += HowManyTimes(str.Substring(0,\
    \ str.Length - 1), substring) + HowManyTimes(str, substring);\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659797687
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <63c77b8082a440c1a4af61ee02019449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <63c77b8082a440c1a4af61ee02019449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        long index = 0;\n        bool found = false;\n        bool startFound\
    \ = false;\n        bool endFound = false;\n        bool lengthFound = false;\n\
    \        bool indexFound = false;\n        bool foundSubstring = false;\n    \
    \    bool foundSubstringStart = false;\n        bool foundSubstringEnd = false;\n\
    \        bool foundSubstringLength = false;\n        bool foundSubstringIndex\
    \ = false;\n        bool foundSubstringFound = false;\n        bool foundSubstringStartFound\
    \ = false;\n        bool foundSubstringEndFound = false;\n        bool foundSubstringLengthFound\
    \ = false;\n        bool foundSubstringIndexFound = false;\n        bool foundSubstringFoundStart\
    \ = false;\n        bool foundSubstringFoundEnd = false;\n        bool foundSubstringFoundLength\
    \ = false;\n        bool foundSubstringFoundIndex = false;\n        bool foundSubstringFoundFound\
    \ = false;\n        bool foundSubstringFoundStartFound = false;\n        bool\
    \ foundSubstringFoundEndFound = false;\n        bool foundSubstringFoundLengthFound\
    \ = false;\n        bool foundSubstringFoundIndexFound = false;\n        bool\
    \ foundSubstringFoundFoundStart = false;\n        bool foundSubstringFoundFoundEnd\
    \ = false;\n        bool foundSubstringFoundFoundLength = false;\n        bool\
    \ foundSubstringFoundFoundIndex = false;\n        bool foundSubstringFoundFoundFound\
    \ = false;\n        bool foundSubstringFoundFoundStartFound = false;\n       \
    \ bool foundSubstringFoundFoundEndFound = false;\n        bool foundSubstringFoundFoundLengthFound\
    \ = false;\n        bool foundSubstringFoundFoundIndexFound = false;\n       \
    \ bool foundSubstringFoundFoundFoundStart = false;\n        bool foundSubstringFoundFoundFoundEnd\
    \ = false;\n        bool foundSubstringFoundFoundLength = false;\n        bool\
    \ foundSubstringFoundFoundIndex = false;\n        bool foundSubstringFoundFoundFoundFound\
    \ = false;\n        bool foundSubstringFoundFoundStartFound = false;\n       \
    \ bool foundSubstringFoundFoundEndFound = false;\n        bool foundSubstringFoundFoundLengthFound\
    \ = false;\n        bool foundSubstringFoundFoundIndexFound = false;\n       \
    \ bool foundSubstringFoundFoundFoundStart = false;\n        bool foundSubstringFoundFoundFoundEnd\
    \ = false;\n        bool foundSubstringFoundFoundLength = false;\n        bool\
    \ foundSubstringFoundFoundIndex = false;\n        bool foundSubstringFoundFoundFoundFound\
    \ = false;\n        bool foundSubstringFoundFoundStartFound = false;\n       \
    \ bool foundSubstringFoundFoundEndFound = false;\n        bool foundSubstringFoundFoundLengthFound\
    \ = false;\n        bool foundSubstringFoundFoundIndexFound = false;\n       \
    \ bool found\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpnzfqt0ys.cs(73,19): error CS1002: ; expected

    '
  timestamp: 1659797681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += HowManyTimes(str.Substring(0,\
    \ str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1),\
    \ substring);\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"\
    x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += HowManyTimes(str.Substring(0,\
    \ str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1),\
    \ substring);\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"\
    x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                for (int i = 0; i < substring.Length;\
    \ i++) {\n                    if (c == substring[i]) {\n                     \
    \   count += HowManyTimes(str.Substring(i + 1, str.Length - i - 1), substring);\n\
    \                        break;\n                    }\n                }\n  \
    \          }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <871ffd35a74048888d3317a7b205ac31>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <871ffd35a74048888d3317a7b205ac31>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: startIndex cannot be larger than length of\
    \ string.\nParameter name: startIndex\n  at System.String.Substring (System.Int32\
    \ startIndex, System.Int32 length) [0x0001d] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x0009e] "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += 1;\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <59f7be8e352a481095ec8f3053f568f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <59f7be8e352a481095ec8f3053f568f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        if (str ==\
    \ null || substring == null)\n            throw new ArgumentNullException();\n\
    \        long count = 0;\n        long start = 0;\n        long end = 0;\n   \
    \     long length = 0;\n        bool found = false;\n        do {\n          \
    \  found = false;\n            start = str.IndexOf(substring, start);\n      \
    \      if (start == -1)\n                break;\n            end = str.IndexOf(substring,\
    \ start + 1);\n            if (end == -1)\n                end = str.Length;\n\
    \            length = end - start + 1;\n            count += length;\n       \
    \     found = true;\n            start++;\n        } while (found && start < str.Length);\n\
    \        return count;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpb3k_wo7o.cs(26,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpb3k_wo7o.cs(26,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpb3k_wo7o.cs(29,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpb3k_wo7o.cs(29,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659797681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        bool found = false;\n        bool overlap = false;\n        bool\
    \ foundOverlap = false;\n        bool foundStartOverlap = false;\n        bool\
    \ foundEndOverlap = false;\n        bool foundStartEndOverlap = false;\n     \
    \   bool foundStartEndOverlap2 = false;\n        bool foundStartOverlap2 = false;\n\
    \        bool foundEndOverlap2 = false;\n        bool foundStartEndOverlap3 =\
    \ false;\n        bool foundStartOverlap3 = false;\n        bool foundEndOverlap3\
    \ = false;\n        bool foundStartEndOverlap4 = false;\n        bool foundStartOverlap4\
    \ = false;\n        bool foundEndOverlap4 = false;\n        bool foundStartEndOverlap5\
    \ = false;\n        bool foundStartOverlap5 = false;\n        bool foundEndOverlap5\
    \ = false;\n        bool foundStartEndOverlap6 = false;\n        bool foundStartOverlap6\
    \ = false;\n        bool foundEndOverlap6 = false;\n        bool foundStartEndOverlap7\
    \ = false;\n        bool foundStartOverlap7 = false;\n        bool foundEndOverlap7\
    \ = false;\n        bool foundStartEndOverlap8 = false;\n        bool foundStartOverlap8\
    \ = false;\n        bool foundEndOverlap8 = false;\n        bool foundStartEndOverlap9\
    \ = false;\n        bool foundStartOverlap9 = false;\n        bool foundEndOverlap9\
    \ = false;\n        bool foundStartEndOverlap10 = false;\n        bool foundStartOverlap10\
    \ = false;\n        bool foundEndOverlap10 = false;\n        bool foundStartEndOverlap11\
    \ = false;\n        bool foundStartOverlap11 = false;\n        bool foundEndOverlap11\
    \ = false;\n        bool foundStartEndOverlap12 = false;\n        bool foundStartOverlap12\
    \ = false;\n        bool foundEndOverlap12 = false;\n        bool foundStartEndOverlap13\
    \ = false;\n        bool foundStartOverlap13 = false;\n        bool foundEndOverlap13\
    \ = false;\n        bool foundStartEndOverlap14 = false;\n        bool foundStartOverlap14\
    \ = false;\n        bool foundEndOverlap14 = false;\n        bool foundStartEndOverlap15\
    \ = false;\n        bool foundStartOverlap15 = false;\n        bool foundEndOverlap15\
    \ = false;\n        bool foundStartEndOverlap16 = false;\n        bool foundStartOverlap16\
    \ = false;\n        bool foundEndOverlap16 = false;\n        bool foundStartEndOverlap17\
    \ = false;\n        bool foundStartOverlap17 = false;\n        bool foundEndOverlap17\
    \ = false;\n        bool found\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfybkpbrr.cs(75,19): error CS1002: ; expected

    '
  timestamp: 1659797681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        bool found = false;\n        do {\n            found = false;\n\
    \            start = str.IndexOf(substring, start);\n            if (start ==\
    \ -1) {\n                break;\n            }\n            end = str.IndexOf(substring,\
    \ start + 1);\n            if (end == -1) {\n                end = str.Length;\n\
    \            }\n            length = end - start + 1;\n            count = count\
    \ + (length / substring.length);\n            found = true;\n            start++;\n\
    \        } while (found == true);\n        return count;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) ==\
    \ (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n  \
    \  Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwle3_gi_.cs(24,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpwle3_gi_.cs(24,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpwle3_gi_.cs(28,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpwle3_gi_.cs(28,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpwle3_gi_.cs(33,49): error CS1061: ''string'' does not contain a definition
    for ''length'' and no accessible extension method ''length'' accepting a first
    argument of type ''string'' could be found (are you missing a using directive
    or an assembly reference?)

    '
  timestamp: 1659797681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        bool found = false;\n        bool foundSub = false;\n        bool\
    \ foundSub2 = false;\n        bool foundSub3 = false;\n        bool foundSub4\
    \ = false;\n        bool foundSub5 = false;\n        bool foundSub6 = false;\n\
    \        bool foundSub7 = false;\n        bool foundSub8 = false;\n        bool\
    \ foundSub9 = false;\n        bool foundSub10 = false;\n        bool foundSub11\
    \ = false;\n        bool foundSub12 = false;\n        bool foundSub13 = false;\n\
    \        bool foundSub14 = false;\n        bool foundSub15 = false;\n        bool\
    \ foundSub16 = false;\n        bool foundSub17 = false;\n        bool foundSub18\
    \ = false;\n        bool foundSub19 = false;\n        bool foundSub20 = false;\n\
    \        bool foundSub21 = false;\n        bool foundSub22 = false;\n        bool\
    \ foundSub23 = false;\n        bool foundSub24 = false;\n        bool foundSub25\
    \ = false;\n        bool foundSub26 = false;\n        bool foundSub27 = false;\n\
    \        bool foundSub28 = false;\n        bool foundSub29 = false;\n        bool\
    \ foundSub30 = false;\n        bool foundSub31 = false;\n        bool foundSub32\
    \ = false;\n        bool foundSub33 = false;\n        bool foundSub34 = false;\n\
    \        bool foundSub35 = false;\n        bool foundSub36 = false;\n        bool\
    \ foundSub37 = false;\n        bool foundSub38 = false;\n        bool foundSub39\
    \ = false;\n        bool foundSub40 = false;\n        bool foundSub41 = false;\n\
    \        bool foundSub42 = false;\n        bool foundSub43 = false;\n        bool\
    \ foundSub44 = false;\n        bool foundSub45 = false;\n        bool foundSub46\
    \ = false;\n        bool foundSub47 = false;\n        bool foundSub48 = false;\n\
    \        bool foundSub49 = false;\n        bool foundSub50 = false;\n        bool\
    \ foundSub51 = false;\n        bool foundSub52 = false;\n        bool foundSub53\
    \ = false;\n        bool foundSub54 = false;\n        bool foundSub55 = false;\n\
    \        bool foundSub56 = false;\n        bool foundSub57 = false;\n        bool\
    \ foundSub58 = false;\n        bool foundSub59 = false;\n        bool foundSub60\
    \ = false;\n        bool foundSub61 = false;\n        bool foundSub62 = false;\n\
    \        bool foundSub63 = false;\n        bool foundSub64 = false;\n        bool\
    \ foundSub65 = false;\n        bool foundSub66 = false;\n        bool foundSub67\
    \ = false;\n        bool foundSub68 = false;\n\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprt2o6q60.cs(17,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(18,14): warning CS0219: The variable ''start'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(19,14): warning CS0219: The variable ''end'' is assigned but
    its value is never used

    /tmp/tmprt2o6q60.cs(20,14): warning CS0219: The variable ''length'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(21,14): warning CS0219: The variable ''found'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(22,14): warning CS0219: The variable ''foundSub'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(23,14): warning CS0219: The variable ''foundSub2'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(24,14): warning CS0219: The variable ''foundSub3'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(25,14): warning CS0219: The variable ''foundSub4'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(26,14): warning CS0219: The variable ''foundSub5'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(27,14): warning CS0219: The variable ''foundSub6'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(28,14): warning CS0219: The variable ''foundSub7'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(29,14): warning CS0219: The variable ''foundSub8'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(30,14): warning CS0219: The variable ''foundSub9'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(31,14): warning CS0219: The variable ''foundSub10'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(32,14): warning CS0219: The variable ''foundSub11'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(33,14): warning CS0219: The variable ''foundSub12'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(34,14): warning CS0219: The variable ''foundSub13'' is assigned
    but i'
  timestamp: 1659797681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ 0L);\n        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3d10d1ed0bb544e081788c3228d7a3be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3d10d1ed0bb544e081788c3228d7a3be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c)\
    \ != -1;\n        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0vs4acth.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ 0) > -1 ? 1 : 0;\n        }\n        return count;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) ==\
    \ (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n  \
    \  Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7459334f44b4476b967e6fce6d284a4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7459334f44b4476b967e6fce6d284a4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        bool found = false;\n        do {\n            found = false;\n\
    \            start = str.IndexOf(substring, start);\n            if (start ==\
    \ -1) {\n                break;\n            }\n            end = str.IndexOf(substring,\
    \ start + 1);\n            if (end == -1) {\n                end = str.Length;\n\
    \            }\n            length = end - start + 1;\n            count += length;\n\
    \            found = true;\n        } while (true);\n        return count;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzsnuu2g2.cs(24,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpzsnuu2g2.cs(24,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpzsnuu2g2.cs(28,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpzsnuu2g2.cs(28,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpzsnuu2g2.cs(21,14): warning CS0219: The variable ''found'' is assigned
    but its value is never used

    '
  timestamp: 1659797681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        bool found = false;\n        do {\n            found = false;\n\
    \            start = str.IndexOf(substring, start);\n            if (start ==\
    \ -1) {\n                break;\n            }\n            end = str.IndexOf(substring,\
    \ start + 1);\n            if (end == -1) {\n                end = str.Length;\n\
    \            }\n            length = end - start + 1;\n            if (length\
    \ == 0) {\n                found = true;\n            }\n            else {\n\
    \                count += length;\n            }\n            start++;\n     \
    \   } while (found);\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppl0038q7.cs(24,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmppl0038q7.cs(24,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmppl0038q7.cs(28,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmppl0038q7.cs(28,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659797681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <63c77b8082a440c1a4af61ee02019449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <63c77b8082a440c1a4af61ee02019449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += HowManyTimes(str.Substring(0,\
    \ str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1),\
    \ substring);\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"\
    x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ 0) > -1 ? 1 : 0;\n        }\n        return count;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) ==\
    \ (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n  \
    \  Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7459334f44b4476b967e6fce6d284a4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7459334f44b4476b967e6fce6d284a4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += HowManyTimes(str.Substring(0,\
    \ str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1),\
    \ substring);\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"\
    x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ str.Length - substring.Length);\n        }\n        return count;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32\
    \ startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String\
    \ str, System.String substring) [0x00023] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32\
    \ startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String\
    \ str, System.String substring) [0x00023] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n"
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ str.Length - substring.Length);\n        }\n        return count;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32\
    \ startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String\
    \ str, System.String substring) [0x00023] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32\
    \ startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String\
    \ str, System.String substring) [0x00023] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n"
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ 0) > -1 ? 1 : 0;\n        }\n        return count;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) ==\
    \ (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n  \
    \  Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7459334f44b4476b967e6fce6d284a4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7459334f44b4476b967e6fce6d284a4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ str.Length - substring.Length);\n        }\n        return count;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32\
    \ startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String\
    \ str, System.String substring) [0x00023] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32\
    \ startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String\
    \ str, System.String substring) [0x00023] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n"
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[1]) {\n                count\
    \ += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside\
    \ the bounds of the array.\n  at Problem.HowManyTimes (System.String str, System.String\
    \ substring) [0x00040] in <860418d000ed42f2be6ab5c278b334dc>:0 \n  at Problem.HowManyTimes\
    \ (System.String str, System.String substring) [0x00035] in <860418d000ed42f2be6ab5c278b334dc>:0\
    \ \n  at Problem.Main (System.String[] args) [0x0001a] in <860418d000ed42f2be6ab5c278b334dc>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index\
    \ was outside the bounds of the array.\n  at Problem.HowManyTimes (System.String\
    \ str, System.String substring) [0x00040] in <860418d000ed42f2be6ab5c278b334dc>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00035]\
    \ in <860418d000ed42f2be6ab5c278b334dc>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x0001a] in <860418d000ed42f2be6ab5c278b334dc>:0 \n"
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            if (str.Contains(c))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <270ec3f577c14409b2d25adde5637a4b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <270ec3f577c14409b2d25adde5637a4b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += HowManyTimes(str.Substring(0,\
    \ str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1),\
    \ substring);\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"\
    x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        long index = 0;\n        long currentIndex = 0;\n        bool found\
    \ = false;\n        bool startFound = false;\n        bool endFound = false;\n\
    \        bool foundStartIndex = false;\n        bool foundEndIndex = false;\n\
    \        bool foundStartIndex2 = false;\n        bool foundEndIndex2 = false;\n\
    \        bool foundStartIndex3 = false;\n        bool foundEndIndex3 = false;\n\
    \        bool foundStartIndex4 = false;\n        bool foundEndIndex4 = false;\n\
    \        bool foundStartIndex5 = false;\n        bool foundEndIndex5 = false;\n\
    \        bool foundStartIndex6 = false;\n        bool foundEndIndex6 = false;\n\
    \        bool foundStartIndex7 = false;\n        bool foundEndIndex7 = false;\n\
    \        bool foundStartIndex8 = false;\n        bool foundEndIndex8 = false;\n\
    \        bool foundStartIndex9 = false;\n        bool foundEndIndex9 = false;\n\
    \        bool foundStartIndex10 = false;\n        bool foundEndIndex10 = false;\n\
    \        bool foundStartIndex11 = false;\n        bool foundEndIndex11 = false;\n\
    \        bool foundStartIndex12 = false;\n        bool foundEndIndex12 = false;\n\
    \        bool foundStartIndex13 = false;\n        bool foundEndIndex13 = false;\n\
    \        bool foundStartIndex14 = false;\n        bool foundEndIndex14 = false;\n\
    \        bool foundStartIndex15 = false;\n        bool foundEndIndex15 = false;\n\
    \        bool foundStartIndex16 = false;\n        bool foundEndIndex16 = false;\n\
    \        bool foundStartIndex17 = false;\n        bool foundEndIndex17 = false;\n\
    \        bool foundStartIndex18 = false;\n        bool foundEndIndex18 = false;\n\
    \        bool foundStartIndex19 = false;\n        bool foundEndIndex19 = false;\n\
    \        bool foundStartIndex20 = false;\n        bool foundEndIndex20 = false;\n\
    \        bool foundStartIndex21 = false;\n        bool foundEndIndex21 = false;\n\
    \        bool foundStartIndex22 = false;\n        bool foundEndIndex22 = false;\n\
    \        bool foundStartIndex23 = false;\n        bool foundEndIndex23 = false;\n\
    \        bool foundStartIndex24 = false;\n        bool foundEndIndex24 = false;\n\
    \        bool foundStartIndex25 = false;\n        bool foundEndIndex25 = false;\n\
    \        bool foundStartIndex26 = false;\n        bool foundEndIndex26 = false;\n\
    \        bool foundStartIndex27 = false;\n        bool foundEndIndex27 = false;\n\
    \        bool foundStartIndex28 = false;\n        bool foundEndIndex28 = false;\n\
    \        bool foundStartIndex29 = false;\n        bool foundEndIndex29 = false;\n\
    \        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpp3ywedyu.cs(17,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmpp3ywedyu.cs(18,14): warning CS0219: The variable ''start'' is assigned
    but its value is never used

    /tmp/tmpp3ywedyu.cs(19,14): warning CS0219: The variable ''end'' is assigned but
    its value is never used

    /tmp/tmpp3ywedyu.cs(20,14): warning CS0219: The variable ''length'' is assigned
    but its value is never used

    /tmp/tmpp3ywedyu.cs(21,14): warning CS0219: The variable ''index'' is assigned
    but its value is never used

    /tmp/tmpp3ywedyu.cs(22,14): warning CS0219: The variable ''currentIndex'' is assigned
    but its value is never used

    /tmp/tmpp3ywedyu.cs(23,14): warning CS0219: The variable ''found'' is assigned
    but its value is never used

    /tmp/tmpp3ywedyu.cs(24,14): warning CS0219: The variable ''startFound'' is assigned
    but its value is never used

    /tmp/tmpp3ywedyu.cs(25,14): warning CS0219: The variable ''endFound'' is assigned
    but its value is never used

    /tmp/tmpp3ywedyu.cs(26,14): warning CS0219: The variable ''foundStartIndex'' is
    assigned but its value is never used

    /tmp/tmpp3ywedyu.cs(27,14): warning CS0219: The variable ''foundEndIndex'' is
    assigned but its value is never used

    /tmp/tmpp3ywedyu.cs(28,14): warning CS0219: The variable ''foundStartIndex2''
    is assigned but its value is never used

    /tmp/tmpp3ywedyu.cs(29,14): warning CS0219: The variable ''foundEndIndex2'' is
    assigned but its value is never used

    /tmp/tmpp3ywedyu.cs(30,14): warning CS0219: The variable ''foundStartIndex3''
    is assigned but its value is never used

    /tmp/tmpp3ywedyu.cs(31,14): warning CS0219: The variable ''foundEndIndex3'' is
    assigned but its value is never used

    /tmp/tmpp3ywedyu.cs(32,14): warning CS0219: The variable ''foundStartIndex4''
    is assigned but its value is never used

    /tmp/tmpp3ywedyu.cs(33,14): warning CS0219: The variable ''foundEndIndex4'' is
    assigned but its value is never used

    /tmp/tmpp3ywedyu.cs(34,14): warning CS0219: '
  timestamp: 1659797682
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += HowManyTimes(str.Substring(0,\
    \ str.Length - 1), substring) + HowManyTimes(str, substring);\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659797687
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ 0) - str.IndexOf(substring, 0);\n        }\n        return count;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f281fc466bd24f05aa76f283ef41f708>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f281fc466bd24f05aa76f283ef41f708>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        bool found = false;\n        bool foundSub = false;\n        bool\
    \ foundSub2 = false;\n        bool foundSub3 = false;\n        bool foundSub4\
    \ = false;\n        bool foundSub5 = false;\n        bool foundSub6 = false;\n\
    \        bool foundSub7 = false;\n        bool foundSub8 = false;\n        bool\
    \ foundSub9 = false;\n        bool foundSub10 = false;\n        bool foundSub11\
    \ = false;\n        bool foundSub12 = false;\n        bool foundSub13 = false;\n\
    \        bool foundSub14 = false;\n        bool foundSub15 = false;\n        bool\
    \ foundSub16 = false;\n        bool foundSub17 = false;\n        bool foundSub18\
    \ = false;\n        bool foundSub19 = false;\n        bool foundSub20 = false;\n\
    \        bool foundSub21 = false;\n        bool foundSub22 = false;\n        bool\
    \ foundSub23 = false;\n        bool foundSub24 = false;\n        bool foundSub25\
    \ = false;\n        bool foundSub26 = false;\n        bool foundSub27 = false;\n\
    \        bool foundSub28 = false;\n        bool foundSub29 = false;\n        bool\
    \ foundSub30 = false;\n        bool foundSub31 = false;\n        bool foundSub32\
    \ = false;\n        bool foundSub33 = false;\n        bool foundSub34 = false;\n\
    \        bool foundSub35 = false;\n        bool foundSub36 = false;\n        bool\
    \ foundSub37 = false;\n        bool foundSub38 = false;\n        bool foundSub39\
    \ = false;\n        bool foundSub40 = false;\n        bool foundSub41 = false;\n\
    \        bool foundSub42 = false;\n        bool foundSub43 = false;\n        bool\
    \ foundSub44 = false;\n        bool foundSub45 = false;\n        bool foundSub46\
    \ = false;\n        bool foundSub47 = false;\n        bool foundSub48 = false;\n\
    \        bool foundSub49 = false;\n        bool foundSub50 = false;\n        bool\
    \ foundSub51 = false;\n        bool foundSub52 = false;\n        bool foundSub53\
    \ = false;\n        bool foundSub54 = false;\n        bool foundSub55 = false;\n\
    \        bool foundSub56 = false;\n        bool foundSub57 = false;\n        bool\
    \ foundSub58 = false;\n        bool foundSub59 = false;\n        bool foundSub60\
    \ = false;\n        bool foundSub61 = false;\n        bool foundSub62 = false;\n\
    \        bool foundSub63 = false;\n        bool foundSub64 = false;\n        bool\
    \ foundSub65 = false;\n        bool foundSub66 = false;\n        bool foundSub67\
    \ = false;\n        bool foundSub68 = false;\n\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprt2o6q60.cs(17,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(18,14): warning CS0219: The variable ''start'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(19,14): warning CS0219: The variable ''end'' is assigned but
    its value is never used

    /tmp/tmprt2o6q60.cs(20,14): warning CS0219: The variable ''length'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(21,14): warning CS0219: The variable ''found'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(22,14): warning CS0219: The variable ''foundSub'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(23,14): warning CS0219: The variable ''foundSub2'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(24,14): warning CS0219: The variable ''foundSub3'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(25,14): warning CS0219: The variable ''foundSub4'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(26,14): warning CS0219: The variable ''foundSub5'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(27,14): warning CS0219: The variable ''foundSub6'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(28,14): warning CS0219: The variable ''foundSub7'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(29,14): warning CS0219: The variable ''foundSub8'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(30,14): warning CS0219: The variable ''foundSub9'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(31,14): warning CS0219: The variable ''foundSub10'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(32,14): warning CS0219: The variable ''foundSub11'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(33,14): warning CS0219: The variable ''foundSub12'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(34,14): warning CS0219: The variable ''foundSub13'' is assigned
    but i'
  timestamp: 1659797681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        long index = 0;\n        long current = 0;\n        bool found =\
    \ false;\n        do {\n            found = false;\n            index = str.IndexOf(substring,\
    \ start);\n            if (index != -1) {\n                length = end - start\
    \ + 1;\n                current = index;\n                found = true;\n    \
    \        }\n            start++;\n        } while (found == false && start < str.Length);\n\
    \        if (found == true) {\n            count++;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpecfi7fav.cs(26,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpecfi7fav.cs(26,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659797682
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += HowManyTimes(str.Substring(0,\
    \ str.Length - 1), substring) + HowManyTimes(str, substring);\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659797687
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += HowManyTimes(str.Substring(0,\
    \ str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1),\
    \ substring);\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"\
    x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        long index = 0;\n        bool found = false;\n        do {\n   \
    \         index = str.IndexOf(substring, start);\n            if (index == -1)\
    \ {\n                found = true;\n                break;\n            }\n  \
    \          end = index + 1;\n            length = end - start;\n            count\
    \ += length;\n            start = end + 1;\n        } while (index < str.Length);\n\
    \        return count;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdj7k61wy.cs(24,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpdj7k61wy.cs(24,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpdj7k61wy.cs(22,14): warning CS0219: The variable ''found'' is assigned
    but its value is never used

    '
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c)\
    \ != -1 ? 1 : 0;\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <814958133b324492bd42eb68d32db34b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <814958133b324492bd42eb68d32db34b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        if (str ==\
    \ null || substring == null)\n            throw new ArgumentNullException();\n\
    \        if (str.Length == 0)\n            return 0;\n        if (substring.Length\
    \ == 0)\n            return str.Length;\n        if (str.Length < substring.Length)\n\
    \            return 0;\n        long count = 0;\n        long start = 0;\n   \
    \     long end = str.Length - substring.Length;\n        while (start < end) {\n\
    \            long sub = str.IndexOf(substring, start);\n            if (sub ==\
    \ -1)\n                break;\n            count += sub;\n            start +=\
    \ sub;\n        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpmt2a13u7.cs(29,36): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpmt2a13u7.cs(29,47): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        long index = 0;\n        long index2 = 0;\n        long index3 =\
    \ 0;\n        long index4 = 0;\n        long index5 = 0;\n        long index6\
    \ = 0;\n        long index7 = 0;\n        long index8 = 0;\n        long index9\
    \ = 0;\n        long index10 = 0;\n        long index11 = 0;\n        long index12\
    \ = 0;\n        long index13 = 0;\n        long index14 = 0;\n        long index15\
    \ = 0;\n        long index16 = 0;\n        long index17 = 0;\n        long index18\
    \ = 0;\n        long index19 = 0;\n        long index20 = 0;\n        long index21\
    \ = 0;\n        long index22 = 0;\n        long index23 = 0;\n        long index24\
    \ = 0;\n        long index25 = 0;\n        long index26 = 0;\n        long index27\
    \ = 0;\n        long index28 = 0;\n        long index29 = 0;\n        long index30\
    \ = 0;\n        long index31 = 0;\n        long index32 = 0;\n        long index33\
    \ = 0;\n        long index34 = 0;\n        long index35 = 0;\n        long index36\
    \ = 0;\n        long index37 = 0;\n        long index38 = 0;\n        long index39\
    \ = 0;\n        long index40 = 0;\n        long index41 = 0;\n        long index42\
    \ = 0;\n        long index43 = 0;\n        long index44 = 0;\n        long index45\
    \ = 0;\n        long index46 = 0;\n        long index47 = 0;\n        long index48\
    \ = 0;\n        long index49 = 0;\n        long index50 = 0;\n        long index51\
    \ = 0;\n        long index52 = 0;\n        long index53 = 0;\n        long index54\
    \ = 0;\n        long index55 = 0;\n        long index56 = 0;\n        long index57\
    \ = 0;\n        long index58 = 0;\n        long index59 = 0;\n        long index60\
    \ = 0;\n        long index61 = 0;\n        long index62 = 0;\n        long index63\
    \ = 0;\n        long index64 = 0;\n        long index65 = 0;\n        long index66\
    \ = 0;\n        long index67 = 0;\n        long index68 = 0;\n        long index69\
    \ = 0;\n        long index70 = 0;\n        long index71 = 0;\n        long index72\
    \ = 0;\n        long index73 = 0;\n        long index74 = 0;\n        long index75\
    \ = 0;\n        long index76 = 0;\n        long index77 = 0;\n        long index78\
    \ = 0;\n        long index79 = 0;\n        long index80 = 0;\n        long index81\
    \ = 0;\n        long index82 = 0;\n        long index83 = 0;\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"\
    x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprmclc_pi.cs(17,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmprmclc_pi.cs(18,14): warning CS0219: The variable ''start'' is assigned
    but its value is never used

    /tmp/tmprmclc_pi.cs(19,14): warning CS0219: The variable ''end'' is assigned but
    its value is never used

    /tmp/tmprmclc_pi.cs(20,14): warning CS0219: The variable ''length'' is assigned
    but its value is never used

    /tmp/tmprmclc_pi.cs(21,14): warning CS0219: The variable ''index'' is assigned
    but its value is never used

    /tmp/tmprmclc_pi.cs(22,14): warning CS0219: The variable ''index2'' is assigned
    but its value is never used

    /tmp/tmprmclc_pi.cs(23,14): warning CS0219: The variable ''index3'' is assigned
    but its value is never used

    /tmp/tmprmclc_pi.cs(24,14): warning CS0219: The variable ''index4'' is assigned
    but its value is never used

    /tmp/tmprmclc_pi.cs(25,14): warning CS0219: The variable ''index5'' is assigned
    but its value is never used

    /tmp/tmprmclc_pi.cs(26,14): warning CS0219: The variable ''index6'' is assigned
    but its value is never used

    /tmp/tmprmclc_pi.cs(27,14): warning CS0219: The variable ''index7'' is assigned
    but its value is never used

    /tmp/tmprmclc_pi.cs(28,14): warning CS0219: The variable ''index8'' is assigned
    but its value is never used

    /tmp/tmprmclc_pi.cs(29,14): warning CS0219: The variable ''index9'' is assigned
    but its value is never used

    /tmp/tmprmclc_pi.cs(30,14): warning CS0219: The variable ''index10'' is assigned
    but its value is never used

    /tmp/tmprmclc_pi.cs(31,14): warning CS0219: The variable ''index11'' is assigned
    but its value is never used

    /tmp/tmprmclc_pi.cs(32,14): warning CS0219: The variable ''index12'' is assigned
    but its value is never used

    /tmp/tmprmclc_pi.cs(33,14): warning CS0219: The variable ''index13'' is assigned
    but its value is never used

    /tmp/tmprmclc_pi.cs(34,14): warning CS0219: The variable ''index14'' is assigned
    but its value is never used

    /tmp/tmprmclc_'
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            if (c == substring[substring.Length - 1]) {\n    \
    \            count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b006c32c0b6f4cf3a54087d174853457>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b006c32c0b6f4cf3a54087d174853457>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            if (c == substring[substring.Length - 1]) {\n    \
    \            count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b006c32c0b6f4cf3a54087d174853457>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b006c32c0b6f4cf3a54087d174853457>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ 0) - str.IndexOf(substring, 0);\n        }\n        return count;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f281fc466bd24f05aa76f283ef41f708>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f281fc466bd24f05aa76f283ef41f708>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            if (c == substring[substring.Length - 1]) {\n    \
    \            count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b006c32c0b6f4cf3a54087d174853457>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b006c32c0b6f4cf3a54087d174853457>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        if (string.IsNullOrEmpty(str)\
    \ || string.IsNullOrEmpty(substring)) {\n            return 0;\n        }\n  \
    \      long count = 0;\n        long start = 0;\n        long end = 0;\n     \
    \   long length = 0;\n        bool found = false;\n        bool first = true;\n\
    \        foreach (char c in str) {\n            if (first) {\n               \
    \ start = length;\n                first = false;\n            }\n           \
    \ if (c == substring[0]) {\n                length++;\n                if (length\
    \ == substring.Length) {\n                    found = true;\n                \
    \    break;\n                }\n            } else {\n                length =\
    \ 0;\n            }\n        }\n        if (found) {\n            end = length;\n\
    \        }\n        if (start == 0 && end == str.Length) {\n            count++;\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69303cc700b74cc081d248a0c14a922f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <69303cc700b74cc081d248a0c14a922f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += HowManyTimes(str.Substring(0,\
    \ str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1),\
    \ substring);\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"\
    x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ 0L);\n        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3d10d1ed0bb544e081788c3228d7a3be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3d10d1ed0bb544e081788c3228d7a3be>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        if (str ==\
    \ null || substring == null)\n            throw new ArgumentNullException();\n\
    \        if (str.Length == 0)\n            return 0;\n        if (substring.Length\
    \ == 0)\n            return str.Length;\n        long count = 0;\n        long\
    \ start = 0;\n        long end = 0;\n        bool found = false;\n        do {\n\
    \            start = str.IndexOf(substring, start);\n            if (start ==\
    \ -1)\n                break;\n            end = str.IndexOf(substring, start\
    \ + 1);\n            if (end == -1)\n                end = str.Length;\n     \
    \       count++;\n            found = true;\n        } while (end != -1 && !found);\n\
    \        return count;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppdcx8isq.cs(28,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmppdcx8isq.cs(28,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmppdcx8isq.cs(31,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmppdcx8isq.cs(31,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        if (str ==\
    \ null || substring == null) {\n            throw new ArgumentNullException();\n\
    \        }\n        long count = 0;\n        long start = 0;\n        long end\
    \ = 0;\n        long len = 0;\n        bool found = false;\n        do {\n   \
    \         found = false;\n            len = str.Length;\n            end = str.IndexOf(substring,\
    \ start);\n            if (end == -1) {\n                end = len;\n        \
    \    }\n            while (end != -1) {\n                count++;\n          \
    \      found = true;\n                start = end + 1;\n                end =\
    \ str.IndexOf(substring, start);\n                if (end == -1) {\n         \
    \           end = len;\n                }\n            }\n        } while (!found);\n\
    \        return count;\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpm263jlqq.cs(28,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpm263jlqq.cs(28,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpm263jlqq.cs(36,35): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpm263jlqq.cs(36,46): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        bool found = false;\n        bool foundStart = false;\n        bool\
    \ foundEnd = false;\n        bool foundSub = false;\n        bool foundSubStart\
    \ = false;\n        bool foundSubEnd = false;\n        bool foundSubSub = false;\n\
    \        bool foundSubSubStart = false;\n        bool foundSubSubEnd = false;\n\
    \        bool foundSubSubSub = false;\n        bool foundSubSubSubStart = false;\n\
    \        bool foundSubSubSubEnd = false;\n        bool foundSubSubSubSub = false;\n\
    \        bool foundSubSubSubSubStart = false;\n        bool foundSubSubSubSubEnd\
    \ = false;\n        bool foundSubSubSubSubSub = false;\n        bool foundSubSubSubSubSubStart\
    \ = false;\n        bool foundSubSubSubSubSubEnd = false;\n        bool foundSubSubSubSubSubSub\
    \ = false;\n        bool foundSubSubSubSubSubSubStart = false;\n        bool foundSubSubSubSubSubSubEnd\
    \ = false;\n        bool foundSubSubSubSubSubSubSub = false;\n        bool foundSubSubSubSubSubSubSubStart\
    \ = false;\n        bool foundSubSubSubSubSubSubSubEnd = false;\n        bool\
    \ foundSubSubSubSubSubSubSubSub = false;\n        bool foundSubSubSubSubSubSubSubStart\
    \ = false;\n        bool foundSubSubSubSubSubSubSubEnd = false;\n        bool\
    \ foundSubSubSubSubSubSubSubSub = false;\n        bool foundSubSubSubSubSubSubSubStart\
    \ = false;\n        bool foundSubSubSubSubSubSubSubEnd = false;\n        bool\
    \ foundSubSubSubSubSubSubSubSub = false;\n        bool foundSubSubSubSubSubSubSubStart\
    \ = false;\n        bool foundSubSubSubSubSubSubSubEnd = false;\n        bool\
    \ foundSubSubSubSubSubSubSubSub = false;\n        bool foundSubSubSubSubSubSubSubStart\
    \ = false;\n        bool foundSubSubSubSubSubSubSubEnd = false;\n        bool\
    \ foundSubSubSubSubSubSubSubSub = false;\n        bool foundSubSubSubSubSubSubSubStart\
    \ = false;\n        bool foundSubSubSubSubSubSubSubEnd = false;\n        bool\
    \ foundSubSubSubSubSubSubSubSub = false;\n        bool foundSubSubSubSubSubSubSubStart\
    \ = false;\n        bool foundSubSubSubSubSubSubSubEnd = false;\n        bool\
    \ foundSubSubSubSubSubSubSubSub = false;\n        bool foundSubSubSubSubSubSubSubStart\
    \ = false;\n        bool foundSubSubSubSubSubSubSubEnd = false;\n\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"\
    ), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) ==\
    \ (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp44hyhovo.cs(46,14): error CS0128: A local variable or function named ''foundSubSubSubSubSubSubSubStart''
    is already defined in this scope

    /tmp/tmp44hyhovo.cs(47,14): error CS0128: A local variable or function named ''foundSubSubSubSubSubSubSubEnd''
    is already defined in this scope

    /tmp/tmp44hyhovo.cs(48,14): error CS0128: A local variable or function named ''foundSubSubSubSubSubSubSubSub''
    is already defined in this scope

    /tmp/tmp44hyhovo.cs(49,14): error CS0128: A local variable or function named ''foundSubSubSubSubSubSubSubStart''
    is already defined in this scope

    /tmp/tmp44hyhovo.cs(50,14): error CS0128: A local variable or function named ''foundSubSubSubSubSubSubSubEnd''
    is already defined in this scope

    /tmp/tmp44hyhovo.cs(51,14): error CS0128: A local variable or function named ''foundSubSubSubSubSubSubSubSub''
    is already defined in this scope

    /tmp/tmp44hyhovo.cs(52,14): error CS0128: A local variable or function named ''foundSubSubSubSubSubSubSubStart''
    is already defined in this scope

    /tmp/tmp44hyhovo.cs(53,14): error CS0128: A local variable or function named ''foundSubSubSubSubSubSubSubEnd''
    is already defined in this scope

    /tmp/tmp44hyhovo.cs(54,14): error CS0128: A local variable or function named ''foundSubSubSubSubSubSubSubSub''
    is already defined in this scope

    /tmp/tmp44hyhovo.cs(55,14): error CS0128: A local variable or function named ''foundSubSubSubSubSubSubSubStart''
    is already defined in this scope

    /tmp/tmp44hyhovo.cs(56,14): error CS0128: A local variable or function named ''foundSubSubSubSubSubSubSubEnd''
    is already defined in this scope

    /tmp/tmp44hyhovo.cs(57,14): error CS0128: A local variable or function named ''foundSubSubSubSubSubSubSubSub''
    is already defined in this scope

    /tmp/tmp44hyhovo.cs(58,14): error CS0128: A local variable or function named ''foundSubSubSubSubSubSubSubStart''
    is already defined in this scope

    /tmp/tmp44hyhovo.cs(59,14): error CS0128: A local variable or fun'
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        bool found = false;\n        bool foundStart = false;\n        bool\
    \ foundEnd = false;\n        bool foundLength = false;\n        bool foundSub\
    \ = false;\n        bool foundSubStart = false;\n        bool foundSubEnd = false;\n\
    \        bool foundSubLength = false;\n        bool foundSubSub = false;\n   \
    \     bool foundSubSubStart = false;\n        bool foundSubSubEnd = false;\n \
    \       bool foundSubSubLength = false;\n        bool foundSubSubSub = false;\n\
    \        bool foundSubSubSubStart = false;\n        bool foundSubSubSubEnd = false;\n\
    \        bool foundSubSubSubLength = false;\n        bool foundSubSubSubSub =\
    \ false;\n        bool foundSubSubSubSubStart = false;\n        bool foundSubSubSubSubEnd\
    \ = false;\n        bool foundSubSubSubSubLength = false;\n        bool foundSubSubSubSubSub\
    \ = false;\n        bool foundSubSubSubSubStart = false;\n        bool foundSubSubSubSubEnd\
    \ = false;\n        bool foundSubSubSubSubLength = false;\n        bool foundSubSubSubSubSub\
    \ = false;\n        bool foundSubSubSubSubStart = false;\n        bool foundSubSubSubSubEnd\
    \ = false;\n        bool foundSubSubSubSubLength = false;\n        bool foundSubSubSubSubSub\
    \ = false;\n        bool foundSubSubSubSubStart = false;\n        bool foundSubSubSubSubEnd\
    \ = false;\n        bool foundSubSubSubSubLength = false;\n        bool foundSubSubSubSubSub\
    \ = false;\n        bool foundSubSubSubSubStart = false;\n        bool foundSubSubSubSubEnd\
    \ = false;\n        bool foundSubSubSubSubLength = false;\n        bool foundSubSubSubSubSub\
    \ = false;\n        bool foundSubSubSubSubStart = false;\n        bool foundSubSubSubSubEnd\
    \ = false;\n        bool foundSubSubSubSubLength = false;\n        bool foundSubSubSubSubSub\
    \ = false;\n        bool foundSubSubSubSubStart = false;\n        bool foundSubSubSubSubEnd\
    \ = false;\n        bool foundSubSubSubSubLength = false;\n        bool foundSubSubSubSubSub\
    \ = false;\n        bool foundSubSubSubSubStart = false;\n        bool foundSubSubSubSubEnd\
    \ = false;\n        bool foundSubSubSubSubLength = false;\n        bool foundSubSubSubSubSub\
    \ = false;\n        bool foundSubSubSubSubStart = false;\n        bool foundSubSubSubSubEnd\
    \ = false;\n        bool foundSubSubSubSubLength = false;\n        bool foundSubSubSubSubSub\
    \ = false;\n        bool foundSubSubSubSubStart = \n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpcn9iuyng.cs(74,38): error CS1525: Invalid expression term ''}''

    /tmp/tmpcn9iuyng.cs(74,38): error CS1002: ; expected

    '
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long start2 =\
    \ 0;\n        long end2 = 0;\n        bool found = false;\n        bool found2\
    \ = false;\n        bool found3 = false;\n        bool found4 = false;\n     \
    \   bool found5 = false;\n        bool found6 = false;\n        bool found7 =\
    \ false;\n        bool found8 = false;\n        bool found9 = false;\n       \
    \ bool found10 = false;\n        bool found11 = false;\n        bool found12 =\
    \ false;\n        bool found13 = false;\n        bool found14 = false;\n     \
    \   bool found15 = false;\n        bool found16 = false;\n        bool found17\
    \ = false;\n        bool found18 = false;\n        bool found19 = false;\n   \
    \     bool found20 = false;\n        bool found21 = false;\n        bool found22\
    \ = false;\n        bool found23 = false;\n        bool found24 = false;\n   \
    \     bool found25 = false;\n        bool found26 = false;\n        bool found27\
    \ = false;\n        bool found28 = false;\n        bool found29 = false;\n   \
    \     bool found30 = false;\n        bool found31 = false;\n        bool found32\
    \ = false;\n        bool found33 = false;\n        bool found34 = false;\n   \
    \     bool found35 = false;\n        bool found36 = false;\n        bool found37\
    \ = false;\n        bool found38 = false;\n        bool found39 = false;\n   \
    \     bool found40 = false;\n        bool found41 = false;\n        bool found42\
    \ = false;\n        bool found43 = false;\n        bool found44 = false;\n   \
    \     bool found45 = false;\n        bool found46 = false;\n        bool found47\
    \ = false;\n        bool found48 = false;\n        bool found49 = false;\n   \
    \     bool found50 = false;\n        bool found51 = false;\n        bool found52\
    \ = false;\n        bool found53 = false;\n        bool found54 = false;\n   \
    \     bool found55 = false;\n        bool found56 = false;\n        bool found57\
    \ = false;\n        bool found58 = false;\n        bool found59 = false;\n   \
    \     bool found60 = false;\n        bool found61 = false;\n        bool found62\
    \ = false;\n        bool found63 = false;\n        bool found64 = false;\n   \
    \     bool found65 = false;\n        bool found66 = false;\n        bool found67\
    \ = false;\n        bool found68 = false;\n        bool found69 = false;\n   \
    \     bool found70 = false;\n        bool found71 = false;\n        bool found72\
    \ = false;\n        bool found73 = false;\n        bool found74 = false;\n   \
    \     bool found75 = false;\n        bool found76 = false;\n        bool found77\
    \ = false;\n        bool found78 = false;\n        bool found79\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"\
    x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpr727ikxm.cs(100,21): error CS1002: ; expected

    '
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        bool found = false;\n        bool startFound = false;\n        bool\
    \ endFound = false;\n        bool lengthFound = false;\n        bool foundStartFound\
    \ = false;\n        bool foundEndFound = false;\n        bool foundLengthFound\
    \ = false;\n        bool foundStartFoundEndFound = false;\n        bool foundStartFoundLengthFound\
    \ = false;\n        bool foundEndFoundLengthFound = false;\n        bool foundLengthFoundStartFound\
    \ = false;\n        bool foundLengthFoundEndFound = false;\n        bool foundLengthFoundStartFoundEndFound\
    \ = false;\n        bool foundLengthFoundEndFoundStartFound = false;\n       \
    \ bool foundLengthFoundStartFoundEndFoundLengthFound = false;\n        bool foundLengthFoundEndFoundStartFoundLengthFound\
    \ = false;\n        bool foundLengthFoundStartFoundEndFoundLengthFoundStartFound\
    \ = false;\n        bool foundLengthFoundEndFoundStartFoundLengthFoundEndFound\
    \ = false;\n        bool foundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFound\
    \ = false;\n        bool foundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFound\
    \ = false;\n        bool foundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFoundStartFound\
    \ = false;\n        bool foundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFound\
    \ = false;\n        bool foundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFoundStartFound\
    \ = false;\n        bool foundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFound\
    \ = false;\n        bool foundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFound\
    \ = false;\n        bool foundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFound\
    \ = false;\n        bool foundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFoundStartFound\
    \ = false;\n        bool foundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFound\
    \ = false;\n        bool foundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFound\
    \ = false;\n        bool foundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFoundLengthFoundStartFoundEndFound\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq_z00afy.cs(50,106): error CS1002: ; expected

    '
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        bool found = false;\n        bool startFound = false;\n        bool\
    \ endFound = false;\n        bool lengthFound = false;\n        bool foundStartFound\
    \ = false;\n        bool foundEndFound = false;\n        bool foundLengthFound\
    \ = false;\n        bool foundStartFoundEndFound = false;\n        bool foundStartFoundLengthFound\
    \ = false;\n        bool foundEndFoundLengthFound = false;\n        bool foundLengthFoundStartFound\
    \ = false;\n        bool foundLengthFoundEndFound = false;\n        bool foundLengthFoundStartFoundEndFound\
    \ = false;\n        bool foundLengthFoundStartFoundLengthFound = false;\n    \
    \    bool foundLengthFoundEndFoundLengthFound = false;\n        bool foundLengthFoundLengthFoundStartFound\
    \ = false;\n        bool foundLengthFoundLengthFoundEndFound = false;\n      \
    \  bool foundLengthFoundLengthFoundStartFoundEndFound = false;\n        bool foundLengthFoundLengthFoundStartFoundLengthFound\
    \ = false;\n        bool foundLengthFoundLengthFoundEndFoundLengthFound = false;\n\
    \        bool foundLengthFoundLengthFoundLengthFoundStartFound = false;\n    \
    \    bool foundLengthFoundLengthFoundLengthFoundEndFound = false;\n        bool\
    \ foundLengthFoundLengthFoundLengthFoundStartFoundEndFound = false;\n        bool\
    \ foundLengthFoundLengthFoundLengthFoundStartFoundLengthFound = false;\n     \
    \   bool foundLengthFoundLengthFoundLengthFoundEndFoundLengthFound = false;\n\
    \        bool foundLengthFoundLengthFoundLengthFoundLengthFoundStartFound = false;\n\
    \        bool foundLengthFoundLengthFoundLengthFoundLengthFoundEndFound = false;\n\
    \        bool foundLengthFoundLengthFoundLengthFoundLengthFoundStartFound = false;\n\
    \        bool foundLengthFoundLengthFoundLengthFoundLengthFoundEndFound = false;\n\
    \        bool foundLengthFoundLengthFoundLengthFoundLengthFoundLengthFound = false;\n\
    \        bool foundLengthFoundLengthFoundLengthFoundLengthFoundLengthFound = false;\n\
    \        bool foundLengthFoundLengthFoundLengthFoundLengthFoundLengthFoundLengthFound\
    \ = false;\n        bool foundLengthFoundLengthFoundLengthFoundLengthFoundLengthFoundLengthFound\
    \ = false;\n        bool foundLengthFoundLengthFoundLengthFoundLengthFoundLengthFoundLengthFound\
    \ = false;\n        bool foundLengthFoundLengthFoundLengthFoundLengthFoundLengthFoundLengthFound\
    \ = false;\n        bool foundLengthFoundLengthFoundLengthFoundLengthFoundLengthFoundLengthFound\
    \ = false;\n        bool foundLengthFoundLengthFoundLengthFoundLengthFoundLengthFoundLengthFound\
    \ = false;\n        bool foundLengthFoundLengthFoundLengthFoundLengthFoundLengthFoundLengthFound\
    \ = false;\n        bool foundLengthFoundLengthFoundLengthFoundLengthFoundLengthFoundLengthFound\
    \ = false;\n        bool foundLengthFoundLengthFoundLengthFoundLengthFoundLengthFound\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpyg4kkpap.cs(60,74): error CS1002: ; expected

    '
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ str.Length - substring.Length);\n        }\n        return count;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32\
    \ startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String\
    \ str, System.String substring) [0x00023] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32\
    \ startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String\
    \ str, System.String substring) [0x00023] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n"
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += HowManyTimes(str.Substring(0,\
    \ str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1),\
    \ substring);\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"\
    x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        if (str ==\
    \ null || substring == null)\n            throw new ArgumentNullException();\n\
    \        if (str.Length == 0)\n            return 0;\n        if (substring.Length\
    \ == 0)\n            return str.Length;\n        long count = 0;\n        long\
    \ start = 0;\n        long end = 0;\n        bool found = false;\n        do {\n\
    \            start = str.IndexOf(substring, start);\n            if (start ==\
    \ -1)\n                break;\n            end = str.IndexOf(substring, start\
    \ + 1);\n            if (end == -1)\n                end = str.Length;\n     \
    \       count += end - start;\n            found = true;\n        } while (end\
    \ != str.Length);\n        if (!found)\n            throw new ArgumentException(\"\
    substring not found\");\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp27ahjhoy.cs(28,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmp27ahjhoy.cs(28,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmp27ahjhoy.cs(31,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmp27ahjhoy.cs(31,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ str.Length - substring.Length);\n        }\n        return count;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32\
    \ startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String\
    \ str, System.String substring) [0x00023] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32\
    \ startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String\
    \ str, System.String substring) [0x00023] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n"
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            if (c == substring[substring.Length - 1]) {\n    \
    \            count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b006c32c0b6f4cf3a54087d174853457>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b006c32c0b6f4cf3a54087d174853457>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: -1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += HowManyTimes(str.Substring(0,\
    \ str.Length - 1), substring) + HowManyTimes(str, substring);\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: Timeout
  stderr: ''
  stdout: None
  timestamp: 1659797687
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ 0) > -1 ? 1 : 0;\n        }\n        return count;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) ==\
    \ (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n  \
    \  Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7459334f44b4476b967e6fce6d284a4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7459334f44b4476b967e6fce6d284a4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += HowManyTimes(str.Substring(0,\
    \ str.Length - 1), substring) + HowManyTimes(str.Substring(1), substring);\n \
    \           }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <32d545b7ca2941889fd1bd9dc73230a8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <32d545b7ca2941889fd1bd9dc73230a8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797683
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long len = str.Length;\n\
    \        long sublen = substring.Length;\n        long maxlen = Math.Min(len,\
    \ sublen);\n        long mid = maxlen / 2;\n        while (start < maxlen) {\n\
    \            end = str.IndexOf(substring, start);\n            if (end == -1)\
    \ {\n                end = maxlen;\n            }\n            count += end -\
    \ start;\n            start = end + 1;\n        }\n        return count;\n   \
    \ }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_net3jnw.cs(25,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmp_net3jnw.cs(25,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <63c77b8082a440c1a4af61ee02019449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <63c77b8082a440c1a4af61ee02019449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                for (int i = 0; i < substring.Length;\
    \ i++) {\n                    if (c == substring[i]) {\n                     \
    \   count += HowManyTimes(str.Substring(i + 1), substring);\n                \
    \    }\n                }\n            }\n        }\n        return count;\n \
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e899f4fac83144c29de1038e7f4eb87c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e899f4fac83144c29de1038e7f4eb87c>:0 \n\nUnhandled Exception:\n\
    System.ArgumentOutOfRangeException: startIndex cannot be larger than length of\
    \ string.\nParameter name: startIndex\n  at System.String.Substring (System.Int32\
    \ startIndex, System.Int32 length) [0x0001d] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.String.Substring (System.Int32 startIndex) [0x00008] in <aa5dff9b31c6"
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <63c77b8082a440c1a4af61ee02019449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <63c77b8082a440c1a4af61ee02019449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += HowManyTimes(str.Substring(0,\
    \ str.Length - 1), substring) + HowManyTimes(str.Substring(1), substring);\n \
    \           }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <32d545b7ca2941889fd1bd9dc73230a8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <32d545b7ca2941889fd1bd9dc73230a8>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797683
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ str.Length - substring.Length);\n        }\n        return count;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32\
    \ startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String\
    \ str, System.String substring) [0x00023] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32\
    \ startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String\
    \ str, System.String substring) [0x00023] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n"
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            if (str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0)\n                count++;\n      \
    \  }\n        return count;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6233ee758cca4a18903ca752fa24ee84>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6233ee758cca4a18903ca752fa24ee84>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        if (string.IsNullOrEmpty(str)\
    \ || string.IsNullOrEmpty(substring)) {\n            return 0;\n        }\n  \
    \      long count = 0;\n        long start = 0;\n        long end = 0;\n     \
    \   long current = 0;\n        long previous = 0;\n        bool found = false;\n\
    \        bool first = true;\n        bool last = true;\n        bool firstLast\
    \ = true;\n        bool lastFirst = true;\n        bool firstLastLast = true;\n\
    \        bool lastFirstLast = true;\n        bool firstLastFirst = true;\n   \
    \     bool lastFirstFirst = true;\n        bool firstLastLastFirst = true;\n \
    \       bool lastFirstLastFirst = true;\n        bool firstLastLastLast = true;\n\
    \        bool lastFirstLastLast = true;\n        bool firstLastFirstLast = true;\n\
    \        bool lastFirstFirstLast = true;\n        bool firstLastLastFirst = true;\n\
    \        bool lastFirstLastFirst = true;\n        bool firstLastLastLast = true;\n\
    \        bool lastFirstLastLast = true;\n        bool firstLastFirstLast = true;\n\
    \        bool lastFirstFirstLast = true;\n        bool firstLastLastFirst = true;\n\
    \        bool lastFirstLastFirst = true;\n        bool firstLastLastLast = true;\n\
    \        bool lastFirstLastLast = true;\n        bool firstLastFirstLast = true;\n\
    \        bool lastFirstFirstLast = true;\n        bool firstLastLastFirst = true;\n\
    \        bool lastFirstLastFirst = true;\n        bool firstLastLastLast = true;\n\
    \        bool lastFirstLastLast = true;\n        bool firstLastFirstLast = true;\n\
    \        bool lastFirstFirstLast = true;\n        bool firstLastLastFirst = true;\n\
    \        bool lastFirstLastFirst = true;\n        bool firstLastLastLast = true;\n\
    \        bool lastFirstLastLast = true;\n        bool firstLastFirstLast = true;\n\
    \        bool lastFirstFirstLast = true;\n        bool firstLastLastFirst = true;\n\
    \        bool lastFirstLastFirst = true;\n        bool firstLastLastLast = true;\n\
    \        bool lastFirstLastLast = true;\n        bool firstLastFirstLast = true;\n\
    \        bool lastFirstFirstLast = true;\n        bool firstLastLastFirst = true;\n\
    \        bool lastFirstLastFirst = true;\n        bool firstLastLastLast = true;\n\
    \        bool lastFirstLastLast = true;\n        bool firstLastFirstLast = true;\n\
    \        bool lastFirstFirstLast = true;\n        bool firstLastLastFirst = true;\n\
    \        bool lastFirstLastFirst = true;\n        bool firstLastLastLast = true;\n\
    \        bool lastFirstLastLast = true;\n        bool firstLastFirstLast = true;\n\
    \        bool lastFirstFirstLast = true;\n        bool firstLastLastFirst = true;\n\
    \        bool lastFirstLastFirst = true;\n        bool firstLastLastLast = true;\n\
    \        bool last\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwdqlnxo6.cs(85,18): error CS1002: ; expected

    '
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c)\
    \ != -1 ? 1 : 0;\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <814958133b324492bd42eb68d32db34b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <814958133b324492bd42eb68d32db34b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c)\
    \ != -1 ? 1 : 0;\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <814958133b324492bd42eb68d32db34b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <814958133b324492bd42eb68d32db34b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[1]) {\n                count\
    \ += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n            }\n\
    \        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside\
    \ the bounds of the array.\n  at Problem.HowManyTimes (System.String str, System.String\
    \ substring) [0x00040] in <860418d000ed42f2be6ab5c278b334dc>:0 \n  at Problem.HowManyTimes\
    \ (System.String str, System.String substring) [0x00035] in <860418d000ed42f2be6ab5c278b334dc>:0\
    \ \n  at Problem.Main (System.String[] args) [0x0001a] in <860418d000ed42f2be6ab5c278b334dc>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index\
    \ was outside the bounds of the array.\n  at Problem.HowManyTimes (System.String\
    \ str, System.String substring) [0x00040] in <860418d000ed42f2be6ab5c278b334dc>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00035]\
    \ in <860418d000ed42f2be6ab5c278b334dc>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x0001a] in <860418d000ed42f2be6ab5c278b334dc>:0 \n"
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += HowManyTimes(str.Substring(0,\
    \ str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1),\
    \ substring);\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"\
    x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            if (str.Contains(c))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <270ec3f577c14409b2d25adde5637a4b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <270ec3f577c14409b2d25adde5637a4b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            if (c == substring[substring.Length - 1]) {\n    \
    \            count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b006c32c0b6f4cf3a54087d174853457>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b006c32c0b6f4cf3a54087d174853457>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        long index = 0;\n        long length2 = 0;\n        long index2\
    \ = 0;\n        bool found = false;\n        bool found2 = false;\n        bool\
    \ found3 = false;\n        bool found4 = false;\n        bool found5 = false;\n\
    \        bool found6 = false;\n        bool found7 = false;\n        bool found8\
    \ = false;\n        bool found9 = false;\n        bool found10 = false;\n    \
    \    bool found11 = false;\n        bool found12 = false;\n        bool found13\
    \ = false;\n        bool found14 = false;\n        bool found15 = false;\n   \
    \     bool found16 = false;\n        bool found17 = false;\n        bool found18\
    \ = false;\n        bool found19 = false;\n        bool found20 = false;\n   \
    \     bool found21 = false;\n        bool found22 = false;\n        bool found23\
    \ = false;\n        bool found24 = false;\n        bool found25 = false;\n   \
    \     bool found26 = false;\n        bool found27 = false;\n        bool found28\
    \ = false;\n        bool found29 = false;\n        bool found30 = false;\n   \
    \     bool found31 = false;\n        bool found32 = false;\n        bool found33\
    \ = false;\n        bool found34 = false;\n        bool found35 = false;\n   \
    \     bool found36 = false;\n        bool found37 = false;\n        bool found38\
    \ = false;\n        bool found39 = false;\n        bool found40 = false;\n   \
    \     bool found41 = false;\n        bool found42 = false;\n        bool found43\
    \ = false;\n        bool found44 = false;\n        bool found45 = false;\n   \
    \     bool found46 = false;\n        bool found47 = false;\n        bool found48\
    \ = false;\n        bool found49 = false;\n        bool found50 = false;\n   \
    \     bool found51 = false;\n        bool found52 = false;\n        bool found53\
    \ = false;\n        bool found54 = false;\n        bool found55 = false;\n   \
    \     bool found56 = false;\n        bool found57 = false;\n        bool found58\
    \ = false;\n        bool found59 = false;\n        bool found60 = false;\n   \
    \     bool found61 = false;\n        bool found62 = false;\n        bool found63\
    \ = false;\n        bool found64 = false;\n        bool found65 = false;\n   \
    \     bool found66 = false;\n        bool found67 = false;\n        bool found68\
    \ = false;\n        bool found69 = false;\n        bool found70 = false;\n   \
    \     bool found71 = false;\n        bool found72 = false;\n        bool found73\
    \ = false;\n        bool found74 = false;\n        bool found75 = false;\n   \
    \     bool found76 = false;\n        bool found77 = false;\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"\
    x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw5qc0s61.cs(17,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmpw5qc0s61.cs(18,14): warning CS0219: The variable ''start'' is assigned
    but its value is never used

    /tmp/tmpw5qc0s61.cs(19,14): warning CS0219: The variable ''end'' is assigned but
    its value is never used

    /tmp/tmpw5qc0s61.cs(20,14): warning CS0219: The variable ''length'' is assigned
    but its value is never used

    /tmp/tmpw5qc0s61.cs(21,14): warning CS0219: The variable ''index'' is assigned
    but its value is never used

    /tmp/tmpw5qc0s61.cs(22,14): warning CS0219: The variable ''length2'' is assigned
    but its value is never used

    /tmp/tmpw5qc0s61.cs(23,14): warning CS0219: The variable ''index2'' is assigned
    but its value is never used

    /tmp/tmpw5qc0s61.cs(24,14): warning CS0219: The variable ''found'' is assigned
    but its value is never used

    /tmp/tmpw5qc0s61.cs(25,14): warning CS0219: The variable ''found2'' is assigned
    but its value is never used

    /tmp/tmpw5qc0s61.cs(26,14): warning CS0219: The variable ''found3'' is assigned
    but its value is never used

    /tmp/tmpw5qc0s61.cs(27,14): warning CS0219: The variable ''found4'' is assigned
    but its value is never used

    /tmp/tmpw5qc0s61.cs(28,14): warning CS0219: The variable ''found5'' is assigned
    but its value is never used

    /tmp/tmpw5qc0s61.cs(29,14): warning CS0219: The variable ''found6'' is assigned
    but its value is never used

    /tmp/tmpw5qc0s61.cs(30,14): warning CS0219: The variable ''found7'' is assigned
    but its value is never used

    /tmp/tmpw5qc0s61.cs(31,14): warning CS0219: The variable ''found8'' is assigned
    but its value is never used

    /tmp/tmpw5qc0s61.cs(32,14): warning CS0219: The variable ''found9'' is assigned
    but its value is never used

    /tmp/tmpw5qc0s61.cs(33,14): warning CS0219: The variable ''found10'' is assigned
    but its value is never used

    /tmp/tmpw5qc0s61.cs(34,14): warning CS0219: The variable ''found11'' is assigned
    but its value is never used

    /tmp/tmpw5qc0s61.'
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ str.Length - substring.Length);\n        }\n        return count;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32\
    \ startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String\
    \ str, System.String substring) [0x00023] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32\
    \ startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String\
    \ str, System.String substring) [0x00023] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n"
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        long index = 0;\n        bool found = false;\n        do {\n   \
    \         index = str.IndexOf(substring, start);\n            if (index == -1)\
    \ {\n                break;\n            }\n            found = true;\n      \
    \      end = index + 1;\n            length = end - start;\n            count\
    \ += length;\n            start = end + 1;\n        } while (true);\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp83f4xx_a.cs(24,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmp83f4xx_a.cs(24,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmp83f4xx_a.cs(22,14): warning CS0219: The variable ''found'' is assigned
    but its value is never used

    '
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += HowManyTimes(str.Substring(0,\
    \ str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1),\
    \ substring);\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"\
    x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c)\
    \ != -1 ? 1 : 0;\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <814958133b324492bd42eb68d32db34b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <814958133b324492bd42eb68d32db34b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c)\
    \ != -1;\n        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp0vs4acth.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += HowManyTimes(str.Substring(0,\
    \ str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1),\
    \ substring);\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"\
    x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += HowManyTimes(str.Substring(0,\
    \ str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1),\
    \ substring);\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"\
    x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ 0) > -1 ? 1 : 0;\n        }\n        return count;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) ==\
    \ (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n  \
    \  Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7459334f44b4476b967e6fce6d284a4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7459334f44b4476b967e6fce6d284a4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c)\
    \ != -1 ? 1 : 0;\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <814958133b324492bd42eb68d32db34b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <814958133b324492bd42eb68d32db34b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c)\
    \ + 1;\n        }\n        return count;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9a9fa1703e6e4fcf8a79d783697a21f3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9a9fa1703e6e4fcf8a79d783697a21f3>:0 \n"
  stdout: ''
  timestamp: 1659797683
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            if (str.Contains(c))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <270ec3f577c14409b2d25adde5637a4b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <270ec3f577c14409b2d25adde5637a4b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        bool found = false;\n        bool foundSub = false;\n        bool\
    \ foundSub2 = false;\n        bool foundSub3 = false;\n        bool foundSub4\
    \ = false;\n        bool foundSub5 = false;\n        bool foundSub6 = false;\n\
    \        bool foundSub7 = false;\n        bool foundSub8 = false;\n        bool\
    \ foundSub9 = false;\n        bool foundSub10 = false;\n        bool foundSub11\
    \ = false;\n        bool foundSub12 = false;\n        bool foundSub13 = false;\n\
    \        bool foundSub14 = false;\n        bool foundSub15 = false;\n        bool\
    \ foundSub16 = false;\n        bool foundSub17 = false;\n        bool foundSub18\
    \ = false;\n        bool foundSub19 = false;\n        bool foundSub20 = false;\n\
    \        bool foundSub21 = false;\n        bool foundSub22 = false;\n        bool\
    \ foundSub23 = false;\n        bool foundSub24 = false;\n        bool foundSub25\
    \ = false;\n        bool foundSub26 = false;\n        bool foundSub27 = false;\n\
    \        bool foundSub28 = false;\n        bool foundSub29 = false;\n        bool\
    \ foundSub30 = false;\n        bool foundSub31 = false;\n        bool foundSub32\
    \ = false;\n        bool foundSub33 = false;\n        bool foundSub34 = false;\n\
    \        bool foundSub35 = false;\n        bool foundSub36 = false;\n        bool\
    \ foundSub37 = false;\n        bool foundSub38 = false;\n        bool foundSub39\
    \ = false;\n        bool foundSub40 = false;\n        bool foundSub41 = false;\n\
    \        bool foundSub42 = false;\n        bool foundSub43 = false;\n        bool\
    \ foundSub44 = false;\n        bool foundSub45 = false;\n        bool foundSub46\
    \ = false;\n        bool foundSub47 = false;\n        bool foundSub48 = false;\n\
    \        bool foundSub49 = false;\n        bool foundSub50 = false;\n        bool\
    \ foundSub51 = false;\n        bool foundSub52 = false;\n        bool foundSub53\
    \ = false;\n        bool foundSub54 = false;\n        bool foundSub55 = false;\n\
    \        bool foundSub56 = false;\n        bool foundSub57 = false;\n        bool\
    \ foundSub58 = false;\n        bool foundSub59 = false;\n        bool foundSub60\
    \ = false;\n        bool foundSub61 = false;\n        bool foundSub62 = false;\n\
    \        bool foundSub63 = false;\n        bool foundSub64 = false;\n        bool\
    \ foundSub65 = false;\n        bool foundSub66 = false;\n        bool foundSub67\
    \ = false;\n        bool foundSub68 = false;\n\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmprt2o6q60.cs(17,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(18,14): warning CS0219: The variable ''start'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(19,14): warning CS0219: The variable ''end'' is assigned but
    its value is never used

    /tmp/tmprt2o6q60.cs(20,14): warning CS0219: The variable ''length'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(21,14): warning CS0219: The variable ''found'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(22,14): warning CS0219: The variable ''foundSub'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(23,14): warning CS0219: The variable ''foundSub2'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(24,14): warning CS0219: The variable ''foundSub3'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(25,14): warning CS0219: The variable ''foundSub4'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(26,14): warning CS0219: The variable ''foundSub5'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(27,14): warning CS0219: The variable ''foundSub6'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(28,14): warning CS0219: The variable ''foundSub7'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(29,14): warning CS0219: The variable ''foundSub8'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(30,14): warning CS0219: The variable ''foundSub9'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(31,14): warning CS0219: The variable ''foundSub10'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(32,14): warning CS0219: The variable ''foundSub11'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(33,14): warning CS0219: The variable ''foundSub12'' is assigned
    but its value is never used

    /tmp/tmprt2o6q60.cs(34,14): warning CS0219: The variable ''foundSub13'' is assigned
    but i'
  timestamp: 1659797681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[1]) {\n                count\
    \ += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n            }\n\
    \            else {\n                count += 1;\n            }\n        }\n \
    \       return count;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside\
    \ the bounds of the array.\n  at Problem.HowManyTimes (System.String str, System.String\
    \ substring) [0x00040] in <08d9a10317944f8d806cbf873121dd3e>:0 \n  at Problem.HowManyTimes\
    \ (System.String str, System.String substring) [0x00035] in <08d9a10317944f8d806cbf873121dd3e>:0\
    \ \n  at Problem.Main (System.String[] args) [0x0001a] in <08d9a10317944f8d806cbf873121dd3e>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.IndexOutOfRangeException: Index\
    \ was outside the bounds of the array.\n  at Problem.HowManyTimes (System.String\
    \ str, System.String substring) [0x00040] in <08d9a10317944f8d806cbf873121dd3e>:0\
    \ \n  at Problem.HowManyTimes (System.String str, System.String substring) [0x00035]\
    \ in <08d9a10317944f8d806cbf873121dd3e>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x0001a] in <08d9a10317944f8d806cbf873121dd3e>:0 \n"
  stdout: ''
  timestamp: 1659797683
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        long index = 0;\n        long index2 = 0;\n        bool found =\
    \ false;\n        bool found2 = false;\n        bool found3 = false;\n       \
    \ bool found4 = false;\n        bool found5 = false;\n        bool found6 = false;\n\
    \        bool found7 = false;\n        bool found8 = false;\n        bool found9\
    \ = false;\n        bool found10 = false;\n        bool found11 = false;\n   \
    \     bool found12 = false;\n        bool found13 = false;\n        bool found14\
    \ = false;\n        bool found15 = false;\n        bool found16 = false;\n   \
    \     bool found17 = false;\n        bool found18 = false;\n        bool found19\
    \ = false;\n        bool found20 = false;\n        bool found21 = false;\n   \
    \     bool found22 = false;\n        bool found23 = false;\n        bool found24\
    \ = false;\n        bool found25 = false;\n        bool found26 = false;\n   \
    \     bool found27 = false;\n        bool found28 = false;\n        bool found29\
    \ = false;\n        bool found30 = false;\n        bool found31 = false;\n   \
    \     bool found32 = false;\n        bool found33 = false;\n        bool found34\
    \ = false;\n        bool found35 = false;\n        bool found36 = false;\n   \
    \     bool found37 = false;\n        bool found38 = false;\n        bool found39\
    \ = false;\n        bool found40 = false;\n        bool found41 = false;\n   \
    \     bool found42 = false;\n        bool found43 = false;\n        bool found44\
    \ = false;\n        bool found45 = false;\n        bool found46 = false;\n   \
    \     bool found47 = false;\n        bool found48 = false;\n        bool found49\
    \ = false;\n        bool found50 = false;\n        bool found51 = false;\n   \
    \     bool found52 = false;\n        bool found53 = false;\n        bool found54\
    \ = false;\n        bool found55 = false;\n        bool found56 = false;\n   \
    \     bool found57 = false;\n        bool found58 = false;\n        bool found59\
    \ = false;\n        bool found60 = false;\n        bool found61 = false;\n   \
    \     bool found62 = false;\n        bool found63 = false;\n        bool found64\
    \ = false;\n        bool found65 = false;\n        bool found66 = false;\n   \
    \     bool found67 = false;\n        bool found68 = false;\n        bool found69\
    \ = false;\n        bool found70 = false;\n        bool found71 = false;\n   \
    \     bool found72 = false;\n        bool found73 = false;\n        bool found74\
    \ = false;\n        bool found75 = false;\n        bool found76 = false;\n   \
    \     bool found77 = false;\n        bool found78 = false;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"\
    x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpect0jvcs.cs(17,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmpect0jvcs.cs(18,14): warning CS0219: The variable ''start'' is assigned
    but its value is never used

    /tmp/tmpect0jvcs.cs(19,14): warning CS0219: The variable ''end'' is assigned but
    its value is never used

    /tmp/tmpect0jvcs.cs(20,14): warning CS0219: The variable ''length'' is assigned
    but its value is never used

    /tmp/tmpect0jvcs.cs(21,14): warning CS0219: The variable ''index'' is assigned
    but its value is never used

    /tmp/tmpect0jvcs.cs(22,14): warning CS0219: The variable ''index2'' is assigned
    but its value is never used

    /tmp/tmpect0jvcs.cs(23,14): warning CS0219: The variable ''found'' is assigned
    but its value is never used

    /tmp/tmpect0jvcs.cs(24,14): warning CS0219: The variable ''found2'' is assigned
    but its value is never used

    /tmp/tmpect0jvcs.cs(25,14): warning CS0219: The variable ''found3'' is assigned
    but its value is never used

    /tmp/tmpect0jvcs.cs(26,14): warning CS0219: The variable ''found4'' is assigned
    but its value is never used

    /tmp/tmpect0jvcs.cs(27,14): warning CS0219: The variable ''found5'' is assigned
    but its value is never used

    /tmp/tmpect0jvcs.cs(28,14): warning CS0219: The variable ''found6'' is assigned
    but its value is never used

    /tmp/tmpect0jvcs.cs(29,14): warning CS0219: The variable ''found7'' is assigned
    but its value is never used

    /tmp/tmpect0jvcs.cs(30,14): warning CS0219: The variable ''found8'' is assigned
    but its value is never used

    /tmp/tmpect0jvcs.cs(31,14): warning CS0219: The variable ''found9'' is assigned
    but its value is never used

    /tmp/tmpect0jvcs.cs(32,14): warning CS0219: The variable ''found10'' is assigned
    but its value is never used

    /tmp/tmpect0jvcs.cs(33,14): warning CS0219: The variable ''found11'' is assigned
    but its value is never used

    /tmp/tmpect0jvcs.cs(34,14): warning CS0219: The variable ''found12'' is assigned
    but its value is never used

    /tmp/tmpect0jvcs.'
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <63c77b8082a440c1a4af61ee02019449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <63c77b8082a440c1a4af61ee02019449>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ 0) > -1 ? 1 : 0;\n        }\n        return count;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) ==\
    \ (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n  \
    \  Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7459334f44b4476b967e6fce6d284a4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7459334f44b4476b967e6fce6d284a4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        bool found = false;\n        bool first = true;\n        bool last\
    \ = false;\n        bool firstLast = false;\n        bool lastFirst = false;\n\
    \        bool firstLastFirst = false;\n        bool firstLastLast = false;\n \
    \       bool lastFirstFirst = false;\n        bool lastFirstLast = false;\n  \
    \      bool firstLastLastFirst = false;\n        bool lastFirstLastLast = false;\n\
    \        bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastLast\
    \ = false;\n        bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastLast\
    \ = false;\n        bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastLast\
    \ = false;\n        bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastLast\
    \ = false;\n        bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastLast\
    \ = false;\n        bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastLast\
    \ = false;\n        bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastLast\
    \ = false;\n        bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastLast\
    \ = false;\n        bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastLast\
    \ = false;\n        bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastLast\
    \ = false;\n        bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastLast\
    \ = false;\n        bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastLast\
    \ = false;\n        bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastLast\
    \ = false;\n        bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastLast\
    \ = false;\n        bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastLast\
    \ = false;\n        bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastLast\
    \ = false;\n        bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastLast\
    \ = false;\n        bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastLast\
    \ = false;\n        bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastLast\
    \ = false;\n        bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastLast\
    \ = false;\n        bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastLast\
    \ = false;\n        bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastLast\
    \ = false;\n        bool firstLastLastLastFirst = false;\n        bool lastFirstLastLastLast\
    \ = false;\n        bool firstLastLastLastFirst = false;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) ==\
    \ (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n  \
    \  Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1jd8r6c_.cs(34,14): error CS0128: A local variable or function named ''firstLastLastLastFirst''
    is already defined in this scope

    /tmp/tmp1jd8r6c_.cs(35,14): error CS0128: A local variable or function named ''lastFirstLastLastLast''
    is already defined in this scope

    /tmp/tmp1jd8r6c_.cs(36,14): error CS0128: A local variable or function named ''firstLastLastLastFirst''
    is already defined in this scope

    /tmp/tmp1jd8r6c_.cs(37,14): error CS0128: A local variable or function named ''lastFirstLastLastLast''
    is already defined in this scope

    /tmp/tmp1jd8r6c_.cs(38,14): error CS0128: A local variable or function named ''firstLastLastLastFirst''
    is already defined in this scope

    /tmp/tmp1jd8r6c_.cs(39,14): error CS0128: A local variable or function named ''lastFirstLastLastLast''
    is already defined in this scope

    /tmp/tmp1jd8r6c_.cs(40,14): error CS0128: A local variable or function named ''firstLastLastLastFirst''
    is already defined in this scope

    /tmp/tmp1jd8r6c_.cs(41,14): error CS0128: A local variable or function named ''lastFirstLastLastLast''
    is already defined in this scope

    /tmp/tmp1jd8r6c_.cs(42,14): error CS0128: A local variable or function named ''firstLastLastLastFirst''
    is already defined in this scope

    /tmp/tmp1jd8r6c_.cs(43,14): error CS0128: A local variable or function named ''lastFirstLastLastLast''
    is already defined in this scope

    /tmp/tmp1jd8r6c_.cs(44,14): error CS0128: A local variable or function named ''firstLastLastLastFirst''
    is already defined in this scope

    /tmp/tmp1jd8r6c_.cs(45,14): error CS0128: A local variable or function named ''lastFirstLastLastLast''
    is already defined in this scope

    /tmp/tmp1jd8r6c_.cs(46,14): error CS0128: A local variable or function named ''firstLastLastLastFirst''
    is already defined in this scope

    /tmp/tmp1jd8r6c_.cs(47,14): error CS0128: A local variable or function named ''lastFirstLastLastLast''
    is already defined in this scope

    /tmp/tmp1jd8r6c_.cs(48,14): error CS01'
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += HowManyTimes(str.Substring(0,\
    \ str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1),\
    \ substring);\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"\
    x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        bool found = false;\n\
    \        long startIndex = 0;\n        long endIndex = 0;\n        long currentIndex\
    \ = 0;\n        long currentStart = 0;\n        long currentEnd = 0;\n       \
    \ bool currentFound = false;\n        bool currentStartFound = false;\n      \
    \  bool currentEndFound = false;\n        bool currentFoundOverlap = false;\n\
    \        bool currentStartOverlap = false;\n        bool currentEndOverlap = false;\n\
    \        bool currentStartOverlapWithCurrentFound = false;\n        bool currentEndOverlapWithCurrentFound\
    \ = false;\n        bool currentStartOverlapWithCurrentStartFound = false;\n \
    \       bool currentEndOverlapWithCurrentStartFound = false;\n        bool currentStartOverlapWithCurrentEndFound\
    \ = false;\n        bool currentEndOverlapWithCurrentEndFound = false;\n     \
    \   bool currentStartOverlapWithCurrentStartEndFound = false;\n        bool currentEndOverlapWithCurrentStartEndFound\
    \ = false;\n        bool currentStartOverlapWithCurrentEndEndFound = false;\n\
    \        bool currentEndOverlapWithCurrentEndEndFound = false;\n        bool currentStartOverlapWithCurrentStartEndEndFound\
    \ = false;\n        bool currentEndOverlapWithCurrentStartEndEndFound = false;\n\
    \        bool currentStartOverlapWithCurrentEndEndEndFound = false;\n        bool\
    \ currentEndOverlapWithCurrentEndEndEndFound = false;\n        bool currentStartOverlapWithCurrentStartEndEndEndFound\
    \ = false;\n        bool currentEndOverlapWithCurrentStartEndEndEndFound = false;\n\
    \        bool currentStartOverlapWithCurrentEndEndEndEndFound = false;\n     \
    \   bool currentEndOverlapWithCurrentEndEndEndEndFound = false;\n        bool\
    \ currentStartOverlapWithCurrentStartEndEndEndEndFound = false;\n        bool\
    \ currentEndOverlapWithCurrentStartEndEndEndEndFound = false;\n        bool currentStartOverlapWithCurrentEndEndEndEndEndFound\
    \ = false;\n        bool currentEndOverlapWithCurrentEndEndEndEndEndFound = false;\n\
    \        bool currentStartOverlapWithCurrentStartEndEndEndEndEndFound = false;\n\
    \        bool currentEndOverlapWithCurrentStartEndEndEndEndEndFound = false;\n\
    \        bool currentStartOverlapWithCurrentEndEndEndEndEndEndFound = false;\n\
    \        bool currentEndOverlapWithCurrentEndEndEndEndEndEndFound = false;\n \
    \       bool currentStartOverlapWithCurrentStartEndEndEndEndEndEndFound = false;\n\
    \        bool currentEndOverlapWithCurrentStartEndEndEndEndEndEndFound = false;\n\
    \        bool currentStartOverlapWithCurrentEndEndEndEndEnd\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"\
    x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp5jbxayio.cs(60,59): error CS1002: ; expected

    '
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        bool found = false;\n        bool foundSubstring = false;\n    \
    \    bool foundAllSubstring = false;\n        bool foundAll = false;\n       \
    \ bool foundAllSubstringAll = false;\n        bool foundAllAll = false;\n    \
    \    bool foundAllAllAll = false;\n        bool foundAllAllAllAll = false;\n \
    \       bool foundAllAllAllAllAll = false;\n        bool foundAllAllAllAllAllAll\
    \ = false;\n        bool foundAllAllAllAllAllAllAll = false;\n        bool foundAllAllAllAllAllAllAllAll\
    \ = false;\n        bool foundAllAllAllAllAllAllAllAllAll = false;\n        bool\
    \ foundAllAllAllAllAllAllAllAllAllAll = false;\n        bool foundAllAllAllAllAllAllAllAllAllAll\
    \ = false;\n        bool foundAllAllAllAllAllAllAllAllAllAllAll = false;\n   \
    \     bool foundAllAllAllAllAllAllAllAllAllAllAll = false;\n        bool foundAllAllAllAllAllAllAllAllAllAllAllAll\
    \ = false;\n        bool foundAllAllAllAllAllAllAllAllAllAllAllAllAll = false;\n\
    \        bool foundAllAllAllAllAllAllAllAllAllAllAllAllAllAll = false;\n     \
    \   bool foundAllAllAllAllAllAllAllAllAllAllAllAllAllAll = false;\n        bool\
    \ foundAllAllAllAllAllAllAllAllAllAllAllAllAllAll = false;\n        bool foundAllAllAllAllAllAllAllAllAllAllAllAllAllAll\
    \ = false;\n        bool foundAllAllAllAllAllAllAllAllAllAllAllAllAllAllAll =\
    \ false;\n        bool foundAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAll =\
    \ false;\n        bool foundAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAll =\
    \ false;\n        bool foundAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAll =\
    \ false;\n        bool foundAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAll =\
    \ false;\n        bool foundAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAll =\
    \ false;\n        bool foundAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAll =\
    \ false;\n        bool foundAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAll\
    \ = false;\n        bool foundAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAllAll\
    \ = false;\n        bool foundAllAllAllAllAllAllAllAll\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) ==\
    \ (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n  \
    \  Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdbtzjnx8.cs(53,43): error CS1002: ; expected

    '
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        bool found = false;\n\
    \        do {\n            found = false;\n            start = str.IndexOf(substring,\
    \ start);\n            if (start == -1) {\n                break;\n          \
    \  }\n            end = str.IndexOf(substring, start + 1);\n            if (end\
    \ == -1) {\n                end = str.Length;\n            }\n            count++;\n\
    \            found = true;\n        } while (end != -1 && !found);\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp64ukcc9d.cs(23,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmp64ukcc9d.cs(23,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmp64ukcc9d.cs(27,31): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmp64ukcc9d.cs(27,42): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659797683
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ 0) > -1 ? 1 : 0;\n        }\n        return count;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) ==\
    \ (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n  \
    \  Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7459334f44b4476b967e6fce6d284a4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7459334f44b4476b967e6fce6d284a4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ str.Length - substring.Length);\n        }\n        return count;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out\
    \ of range. Must be non-negative and less than the size of the collection.\nParameter\
    \ name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32\
    \ startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String\
    \ str, System.String substring) [0x00023] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentOutOfRangeException: Index\
    \ was out of range. Must be non-negative and less than the size of the collection.\n\
    Parameter name: startIndex\n  at System.String.IndexOf (System.Char value, System.Int32\
    \ startIndex, System.Int32 count) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.String.IndexOf (System.Char value, System.Int32 startIndex) [0x00009]\
    \ in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.HowManyTimes (System.String\
    \ str, System.String substring) [0x00023] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <c64eda00e175469cb023b5f4cce98225>:0\
    \ \n"
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = str.Length - substring.Length;\n\
    \        long current = 0;\n        long startIndex = 0;\n        long endIndex\
    \ = 0;\n        bool found = false;\n        do {\n            found = false;\n\
    \            startIndex = str.IndexOf(substring, start);\n            if (startIndex\
    \ >= 0) {\n                endIndex = str.IndexOf(substring, startIndex + substring.Length);\n\
    \                if (endIndex >= 0) {\n                    current = endIndex\
    \ - startIndex + 1;\n                    found = true;\n                }\n  \
    \          }\n            start++;\n        } while (found == false && start <\
    \ end);\n        return count;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpdd42lhqw.cs(26,38): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpdd42lhqw.cs(26,49): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    /tmp/tmpdd42lhqw.cs(28,40): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpdd42lhqw.cs(28,51): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659797683
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        long index = 0;\n        bool found = false;\n        do {\n   \
    \         found = false;\n            index = str.IndexOf(substring, start);\n\
    \            if (index != -1) {\n                found = true;\n             \
    \   end = index;\n                length = end - start + 1;\n                count++;\n\
    \                start = index + 1;\n            }\n        } while (found ==\
    \ true);\n        return count;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpzo_dpb4x.cs(25,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpzo_dpb4x.cs(25,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659797683
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long start2 =\
    \ 0;\n        long end2 = 0;\n        long start3 = 0;\n        long end3 = 0;\n\
    \        long start4 = 0;\n        long end4 = 0;\n        long start5 = 0;\n\
    \        long end5 = 0;\n        long start6 = 0;\n        long end6 = 0;\n  \
    \      long start7 = 0;\n        long end7 = 0;\n        long start8 = 0;\n  \
    \      long end8 = 0;\n        long start9 = 0;\n        long end9 = 0;\n    \
    \    long start10 = 0;\n        long end10 = 0;\n        long start11 = 0;\n \
    \       long end11 = 0;\n        long start12 = 0;\n        long end12 = 0;\n\
    \        long start13 = 0;\n        long end13 = 0;\n        long start14 = 0;\n\
    \        long end14 = 0;\n        long start15 = 0;\n        long end15 = 0;\n\
    \        long start16 = 0;\n        long end16 = 0;\n        long start17 = 0;\n\
    \        long end17 = 0;\n        long start18 = 0;\n        long end18 = 0;\n\
    \        long start19 = 0;\n        long end19 = 0;\n        long start20 = 0;\n\
    \        long end20 = 0;\n        long start21 = 0;\n        long end21 = 0;\n\
    \        long start22 = 0;\n        long end22 = 0;\n        long start23 = 0;\n\
    \        long end23 = 0;\n        long start24 = 0;\n        long end24 = 0;\n\
    \        long start25 = 0;\n        long end25 = 0;\n        long start26 = 0;\n\
    \        long end26 = 0;\n        long start27 = 0;\n        long end27 = 0;\n\
    \        long start28 = 0;\n        long end28 = 0;\n        long start29 = 0;\n\
    \        long end29 = 0;\n        long start30 = 0;\n        long end30 = 0;\n\
    \        long start31 = 0;\n        long end31 = 0;\n        long start32 = 0;\n\
    \        long end32 = 0;\n        long start33 = 0;\n        long end33 = 0;\n\
    \        long start34 = 0;\n        long end34 = 0;\n        long start35 = 0;\n\
    \        long end35 = 0;\n        long start36 = 0;\n        long end36 = 0;\n\
    \        long start37 = 0;\n        long end37 = 0;\n        long start38 = 0;\n\
    \        long end38 = 0;\n        long start39 = 0;\n        long end39 = 0;\n\
    \        long start40 = 0;\n        long end40 = 0;\n        long start41 = 0;\n\
    \        long end41 = 0;\n        long start42 = 0;\n        long end42 = 0;\n\
    \        long start43 = 0;\n        long end43 = 0;\n        long \n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp36v_27n1.cs(104,13): error CS1001: Identifier expected

    /tmp/tmp36v_27n1.cs(104,13): error CS1002: ; expected

    '
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += HowManyTimes(str.Substring(0,\
    \ str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1),\
    \ substring);\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"\
    x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ 0) > -1 ? 1 : 0;\n        }\n        return count;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) ==\
    \ (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n  \
    \  Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7459334f44b4476b967e6fce6d284a4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7459334f44b4476b967e6fce6d284a4f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            else if (c == substring[substring.Length - 1]) {\n\
    \                count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n            else {\n                count += HowManyTimes(str.Substring(0,\
    \ str.Length - 1), substring) + HowManyTimes(str.Substring(1, str.Length - 1),\
    \ substring);\n            }\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"\
    x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <23d15cc5b4024153b4be9f250f188acb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            if (str.Contains(c))\
    \ {\n                count++;\n            }\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <270ec3f577c14409b2d25adde5637a4b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <270ec3f577c14409b2d25adde5637a4b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        if (str ==\
    \ null || substring == null)\n            throw new ArgumentNullException();\n\
    \        if (str.Length == 0)\n            return 0;\n        if (substring.Length\
    \ == 0)\n            return str.Length;\n        if (substring.Length > str.Length)\n\
    \            return 0;\n        long count = 0;\n        long start = 0;\n   \
    \     long end = 0;\n        bool found = false;\n        long startIndex = -1;\n\
    \        long endIndex = -1;\n        long startIndex2 = -1;\n        long endIndex2\
    \ = -1;\n        bool found2 = false;\n        long startIndex3 = -1;\n      \
    \  long endIndex3 = -1;\n        bool found3 = false;\n        long startIndex4\
    \ = -1;\n        long endIndex4 = -1;\n        bool found4 = false;\n        long\
    \ startIndex5 = -1;\n        long endIndex5 = -1;\n        bool found5 = false;\n\
    \        long startIndex6 = -1;\n        long endIndex6 = -1;\n        bool found6\
    \ = false;\n        long startIndex7 = -1;\n        long endIndex7 = -1;\n   \
    \     bool found7 = false;\n        long startIndex8 = -1;\n        long endIndex8\
    \ = -1;\n        bool found8 = false;\n        long startIndex9 = -1;\n      \
    \  long endIndex9 = -1;\n        bool found9 = false;\n        long startIndex10\
    \ = -1;\n        long endIndex10 = -1;\n        bool found10 = false;\n      \
    \  long startIndex11 = -1;\n        long endIndex11 = -1;\n        bool found11\
    \ = false;\n        long startIndex12 = -1;\n        long endIndex12 = -1;\n \
    \       bool found12 = false;\n        long startIndex13 = -1;\n        long endIndex13\
    \ = -1;\n        bool found13 = false;\n        long startIndex14 = -1;\n    \
    \    long endIndex14 = -1;\n        bool found14 = false;\n        long startIndex15\
    \ = -1;\n        long endIndex15 = -1;\n        bool found15 = false;\n      \
    \  long startIndex16 = -1;\n        long endIndex16 = -1;\n        bool found16\
    \ = false;\n        long startIndex17 = -1;\n        long endIndex17 = -1;\n \
    \       bool found17 = false;\n        long startIndex18 = -1;\n        long endIndex18\
    \ = -1;\n        bool found18 = false;\n        long startIndex19 = -1;\n    \
    \    long endIndex19 = -1;\n        bool found19 = false;\n        long startIndex20\
    \ = -1;\n        long endIndex20 = -1;\n        bool found20 = false;\n      \
    \  long startIndex21 = -1;\n        long endIndex21 = -1;\n        bool found21\
    \ = false;\n        long startIndex22 = -1;\n        long endIndex22\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpboqxqdxw.cs(92,24): error CS1002: ; expected

    '
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = str.Length;\n        long\
    \ len = substring.Length;\n        while (start < end) {\n            long mid\
    \ = (start + end) / 2;\n            if (str.Substring(mid, len).Equals(substring))\
    \ {\n                count++;\n                start = mid + 1;\n            }\
    \ else {\n                if (mid > start) {\n                    end = mid;\n\
    \                } else {\n                    start = mid + 1;\n            \
    \    }\n            }\n        }\n        return count;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) ==\
    \ (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n  \
    \  Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc2yq8_nx.cs(23,31): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpc2yq8_nx.cs(23,36): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659797683
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            if (c == substring[substring.Length - 1]) {\n    \
    \            count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b006c32c0b6f4cf3a54087d174853457>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b006c32c0b6f4cf3a54087d174853457>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0 ? 1 : 0;\n        }\n        return\
    \ count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <eee74cbf660b46719e2293d5d8e0aebf>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        long start2 = 0;\n        long end2 = 0;\n        long length2 =\
    \ 0;\n        bool found = false;\n        bool found2 = false;\n        bool\
    \ found3 = false;\n        bool found4 = false;\n        bool found5 = false;\n\
    \        bool found6 = false;\n        bool found7 = false;\n        bool found8\
    \ = false;\n        bool found9 = false;\n        bool found10 = false;\n    \
    \    bool found11 = false;\n        bool found12 = false;\n        bool found13\
    \ = false;\n        bool found14 = false;\n        bool found15 = false;\n   \
    \     bool found16 = false;\n        bool found17 = false;\n        bool found18\
    \ = false;\n        bool found19 = false;\n        bool found20 = false;\n   \
    \     bool found21 = false;\n        bool found22 = false;\n        bool found23\
    \ = false;\n        bool found24 = false;\n        bool found25 = false;\n   \
    \     bool found26 = false;\n        bool found27 = false;\n        bool found28\
    \ = false;\n        bool found29 = false;\n        bool found30 = false;\n   \
    \     bool found31 = false;\n        bool found32 = false;\n        bool found33\
    \ = false;\n        bool found34 = false;\n        bool found35 = false;\n   \
    \     bool found36 = false;\n        bool found37 = false;\n        bool found38\
    \ = false;\n        bool found39 = false;\n        bool found40 = false;\n   \
    \     bool found41 = false;\n        bool found42 = false;\n        bool found43\
    \ = false;\n        bool found44 = false;\n        bool found45 = false;\n   \
    \     bool found46 = false;\n        bool found47 = false;\n        bool found48\
    \ = false;\n        bool found49 = false;\n        bool found50 = false;\n   \
    \     bool found51 = false;\n        bool found52 = false;\n        bool found53\
    \ = false;\n        bool found54 = false;\n        bool found55 = false;\n   \
    \     bool found56 = false;\n        bool found57 = false;\n        bool found58\
    \ = false;\n        bool found59 = false;\n        bool found60 = false;\n   \
    \     bool found61 = false;\n        bool found62 = false;\n        bool found63\
    \ = false;\n        bool found64 = false;\n        bool found65 = false;\n   \
    \     bool found66 = false;\n        bool found67 = false;\n        bool found68\
    \ = false;\n        bool found69 = false;\n        bool found70 = false;\n   \
    \     bool found71 = false;\n        bool found72 = false;\n        bool found73\
    \ = false;\n        bool found74 = false;\n        bool found75 = false;\n   \
    \     bool found76 = false;\n        bool found77 = false;\n\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"\
    x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppkb7g5la.cs(17,14): warning CS0219: The variable ''count'' is assigned
    but its value is never used

    /tmp/tmppkb7g5la.cs(18,14): warning CS0219: The variable ''start'' is assigned
    but its value is never used

    /tmp/tmppkb7g5la.cs(19,14): warning CS0219: The variable ''end'' is assigned but
    its value is never used

    /tmp/tmppkb7g5la.cs(20,14): warning CS0219: The variable ''length'' is assigned
    but its value is never used

    /tmp/tmppkb7g5la.cs(21,14): warning CS0219: The variable ''start2'' is assigned
    but its value is never used

    /tmp/tmppkb7g5la.cs(22,14): warning CS0219: The variable ''end2'' is assigned
    but its value is never used

    /tmp/tmppkb7g5la.cs(23,14): warning CS0219: The variable ''length2'' is assigned
    but its value is never used

    /tmp/tmppkb7g5la.cs(24,14): warning CS0219: The variable ''found'' is assigned
    but its value is never used

    /tmp/tmppkb7g5la.cs(25,14): warning CS0219: The variable ''found2'' is assigned
    but its value is never used

    /tmp/tmppkb7g5la.cs(26,14): warning CS0219: The variable ''found3'' is assigned
    but its value is never used

    /tmp/tmppkb7g5la.cs(27,14): warning CS0219: The variable ''found4'' is assigned
    but its value is never used

    /tmp/tmppkb7g5la.cs(28,14): warning CS0219: The variable ''found5'' is assigned
    but its value is never used

    /tmp/tmppkb7g5la.cs(29,14): warning CS0219: The variable ''found6'' is assigned
    but its value is never used

    /tmp/tmppkb7g5la.cs(30,14): warning CS0219: The variable ''found7'' is assigned
    but its value is never used

    /tmp/tmppkb7g5la.cs(31,14): warning CS0219: The variable ''found8'' is assigned
    but its value is never used

    /tmp/tmppkb7g5la.cs(32,14): warning CS0219: The variable ''found9'' is assigned
    but its value is never used

    /tmp/tmppkb7g5la.cs(33,14): warning CS0219: The variable ''found10'' is assigned
    but its value is never used

    /tmp/tmppkb7g5la.cs(34,14): warning CS0219: The variable ''found11'' is assigned
    but its value is never used

    /tmp/tmppkb7g5la.c'
  timestamp: 1659797683
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            if (c == substring[substring.Length - 1]) {\n    \
    \            count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b006c32c0b6f4cf3a54087d174853457>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b006c32c0b6f4cf3a54087d174853457>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        if (str ==\
    \ null || substring == null)\n            throw new ArgumentNullException();\n\
    \        if (str.Length == 0)\n            return 0;\n        if (substring.Length\
    \ == 0)\n            return str.Length;\n        long count = 0;\n        long\
    \ start = 0;\n        long end = str.Length - substring.Length;\n        while\
    \ (start < end) {\n            long sub = str.IndexOf(substring, start);\n   \
    \         if (sub == -1)\n                break;\n            count += sub;\n\
    \            start += sub;\n        }\n        return count;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"\
    x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    john doe\"), (\"john\")) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxn7gz0gb.cs(27,36): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpxn7gz0gb.cs(27,47): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659797683
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long length =\
    \ 0;\n        long index = 0;\n        bool found = false;\n        do {\n   \
    \         index = str.IndexOf(substring, start);\n            if (index == -1)\
    \ {\n                break;\n            }\n            end = index + 1;\n   \
    \         length = end - start;\n            found = true;\n            count\
    \ += length;\n            start = end + 1;\n        } while (found);\n       \
    \ return count;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpbycgjgo4.cs(24,33): error CS1503: Argument 1: cannot convert from ''string''
    to ''char''

    /tmp/tmpbycgjgo4.cs(24,44): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659797683
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in substring) {\n            count += str.IndexOf(c,\
    \ StringComparison.OrdinalIgnoreCase) >= 0;\n        }\n        return count;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
    \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\"))\
    \ == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
    \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
    }\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpxcg2fh2a.cs(19,13): error CS0019: Operator ''+='' cannot be applied to
    operands of type ''long'' and ''bool''

    '
  timestamp: 1659797681
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        foreach (char c in str) {\n            if (c == substring[0])\
    \ {\n                count += HowManyTimes(str.Substring(1, str.Length - 1), substring);\n\
    \            }\n            if (c == substring[substring.Length - 1]) {\n    \
    \            count += HowManyTimes(str.Substring(0, str.Length - 1), substring);\n\
    \            }\n        }\n        return count;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n\
    \    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"\
    cacacacac\"), (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"\
    ), (\"john\")) == (1L));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b006c32c0b6f4cf3a54087d174853457>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b006c32c0b6f4cf3a54087d174853457>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797682
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Find how many times a given substring can be found in\
    \ the original string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"\
    ), (\"a\"))\n    // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    //\
    \ (3L)\n    // >>> HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public\
    \ static long HowManyTimes(string str, string substring) {\n        long count\
    \ = 0;\n        long start = 0;\n        long end = 0;\n        long len = str.Length;\n\
    \        long sublen = substring.Length;\n        long maxlen = Math.Max(len,\
    \ sublen);\n        long mid;\n        bool found = false;\n        do {\n   \
    \         mid = (start + end) / 2;\n            if (mid > maxlen) {\n        \
    \        mid = maxlen;\n            }\n            if (str.Substring(mid, mid).Equals(substring))\
    \ {\n                found = true;\n                end = mid;\n            }\
    \ else {\n                start = mid;\n            }\n        } while (found\
    \ && start < len);\n        if (start == len) {\n            count++;\n      \
    \  }\n        return count;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(HowManyTimes((\"\"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"\
    xyxyxyx\"), (\"x\")) == (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"),\
    \ (\"cac\")) == (4L));\n    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\"\
    )) == (1L));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw0t1imf8.cs(30,31): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmpw0t1imf8.cs(30,36): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659797683

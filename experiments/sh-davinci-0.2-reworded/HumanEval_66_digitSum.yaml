name: HumanEval_66_digitSum
language: sh
prompt: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
  \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n#\
  \ >>> $(digitSum \"\")\n# \"0\"\n# >>> $(digitSum \"abAB\")\n# \"131\"\n# >>> $(digitSum\
  \ \"abcCd\")\n# \"67\"\n# >>> $(digitSum \"helloE\")\n# \"69\"\n# >>> $(digitSum\
  \ \"woArBld\")\n# \"131\"\n# >>> $(digitSum \"aAaaaXa\")\n# \"153\"\n#\n# $1 is\
  \ a string\ndigitSum() {\n"
tests: "}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[\
  \ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n\
  \    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") =\
  \ \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate\
  \ \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
completions: ["  # Write your code here\n  # Use echo to print to stdout\n  echo \"\
    0\"", "    echo $(echo $1 | grep -o '[A-Z]' | awk '{s+=$1} END {print s}')", " \
    \   local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n\
    \        local ascii=$(printf \"%d\" \"'$char\")\n        if [[ $ascii -ge 65\
    \ && $ascii -le 90 ]]; then\n            (( sum += ascii ))\n        fi\n    done\n\
    \    echo $sum", "    echo \"$1\" | tr -d -c 'A-Z' | awk '{s=0; for(i=1;i<=length($0);i++)\
    \ s+=ord(substr($0,i,1)); print s}'", "  echo \"$1\" | grep -o '[A-Z]' | awk '{sum+=$1}\
    \ END {print sum}'", "    echo \"$1\" | grep -o \"[A-Z]\" | tr -d \"\\n\" | awk\
    \ '{print sum+=$1}'", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n\
    \        local char=${1:$i:1}\n        if [[ \"$char\" =~ [A-Z] ]]; then\n   \
    \         sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n \
    \   echo \"$sum\"", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n  \
    \      local char=${1:$i:1}\n        local char_ascii=$(printf \"%d\" \"'$char\"\
    )\n        if [[ $char_ascii -ge 65 && $char_ascii -le 90 ]]; then\n         \
    \   (( sum += char_ascii ))\n        fi\n    done\n    echo $sum", "    local\
    \ sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n \
    \       if [[ $char =~ [A-Z] ]]; then\n            sum=$((sum + $(printf \"%d\"\
    \ \"'$char\")))\n        fi\n    done\n    echo $sum", "    # Write your code\
    \ here\n    # To print results to the standard output you can use echo\n    #\
    \ Example: echo \"Hello world\"\n    echo $1 | grep -o '[A-Z]' | awk '{s+=$1}\
    \ END {print s}'", "    echo \"$1\" | grep -o '[A-Z]' | awk '{s+=$1} END {print\
    \ s}'", "    echo \"$1\" | tr -d [:lower:] | awk '{sum=0; for(i=1;i<=length;i++)\
    \ {sum+=substr($0,i,1)}; print sum}'", "  echo \"${1}\" | grep -o \"[A-Z]\" |\
    \ awk '{s+=$1} END {print s}'", "    local -i sum=0\n    local -i i=0\n    local\
    \ -i len=${#1}\n    while (( i < len )); do\n        local -i char=${1:i:1}\n\
    \        if (( char >= 65 && char <= 90 )); then\n            (( sum += char ))\n\
    \        fi\n        (( i++ ))\n    done\n    echo \"$sum\"", "    echo $1 | tr\
    \ -d [:lower:] | tr -d [:punct:] | tr -d [:digit:] | tr -d [:space:] | awk '{sum=0;\
    \ for(i=1;i<=NF;i++) {sum+=$i}; print sum}'", "    # sum=0\n    # for (( i=0;\
    \ i<${#1}; i++ )); do\n    #     char=${1:$i:1}\n    #     if [[ $char =~ [A-Z]\
    \ ]]; then\n    #         sum=$((sum+$(printf \"%d\" \"'$char\")))\n    #    \
    \ fi\n    # done\n    # echo $sum\n    echo $1 | tr -cd [:upper:] | grep -o .\
    \ | awk '{sum+=$1} END {print sum}'", "    echo \"$1\" | tr -d [:lower:] | tr\
    \ -d [:punct:] | tr -d [:space:] | tr -d [:digit:] | awk '{sum += $1} END {print\
    \ sum}'", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local\
    \ char=${1:$i:1}\n        local char_ascii=$(printf \"%d\" \"'$char\")\n     \
    \   if [[ $char_ascii -ge 65 && $char_ascii -le 90 ]]; then\n            sum=$((sum\
    \ + char_ascii))\n        fi\n    done\n    echo $sum", "  echo $1 | grep -o '[A-Z]'\
    \ | awk '{s+=$1} END {print s}'", "    local sum=0\n    local char\n    for ((\
    \ i=0; i<${#1}; i++ )); do\n        char=${1:$i:1}\n        if [[ $char =~ [A-Z]\
    \ ]]; then\n            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n\
    \    done\n    echo $sum"]
stop_tokens:
- "\n}"

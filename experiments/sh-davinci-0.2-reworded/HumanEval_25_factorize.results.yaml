language: sh
name: HumanEval_25_factorize
results:
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while (( number > 1 )); do\n        if (( number % factor == 0 )); then\n\
    \            number=$(( number / factor ))\n            factors+=($factor)\n \
    \       else\n            factor=$(( factor + 1 ))\n        fi\n    done\n   \
    \ echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\")\
    \ = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"\
    57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $n -gt 1 ]; do\n        while [ $((n % i)) -eq 0 ]; do\n            factors+=($i)\n\
    \            n=$((n / i))\n        done\n        i=$((i + 1))\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ \"$number\" -gt 1 ]; do\n        while [ $((number % factor)) -eq\
    \ 0 ]; do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n\
    \            factors+=($factor)\n            number=$((number / factor))\n   \
    \     else\n            factor=$((factor + 1))\n        fi\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local number=$1\n    local divisor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % divisor)) -eq 0\
    \ ]; do\n            factors+=($divisor)\n            number=$((number / divisor))\n\
    \        done\n        divisor=$((divisor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            number=$((number / factor))\n            factors+=($factor)\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local num=$1\n    local factors=()\n    local factor=2\n  \
    \  while [ $num -gt 1 ]; do\n        while [ $((num % factor)) -eq 0 ]; do\n \
    \           factors+=($factor)\n            num=$((num / factor))\n        done\n\
    \        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n       \
    \     factors+=($i)\n            number=$((number / i))\n        else\n      \
    \      i=$((i + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\
    \n        return 1\n    fi\n    local n=$1\n    local factors=()\n    local i=2\n\
    \    while [ $i -le $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n        \
    \    factors+=($i)\n            n=$((n / i))\n        else\n            i=$((i\
    \ + 1))\n        fi\n    done\n    echo ${factors[@]}\n}\n\ncandidate() {\n  \
    \  factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n       \
    \     factors+=($i)\n            number=$((number / i))\n        else\n      \
    \      i=$((i + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while (( number > 1 )); do\n        while (( number % factor == 0 )); do\n\
    \            factors+=($factor)\n            number=$(( number / factor ))\n \
    \       done\n        factor=$(( factor + 1 ))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local num=$1\n    local factors=()\n    local factor=2\n  \
    \  while (( num > 1 )); do\n        while (( num % factor == 0 )); do\n      \
    \      factors+=($factor)\n            (( num /= factor ))\n        done\n   \
    \     (( factor++ ))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local num=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $num ]; do\n        if [ $((num % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            num=$((num / i))\n        else\n            i=$((i + 1))\n      \
    \  fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n\
    \            number=$((number / factor))\n            factors+=($factor)\n   \
    \     else\n            factor=$((factor + 1))\n        fi\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n\
    \            factors+=($factor)\n            number=$((number / factor))\n   \
    \     else\n            factor=$((factor + 1))\n        fi\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $n -gt 1 ]; do\n        while [ $((n % i)) -eq 0 ]; do\n            factors+=($i)\n\
    \            n=$((n / i))\n        done\n        i=$((i + 1))\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while (( number > 1 )); do\n        while (( number % factor == 0 )); do\n\
    \            factors+=($factor)\n            (( number /= factor ))\n        done\n\
    \        (( factor++ ))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local i=2\n    while\
    \ (( i <= number )); do\n        if (( number % i == 0 )); then\n            factors+=($i)\n\
    \            number=$(( number / i ))\n        else\n            (( i++ ))\n \
    \       fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    if [[ $1 =~ ^[0-9]+$ ]]; then\n        local factors=()\n \
    \       local i=2\n        while [ $i -le $1 ]; do\n            if [ $(( $1 %\
    \ $i )) -eq 0 ]; then\n                factors+=($i)\n                local j=$((\
    \ $1 / $i ))\n                if [ $j -eq 1 ]; then\n                    break\n\
    \                else\n                    local k=$(( $1 / $j ))\n          \
    \          if [ $k -eq 1 ]; then\n                        factors+=($j)\n    \
    \                    break\n                    else\n                       \
    \ local l=$(( $1 / $k ))\n                        if [ $l -eq 1 ]; then\n    \
    \                        factors+=($j)\n                            factors+=($k)\n\
    \                            break\n                        else\n           \
    \                 local m=$(( $1 / $l ))\n                            if [ $m\
    \ -eq 1 ]; then\n                                factors+=($j)\n             \
    \                   factors+=($k)\n                                factors+=($l)\n\
    \                                break\n                            else\n   \
    \                             local n=$(( $1 / $m ))\n                       \
    \         if [ $n -eq 1 ]; then\n                                    factors+=($j)\n\
    \                                    factors+=($k)\n                         \
    \           factors+=($l)\n                                    factors+=($m)\n\
    \                                    break\n                                else\n\
    \                                    factors+=($j)\n                         \
    \           factors+=($k)\n                                    factors+=($l)\n\
    \                                    factors+=($m)\n                         \
    \           factors+=($n)\n                                    break\n       \
    \                         fi\n                            fi\n               \
    \         fi\n                    fi\n                fi\n            fi\n   \
    \         i=$(( $i + 1 ))\n        done\n        echo ${factors[@]}\n    else\n\
    \        echo \"Input is not an integer\"\n    fi\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            number=$((number / factor))\n            factors+=($factor)\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local -a factors\n    local -i n=$1\n    local -i i=2\n   \
    \ while ((n > 1)); do\n        while ((n % i == 0)); do\n            factors+=($i)\n\
    \            ((n /= i))\n        done\n        ((i++))\n    done\n    echo \"\
    ${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local num=$1\n    local factors=()\n    local factor=2\n  \
    \  while [ $num -gt 1 ]; do\n        while [ $((num % factor)) -eq 0 ]; do\n \
    \           factors+=($factor)\n            num=$((num / factor))\n        done\n\
    \        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local -r number=$1\n    local -r factors=$(factor $number)\n\
    \    local -r factor_count=$(echo $factors | wc -w)\n    local -r factor_list=$(echo\
    \ $factors | tr ' ' ',')\n    local -r json_array=\"[\"$(printf '\"%s\",' $factor_list\
    \ | sed 's/,$//')\"]\"\n    echo $json_array\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    local count=0\n    while [ $number -gt 1 ]; do\n        if [ $((number %\
    \ factor)) -eq 0 ]; then\n            number=$((number / factor))\n          \
    \  ((count++))\n        else\n            if [ $count -gt 0 ]; then\n        \
    \        factors+=(\"$factor\")\n                count=0\n            fi\n   \
    \         ((factor++))\n        fi\n    done\n    if [ $count -gt 0 ]; then\n\
    \        factors+=(\"$factor\")\n    fi\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n  local number=$1\n  local factors=()\n  local factor=2\n  local\
    \ count=0\n  while [ $number -gt 1 ]; do\n    if [ $((number % factor)) -eq 0\
    \ ]; then\n      number=$((number / factor))\n      count=$((count + 1))\n   \
    \ else\n      if [ $count -gt 0 ]; then\n        factors+=($factor)\n        count=0\n\
    \      fi\n      factor=$((factor + 1))\n    fi\n  done\n  if [ $count -gt 0 ];\
    \ then\n    factors+=($factor)\n  fi\n  echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local num=$1\n    local factors=()\n    local factor=2\n  \
    \  while (( num > 1 )); do\n        if (( num % factor == 0 )); then\n       \
    \     factors+=($factor)\n            num=$(( num / factor ))\n        else\n\
    \            factor=$(( factor + 1 ))\n        fi\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n\
    \            factors+=($factor)\n            number=$((number / factor))\n   \
    \     else\n            factor=$((factor + 1))\n        fi\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local integer=$1\n    local factors=()\n    local factor=2\n\
    \    local quotient=0\n    local remainder=0\n    local factor_count=0\n    local\
    \ factor_string=''\n    local factor_list=''\n\n    while [ $integer -gt 1 ];\
    \ do\n        quotient=$((integer / factor))\n        remainder=$((integer % factor))\n\
    \        if [ $remainder -eq 0 ]; then\n            factors+=($factor)\n     \
    \       integer=$quotient\n        else\n            factor=$((factor + 1))\n\
    \        fi\n    done\n\n    for factor in ${factors[@]}; do\n        factor_count=$(echo\
    \ ${factors[@]} | tr ' ' '\\n' | grep -c $factor)\n        factor_string=$(printf\
    \ '\"%s\"' $factor)\n        factor_list+=$(printf '%s,' $(seq 1 $factor_count\
    \ | xargs -I{} printf $factor_string))\n    done\n\n    echo \"[${factor_list::-1}]\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n       \
    \     factors+=($i)\n            number=$((number / i))\n        else\n      \
    \      i=$((i + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    local i=0\n    while [ $number -gt 1 ]; do\n        if [ $((number % factor))\
    \ -eq 0 ]; then\n            number=$((number / factor))\n            factors[$i]=$factor\n\
    \            i=$((i + 1))\n        else\n            factor=$((factor + 1))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n       \
    \     factors+=($i)\n            number=$((number / i))\n        else\n      \
    \      i=$((i + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local result=()\n    local i=2\n    while [\
    \ $i -le $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            result+=($i)\n\
    \            n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n       \
    \     factors+=($i)\n            number=$((number / i))\n        else\n      \
    \      i=$((i + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    local i=0\n    while [ $number -gt 1 ]; do\n        if [ $((number % factor))\
    \ -eq 0 ]; then\n            factors[$i]=$factor\n            number=$((number\
    \ / factor))\n            i=$((i + 1))\n        else\n            factor=$((factor\
    \ + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n\
    \    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\")\
    \ = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local num=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $num ]; do\n        if [ $((num % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            num=$((num / i))\n        else\n            i=$((i + 1))\n      \
    \  fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local num=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $num -gt 1 ]; do\n        while [ $((num % i)) -eq 0 ]; do\n            factors+=($i)\n\
    \            num=$((num / i))\n        done\n        i=$((i + 1))\n    done\n\
    \    echo ${factors[@]}\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\")\
    \ = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"\
    57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local factor=2\n    while\
    \ [ $n -gt 1 ]; do\n        while [ $((n % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            n=$((n / factor))\n        done\n        factor=$((factor + 1))\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local divisor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % divisor)) -eq 0\
    \ ]; do\n            factors+=($divisor)\n            number=$((number / divisor))\n\
    \        done\n        divisor=$((divisor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\
    \n        return 1\n    fi\n    local number=$1\n    local factors=()\n    local\
    \ divisor=2\n    while [ $number -gt 1 ]; do\n        while [ $((number % divisor))\
    \ -eq 0 ]; do\n            factors+=($divisor)\n            number=$((number /\
    \ divisor))\n        done\n        divisor=$((divisor + 1))\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $(($n % $i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$(($n / $i))\n        else\n            i=$(($i + 1))\n       \
    \ fi\n    done\n    echo ${factors[@]}\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n  local number=\"$1\"\n  local factors=()\n  local factor=2\n \
    \ while [ \"$number\" -gt 1 ]; do\n    if [ \"$((number % factor))\" -eq 0 ];\
    \ then\n      factors+=(\"$factor\")\n      number=\"$((number / factor))\"\n\
    \    else\n      factor=\"$((factor + 1))\"\n    fi\n  done\n  echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local -i n=$1\n    local -i i=2\n    local -a factors\n   \
    \ while ((n > 1)); do\n        if ((n % i == 0)); then\n            factors+=($i)\n\
    \            ((n /= i))\n        else\n            ((i++))\n        fi\n    done\n\
    \    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n  local number=$1\n  local factors=()\n  local factor=2\n  local\
    \ i=0\n  while [ $number -gt 1 ]; do\n    if [ $((number % factor)) -eq 0 ]; then\n\
    \      factors[$i]=$factor\n      number=$((number / factor))\n      i=$((i +\
    \ 1))\n    else\n      factor=$((factor + 1))\n    fi\n  done\n  echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local num=$1\n    local factors=()\n    local factor=2\n  \
    \  while [ $num -gt 1 ]; do\n        while [ $((num % factor)) -eq 0 ]; do\n \
    \           factors+=($factor)\n            num=$((num / factor))\n        done\n\
    \        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local divisor=2\n\
    \    local quotient=0\n    local remainder=0\n    local factor=0\n    local i=0\n\
    \    local j=0\n    local result=()\n\n    while [ $number -gt 1 ]; do\n     \
    \   quotient=$(($number / $divisor))\n        remainder=$(($number % $divisor))\n\
    \        if [ $remainder -eq 0 ]; then\n            factors[$i]=$divisor\n   \
    \         i=$(($i + 1))\n            number=$quotient\n        else\n        \
    \    divisor=$(($divisor + 1))\n        fi\n    done\n\n    for factor in ${factors[@]};\
    \ do\n        for ((j=0; j<$i; j++)); do\n            if [ $factor -eq ${factors[$j]}\
    \ ]; then\n                result[$j]=$factor\n            fi\n        done\n\
    \    done\n\n    echo ${result[@]}\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n  local number=$1\n  local factors=()\n  local factor=2\n  while\
    \ [ $number -gt 1 ]; do\n    if [ $((number % factor)) -eq 0 ]; then\n      factors+=($factor)\n\
    \      number=$((number / factor))\n    else\n      factor=$((factor + 1))\n \
    \   fi\n  done\n  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[\
    \ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local factor=2\n    while\
    \ [ $n -gt 1 ]; do\n        while [ $((n % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            n=$((n / factor))\n        done\n        factor=$((factor + 1))\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while (( number > 1 )); do\n        while (( number % factor == 0 )); do\n\
    \            factors+=($factor)\n            (( number /= factor ))\n        done\n\
    \        (( factor++ ))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    local i=0\n    while [ $number -gt 1 ]; do\n        while [ $((number % factor))\
    \ -eq 0 ]; do\n            factors[$i]=$factor\n            number=$((number /\
    \ factor))\n            ((i++))\n        done\n        ((factor++))\n    done\n\
    \    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $(( n % i )) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$(( n / i ))\n        else\n            i=$(( i + 1 ))\n      \
    \  fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    if [[ $1 =~ ^[0-9]+$ ]]; then\n        local factors=()\n \
    \       local divisor=2\n        local dividend=$1\n        while [ $divisor -le\
    \ $dividend ]; do\n            if [ $((dividend % divisor)) -eq 0 ]; then\n  \
    \              factors+=($divisor)\n                dividend=$((dividend / divisor))\n\
    \            else\n                divisor=$((divisor + 1))\n            fi\n\
    \        done\n        echo \"${factors[@]}\"\n    else\n        echo \"Error:\
    \ $1 is not an integer\"\n    fi\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ (( i <= n )); do\n        if (( n % i == 0 )); then\n            factors+=($i)\n\
    \            n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while (( number > 1 )); do\n        while (( number % factor == 0 )); do\n\
    \            factors+=($factor)\n            number=$(( number / factor ))\n \
    \       done\n        factor=$(( factor + 1 ))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    local\
    \ f\n    while [ $n -gt 1 ]; do\n        f=0\n        while [ $(($n % $i)) -eq\
    \ 0 ]; do\n            n=$(($n / $i))\n            f=$(($f + 1))\n        done\n\
    \        if [ $f -gt 0 ]; then\n            factors+=($i)\n        fi\n      \
    \  i=$(($i + 1))\n    done\n    echo ${factors[@]}\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local divisor=2\n\
    \    while (( number > 1 )); do\n        while (( number % divisor == 0 )); do\n\
    \            factors+=($divisor)\n            number=$(( number / divisor ))\n\
    \        done\n        divisor=$(( divisor + 1 ))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local result=()\n    local n=$1\n    local i=2\n    while ((\
    \ i <= n )); do\n        if (( n % i == 0 )); then\n            result+=($i)\n\
    \            n=$(( n / i ))\n        else\n            (( i++ ))\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $number ]; do\n        if [ $(($number % $i)) -eq 0 ]; then\n     \
    \       factors+=($i)\n            number=$(($number / $i))\n        else\n  \
    \          i=$(($i + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\
    \ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local divisor=2\n\
    \    while [ $number -gt 1 ]; do\n        if [ $((number % divisor)) -eq 0 ];\
    \ then\n            factors+=($divisor)\n            number=$((number / divisor))\n\
    \        else\n            divisor=$((divisor + 1))\n        fi\n    done\n  \
    \  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n  local number=$1\n  local factors=()\n  local factor=2\n  while\
    \ (( number > 1 )); do\n    if (( number % factor == 0 )); then\n      number=$((\
    \ number / factor ))\n      factors+=($factor)\n    else\n      factor=$(( factor\
    \ + 1 ))\n    fi\n  done\n  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        if [ $(( number % factor )) -eq 0 ];\
    \ then\n            number=$(( number / factor ))\n            factors+=($factor)\n\
    \        else\n            factor=$(( factor + 1 ))\n        fi\n    done\n  \
    \  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=\"$1\"\n    local factors=()\n    local divisor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % divisor)) -eq 0\
    \ ]; do\n            factors+=($divisor)\n            number=$((number / divisor))\n\
    \        done\n        divisor=$((divisor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            number=$((number / factor))\n            factors+=($factor)\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local num=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $num -gt 1 ]; do\n        if [ $(($num % $i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            num=$(($num / $i))\n        else\n            i=$(($i + 1))\n   \
    \     fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=\"$1\"\n    local factors=()\n    local factor=2\n\
    \    while (( number > 1 )); do\n        while (( number % factor == 0 )); do\n\
    \            factors+=($factor)\n            number=$(( number / factor ))\n \
    \       done\n        factor=$(( factor + 1 ))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local f=2\n    while\
    \ [ $n -gt 1 ]; do\n        if [ $((n % f)) -eq 0 ]; then\n            factors+=($f)\n\
    \            n=$((n / f))\n        else\n            f=$((f + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n       \
    \     factors+=($i)\n            number=$((number / i))\n        else\n      \
    \      i=$((i + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $factor -le $number ]; do\n        if [ $((number % factor)) -eq\
    \ 0 ]; then\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        else\n            factor=$((factor + 1))\n        fi\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n  local number=$1\n  local factors=()\n  local factor=2\n  while\
    \ [ $number -gt 1 ]; do\n    while [ $((number % factor)) -eq 0 ]; do\n      factors+=($factor)\n\
    \      number=$((number / factor))\n    done\n    factor=$((factor + 1))\n  done\n\
    \  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n  local number=$1\n  local factors=()\n  local factor=2\n  while\
    \ [ $number -gt 1 ]; do\n    while [ $((number % factor)) -eq 0 ]; do\n      factors+=($factor)\n\
    \      number=$((number / factor))\n    done\n    factor=$((factor + 1))\n  done\n\
    \  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            number=$((number / factor))\n            factors+=(\"$factor\"\
    )\n        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local f=2\n    while\
    \ [ $n -gt 1 ]; do\n        while [ $((n % f)) -eq 0 ]; do\n            factors+=($f)\n\
    \            n=$((n / f))\n        done\n        f=$((f + 1))\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while ((number > 1)); do\n        if ((number % factor == 0)); then\n   \
    \         number=$((number / factor))\n            factors+=($factor)\n      \
    \  else\n            factor=$((factor + 1))\n        fi\n    done\n    echo \"\
    ${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ ((n > 1)); do\n        while ((n % i == 0)); do\n            factors+=($i)\n\
    \            ((n /= i))\n        done\n        ((i++))\n    done\n    echo \"\
    ${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n       \
    \     factors+=($i)\n            number=$((number / i))\n        else\n      \
    \      i=$((i + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n\
    \            number=$((number / factor))\n            factors+=($factor)\n   \
    \     else\n            factor=$((factor + 1))\n        fi\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n       \
    \     factors+=($i)\n            number=$((number / i))\n        else\n      \
    \      i=$((i + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n       \
    \     factors+=($i)\n            number=$((number / i))\n        else\n      \
    \      i=$((i + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n\
    \            number=$((number / factor))\n            factors+=($factor)\n   \
    \     else\n            factor=$((factor + 1))\n        fi\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=\"$1\"\n    local factors=()\n    local divisor=2\n\
    \    while [ \"$number\" -gt 1 ]; do\n        if [ \"$((number % divisor))\" -eq\
    \ 0 ]; then\n            factors+=(\"$divisor\")\n            number=\"$((number\
    \ / divisor))\"\n        else\n            divisor=\"$((divisor + 1))\"\n    \
    \    fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\
    \n        return 1\n    fi\n    local num=$1\n    local factors=()\n    local\
    \ i=2\n    while [ $i -le $num ]; do\n        if [ $((num % i)) -eq 0 ]; then\n\
    \            factors+=($i)\n            num=$((num / i))\n        else\n     \
    \       i=$((i + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\n\
    candidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n       \
    \     number=$((number / i))\n            factors+=($i)\n        else\n      \
    \      i=$((i + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        if [ $(($number % $factor)) -eq 0 ];\
    \ then\n            number=$(($number / $factor))\n            factors+=($factor)\n\
    \        else\n            factor=$(($factor + 1))\n        fi\n    done\n   \
    \ echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\")\
    \ = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"\
    57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local -a factors\n    local -i n=$1\n    local -i i=2\n   \
    \ while (( n > 1 )); do\n        while (( n % i == 0 )); do\n            factors+=(\
    \ \"$i\" )\n            (( n /= i ))\n        done\n        (( i++ ))\n    done\n\
    \    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local divisor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % divisor)) -eq 0\
    \ ]; do\n            factors+=($divisor)\n            number=$((number / divisor))\n\
    \        done\n        divisor=$((divisor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local factors=()\n    local factor=2\n    local number=$1\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n       \
    \     factors+=($i)\n            number=$((number / i))\n        else\n      \
    \      i=$((i + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n\
    \            factors+=($factor)\n            number=$((number / factor))\n   \
    \     else\n            factor=$((factor + 1))\n        fi\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n  local number=$1\n  local factors=()\n  local factor=2\n  while\
    \ (( number > 1 )); do\n    while (( number % factor == 0 )); do\n      factors+=($factor)\n\
    \      number=$(( number / factor ))\n    done\n    factor=$(( factor + 1 ))\n\
    \  done\n  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $n -gt 1 ]; do\n        while [ $((n % i)) -eq 0 ]; do\n            n=$((n\
    \ / i))\n            factors+=($i)\n        done\n        i=$((i + 1))\n    done\n\
    \    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [[ $number -gt 1 ]]; do\n        while [[ $((number % factor)) -eq\
    \ 0 ]]; do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $n -gt 1 ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local -a factors\n    local -i number=$1\n    local -i divisor=2\n\
    \    local -i remainder\n    while (( number > 1 )); do\n        remainder=$((\
    \ number % divisor ))\n        if (( remainder == 0 )); then\n            number=$((\
    \ number / divisor ))\n            factors+=( \"$divisor\" )\n        else\n \
    \           (( divisor++ ))\n        fi\n    done\n    echo \"${factors[@]}\"\n\
    }\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n  local number=$1\n  local factors=()\n  local i=2\n  while ((\
    \ number > 1 )); do\n    if (( number % i == 0 )); then\n      factors+=($i)\n\
    \      number=$(( number / i ))\n    else\n      (( i++ ))\n    fi\n  done\n \
    \ echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\")\
    \ = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"\
    57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local factor=2\n    while\
    \ [ $n -gt 1 ]; do\n        while [ $((n % factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            n=$((n / factor))\n        done\n        factor=$((factor + 1))\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local divisor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % divisor)) -eq 0\
    \ ]; do\n            factors+=($divisor)\n            number=$((number / divisor))\n\
    \        done\n        divisor=$((divisor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n  local number=$1\n  local factors=()\n  local factor=2\n  while\
    \ [ $number -gt 1 ]; do\n    while [ $((number % factor)) -eq 0 ]; do\n      factors+=($factor)\n\
    \      number=$((number / factor))\n    done\n    factor=$((factor + 1))\n  done\n\
    \  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: -1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local -a factors\n    local -i i=2\n    local -i n=$1\n   \
    \ while (( i <= n )); do\n        if (( n % i == 0 )); then\n            factors+=($i)\n\
    \            n /= i\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=25 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=17 encoding='utf-8'>
  timestamp: 1660010754
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local divisor=2\n\
    \    while [ $number -gt 1 ]; do\n        if [ $((number % divisor)) -eq 0 ];\
    \ then\n            factors+=($divisor)\n            number=$((number / divisor))\n\
    \        else\n            divisor=$((divisor + 1))\n        fi\n    done\n  \
    \  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local -a factors\n    local -i i=2\n    local -i n=$1\n   \
    \ while (( n > 1 )); do\n        while (( n % i == 0 )); do\n            factors+=($i)\n\
    \            (( n /= i ))\n        done\n        (( i++ ))\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n  local number=$1\n  local factors=()\n  local factor=2\n  while\
    \ (( number > 1 )); do\n    while (( number % factor == 0 )); do\n      factors+=($factor)\n\
    \      number=$(( number / factor ))\n    done\n    factor=$(( factor + 1 ))\n\
    \  done\n  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n  local number=$1\n  local factors=()\n  local factor=2\n  while\
    \ [ $number -gt 1 ]; do\n    if [ $((number % factor)) -eq 0 ]; then\n      number=$((number\
    \ / factor))\n      factors+=($factor)\n    else\n      factor=$((factor + 1))\n\
    \    fi\n  done\n  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[\
    \ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $n -gt 1 ]; do\n        while [ $((n % i)) -eq 0 ]; do\n            factors+=($i)\n\
    \            n=$((n / i))\n        done\n        i=$((i + 1))\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $n -gt 1 ]; do\n        while [ $((n % i)) -eq 0 ]; do\n            factors+=($i)\n\
    \            n=$((n / i))\n        done\n        i=$((i + 1))\n    done\n    echo\
    \ ${factors[@]}\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    printf \"[%s]\" \"\
    $(join_by ', ' \"${factors[@]}\")\"\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp_rjohq4y.sh: line 24: join_by: command not found

    '
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $number ]; do\n        if [ $(($number % $i)) -eq 0 ]; then\n     \
    \       factors+=($i)\n            number=$(($number / $i))\n        else\n  \
    \          i=$(($i + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\
    \ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n  local n=$1\n  local factors=()\n  local i=2\n  while [ $i -le\
    \ $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n      factors+=($i)\n      n=$((n\
    \ / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local num=$1\n    local factors=()\n    local i=2\n    while\
    \ (( $num > 1 )); do\n        if (( $num % $i == 0 )); then\n            factors+=($i)\n\
    \            num=$(( $num / $i ))\n        else\n            i=$(( $i + 1 ))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $number ]; do\n        if [ $(($number % $i)) -eq 0 ]; then\n     \
    \       number=$(($number / $i))\n            factors+=($i)\n        else\n  \
    \          i=$(($i + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\
    \ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\
    \n        return 1\n    fi\n    local number=$1\n    local factors=()\n    local\
    \ i=2\n    while [ $number -gt 1 ]; do\n        while [ $((number % i)) -eq 0\
    \ ]; do\n            factors+=($i)\n            number=$((number / i))\n     \
    \   done\n        i=$((i + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 2
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    # TODO: implement this function\n    # Hint: use the following\
    \ command to get list of prime numbers\n    # primes=$(seq 2 $1 | awk '{for(i=2;i<=sqrt($1);i++)if($1%i==0){next;}}1')\n\
    \    # Hint: use the following command to get list of prime factors\n    # factors=$(echo\
    \ $primes | awk '{for(i=1;i<=NF;i++){if($1%$i==0){print $i;}}}')\n    # Hint:\
    \ use the following command to get number of times each factor appears in factorization\n\
    \    # echo $factors | awk '{for(i=1;i<=NF;i++){print $i,gsub($i,\"\")}}'\n  \
    \  # Hint: use the following command to get list of factors with number of times\
    \ each factor appears in factorization\n    # echo $factors | awk '{for(i=1;i<=NF;i++){print\
    \ $i,gsub($i,\"\")}}' | awk '{print $1,$2}' | awk '{for(i=1;i<=$2;i++){print $1}}'\n\
    \    # Hint: use the following command to get list of factors with number of times\
    \ each factor appears in factorization in JSON format\n    # echo $factors | awk\
    \ '{for(i=1;i<=NF;i++){print $i,gsub($i,\"\")}}' | awk '{print $1,$2}' | awk '{for(i=1;i<=$2;i++){print\
    \ $1}}' | awk '{print \"\\\"\"$1\"\\\"\"}' | awk '{printf \"[\"}1' | awk '{printf\
    \ \",\"}1' | awk '{printf \"]\"}1'\n}\n\ncandidate() {\n    factorize \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpat4fqnz0.sh: line 25: syntax error near unexpected token `}''

    /tmp/tmpat4fqnz0.sh: line 25: `}''

    '
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $(($n % $i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$(($n / $i))\n        else\n            i=$(($i + 1))\n       \
    \ fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local -a factors\n    local -i n=$1\n    local -i i=2\n   \
    \ while (( n > 1 )); do\n        if (( n % i == 0 )); then\n            factors+=(\
    \ \"$i\" )\n            n=$(( n / i ))\n        else\n            (( i++ ))\n\
    \        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\
    \n        return 1\n    fi\n    local num=$1\n    local factors=()\n    local\
    \ i=2\n    while [ $num -gt 1 ]; do\n        if [ $((num % i)) -eq 0 ]; then\n\
    \            factors+=($i)\n            num=$((num / i))\n        else\n     \
    \       i=$((i + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\n\
    candidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    if [ $# -ne 1 ]; then\n        echo \"Usage: $0 <integer>\"\
    \n        return 1\n    fi\n    local num=$1\n    local factors=()\n    local\
    \ i=2\n    while [ $num -gt 1 ]; do\n        while [ $((num % i)) -eq 0 ]; do\n\
    \            factors+=($i)\n            num=$((num / i))\n        done\n     \
    \   i=$((i + 1))\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n \
    \   factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"\
    2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\"\
    ) = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n\
    \    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\"\
    ) = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local -a factors\n    local n=$1\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [[ $number -gt 1 ]]; do\n        while [[ $((number % factor)) -eq\
    \ 0 ]]; do\n            number=$((number / factor))\n            factors+=($factor)\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $(($n % $i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$(($n / $i))\n        else\n            i=$(($i + 1))\n       \
    \ fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local num=$1\n    local factors=()\n    local i=2\n    local\
    \ factor\n    while [[ $num -gt 1 ]]; do\n        if [[ $((num % i)) -eq 0 ]];\
    \ then\n            num=$((num / i))\n            factors+=($i)\n        else\n\
    \            i=$((i + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n\
    }\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor\n \
    \   local i\n    for ((i=2; i<=number; i++)); do\n        if ((number % i == 0));\
    \ then\n            factor=$i\n            factors+=($factor)\n            number=$((number\
    \ / factor))\n            i=1\n        fi\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local divisor=2\n\
    \    while [ $number -gt 1 ]; do\n        if [ $(($number % $divisor)) == 0 ];\
    \ then\n            number=$(($number / $divisor))\n            factors+=($divisor)\n\
    \        else\n            divisor=$(($divisor + 1))\n        fi\n    done\n \
    \   echo ${factors[@]}\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\")\
    \ = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"\
    57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ ((n > 1)); do\n        while ((n % i == 0)); do\n            factors+=($i)\n\
    \            ((n /= i))\n        done\n        ((i++))\n    done\n    echo \"\
    ${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $(($n % $i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$(($n / $i))\n        else\n            i=$(($i + 1))\n       \
    \ fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    local max_factor=$(echo \"sqrt($number)\" | bc)\n    while [ $number -gt\
    \ 1 ]; do\n        while [ $(($number % $factor)) -eq 0 ]; do\n            factors+=($factor)\n\
    \            number=$(($number / $factor))\n        done\n        factor=$(($factor\
    \ + 1))\n        if [ $factor -gt $max_factor ]; then\n            factors+=($number)\n\
    \            break\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local result=()\n    local number=$1\n    local divisor=2\n\
    \    while [ $number -gt 1 ]; do\n        if [ $((number % divisor)) -eq 0 ];\
    \ then\n            result+=(\"$divisor\")\n            number=$((number / divisor))\n\
    \        else\n            divisor=$((divisor + 1))\n        fi\n    done\n  \
    \  echo \"${result[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\")\
    \ = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"\
    57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local divisor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % divisor)) -eq 0\
    \ ]; do\n            factors+=($divisor)\n            number=$((number / divisor))\n\
    \        done\n        divisor=$((divisor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n  local number=$1\n  local factors=()\n  local factor=2\n  while\
    \ [ $number -gt 1 ]; do\n    if [ $((number % factor)) -eq 0 ]; then\n      number=$((number\
    \ / factor))\n      factors+=($factor)\n    else\n      factor=$((factor + 1))\n\
    \    fi\n  done\n  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[\
    \ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local -a factors\n    local -i n=$1\n    local -i i=2\n   \
    \ while ((i*i <= n)); do\n        if ((n % i == 0)); then\n            factors+=($i)\n\
    \            ((n /= i))\n        else\n            ((i++))\n        fi\n    done\n\
    \    if ((n > 1)); then\n        factors+=($n)\n    fi\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local num=$1\n    local factors=()\n    local divisor=2\n \
    \   while [ $num -gt 1 ]; do\n        while [ $((num % divisor)) -eq 0 ]; do\n\
    \            factors+=($divisor)\n            num=$((num / divisor))\n       \
    \ done\n        divisor=$((divisor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local divisor=2\n\
    \    while [ $number -gt 1 ]; do\n        if [ $((number % divisor)) -eq 0 ];\
    \ then\n            number=$((number / divisor))\n            factors+=($divisor)\n\
    \        else\n            divisor=$((divisor + 1))\n        fi\n    done\n  \
    \  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local divisor=2\n\
    \    while ((number > 1)); do\n        while ((number % divisor == 0)); do\n \
    \           factors+=($divisor)\n            number=$((number / divisor))\n  \
    \      done\n        divisor=$((divisor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n       \
    \     factors+=(\"$i\")\n            number=$((number / i))\n        else\n  \
    \          i=$((i + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\
    \ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n       \
    \     factors+=($i)\n            number=$((number / i))\n        else\n      \
    \      i=$((i + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n\
    \            number=$((number / factor))\n            factors+=($factor)\n   \
    \     else\n            factor=$((factor + 1))\n        fi\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local divisor=2\n\
    \    while [ $number -gt 1 ]; do\n        if [ $((number % divisor)) -eq 0 ];\
    \ then\n            factors+=($divisor)\n            number=$((number / divisor))\n\
    \        else\n            divisor=$((divisor + 1))\n        fi\n    done\n  \
    \  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local divisor=2\n\
    \    while [ $number -gt 1 ]; do\n        if [ $((number % divisor)) -eq 0 ];\
    \ then\n            factors+=($divisor)\n            number=$((number / divisor))\n\
    \        else\n            divisor=$((divisor + 1))\n        fi\n    done\n  \
    \  echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    local count=0\n    while [ $number -gt 1 ]; do\n        if [ $((number %\
    \ factor)) -eq 0 ]; then\n            number=$((number / factor))\n          \
    \  count=$((count + 1))\n        else\n            if [ $count -gt 0 ]; then\n\
    \                factors+=(\"$factor\")\n            fi\n            factor=$((factor\
    \ + 1))\n            count=0\n        fi\n    done\n    if [ $count -gt 0 ]; then\n\
    \        factors+=(\"$factor\")\n    fi\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: -1
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local -a factors\n    local -i i=2\n    local -i n=$1\n   \
    \ while (( i <= n )); do\n        if (( n % i == 0 )); then\n            factors+=($i)\n\
    \            n /= i\n        else\n            (( i++ ))\n        fi\n    done\n\
    \    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=25 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=17 encoding='utf-8'>
  timestamp: 1660010754
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local -a factors\n    local -i n=$1\n    local -i i=2\n   \
    \ while ((n > 1)); do\n        if ((n % i == 0)); then\n            factors+=($i)\n\
    \            ((n /= i))\n        else\n            ((i++))\n        fi\n    done\n\
    \    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $n -gt 1 ]; do\n        while [ $((n % i)) -eq 0 ]; do\n            factors+=($i)\n\
    \            n=$((n / i))\n        done\n        i=$((i + 1))\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local num=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $num ]; do\n        if [ $((num % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            num=$((num / i))\n        else\n            i=$((i + 1))\n      \
    \  fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n  \
    \  [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n\
    \    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3\
    \ 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[\
    \ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"\
    2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $number -gt 1 ]; do\n        if [ $((number % i)) -eq 0 ]; then\n        \
    \    factors+=($i)\n            number=$((number / i))\n        else\n       \
    \     i=$((i + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n       \
    \     factors+=($i)\n            number=$((number / i))\n        else\n      \
    \      i=$((i + 1))\n        fi\n    done\n    echo ${factors[@]}\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n\
    \            factors+=($factor)\n            number=$((number / factor))\n   \
    \     else\n            factor=$((factor + 1))\n        fi\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n\
    \            number=$((number / factor))\n            factors+=($factor)\n   \
    \     else\n            factor=$((factor + 1))\n        fi\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $number ]; do\n        if [ $((number % i)) -eq 0 ]; then\n       \
    \     factors+=($i)\n            number=$((number / i))\n        else\n      \
    \      i=$((i + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\ncandidate()\
    \ {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\"\
    ) = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\"\
    ) = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n\
    \            factors+=($factor)\n            number=$((number / factor))\n   \
    \     else\n            factor=$((factor + 1))\n        fi\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $number -gt 1 ]; do\n        if [ $(($number % $i)) -eq 0 ]; then\n      \
    \      factors+=($i)\n            number=$(($number / $i))\n        else\n   \
    \         i=$(($i + 1))\n        fi\n    done\n    echo \"${factors[@]}\"\n}\n\
    \ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[ $(candidate\
    \ \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n    [[ $(candidate\
    \ \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\") = \"3 3 3 19 19\
    \ 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n    [[ $(candidate\
    \ \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while (( number > 1 )); do\n        if (( number % factor == 0 )); then\n\
    \            factors+=($factor)\n            number=$(( number / factor ))\n \
    \       else\n            factor=$(( factor + 1 ))\n        fi\n    done\n   \
    \ echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\")\
    \ = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"\
    57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while (( number > 1 )); do\n        if (( number % factor == 0 )); then\n\
    \            factors+=($factor)\n            number=$(( number / factor ))\n \
    \       else\n            factor=$(( factor + 1 ))\n        fi\n    done\n   \
    \ echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\")\
    \ = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"\
    57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    if [[ $1 =~ ^[0-9]+$ ]]; then\n        local factors=()\n \
    \       local divisor=2\n        local number=$1\n        while [ $number -gt\
    \ 1 ]; do\n            if [ $((number % divisor)) -eq 0 ]; then\n            \
    \    factors+=($divisor)\n                number=$((number / divisor))\n     \
    \       else\n                divisor=$((divisor + 1))\n            fi\n     \
    \   done\n        echo \"${factors[@]}\"\n    else\n        echo \"Error: $1 is\
    \ not an integer\"\n    fi\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"\
    4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            number=$((number / factor))\n            factors+=($factor)\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while (( number > 1 )); do\n        while (( number % factor == 0 )); do\n\
    \            factors+=($factor)\n            number=$(( number / factor ))\n \
    \       done\n        factor=$(( factor + 1 ))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local n=$1\n    local factors=()\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        if [ $((n % i)) -eq 0 ]; then\n            factors+=($i)\n\
    \            n=$((n / i))\n        else\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate\
    \ \"4\") = \"2 2\" ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate\
    \ \"57\") = \"3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n   \
    \ [[ $(candidate \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\"\
    ) = \"3 19 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n  local -a factors\n  local -i n=$1\n  local -i i=2\n  while [\
    \ $i -le $n ]; do\n    if [ $((n % i)) -eq 0 ]; then\n      factors+=($i)\n  \
    \    n=$((n / i))\n    else\n      i=$((i + 1))\n    fi\n  done\n  echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        while [ $((number % factor)) -eq 0 ];\
    \ do\n            factors+=($factor)\n            number=$((number / factor))\n\
    \        done\n        factor=$((factor + 1))\n    done\n    echo \"${factors[@]}\"\
    \n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\" ]]\n    [[\
    \ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"3 19\" ]]\n\
    \    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate \"185193\"\
    ) = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19 19 19\" ]]\n\
    \    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749
- exit_code: 0
  program: "#!/bin/bash\n# Return list of prime factors of given integer in the order\
    \ from smallest to largest.\n# Each of the factors should be listed number of\
    \ times corresponding to how many times it appeares in factorization.\n# Input\
    \ number should be equal to the product of all factors\n# >>> $(factorize \"8\"\
    )\n# ['\"2\"', '\"2\"', '\"2\"']\n# >>> $(factorize \"25\")\n# ['\"5\"', '\"5\"\
    ']\n# >>> $(factorize \"70\")\n# ['\"2\"', '\"5\"', '\"7\"']\n#\n# $1 is an integer\n\
    factorize() {\n    local number=$1\n    local factors=()\n    local factor=2\n\
    \    while [ $number -gt 1 ]; do\n        if [ $((number % factor)) -eq 0 ]; then\n\
    \            factors+=($factor)\n            number=$((number / factor))\n   \
    \     else\n            factor=$((factor + 1))\n        fi\n    done\n    echo\
    \ \"${factors[@]}\"\n}\n\ncandidate() {\n    factorize \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"2\" ]]\n    [[ $(candidate \"4\") = \"2 2\"\
    \ ]]\n    [[ $(candidate \"8\") = \"2 2 2\" ]]\n    [[ $(candidate \"57\") = \"\
    3 19\" ]]\n    [[ $(candidate \"3249\") = \"3 3 19 19\" ]]\n    [[ $(candidate\
    \ \"185193\") = \"3 3 3 19 19 19\" ]]\n    [[ $(candidate \"20577\") = \"3 19\
    \ 19 19\" ]]\n    [[ $(candidate \"18\") = \"2 3 3\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010749

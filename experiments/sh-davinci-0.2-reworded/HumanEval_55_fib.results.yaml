language: sh
name: HumanEval_55_fib
results:
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [[ \"$1\" -eq \"1\" ]]; then\n    echo \"1\"\n  elif\
    \ [[ \"$1\" -eq \"2\" ]]; then\n    echo \"1\"\n  else\n    echo \"$(($(fib \"\
    $(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n  fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  if [[ $n -eq 1 ]]; then\n    echo 1\n  elif\
    \ [[ $n -eq 2 ]]; then\n    echo 1\n  else\n    echo $(( $(fib $((n-1))) + $(fib\
    \ $((n-2))) ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ $1 -eq 1 ]; then\n    echo 1\n  elif [ $1 -eq 2 ];\
    \ then\n    echo 1\n  else\n    echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 -\
    \ 2 ))) ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -eq 1 ] || [ $1 -eq 2 ]; then\n        echo 1\n\
    \    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n \
    \   fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  if [ $n -eq 1 ]; then\n    echo 1\n  elif\
    \ [ $n -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fib $((n-1))) + $(fib\
    \ $((n-2))) ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" -eq \"0\" ]; then\n    echo \"0\"\n  elif [\
    \ \"$1\" -eq \"1\" ]; then\n    echo \"1\"\n  else\n    echo \"$(($(fib \"$(($1\
    \ - 1))\") + $(fib \"$(($1 - 2))\")))\"\n  fi\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ] || [ \"$1\" -eq \"1\" ]; then\n\
    \        echo \"$1\"\n    else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib\
    \ $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=\"$1\"\n    local a=0\n    local b=1\n    local\
    \ i=0\n    while [ $i -lt $n ]; do\n        local c=$((a + b))\n        a=$b\n\
    \        b=$c\n        i=$((i + 1))\n    done\n    echo \"$a\"\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010616
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 1 ]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) +\
    \ $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  local a=0\n  local b=1\n  local i=1\n  while\
    \ [ $i -lt $n ]; do\n    local c=$((a + b))\n    a=$b\n    b=$c\n    i=$((i +\
    \ 1))\n  done\n  echo $b\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010616
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [[ $1 -eq 1 ]]; then\n    echo 1\n  elif [[ $1 -eq 2\
    \ ]]; then\n    echo 1\n  else\n    echo $(( $(fib $(( $1 - 1 ))) + $(fib $((\
    \ $1 - 2 ))) ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 1 ]]; then\n        echo 1\n    elif [[ $1\
    \ -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 1 ]]; then\n        echo \"1\"\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo \"1\"\n    else\n        echo \"$(($(fib\
    \ \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local a=0\n    local b=1\n    local i=0\n\
    \    while [ $i -lt $n ]; do\n        local c=$((a + b))\n        a=$b\n     \
    \   b=$c\n        i=$((i + 1))\n    done\n    echo $a\n}\n\ncandidate() {\n  \
    \  fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010616
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" -eq \"0\" ]; then\n    echo \"0\"\n  elif [\
    \ \"$1\" -eq \"1\" ]; then\n    echo \"1\"\n  else\n    echo \"$(($(fib \"$(($1\
    \ - 1))\") + $(fib \"$(($1 - 2))\")))\"\n  fi\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  if [[ $n -eq 0 ]]; then\n    echo 0\n  elif\
    \ [[ $n -eq 1 ]]; then\n    echo 1\n  else\n    echo $(( $(fib $((n-1))) + $(fib\
    \ $((n-2))) ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" -eq \"0\" ]; then\n    echo \"0\"\n  elif [\
    \ \"$1\" -eq \"1\" ]; then\n    echo \"1\"\n  else\n    echo \"$(($(fib \"$(($1\
    \ - 1))\") + $(fib \"$(($1 - 2))\")))\"\n  fi\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" -eq \"0\" ]; then\n    echo \"0\"\n  elif [\
    \ \"$1\" -eq \"1\" ]; then\n    echo \"1\"\n  else\n    echo \"$(($(fib \"$(($1\
    \ - 1))\") + $(fib \"$(($1 - 2))\")))\"\n  fi\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [[ $1 -eq 1 ]]; then\n    echo 1\n  elif [[ $1 -eq 2\
    \ ]]; then\n    echo 1\n  else\n    echo $(( $(fib $(( $1 - 1 ))) + $(fib $((\
    \ $1 - 2 ))) ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local a=0\n    local b=1\n    local i=0\n\
    \    while [ $i -lt $n ]; do\n        local tmp=$a\n        a=$b\n        b=$((\
    \ $a + $tmp ))\n        i=$(( $i + 1 ))\n    done\n    echo $a\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" -eq \"0\" ]; then\n    echo \"0\"\n  elif [\
    \ \"$1\" -eq \"1\" ]; then\n    echo \"1\"\n  else\n    echo \"$(($(fib \"$(($1\
    \ - 1))\") + $(fib \"$(($1 - 2))\")))\"\n  fi\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 1 ]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) +\
    \ $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  if [ $n -eq 1 ]; then\n    echo 1\n  elif\
    \ [ $n -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fib $((n-1))) + $(fib\
    \ $((n-2))) ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ] || [ \"$1\" -eq \"1\" ]; then\n\
    \        echo \"$1\"\n    else\n        echo \"$(($(fib \"$(($1 - 1))\") + $(fib\
    \ \"$(($1 - 2))\")))\";\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1\
    \ ]]; then\n    echo 1\n  else\n    echo $(( $(fib $(( $1 - 1 ))) + $(fib $((\
    \ $1 - 2 ))) ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" -eq \"0\" ]; then\n    echo \"0\"\n  elif [\
    \ \"$1\" -eq \"1\" ]; then\n    echo \"1\"\n  else\n    echo \"$(($(fib \"$(($1\
    \ - 1))\") + $(fib \"$(($1 - 2))\")))\"\n  fi\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ] || [ \"$1\" -eq \"1\" ]; then\n\
    \        echo \"$1\"\n    else\n        echo \"$(($(fib \"$(($1 - 1))\") + $(fib\
    \ \"$(($1 - 2))\")))\";\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 1 ]; then\n        echo 1\n    else\n        echo $(($(fib $(($1-1))) + $(fib\
    \ $(($1-2)))))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" -le 0 ]; then\n    echo \"0\"\n  elif [ \"$1\"\
    \ -eq 1 ]; then\n    echo \"1\"\n  else\n    echo \"$(($(fib \"$(($1 - 1))\")\
    \ + $(fib \"$(($1 - 2))\")))\";\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n\tlocal n=$1\n\tlocal a=0\n\tlocal b=1\n\tlocal i=0\n\twhile\
    \ [ $i -lt $n ]; do\n\t\tlocal c=$((a+b))\n\t\ta=$b\n\t\tb=$c\n\t\ti=$((i+1))\n\
    \tdone\n\techo $a\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ \"$1\" -eq \"1\" ]]; then\n        echo \"1\"\n\
    \    elif [[ \"$1\" -eq \"2\" ]]; then\n        echo \"1\"\n    else\n       \
    \ echo \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\n\
    candidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"\
    8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"\
    12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 0 ]]; then\n        echo \"0\"\n    elif\
    \ [[ $1 -eq 1 ]]; then\n        echo \"1\"\n    else\n        echo \"$(($(fib\
    \ \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 0 ]]; then\n        echo \"0\"\n    elif\
    \ [[ $1 -eq 1 ]]; then\n        echo \"1\"\n    else\n        echo \"$(($(fib\
    \ \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    else\n        echo $(($(fib $(($1-1))) +\
    \ $(fib $(($1-2)))))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ \"$1\" -eq \"1\" ]]; then\n        echo \"1\"\n\
    \    elif [[ \"$1\" -eq \"2\" ]]; then\n        echo \"1\"\n    else\n       \
    \ echo \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\n\
    candidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"\
    8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"\
    12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 1
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -le \"1\" ]; then\n        echo \"1\"\n  \
    \  else\n        echo \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\
    \n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 1 ]]; then\n        echo 1\n    elif [[ $1\
    \ -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 1 ]]; then\n        echo \"1\"\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo \"1\"\n    else\n        echo $(( $(fib $((\
    \ $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 1 ]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) +\
    \ $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local a=0\n    local b=1\n    local c=0\n\
    \    while [ $n -gt 0 ]; do\n        c=$((a+b))\n        a=$b\n        b=$c\n\
    \        n=$((n-1))\n    done\n    echo $a\n}\n\ncandidate() {\n    fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1\
    \ ]]; then\n    echo 1\n  else\n    echo $(( $(fib $(( $1 - 1 ))) + $(fib $((\
    \ $1 - 2 ))) ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local a=0\n    local b=1\n    local i=0\n\
    \    while [ $i -lt $n ]; do\n        local tmp=$a\n        a=$b\n        b=$((a\
    \ + tmp))\n        i=$((i + 1))\n    done\n    echo $a\n}\n\ncandidate() {\n \
    \   fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" -eq \"0\" ]; then\n    echo \"0\"\n  elif [\
    \ \"$1\" -eq \"1\" ]; then\n    echo \"1\"\n  else\n    echo \"$(($(fib \"$(($1\
    \ - 1))\") + $(fib \"$(($1 - 2))\")))\"\n  fi\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 1 ]]; then\n        echo 1\n    elif [[ $1\
    \ -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  local a=0\n  local b=1\n  local i=0\n  while\
    \ [ $i -lt $n ]; do\n    local c=$((a + b))\n    a=$b\n    b=$c\n    i=$((i +\
    \ 1))\n  done\n  echo $a\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local a=0\n    local b=1\n    local c=0\n\
    \    while [ $n -gt 0 ]; do\n        c=$((a+b))\n        a=$b\n        b=$c\n\
    \        n=$((n-1))\n    done\n    echo $a\n}\n\ncandidate() {\n    fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [[ $1 -eq 1 ]]; then\n    echo 1\n  elif [[ $1 -eq 2\
    \ ]]; then\n    echo 1\n  else\n    echo $(( $(fib $(( $1 - 1 ))) + $(fib $((\
    \ $1 - 2 ))) ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" -le \"1\" ]; then\n    echo \"$1\"\n  else\n\
    \    echo \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\";\n  fi\n}\n\
    \ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -lt \"3\" ]; then\n        echo \"1\"\n  \
    \  else\n        echo \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\
    \n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  local a=0\n  local b=1\n  local i=1\n  while\
    \ [ $i -lt $n ]; do\n    local c=$((a + b))\n    a=$b\n    b=$c\n    i=$((i +\
    \ 1))\n  done\n  echo $b\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010616
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 1 ]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) +\
    \ $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  local a=0\n  local b=1\n  local i=1\n  while\
    \ [ $i -lt $n ]; do\n    local c=$((a + b))\n    a=$b\n    b=$c\n    i=$((i +\
    \ 1))\n  done\n  echo $b\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010616
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ \"$1\" -eq \"1\" ]]; then\n        echo \"1\"\n\
    \    elif [[ \"$1\" -eq \"2\" ]]; then\n        echo \"1\"\n    else\n       \
    \ echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=\"$1\"\n  local a=0\n  local b=1\n  local i=1\n\
    \  while [ \"$i\" -lt \"$n\" ]; do\n    local tmp=\"$a\"\n    a=\"$b\"\n    b=$((a\
    \ + tmp))\n    i=$((i + 1))\n  done\n  echo \"$b\"\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) +\
    \ $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) +\
    \ $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 1 ]]; then\n        echo 1\n    elif [[ $1\
    \ -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local a=0\n    local b=1\n    local c=0\n\
    \    for ((i=0; i<n; i++)); do\n        c=$((a+b))\n        a=$b\n        b=$c\n\
    \    done\n    echo $a\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    if [ $n -le 1 ]; then\n        echo $n\n\
    \    else\n        echo $(( $(fib $((n-1))) + $(fib $((n-2))) ))\n    fi\n}\n\n\
    candidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"\
    8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"\
    12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 1 ]]; then\n        echo 1\n    elif [[ $1\
    \ -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ];\
    \ then\n    echo 1\n  else\n    echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 -\
    \ 2 ))) ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ \"$1\" -eq \"1\" ]]; then\n        echo \"1\"\n\
    \    elif [[ \"$1\" -eq \"2\" ]]; then\n        echo \"1\"\n    else\n       \
    \ echo \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\n\
    candidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"\
    8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"\
    12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 1 ]]; then\n        echo \"1\"\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo \"1\"\n    else\n        echo $(( $(fib $((\
    \ $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=\"$1\"\n    local a=0\n    local b=1\n    local\
    \ i=0\n    while [ $i -lt $n ]; do\n        local c=$((a + b))\n        a=$b\n\
    \        b=$c\n        i=$((i + 1))\n    done\n    echo \"$a\"\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010616
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local a=0\n    local b=1\n    local i=0\n\
    \    while [ $i -lt $n ]; do\n        local c=$((a + b))\n        a=$b\n     \
    \   b=$c\n        i=$((i + 1))\n    done\n    echo $a\n}\n\ncandidate() {\n  \
    \  fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010616
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ];\
    \ then\n    echo 1\n  else\n    echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 -\
    \ 2 ))) ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 1 ]]; then\n        echo \"1\"\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo \"1\"\n    else\n        echo \"$(($(fib\
    \ \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  if [[ $n -eq 1 ]]; then\n    echo 1\n  elif\
    \ [[ $n -eq 2 ]]; then\n    echo 1\n  else\n    echo $(( $(fib $((n-1))) + $(fib\
    \ $((n-2))) ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    n=$1\n    if [ $n -le 1 ]; then\n        echo $n\n   \
    \ else\n        echo $(( $(fib $((n-1))) + $(fib $((n-2))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" -eq \"0\" ]; then\n    echo \"0\"\n  elif [\
    \ \"$1\" -eq \"1\" ]; then\n    echo \"1\"\n  else\n    echo \"$(($(fib \"$(($1\
    \ - 1))\") + $(fib \"$(($1 - 2))\")))\"\n  fi\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  if [[ $n -eq 1 ]]; then\n    echo 1\n  elif\
    \ [[ $n -eq 2 ]]; then\n    echo 1\n  else\n    echo $(( $(fib $((n-1))) + $(fib\
    \ $((n-2))) ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 1 ]]; then\n        echo 1\n    elif [[ $1\
    \ -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local a=0\n    local b=1\n    local i=0\n\
    \    while [ $i -lt $n ]; do\n        local tmp=$a\n        a=$b\n        b=$((a\
    \ + tmp))\n        i=$((i + 1))\n    done\n    echo $a\n}\n\ncandidate() {\n \
    \   fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  if [[ $n -eq 0 ]]; then\n    echo \"0\"\n\
    \  elif [[ $n -eq 1 ]]; then\n    echo \"1\"\n  else\n    echo \"$(( $(fib \"\
    $((n-1))\") + $(fib \"$((n-2))\") ))\"\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ] || [ \"$1\" -eq \"1\" ]; then\n\
    \        echo \"$1\"\n    else\n        echo \"$(($(fib \"$(($1 - 1))\") + $(fib\
    \ \"$(($1 - 2))\")))\";\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ] || [ \"$1\" -eq \"1\" ]; then\n\
    \        echo \"$1\"\n    else\n        echo \"$(($(fib \"$(($1 - 1))\") + $(fib\
    \ \"$(($1 - 2))\")))\";\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=\"$1\"\n    local a=0\n    local b=1\n    local\
    \ i=0\n    while [ $i -lt $n ]; do\n        local tmp=$a\n        a=$b\n     \
    \   b=$((a + tmp))\n        i=$((i + 1))\n    done\n    echo $a\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 1 ]]; then\n        echo 1\n    elif [[ $1\
    \ -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local a=0\n    local b=1\n    local i=0\n\
    \    while [ $i -lt $n ]; do\n        local tmp=$a\n        a=$b\n        b=$((\
    \ $a + $tmp ))\n        i=$(( $i + 1 ))\n    done\n    echo $a\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -lt 2 ]; then\n        echo \"$1\"\n    else\n\
    \        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\n\
    candidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"\
    8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"\
    12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local a=0\n    local b=1\n    local c=0\n\
    \    local i=0\n    while [ $i -lt $n ]; do\n        c=$((a+b))\n        a=$b\n\
    \        b=$c\n        i=$((i+1))\n    done\n    echo $a\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -le 0 ]; then\n        echo \"0\"\n    elif [\
    \ $1 -le 2 ]; then\n        echo \"1\"\n    else\n        echo $(( $(fib $(( $1\
    \ - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 1 ]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) +\
    \ $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local a=0\n    local b=1\n    local i=1\n\
    \    while [ $i -lt $n ]; do\n        local c=$((a + b))\n        a=$b\n     \
    \   b=$c\n        i=$((i + 1))\n    done\n    echo $b\n}\n\ncandidate() {\n  \
    \  fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local a=0\n    local b=1\n    local i=1\n\
    \    while [ $i -lt $n ]; do\n        local tmp=$a\n        a=$b\n        b=$((tmp\
    \ + b))\n        i=$((i + 1))\n    done\n    echo $b\n}\n\ncandidate() {\n   \
    \ fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -lt \"3\" ]; then\n        echo \"1\"\n  \
    \  else\n        echo \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\
    \n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[\
    \ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n   \
    \ [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -lt 2 ]; then\n        echo \"$1\"\n    else\n\
    \        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\n\
    candidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"\
    8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"\
    12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 1 ]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) +\
    \ $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -le \"1\" ]; then\n        echo \"$1\"\n \
    \   else\n        echo \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\
    ;\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n \
    \   [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n\
    \    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ $1 -eq 0 ]; then\n    echo \"0\"\n  elif [ $1 -eq 1\
    \ ]; then\n    echo \"1\"\n  else\n    echo $(( $(fib $(( $1 - 1 ))) + $(fib $((\
    \ $1 - 2 ))) ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local a=0\n    local b=1\n    local c=0\n\
    \    local i=0\n    while [ $i -lt $n ]; do\n        c=$((a+b))\n        a=$b\n\
    \        b=$c\n        i=$((i+1))\n    done\n    echo $a\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" -le \"1\" ]; then\n    echo \"$1\"\n  else\n\
    \    echo \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\";\n  fi\n}\n\
    \ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -le \"1\" ]; then\n        echo \"$1\"\n \
    \   else\n        echo $(( $(fib \"$(( $1 - 1 ))\") + $(fib \"$(( $1 - 2 ))\"\
    ) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n\
    \    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n\
    \    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  local a=0\n  local b=1\n  local i=1\n  while\
    \ [ $i -lt $n ]; do\n    local c=$((a + b))\n    a=$b\n    b=$c\n    i=$((i +\
    \ 1))\n  done\n  echo $b\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010616
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 1 ]]; then\n        echo 1\n    elif [[ $1\
    \ -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=\"$1\"\n    local a=0\n    local b=1\n    local\
    \ c=0\n    while [ \"$n\" -gt 0 ]; do\n        c=$((a + b))\n        a=$b\n  \
    \      b=$c\n        n=$((n - 1))\n    done\n    echo \"$a\"\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo 0\n    elif\
    \ [ \"$1\" -eq \"1\" ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n\
    \    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n\
    \    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 1 ]]; then\n        echo \"1\"\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo \"1\"\n    else\n        echo $(( $(fib $((\
    \ $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 1 ]]; then\n        echo 1\n    elif [[ $1\
    \ -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 0 ]]; then\n        echo \"0\"\n    elif\
    \ [[ $1 -eq 1 ]]; then\n        echo \"1\"\n    else\n        echo $(( $(fib $((\
    \ $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" -eq \"0\" ]; then\n    echo \"0\"\n  elif [\
    \ \"$1\" -eq \"1\" ]; then\n    echo \"1\"\n  else\n    echo \"$(($(fib \"$(($1\
    \ - 1))\") + $(fib \"$(($1 - 2))\")))\"\n  fi\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    else\n        echo $(($(fib $(($1-1))) +\
    \ $(fib $(($1-2)))))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ] || [ \"$1\" -eq \"1\" ]; then\n\
    \        echo \"$1\"\n    else\n        echo \"$(($(fib \"$(($1 - 1))\") + $(fib\
    \ \"$(($1 - 2))\")))\";\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    if [ $n -eq 0 ]; then\n        echo 0\n\
    \    elif [ $n -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $((n-1))) + $(fib $((n-2))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    if [ $n -eq 0 ]; then\n        echo 0\n\
    \    elif [ $n -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $((n-1))) + $(fib $((n-2))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    if [[ $n -eq 1 ]]; then\n        echo\
    \ \"1\"\n    elif [[ $n -eq 2 ]]; then\n        echo \"1\"\n    else\n       \
    \ local a=1\n        local b=1\n        local c=0\n        for ((i=3; i<=n; i++));\
    \ do\n            c=$((a+b))\n            a=$b\n            b=$c\n        done\n\
    \        echo \"$c\"\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1\
    \ ]]; then\n    echo 1\n  else\n    echo $(( $(fib $(( $1 - 1 ))) + $(fib $((\
    \ $1 - 2 ))) ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -le \"1\" ]; then\n        echo \"$1\"\n \
    \   else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n  \
    \  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [[ $1 -eq 1 ]]; then\n    echo 1\n  elif [[ $1 -eq 2\
    \ ]]; then\n    echo 1\n  else\n    echo $(( $(fib $(( $1 - 1 ))) + $(fib $((\
    \ $1 - 2 ))) ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  local a=0\n  local b=1\n  local i=1\n  while\
    \ [ $i -lt $n ]; do\n    local c=$((a + b))\n    a=$b\n    b=$c\n    i=$((i +\
    \ 1))\n  done\n  echo $b\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010616
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -le 1 ]; then\n        echo $1\n    else\n   \
    \     echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 1 ]; then\n        echo 1\n    else\n        echo $(($(fib $(($1-1))) + $(fib\
    \ $(($1-2)))))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" -eq \"0\" ]; then\n    echo \"0\"\n  elif [\
    \ \"$1\" -eq \"1\" ]; then\n    echo \"1\"\n  else\n    echo \"$(($(fib \"$(($1\
    \ - 1))\") + $(fib \"$(($1 - 2))\")))\"\n  fi\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -le \"1\" ]; then\n        echo \"$1\"\n \
    \   else\n        echo \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\
    ;\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n \
    \   [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n\
    \    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) +\
    \ $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ \"$1\" -eq \"1\" ]]; then\n        echo \"1\"\n\
    \    elif [[ \"$1\" -eq \"2\" ]]; then\n        echo \"1\"\n    else\n       \
    \ echo \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\n\
    candidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"\
    8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"\
    12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=\"$1\"\n    if [[ $n -eq 1 ]]; then\n        echo\
    \ 1\n    elif [[ $n -eq 2 ]]; then\n        echo 1\n    else\n        echo $((\
    \ $(fib $((n-1))) + $(fib $((n-2))) ))\n    fi\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ];\
    \ then\n    echo 1\n  else\n    echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 -\
    \ 2 ))) ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\";\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 1 ]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) +\
    \ $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 1 ]]; then\n        echo 1\n    elif [[ $1\
    \ -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fib \"$(( $1 -\
    \ 1 ))\") + $(fib \"$(( $1 - 2 ))\") ))\n    fi\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ] || [ \"$1\" -eq \"1\" ]; then\n\
    \        echo \"$1\"\n    else\n        echo \"$(($(fib \"$(($1 - 1))\") + $(fib\
    \ \"$(($1 - 2))\")))\";\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) +\
    \ $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" -eq \"0\" ] || [ \"$1\" -eq \"1\" ]; then\n\
    \    echo \"$1\"\n  else\n    echo \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1\
    \ - 2))\")))\";\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1\
    \ ]]; then\n    echo 1\n  else\n    echo $(( $(fib $(( $1 - 1 ))) + $(fib $((\
    \ $1 - 2 ))) ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -le \"1\" ]; then\n        echo \"$1\"\n \
    \   else\n        echo \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\
    ;\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n \
    \   [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n\
    \    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" -eq 0 ]; then\n    echo 0\n  elif [ \"$1\" -eq\
    \ 1 ]; then\n    echo 1\n  else\n    echo $(( $(fib $(( $1 - 1 ))) + $(fib $((\
    \ $1 - 2 ))) ))\n  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -le \"1\" ]; then\n        echo \"$1\"\n \
    \   else\n        echo \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\
    ;\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n \
    \   [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n\
    \    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -lt 2 ]; then\n        echo $1\n    else\n   \
    \     echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -eq 0 ]\n    then\n        echo 0\n    elif [\
    \ $1 -eq 1 ]\n    then\n        echo 1\n    else\n        echo $(( $(fib $(( $1\
    \ - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -le \"1\" ]; then\n        echo \"$1\"\n \
    \   else\n        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n  \
    \  fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  local a=0\n  local b=1\n  local i=0\n  while\
    \ [ $i -lt $n ]; do\n    local c=$((a + b))\n    a=$b\n    b=$c\n    i=$((i +\
    \ 1))\n  done\n  echo $a\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -lt 2 ]; then\n        echo $1\n    else\n   \
    \     echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" -eq \"0\" ]; then\n    echo \"0\"\n  elif [\
    \ \"$1\" -eq \"1\" ]; then\n    echo \"1\"\n  else\n    echo \"$(($(fib \"$(($1\
    \ - 1))\") + $(fib \"$(($1 - 2))\")))\"\n  fi\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(fib \"$(( $1 -\
    \ 1 ))\") + $(fib \"$(( $1 - 2 ))\") ))\n    fi\n}\n\ncandidate() {\n    fib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[\
    \ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[\
    \ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local a=0\n    local b=1\n    local i=0\n\
    \    while [ $i -lt $n ]; do\n        local tmp=$a\n        a=$b\n        b=$((\
    \ $tmp + $b ))\n        i=$(( $i + 1 ))\n    done\n    echo $a\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 1 ]]; then\n        echo 1\n    elif [[ $1\
    \ -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 1 ]]; then\n        echo 1\n    elif [[ $1\
    \ -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" -lt \"2\" ]; then\n    echo \"$1\"\n  else\n\
    \    echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n  \
    \  elif [ \"$1\" -eq \"1\" ]; then\n        echo \"1\"\n    else\n        echo\
    \ \"$(($(fib \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\";\n    fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 1 ]]; then\n        echo 1\n    elif [[ $1\
    \ -eq 2 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010617
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" -le \"1\" ]; then\n    echo \"$1\"\n  else\n\
    \    echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -lt 2 ]; then\n        echo \"$1\"\n    else\n\
    \        echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\n\
    candidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"\
    8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"\
    12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1\
    \ ))) + $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 1 ]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) +\
    \ $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) +\
    \ $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  if [ \"$1\" -le \"1\" ]; then\n    echo \"$1\"\n  else\n\
    \    echo $(( $(fib $(( $1 - 1 ))) + $(fib $(( $1 - 2 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"\
    55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"\
    21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") =\
    \ \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(($(fib $(( $1 - 1 ))) +\
    \ $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    if [[ $n -eq 0 ]]; then\n        echo\
    \ 0\n    elif [[ $n -eq 1 ]]; then\n        echo 1\n    else\n        local n_1=$(fib\
    \ \"$((n-1))\")\n        local n_2=$(fib \"$((n-2))\")\n        echo \"$((n_1\
    \ + n_2))\"\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -lt 1 ]; then\n        echo \"0\"\n    elif\
    \ [ \"$1\" -eq 1 ]; then\n        echo \"1\"\n    else\n        echo \"$(($(fib\
    \ \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\";\n    fi\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -le 0 ]; then\n        echo \"0\"\n    elif\
    \ [ \"$1\" -eq 1 ]; then\n        echo \"1\"\n    else\n        echo \"$(($(fib\
    \ \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\"\n    fi\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  local a=0\n  local b=1\n  local i=1\n  while\
    \ [ $i -lt $n ]; do\n    local c=$((a + b))\n    a=$b\n    b=$c\n    i=$((i +\
    \ 1))\n  done\n  echo $b\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010616
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 0 ]]; then\n        echo \"0\"\n    elif\
    \ [[ $1 -eq 1 ]]; then\n        echo \"1\"\n    else\n        echo \"$(($(fib\
    \ \"$(($1 - 1))\") + $(fib \"$(($1 - 2))\")))\";\n    fi\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    if [ $n -eq 0 ]; then\n        echo 0\n\
    \    elif [ $n -eq 1 ]; then\n        echo 1\n    else\n        echo $(( $(fib\
    \ $((n-1))) + $(fib $((n-2))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -eq 1 ]; then\n        echo 1\n    elif [ $1 -eq\
    \ 2 ]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) +\
    \ $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ] || [ \"$1\" -eq \"1\" ]; then\n\
    \        echo \"$1\"\n    else\n        echo \"$(($(fib \"$(($1 - 1))\") + $(fib\
    \ \"$(($1 - 2))\")))\";\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1\
    \ -eq 1 ]]; then\n        echo 1\n    else\n        echo $(($(fib $(($1-1))) +\
    \ $(fib $(($1-2)))))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  if [[ $n == \"0\" ]]; then\n    echo \"0\"\
    \n  elif [[ $n == \"1\" ]]; then\n    echo \"1\"\n  else\n    local a=$(fib \"\
    $((n-1))\")\n    local b=$(fib \"$((n-2))\")\n    echo \"$((a+b))\"\n  fi\n}\n\
    \ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate\
    \ \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate\
    \ \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010620
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    local n=$1\n    local a=0\n    local b=1\n    local i=0\n\
    \    while [ $i -lt $n ]; do\n        let i=i+1\n        let a=a+b\n        let\
    \ b=a-b\n    done\n    echo $a\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\"\
    ) = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\"\
    ) = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  if [ $n -le 2 ]; then\n    echo 1\n  else\n\
    \    echo $(( $(fib $((n-1))) + $(fib $((n-2))) ))\n  fi\n}\n\ncandidate() {\n\
    \    fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\"\
    \ ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\"\
    \ ]]\n    [[ $(candidate \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"\
    144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq\
    \ 1 ]; then\n        echo 1\n    else\n        echo $(( $(fib $(( $1 - 1 ))) +\
    \ $(fib $(( $1 - 2 ))) ))\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n  local n=$1\n  local a=0\n  local b=1\n  local c=0\n  while\
    \ [ $n -gt 0 ]; do\n    c=$((a + b))\n    a=$b\n    b=$c\n    n=$((n - 1))\n \
    \ done\n  echo $a\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate \"1\") = \"1\"\
    \ ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate \"11\") = \"89\"\
    \ ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010619
- exit_code: 0
  program: "#!/bin/bash\n# Return n-th Fibonacci number.\n# >>> $(fib \"10\")\n# \"\
    55\"\n# >>> $(fib \"1\")\n# \"1\"\n# >>> $(fib \"8\")\n# \"21\"\n#\n# $1 is an\
    \ integer\nfib() {\n    if [ \"$1\" -eq \"0\" ] || [ \"$1\" -eq \"1\" ]; then\n\
    \        echo \"$1\"\n    else\n        echo \"$(($(fib \"$(($1 - 1))\") + $(fib\
    \ \"$(($1 - 2))\")))\";\n    fi\n}\n\ncandidate() {\n    fib \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"10\") = \"55\" ]]\n    [[ $(candidate\
    \ \"1\") = \"1\" ]]\n    [[ $(candidate \"8\") = \"21\" ]]\n    [[ $(candidate\
    \ \"11\") = \"89\" ]]\n    [[ $(candidate \"12\") = \"144\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660010618

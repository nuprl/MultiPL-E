name: HumanEval_14_all_prefixes
language: sh
prompt: "#!/bin/bash\n# Return list of all prefixes from shortest to longest of the\
  \ input string\n# >>> $(all_prefixes \"abc\")\n# ['\"a\"', '\"ab\"', '\"abc\"']\n\
  #\n# $1 is a string\nall_prefixes() {\n"
tests: "}\n\ncandidate() {\n    all_prefixes \"$@\"\n}\n\nset -e\nrun_test() {\n \
  \   [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"asdfgh\") = \"a as asd\
  \ asdf asdfg asdfgh\" ]]\n    [[ $(candidate \"WWW\") = \"W WW WWW\" ]]\n}\n\nrun_test"
completions: ["    local str=\"$1\"\n    local len=${#str}\n    local i\n    local\
    \ prefix\n    local result=()\n    for ((i=0; i<len; i++)); do\n        prefix=${str:0:$((i+1))}\n\
    \        result+=(\"\\\"$prefix\\\"\")\n    done\n    echo \"${result[@]}\"",
  "    local string=$1\n    local prefixes=()\n    for ((i=0; i<${#string}; i++));\
    \ do\n        prefixes+=(\"\\\"${string:0:$i}\\\"\")\n    done\n    echo \"${prefixes[@]}\"",
  "    local str=\"$1\"\n    local len=${#str}\n    local i\n    local prefix\n  \
    \  local result=()\n    for ((i=0; i<len; i++)); do\n        prefix=${str:0:$((i+1))}\n\
    \        result+=(\"\\\"$prefix\\\"\")\n    done\n    echo \"${result[@]}\"",
  "    local str=\"$1\"\n    local len=${#str}\n    local i\n    local prefixes=()\n\
    \    for ((i=1; i<=len; i++)); do\n        prefixes+=(\"\\\"${str:0:i}\\\"\")\n\
    \    done\n    echo \"${prefixes[@]}\"", "    local input=\"$1\"\n    local output=\"\
    [\"\n    for (( i=0; i<${#input}; i++ )); do\n        output+='\"'\n        output+=${input:0:$((i+1))}\n\
    \        output+='\"'\n        if (( i < ${#input} - 1 )); then\n            output+=\"\
    , \"\n        fi\n    done\n    output+=\"]\"\n    echo \"$output\"", "    local\
    \ str=\"$1\"\n    local len=${#str}\n    local i\n    local prefixes=()\n    for\
    \ ((i=1; i<=len; i++)); do\n        prefixes+=(\"\\\"${str:0:i}\\\"\")\n    done\n\
    \    echo \"${prefixes[@]}\"", "    local str=\"$1\"\n    local len=${#str}\n\
    \    local out=()\n    for (( i=1; i<=$len; i++ )); do\n        out+=(\"\\\"${str:0:i}\\\
    \"\")\n    done\n    echo \"${out[@]}\"", "    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local res=()\n    for ((i=1; i<=len; i++)); do\n        res+=(\"\
    \\\"${str:0:i}\\\"\")\n    done\n    echo \"${res[@]}\"", "    local str=\"$1\"\
    \n    local len=${#str}\n    local i\n    local result=()\n    for ((i=1; i<=len;\
    \ i++)); do\n        result+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"${result[@]}\"",
  "    local str=$1\n    local len=${#str}\n    local i\n    local prefixes\n    for\
    \ ((i=1; i<=len; i++)); do\n        prefixes=\"$prefixes \\\"${str:0:i}\\\"\"\n\
    \    done\n    echo \"[$prefixes]\"", "    local str=$1\n    local len=${#str}\n\
    \    local i\n    local res=()\n    for ((i=1; i<=len; i++)); do\n        res+=(\"\
    \\\"${str:0:i}\\\"\")\n    done\n    echo \"${res[@]}\"", "    local str=\"$1\"\
    \n    local len=${#str}\n    local i\n    local res=()\n    for ((i=1; i<=len;\
    \ i++)); do\n        res+=(\"\\\"${str:0:i}\\\"\")\n    done\n    echo \"${res[@]}\"",
  "    local string=\"$1\"\n    local -a prefixes\n    for ((i=0; i<${#string}; i++));\
    \ do\n        prefixes+=($(printf '\"%s\"' \"${string:0:i+1}\"))\n    done\n \
    \   echo \"${prefixes[@]}\"", "    local str=\"$1\"\n    local len=${#str}\n \
    \   local i\n    local result=()\n    for ((i=1; i<=len; i++)); do\n        result+=(\"\
    \\\"${str:0:i}\\\"\")\n    done\n    echo \"${result[@]}\"", "    local str=\"\
    $1\"\n    local len=${#str}\n    local i\n    local prefix\n    local result=()\n\
    \    for ((i=0; i<len; i++)); do\n        prefix=\"${str:0:$((i+1))}\"\n     \
    \   result+=($(json_quote \"$prefix\"))\n    done\n    echo \"${result[@]}\"",
  "    local str=\"$1\"\n    local len=${#str}\n    local i\n    local prefix\n  \
    \  local result=()\n    for ((i=0; i<len; i++)); do\n        prefix=\"$(echo \"\
    $str\" | cut -c -$((i+1)))\"\n        result+=(\"$prefix\")\n    done\n    echo\
    \ \"${result[@]}\"", "    local str=\"$1\"\n    local len=$((${#str} - 1))\n \
    \   local i\n    local prefix\n    local result=()\n    for ((i=0; i<=len; i++));\
    \ do\n        prefix=\"${str:0:$((i+1))}\"\n        result+=(\"\\\"$prefix\\\"\
    \")\n    done\n    echo \"${result[@]}\"", "    local str=\"$1\"\n    local len=${#str}\n\
    \    local i\n    local prefix\n    local result=()\n    for ((i=1; i<=len; i++));\
    \ do\n        prefix=\"$(echo \"$str\" | cut -c1-$i)\"\n        result+=(\"\\\"\
    $prefix\\\"\")\n    done\n    echo \"${result[@]}\"", "    local str=\"$1\"\n\
    \    local len=${#str}\n    local i\n    local prefixes\n    for ((i=1; i<=len;\
    \ i++)); do\n        prefixes+=\"\\\"${str:0:i}\\\", \"\n    done\n    echo \"\
    [${prefixes%, }]\"", "    local str=\"$1\"\n    local len=${#str}\n    local i\n\
    \    for ((i=1; i<=len; i++)); do\n        echo \"\\\"${str:0:i}\\\"\"\n    done"]
stop_tokens:
- "\n}"

language: sh
name: HumanEval_149_sorted_list_sum
results:
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  # sort\
    \ the list by length\n  local sorted_list=$(echo \"$1\" | tr ' ' '\\n' | sort\
    \ -n -k1)\n  # remove the odd length strings\n  local even_list=$(echo \"$sorted_list\"\
    \ | grep -E '^.{2}$')\n  # sort the list alphabetically\n  local sorted_even_list=$(echo\
    \ \"$even_list\" | sort)\n  # print the list\n  echo \"$sorted_even_list\"\n}\n\
    \ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school AI asdf b\"\
    ) = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate\
    \ \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"\
    AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate\
    \ \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  echo \"\
    $1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    local word\n    for word in $list; do\n      \
    \  sum=$((sum + ${#word}))\n    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    local sorted_list=\"\"\n    for word in $list;\
    \ do\n        local word_len=${#word}\n        local word_sum=$(($word_len * ($word_len\
    \ + 1) / 2))\n        sum=$(($sum + $word_sum))\n        sorted_list=\"$sorted_list\
    \ $word\"\n    done\n    echo \"$sum $sorted_list\"\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=\"$1\"\n    local sum=0\n    local word\n    for word in $list; do\n  \
    \      sum=$((sum + ${#word}))\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf\
    \ school\" ]]\n    [[ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"\
    d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai\
    \ au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"\
    aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for word in $list; do\n        sum=$((sum + ${#word}))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  local sorted_list=$(echo $list | tr ' ' '\\n' | sort\
    \ -n)\n  for i in $sorted_list; do\n    sum=$((sum + i))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school AI asdf\
    \ b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\" ]]\n  \
    \  [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate \"\
    AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\" ]]\n\
    \    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  echo \"\
    $1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  local word\n  for word in $list; do\n    sum=$((sum\
    \ + ${#word}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n\
    \    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=\"$1\"\n    local sorted_list=\"\"\n    local word=\"\"\n    local word_length=\"\
    \"\n    local word_sum=\"\"\n    local word_sum_list=\"\"\n    local word_sum_list_sorted=\"\
    \"\n    local word_sum_list_sorted_length=\"\"\n    local word_sum_list_sorted_length_list=\"\
    \"\n    local word_sum_list_sorted_length_list_sorted=\"\"\n    local word_sum_list_sorted_length_list_sorted_length=\"\
    \"\n    local word_sum_list_sorted_length_list_sorted_length_list=\"\"\n    local\
    \ word_sum_list_sorted_length_list_sorted_length_list_sorted=\"\"\n    local word_sum_list_sorted_length_list_sorted_length_list_sorted_length=\"\
    \"\n    local word_sum_list_sorted_length_list_sorted_length_list_sorted_length_list=\"\
    \"\n    local word_sum_list_sorted_length_list_sorted_length_list_sorted_length_list_sorted=\"\
    \"\n    local word_sum_list_sorted_length_list_sorted_length_list_sorted_length_list_sorted_length=\"\
    \"\n    local word_sum_list_sorted_length_list_sorted_length_list_sorted_length_list_sorted_length_list=\"\
    \"\n    local word_sum_list_sorted_length_list_sorted_length_list_sorted_length_list_sorted_length_list_sorted=\"\
    \"\n    local word_sum_list_sorted_length_list_sorted_length_list_sorted_length_list_sorted_length_list_sorted_length=\"\
    \"\n    local word_sum_list_sorted_length_list_sorted_length_list_sorted_length_list_sorted_length_list_sorted_length_list=\"\
    \"\n    local word_sum_list_sorted_length_list_sorted_length_list_sorted_length_list_sorted_length_list_sorted_length_list_sorted=\"\
    \"\n   \n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  local word\n  for word in $list; do\n    sum=$((sum\
    \ + ${#word}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n\
    \    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=\"$1\"\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  local sorted_list=$(echo $list | tr ' ' '\\n' | sort\
    \ -n)\n  for i in $sorted_list; do\n    sum=$((sum + i))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school AI asdf\
    \ b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\" ]]\n  \
    \  [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate \"\
    AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\" ]]\n\
    \    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    # sort\
    \ the list by length\n    local sorted_list=($(echo \"$1\" | tr ' ' '\\n' | sort\
    \ -n -k1))\n    # remove the odd-length strings\n    local even_list=($(echo \"\
    ${sorted_list[@]}\" | tr ' ' '\\n' | grep -E '^(..)+$'))\n    # sort the list\
    \ alphabetically\n    local sorted_even_list=($(echo \"${even_list[@]}\" | tr\
    \ ' ' '\\n' | sort))\n    # return the list\n    echo \"${sorted_even_list[@]}\"\
    \n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school AI\
    \ asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\" ]]\n\
    \    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  local i=0\n  local len=0\n  local word=\"\"\n  local\
    \ sorted_list=\"\"\n  local sorted_list_sum=0\n  local sorted_list_sum_prev=0\n\
    \  local sorted_list_sum_prev_prev=0\n  local sorted_list_sum_prev_prev_prev=0\n\
    \  local sorted_list_sum_prev_prev_prev_prev=0\n  local sorted_list_sum_prev_prev_prev_prev_prev=0\n\
    \  local sorted_list_sum_prev_prev_prev_prev_prev_prev=0\n  local sorted_list_sum_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local sorted_list_sum_prev_prev_prev_prev_prev_prev_prev_prev=0\n  local sorted_list_sum_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local sorted_list_sum_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local sorted_list_sum_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local sorted_list_sum_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local sorted_list_sum_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local sorted_list_sum_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local sorted_list_sum_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local sorted_list_sum_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local sorted_list_sum_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    }\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school AI asdf\
    \ b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\" ]]\n  \
    \  [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate \"\
    AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\" ]]\n\
    \    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    local sorted_list=$(echo \"$list\" | tr ' ' '\\\
    n' | sort -n)\n    for num in $sorted_list; do\n        sum=$((sum + num))\n \
    \   done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for word in $list; do\n        sum=$((sum + ${#word}))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    echo\
    \ \"$1\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=\"$1\"\n    local sum=0\n    for word in $list; do\n        sum=$((sum\
    \ + ${#word}))\n    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    local sorted_list=$(echo \"$list\" | tr ' ' '\\\
    n' | sort -n)\n    for i in $sorted_list; do\n        sum=$((sum + i))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  local sorted_list=$(echo \"$list\" | tr ' ' '\\n'\
    \ | sort -n)\n  for i in $sorted_list; do\n    sum=$((sum + i))\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  # sort\
    \ the list by length\n  # sort the list by alphabetical order\n  # remove the\
    \ odd length words\n  # return the list\n  echo \"$1\" | tr ' ' '\\n' | sort -n\
    \ -k1.1 | sort -k1.2 | grep -v '^.\\{1,2\\}$'\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    local word\n    for word in $list; do\n      \
    \  sum=$((sum + ${#word}))\n    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=\"$1\"\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=\"$1\"\n  local sum=0\n  local word\n  for word in $list; do\n    sum=$((sum\
    \ + word))\n  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n  \
    \  [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  local word\n  for word in $list; do\n    sum=$((sum\
    \ + ${#word}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n\
    \    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=\"$1\"\n  local sum=0\n  local i\n  for i in $list; do\n    sum=$((sum\
    \ + i))\n  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[\
    \ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=\"$1\"\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=\"$1\"\n  local sum=0\n  local word\n  for word in $list; do\n    sum=$((sum\
    \ + ${#word}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n\
    \    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=\"$1\"\n    local sum=0\n    local sorted_list=\"\"\n    for word in $list;\
    \ do\n        sum=$((sum + ${#word}))\n        sorted_list=\"$sorted_list $word\"\
    \n    done\n    echo \"$sum $sorted_list\"\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  # TODO:\
    \ Implement this function\n  local list=$1\n  local sum=0\n  for i in $list; do\n\
    \    sum=$((sum + i))\n  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  local word\n  for word in $list; do\n    sum=$((sum\
    \ + ${#word}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n\
    \    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list_sum=0\n  local list=($1)\n  for i in ${list[@]}; do\n    list_sum=$((list_sum\
    \ + i))\n  done\n  echo $list_sum\n}\n\ncandidate() {\n    sorted_list_sum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n\
    \    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  echo $1\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  local word\n  for word in $list; do\n    sum=$((sum\
    \ + word))\n  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n  \
    \  [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    local word\n    for word in $list; do\n      \
    \  sum=$((sum + ${#word}))\n    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  local sorted_list=$(echo \"$list\" | tr ' ' '\\n'\
    \ | sort -n)\n  for i in $sorted_list; do\n    sum=$((sum + i))\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for num in $list; do\n    sum=$((sum + num))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=\"$1\"\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=\"$1\"\n  local sum=0\n  local word\n  for word in $list; do\n    sum=$((sum\
    \ + word))\n  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n  \
    \  [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    local word\n    for word in $list; do\n      \
    \  sum=$((sum + ${#word}))\n    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=\"$1\"\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  local word\n  for word in $list; do\n    sum=$((sum\
    \ + ${#word}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n\
    \    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    local word\n    for word in $list; do\n      \
    \  sum=$((sum + ${#word}))\n    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=\"$1\"\n    local sum=0\n    local word\n    for word in $list; do\n  \
    \      sum=$((sum + ${#word}))\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf\
    \ school\" ]]\n    [[ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"\
    d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai\
    \ au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"\
    aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=\"$1\"\n  local sum=0\n  local word\n  for word in $list; do\n    sum=$((sum\
    \ + ${#word}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n\
    \    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=\"$1\"\n  local sum=0\n  local word\n  for word in $list; do\n    sum=$((sum\
    \ + ${#word}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n\
    \    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    local sorted_list=$(echo $list | tr ' ' '\\n'\
    \ | sort)\n    for i in $sorted_list; do\n        sum=$((sum + i))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  local word\n  for word in $list; do\n    sum=$((sum\
    \ + ${#word}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n\
    \    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=\"$1\"\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sorted_list=$(echo \"$list\" | tr ' ' '\\n' | sort -n | tr\
    \ '\\n' ' ')\n  echo \"$sorted_list\"\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=\"$1\"\n  local sorted_list=\"\"\n  local word=\"\"\n  local sorted_word=\"\
    \"\n  local sorted_word_list=\"\"\n  local sorted_word_list_sum=\"\"\n  local\
    \ sorted_word_list_sum_list=\"\"\n  local sorted_word_list_sum_list_sum=\"\"\n\
    \  local sorted_word_list_sum_list_sum_list=\"\"\n  local sorted_word_list_sum_list_sum_list_sum=\"\
    \"\n  local sorted_word_list_sum_list_sum_list_sum_list=\"\"\n  local sorted_word_list_sum_list_sum_list_sum_list_sum=\"\
    \"\n  local sorted_word_list_sum_list_sum_list_sum_list_sum_list=\"\"\n  local\
    \ sorted_word_list_sum_list_sum_list_sum_list_sum_list_sum=\"\"\n  local sorted_word_list_sum_list_sum_list_sum_list_sum_list_sum_list=\"\
    \"\n  local sorted_word_list_sum_list_sum_list_sum_list_sum_list_sum_list_sum=\"\
    \"\n  local sorted_word_list_sum_list_sum_list_sum_list_sum_list_sum_list_sum_list=\"\
    \"\n  local sorted_word_list_sum_list_sum_list_sum_list_sum_list_sum_list_sum_list_sum=\"\
    \"\n  local sorted_word_list_sum_list_sum_list_sum_list_sum_list_sum_list_sum_list_sum_list=\"\
    \"\n  local sorted_word_list_sum_list_sum_list_sum_list_sum_list_sum_list_sum_list_sum_list_sum=\"\
    \"\n  local sorted_word_list_sum_list_sum_list_sum_list_sum_list_sum_list_sum_list_sum_list_sum_list=\"\
    \"\n  local sorted_word_list_sum_list_sum_list_sum_list_sum_list_sum_list_sum_list_sum_list_sum_list_sum=\"\
    \"\n  local sorted_word_list_sum_list_sum_list_\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=\"$1\"\n    local sum=0\n    for word in $list; do\n        sum=$((sum\
    \ + ${#word}))\n    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  local sorted_list=$(echo $list | tr ' ' '\\n' | sort\
    \ -n)\n  for i in $sorted_list; do\n    sum=$((sum + i))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school AI asdf\
    \ b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\" ]]\n  \
    \  [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate \"\
    AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\" ]]\n\
    \    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  local sorted_list=$(echo $list | tr ' ' '\\n' | sort\
    \ -n)\n  for i in $sorted_list; do\n    sum=$((sum + i))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school AI asdf\
    \ b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\" ]]\n  \
    \  [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate \"\
    AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\" ]]\n\
    \    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  local sorted_list=$(echo \"$list\" | tr ' ' '\\n'\
    \ | sort -n)\n  for num in $sorted_list; do\n    sum=$((sum + num))\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  local word\n  for word in $list; do\n    sum=$((sum\
    \ + ${#word}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n\
    \    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=\"$1\"\n    local list_array=($list)\n    local list_sum=0\n    for i in\
    \ \"${list_array[@]}\"; do\n        list_sum=$((list_sum + i))\n    done\n   \
    \ echo $list_sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  # sort\
    \ the list by length\n  sorted_list=$(echo \"$1\" | tr \" \" \"\\n\" | sort -n\
    \ -k1 -t \" \")\n  # remove the odd length words\n  sorted_list=$(echo \"$sorted_list\"\
    \ | tr \" \" \"\\n\" | awk 'length % 2 == 0')\n  # sort the list alphabetically\n\
    \  sorted_list=$(echo \"$sorted_list\" | tr \" \" \"\\n\" | sort -k1 -t \" \"\
    )\n  # print the list\n  echo \"$sorted_list\"\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  local sorted_list=$(echo $list | tr ' ' '\\n' | sort\
    \ -n)\n  for i in $sorted_list; do\n    sum=$((sum + i))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school AI asdf\
    \ b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\" ]]\n  \
    \  [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate \"\
    AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\" ]]\n\
    \    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=\"$1\"\n    local sum=0\n    local word\n    for word in $list; do\n  \
    \      sum=$((sum + ${#word}))\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf\
    \ school\" ]]\n    [[ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"\
    d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai\
    \ au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"\
    aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=\"$1\"\n    local sum=0\n    local sorted_list=$(echo \"$list\" | tr \"\
    \ \" \"\\n\" | sort -n)\n    for i in $sorted_list; do\n        ((sum += i))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[\
    \ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  echo $1\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    echo\
    \ \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for word in $list; do\n        sum=$((sum + ${#word}))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    local word\n    for word in $list; do\n      \
    \  sum=$((sum + ${#word}))\n    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    echo\
    \ \"$1\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    local sorted_list=$(echo $list | tr ' ' '\\n'\
    \ | sort -n)\n    for i in $sorted_list; do\n        sum=$((sum + i))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  local word\n  for word in $list; do\n    sum=$((sum\
    \ + word))\n  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n  \
    \  [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  local word\n  for word in $list; do\n    sum=$((sum\
    \ + ${#word}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n\
    \    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for word in $list; do\n        sum=$((sum + ${#word}))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    local sorted_list=$(echo $list | tr ' ' '\\n'\
    \ | sort -n)\n    for i in $sorted_list; do\n        ((sum+=i))\n    done\n  \
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for word in $list; do\n        sum=$((sum + ${#word}))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=\"$1\"\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=\"$1\"\n    local sorted_list=\"\"\n    local word=\"\"\n    local word_length=\"\
    \"\n    local word_length_sum=\"\"\n    local word_length_sum_list=\"\"\n    local\
    \ word_length_sum_list_sorted=\"\"\n    local word_length_sum_list_sorted_length=\"\
    \"\n    local word_length_sum_list_sorted_length_sum=\"\"\n    local word_length_sum_list_sorted_length_sum_list=\"\
    \"\n    local word_length_sum_list_sorted_length_sum_list_sorted=\"\"\n    local\
    \ word_length_sum_list_sorted_length_sum_list_sorted_length=\"\"\n    local word_length_sum_list_sorted_length_sum_list_sorted_length_sum=\"\
    \"\n    local word_length_sum_list_sorted_length_sum_list_sorted_length_sum_list=\"\
    \"\n    local word_length_sum_list_sorted_length_sum_list_sorted_length_sum_list_sorted=\"\
    \"\n    local word_length_sum_list_sorted_length_sum_list_sorted_length_sum_list_sorted_length=\"\
    \"\n    local word_length_sum_list_sorted_length_sum_list_sorted_length_sum_list_sorted_length_sum=\"\
    \"\n    local word_length_sum_list_sorted_length_sum_list_sorted_length_sum_list_sorted_length_sum_list=\"\
    \"\n    local word_length_sum_list_sorted_length_sum_list_sorted_length_sum_list_sorted_length_sum_list_sorted=\"\
    \"\n    local word_length_sum_list_sorted_length_sum_list_sorted_length_sum_list_sorted_length_sum_list_sorted_length=\"\
    \"\n    local word_length_sum_list_sorted_length_sum_list_sorted_length_sum_list_sorted_length_sum_list_sorted_length_sum=\"\
    \"\n    local word_length_sum_list_sorted_length_sum_list_sorted_length\n}\n\n\
    candidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf\
    \ school\" ]]\n    [[ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"\
    d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai\
    \ au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"\
    aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    # shellcheck\
    \ disable=SC2046\n    echo $(echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' '\
    \ ')\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=\"$1\"\n    local sum=0\n    local word\n    for word in $list; do\n  \
    \      sum=$((sum + ${#word}))\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf\
    \ school\" ]]\n    [[ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"\
    d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai\
    \ au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"\
    aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    local sorted_list=$(echo \"$list\" | tr ' ' '\\\
    n' | sort -n)\n    for i in $sorted_list; do\n        sum=$((sum + i))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for word in $list; do\n        sum=$((sum + ${#word}))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  # sort\
    \ the list by length\n  local sorted_list=$(echo \"$1\" | tr ' ' '\\n' | sort\
    \ -n -k1.1,1.1)\n  # remove odd-length words\n  local even_length_words=$(echo\
    \ \"$sorted_list\" | grep -E '^.{2}$')\n  # sort the list alphabetically\n  echo\
    \ \"$even_length_words\" | sort -k1.1,1.1\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    local item\n    for item in $list; do\n      \
    \  sum=$((sum + item))\n    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=\"$1\"\n  local sorted_list=\"\"\n  local word=\"\"\n  local word_length=\"\
    \"\n  local word_sum=\"\"\n  local word_sum_list=\"\"\n  local sorted_word_sum_list=\"\
    \"\n  local sorted_word_sum=\"\"\n  local sorted_word=\"\"\n  local sorted_list=\"\
    \"\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n\
    \  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n\
    \  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n\
    \  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n\
    \  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n\
    \  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n\
    \  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n\
    \  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n\
    \  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n\
    \  local\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  local sorted_list=$(echo \"$list\" | tr \" \" \"\\\
    n\" | sort -n)\n  for i in $sorted_list; do\n    sum=$((sum + i))\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=\"$1\"\n    local sum=0\n    local list_sorted=$(echo \"$list\" | tr '\
    \ ' '\\n' | sort -n)\n    for i in $list_sorted; do\n        sum=$((sum + i))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[\
    \ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    local word\n    for word in $list; do\n      \
    \  sum=$((sum + ${#word}))\n    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=\"$1\"\n  local sorted_list=$(echo \"$list\" | tr ' ' '\\n' | sort)\n \
    \ echo \"$sorted_list\"\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=\"$1\"\n  local sum=0\n  local word\n  for word in $list; do\n    sum=$((sum\
    \ + word))\n  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n  \
    \  [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=\"$1\"\n    local sorted_list\n    local sum=0\n    local i\n    local\
    \ j\n    local temp\n    local temp_sum\n    local len=${#list[@]}\n    for ((i=0;\
    \ i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n            if [[ ${list[i]}\
    \ > ${list[j]} ]]; then\n                temp=${list[i]}\n                list[i]=${list[j]}\n\
    \                list[j]=$temp\n            fi\n        done\n    done\n    for\
    \ ((i=0; i<len; i++)); do\n        temp_sum=$((${list[i]} + $sum))\n        sum=$temp_sum\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyc9jcae6.sh: line 38: aa a aaa + 0: syntax error in expression
    (error token is "a aaa + 0")

    '
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=\"$1\"\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for word in $list; do\n        sum=$((sum + ${#word}))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for word in $list; do\n        sum=$((sum + ${#word}))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sorted_list=$(echo \"$list\" | tr \" \" \"\\n\" | sort -n\
    \ | tr \"\\n\" \" \")\n    echo \"$sorted_list\"\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=\"$1\"\n  local sum=0\n  local sorted_list=$(echo \"$list\" | tr ' ' '\\\
    n' | sort -n)\n  for i in $sorted_list; do\n    sum=$((sum + i))\n  done\n  echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    echo\
    \ \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    local word\n    for word in $list; do\n      \
    \  sum=$((sum + ${#word}))\n    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  local sorted_list=$(echo \"$list\" | sort)\n  for\
    \ word in $sorted_list; do\n    sum=$((sum + ${#word}))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school AI asdf\
    \ b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\" ]]\n  \
    \  [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate \"\
    AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\" ]]\n\
    \    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=\"$1\"\n  local sum=0\n  local sorted_list=$(echo \"$list\" | tr ' ' '\\\
    n' | sort -n)\n  for num in $sorted_list; do\n    sum=$((sum + num))\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=\"$1\"\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    local sorted_list=\"\"\n    for word in $list;\
    \ do\n        local len=${#word}\n        sum=$((sum + len))\n        sorted_list=\"\
    $sorted_list $word\"\n    done\n    echo \"$sum $sorted_list\"\n}\n\ncandidate()\
    \ {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf\
    \ school\" ]]\n    [[ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"\
    d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai\
    \ au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"\
    aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  echo \"\
    $1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sorted_list=$(echo \"$list\" | tr ' ' '\\n' | sort -n | tr\
    \ '\\n' ' ')\n  echo \"$sorted_list\"\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  local sorted_list=$(echo $list | tr ' ' '\\n' | sort\
    \ -n)\n  for num in $sorted_list; do\n    sum=$((sum + num))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school AI asdf\
    \ b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\" ]]\n  \
    \  [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate \"\
    AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\" ]]\n\
    \    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    echo\
    \ \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    echo\
    \ \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    local sorted_list=()\n    local word\n    for\
    \ word in $list; do\n        sorted_list+=($word)\n        sum=$((sum + ${#word}))\n\
    \    done\n    echo \"${sorted_list[@]}\"\n    echo $sum\n}\n\ncandidate() {\n\
    \    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf\
    \ school\" ]]\n    [[ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"\
    d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai\
    \ au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"\
    aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    local word\n    for word in $list; do\n      \
    \  sum=$((sum + word))\n    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=\"$1\"\n    local sum=0\n    local word\n    for word in $list; do\n  \
    \      sum=$((sum + ${#word}))\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf\
    \ school\" ]]\n    [[ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"\
    d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai\
    \ au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"\
    aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for word in $list; do\n        sum=$((sum + ${#word}))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=\"$1\"\n    local sorted_list=$(echo \"$list\" | tr \" \" \"\\n\" | sort\
    \ -u)\n    echo \"$sorted_list\"\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n  \
    \  [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=\"$1\"\n  local sum=0\n  local word\n  for word in $list; do\n    sum=$((sum\
    \ + ${#word}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n\
    \    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    local i=0\n    for i in $list; do\n        sum=$((sum\
    \ + i))\n    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n  \
    \  [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=\"$1\"\n  local sum=0\n  local word\n  for word in $list; do\n    sum=$((sum\
    \ + ${#word}))\n  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n\
    \    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate\
    \ \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\"\
    \ ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"\
    a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa\
    \ bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n    local\
    \ list=$1\n    local sum=0\n    local word\n    for word in $list; do\n      \
    \  sum=$((sum + ${#word}))\n    done\n    echo $sum\n}\n\ncandidate() {\n    sorted_list_sum\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\"\
    \ ]]\n    [[ $(candidate \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[\
    \ $(candidate \"d b c a\") = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") =\
    \ \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[\
    \ $(candidate \"a b b c c a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\"\
    ) = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=$1\n  local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school\
    \ AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate\
    \ \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\"\
    \ ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
    # deletes the strings that have odd lengths from it,\n# and returns the resulted\
    \ list with a sorted order,\n# The list is always a list of strings and never\
    \ an array of numbers,\n# and it may contain duplicates.\n# The order of the list\
    \ should be ascending by length of each word, and you\n# should return the list\
    \ sorted by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
    # The function should return a list of strings in sorted order.\n# You may assume\
    \ that all words will have the same length.\n# For example:\n# >>> $(list_sort\
    \ \"aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"\
    ', '\"cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n  local\
    \ list=\"$1\"\n  local sum=0\n  for word in $list; do\n    sum=$((sum + ${#word}))\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate\
    \ \"school AI asdf b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\"\
    ) = \"\" ]]\n    [[ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[\
    \ $(candidate \"AI ai au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c\
    \ a\") = \"\" ]]\n    [[ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660010826

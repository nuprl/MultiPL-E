name: HumanEval_39_prime_fib
language: sh
prompt: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number and\
  \ it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"2\")\n\
  # \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n# \"13\"\n\
  # >>> $(prime_fib \"5\")\n# \"89\"\n#\n# $1 is an integer\nprime_fib() {\n"
tests: "}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate\
  \ \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"\
  5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"\
  7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
  \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
completions: ["    local n=$1\n    local i=0\n    local fib=0\n    local fib_1=1\n\
    \    local fib_2=1\n    while [ $i -lt $n ]; do\n        fib=$((fib_1 + fib_2))\n\
    \        if [ $(is_prime \"$fib\") -eq 1 ]; then\n            i=$((i + 1))\n \
    \       fi\n        fib_2=$fib_1\n        fib_1=$fib\n    done\n    echo \"$fib\"",
  "  local n=$1\n  local i=1\n  local fib=1\n  local fib_prev=1\n  local fib_tmp=0\n\
    \  while [ $i -lt $n ]; do\n    fib_tmp=$fib\n    fib=$((fib + fib_prev))\n  \
    \  fib_prev=$fib_tmp\n    if is_prime $fib; then\n      i=$((i + 1))\n    fi\n\
    \  done\n  echo $fib", "  local n=$1\n  local i=1\n  local fib=1\n  local fib_prev=1\n\
    \  local fib_next=1\n  local is_prime=0\n  local is_fib=0\n  local is_prime_fib=0\n\
    \  local prime_fib=0\n\n  while [ $i -lt $n ]; do\n    fib_next=$((fib + fib_prev))\n\
    \    fib_prev=$fib\n    fib=$fib_next\n    i=$((i + 1))\n  done\n\n  is_prime=$(is_prime\
    \ $fib)\n  is_fib=$(is_fib $fib)\n  is_prime_fib=$((is_prime * is_fib))\n\n  if\
    \ [ $is_prime_fib -eq 1 ]; then\n    prime_fib=$fib\n  fi\n\n  echo $prime_fib",
  "  local n=$1\n  local i=1\n  local fib=0\n  local fib_prev=1\n  local fib_next=1\n\
    \  while [ $i -lt $n ]; do\n    fib_next=$((fib + fib_prev))\n    fib_prev=$fib\n\
    \    fib=$fib_next\n    if is_prime $fib; then\n      i=$((i + 1))\n    fi\n \
    \ done\n  echo $fib", "  local n=$1\n  local fib_num=$(fib \"$n\")\n  local prime_num=$(prime\
    \ \"$fib_num\")\n  echo \"$prime_num\"", "    if [[ $1 -lt 1 ]]; then\n      \
    \  echo \"Error: prime_fib requires a positive integer as an argument.\"\n   \
    \     return 1\n    fi\n\n    local fib_num=1\n    local fib_prev=1\n    local\
    \ fib_temp=0\n    local fib_index=1\n    local prime_index=0\n\n    while [[ $prime_index\
    \ -lt $1 ]]; do\n        if is_prime $fib_num; then\n            prime_index=$((prime_index\
    \ + 1))\n        fi\n        fib_temp=$fib_num\n        fib_num=$((fib_num + fib_prev))\n\
    \        fib_prev=$fib_temp\n        fib_index=$((fib_index + 1))\n    done\n\n\
    \    echo $fib_num", "    local n=$1\n    local i=1\n    local fib=0\n    local\
    \ fib_prev=1\n    local fib_next=1\n    while [ $i -lt $n ]; do\n        fib_next=$((fib\
    \ + fib_prev))\n        fib_prev=$fib\n        fib=$fib_next\n        if is_prime\
    \ $fib; then\n            i=$((i + 1))\n        fi\n    done\n    echo $fib",
  "    local n=$1\n    local i=1\n    local fib=1\n    local fib_prev=1\n    local\
    \ fib_next=1\n    local prime_fib=1\n    while [ $i -lt $n ]; do\n        fib_next=$((fib\
    \ + fib_prev))\n        fib_prev=$fib\n        fib=$fib_next\n        if is_prime\
    \ $fib; then\n            prime_fib=$fib\n            i=$((i + 1))\n        fi\n\
    \    done\n    echo $prime_fib", "    local n=$1\n    local fib_n=$(fib \"$n\"\
    )\n    local prime_fib_n=$(prime_fib_recursive \"$n\" \"$fib_n\")\n    echo \"\
    $prime_fib_n\"", "  local n=$1\n  local i=1\n  local fib=1\n  local fib_prev=1\n\
    \  local prime_fib=2\n  while [[ $i -lt $n ]]; do\n    fib=$((fib + fib_prev))\n\
    \    fib_prev=$fib\n    if [[ $(is_prime \"$fib\") == \"true\" ]]; then\n    \
    \  prime_fib=$fib\n      i=$((i + 1))\n    fi\n  done\n  echo \"$prime_fib\"",
  "    local n=$1\n    local i=1\n    local fib=1\n    local fib_prev=1\n    local\
    \ fib_next=1\n    while [ $i -lt $n ]; do\n        fib_next=$((fib + fib_prev))\n\
    \        fib_prev=$fib\n        fib=$fib_next\n        if is_prime $fib; then\n\
    \            i=$((i + 1))\n        fi\n    done\n    echo $fib", "    local n=$1\n\
    \    local fib_n=$(fib \"$n\")\n    local fib_n_1=$(fib \"$((n-1))\")\n    local\
    \ fib_n_2=$(fib \"$((n-2))\")\n    local fib_n_3=$(fib \"$((n-3))\")\n    local\
    \ fib_n_4=$(fib \"$((n-4))\")\n    local fib_n_5=$(fib \"$((n-5))\")\n    local\
    \ fib_n_6=$(fib \"$((n-6))\")\n    local fib_n_7=$(fib \"$((n-7))\")\n    local\
    \ fib_n_8=$(fib \"$((n-8))\")\n    local fib_n_9=$(fib \"$((n-9))\")\n    local\
    \ fib_n_10=$(fib \"$((n-10))\")\n    local fib_n_11=$(fib \"$((n-11))\")\n   \
    \ local fib_n_12=$(fib \"$((n-12))\")\n    local fib_n_13=$(fib \"$((n-13))\"\
    )\n    local fib_n_14=$(fib \"$((n-14))\")\n    local fib_n_15=$(fib \"$((n-15))\"\
    )\n    local fib_n_16=$(fib \"$((n-16))\")\n    local fib_n_17=$(fib \"$((n-17))\"\
    )\n    local fib_n_18=$(fib \"$((n-18))\")\n    local fib_n_19=$(fib \"$((n-19))\"\
    )\n    local fib_n_20=$(fib \"$((n-20))\")\n    local fib_n_21=$(fib \"$((n-21))\"\
    )\n    local fib_n_22=$(fib \"$((n-22))\")\n    local fib_n_23=$(fib \"$((n-23))\"\
    )\n    local fib_n_24=$(fib \"$((n-24))\")\n    local fib_n_25=$(fib \"$((n-25))\"\
    )\n    local fib_n_26=$(fib \"$((n-26))", "    local n=$1\n    local i=0\n   \
    \ local fib=0\n    local fib_prev=1\n    local fib_next=1\n    while (( i < n\
    \ )); do\n        fib=$fib_next\n        fib_next=$(( fib + fib_prev ))\n    \
    \    fib_prev=$fib\n        if is_prime \"$fib\"; then\n            (( i++ ))\n\
    \        fi\n    done\n    echo \"$fib\"", "  local n=$1\n  local fib_n=$(fib\
    \ \"$n\")\n  local fib_n_1=$(fib \"$((n-1))\")\n  local fib_n_2=$(fib \"$((n-2))\"\
    )\n  local fib_n_3=$(fib \"$((n-3))\")\n  local fib_n_4=$(fib \"$((n-4))\")\n\
    \  local fib_n_5=$(fib \"$((n-5))\")\n  local fib_n_6=$(fib \"$((n-6))\")\n  local\
    \ fib_n_7=$(fib \"$((n-7))\")\n  local fib_n_8=$(fib \"$((n-8))\")\n  local fib_n_9=$(fib\
    \ \"$((n-9))\")\n  local fib_n_10=$(fib \"$((n-10))\")\n  local fib_n_11=$(fib\
    \ \"$((n-11))\")\n  local fib_n_12=$(fib \"$((n-12))\")\n  local fib_n_13=$(fib\
    \ \"$((n-13))\")\n  local fib_n_14=$(fib \"$((n-14))\")\n  local fib_n_15=$(fib\
    \ \"$((n-15))\")\n  local fib_n_16=$(fib \"$((n-16))\")\n  local fib_n_17=$(fib\
    \ \"$((n-17))\")\n  local fib_n_18=$(fib \"$((n-18))\")\n  local fib_n_19=$(fib\
    \ \"$((n-19))\")\n  local fib_n_20=$(fib \"$((n-20))\")\n  local fib_n_21=$(fib\
    \ \"$((n-21))\")\n  local fib_n_22=$(fib \"$((n-22))\")\n  local fib_n_23=$(fib\
    \ \"$((n-23))\")\n  local fib_n_24=$(fib \"$((n-24))\")\n  local fib_n_25=$(fib\
    \ \"$((n-25))\")\n  local fib_n_26=$(fib \"$((n-26))", "  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local prime_fib_n=$(prime \"$fib_n\")\n  echo \"$prime_fib_n\"",
  "  local n=$1\n  local fib_n=$(fib \"$n\")\n  while ! is_prime \"$fib_n\"; do\n\
    \    n=$((n+1))\n    fib_n=$(fib \"$n\")\n  done\n  echo \"$fib_n\"", "  local\
    \ n=$1\n  local fib_n=$(fib \"$n\")\n  while ! is_prime \"$fib_n\"; do\n    n=$((n\
    \ + 1))\n    fib_n=$(fib \"$n\")\n  done\n  echo \"$fib_n\"", "    local n=$1\n\
    \    local i=1\n    local fib=1\n    local fib_prev=1\n    local prime_fib=1\n\
    \    while [ $i -lt $n ]; do\n        local fib_tmp=$fib\n        fib=$((fib +\
    \ fib_prev))\n        fib_prev=$fib_tmp\n        if [ $(is_prime $fib) -eq 1 ];\
    \ then\n            prime_fib=$fib\n            i=$((i + 1))\n        fi\n   \
    \ done\n    echo $prime_fib", "  local n=$1\n  local i=1\n  local fib=1\n  local\
    \ fib_prev=1\n  local fib_next=1\n  local prime=0\n  while [ $i -lt $n ]; do\n\
    \    fib_next=$((fib+fib_prev))\n    fib_prev=$fib\n    fib=$fib_next\n    if\
    \ [ $(is_prime $fib) -eq 1 ]; then\n      prime=$fib\n      i=$((i+1))\n    fi\n\
    \  done\n  echo $prime", "  local n=$1\n  local i=1\n  local fib=1\n  local fib_prev=1\n\
    \  local prime_fib=2\n  while [ $i -lt $n ]; do\n    local fib_tmp=$fib\n    fib=$((fib\
    \ + fib_prev))\n    fib_prev=$fib_tmp\n    if [ $(is_prime $fib) -eq 1 ]; then\n\
    \      prime_fib=$fib\n      i=$((i + 1))\n    fi\n  done\n  echo $prime_fib"]
stop_tokens:
- "\n}"

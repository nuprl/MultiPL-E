name: HumanEval_145_order_by_points
language: sh
prompt: "#!/bin/bash\n# Write a function which sorts the given list of integers\n\
  # in ascending order according to the sum of their digits.\n# Note: if there are\
  \ several items with similar sum of their digits,\n# order them based on their index\
  \ in original list.\n# For example:\n# >>> $(order_by_points \"1 11 -1 -11 -12\"\
  )\n# ['\"-1\"', '\"-11\"', '\"1\"', '\"-12\"', '\"11\"']\n# >>> $(order_by_points\
  \ \"\")\n# []\n#\n# $1 is a space-separated list\norder_by_points() {\n"
tests: "}\n\ncandidate() {\n    order_by_points \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"1 11 -1 -11 -12\") = \"-1 -11 1 -12 11\" ]]\n    [[ $(candidate\
  \ \"1234 423 463 145 2 423 423 53 6 37 3457 3 56 0 46\") = \"0 2 3 6 53 423 423\
  \ 423 1234 145 37 46 56 463 3457\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
  \ $(candidate \"1 -11 -32 43 54 -98 2 -3\") = \"-3 -32 -98 -11 1 2 43 54\" ]]\n\
  \    [[ $(candidate \"1 2 3 4 5 6 7 8 9 10 11\") = \"1 10 2 11 3 4 5 6 7 8 9\" ]]\n\
  \    [[ $(candidate \"0 6 6 -76 -21 23 4\") = \"-76 -21 0 4 23 6 6\" ]]\n}\n\nrun_test"
completions: ["    local -a arr=(\"$@\")\n    local -a sum_arr\n    local -a index_arr\n\
    \    local -a result_arr\n    local sum\n    local index\n    local i\n    local\
    \ j\n    local k\n    local tmp\n    for ((i=0; i<${#arr[@]}; i++)); do\n    \
    \    sum=0\n        for ((j=0; j<${#arr[$i]}; j++)); do\n            if [[ ${arr[$i]:$j:1}\
    \ =~ ^[0-9]$ ]]; then\n                sum=$((sum + ${arr[$i]:$j:1}))\n      \
    \      fi\n        done\n        sum_arr[$i]=$sum\n        index_arr[$i]=$i\n\
    \    done\n    for ((i=0; i<${#sum_arr[@]}; i++)); do\n        for ((j=i+1; j<${#sum_arr[@]};\
    \ j++)); do\n            if [[ ${sum_arr[$i]} -gt ${sum_arr[$j]} ]]; then\n  \
    \              tmp=${sum_arr[$i]}\n                sum_arr[$i]=${sum_arr[$j]}\n\
    \                sum_arr[$j]=$tmp\n                tmp=${index_arr[$i]}\n    \
    \            index_arr[$i]=${index_arr[$j]}\n                index_arr[$j]=$tmp\n\
    \            fi\n        done\n    done\n    for ((i=0; i<${#index_arr[@]}; i++));\
    \ do\n        result_arr[$i]=\"\\\"${arr[${index_arr[$i]}]}\\\"\"\n    done\n\
    \    echo \"[${result_arr[*]}]\"", "    local list=($1)\n    local sum_list=()\n\
    \    local index=0\n    for i in ${list[@]}; do\n        sum_list[$index]=$(echo\
    \ $i | sed 's/-//g' | grep -o . | paste -sd+ | bc)\n        index=$((index+1))\n\
    \    done\n    local sorted_list=()\n    local sorted_index=0\n    for i in $(seq\
    \ 0 $((${#sum_list[@]}-1))); do\n        local min_index=$i\n        for j in\
    \ $(seq $((i+1)) $((${#sum_list[@]}-1))); do\n            if [[ ${sum_list[$j]}\
    \ -lt ${sum_list[$min_index]} ]]; then\n                min_index=$j\n       \
    \     fi\n        done\n        sorted_list[$sorted_index]=${list[$min_index]}\n\
    \        sorted_index=$((sorted_index+1))\n        sum_list[$min_index]=$((sum_list[$min_index]+1))\n\
    \    done\n    echo ${sorted_list[@]}", "    local list=($1)\n    local sums=()\n\
    \    local sum\n    local i\n    for i in \"${list[@]}\"; do\n        sum=0\n\
    \        for (( j=0; j<${#i}; j++ )); do\n            sum=$(( sum + ${i:$j:1}\
    \ ))\n        done\n        sums+=($sum)\n    done\n    local sorted=()\n    for\
    \ (( i=0; i<${#list[@]}; i++ )); do\n        local min=${sums[0]}\n        local\
    \ min_index=0\n        for (( j=1; j<${#sums[@]}; j++ )); do\n            if [[\
    \ ${sums[$j]} -lt $min ]]; then\n                min=${sums[$j]}\n           \
    \     min_index=$j\n            fi\n        done\n        sorted+=(${list[$min_index]})\n\
    \        unset sums[$min_index]\n        sums=(${sums[@]})\n    done\n    echo\
    \ \"${sorted[@]}\"", "    local -a list=($1)\n    local -a sums\n    local -a\
    \ result\n    local i\n    local j\n    local sum\n    for ((i=0; i<${#list[@]};\
    \ i++)); do\n        sum=0\n        for ((j=0; j<${#list[$i]}; j++)); do\n   \
    \         sum=$((sum + ${list[$i]:$j:1}))\n        done\n        sums[$i]=$sum\n\
    \    done\n    for ((i=0; i<${#list[@]}; i++)); do\n        for ((j=i+1; j<${#list[@]};\
    \ j++)); do\n            if [[ ${sums[$i]} -gt ${sums[$j]} ]]; then\n        \
    \        sums[$i]=${sums[$j]}\n                sums[$j]=${sums[$i]}\n        \
    \        list[$i]=${list[$j]}\n                list[$j]=${list[$i]}\n        \
    \    fi\n        done\n    done\n    for ((i=0; i<${#list[@]}; i++)); do\n   \
    \     result[$i]=\"\\\"${list[$i]}\\\"\"\n    done\n    echo \"[${result[@]}]\"",
  "    # Write your code here\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n", "    local -a list=($1)\n    local -a result=()\n  \
    \  local -a sums=()\n    local i\n    local j\n    local sum\n    local temp\n\
    \    for ((i=0; i<${#list[@]}; i++)); do\n        sum=0\n        for ((j=0; j<${#list[$i]};\
    \ j++)); do\n            sum=$((sum + ${list[$i]:$j:1}))\n        done\n     \
    \   sums[$i]=$sum\n    done\n    for ((i=0; i<${#list[@]}; i++)); do\n       \
    \ for ((j=i+1; j<${#list[@]}; j++)); do\n            if [[ ${sums[$i]} -gt ${sums[$j]}\
    \ ]]; then\n                temp=${sums[$i]}\n                sums[$i]=${sums[$j]}\n\
    \                sums[$j]=$temp\n                temp=${list[$i]}\n          \
    \      list[$i]=${list[$j]}\n                list[$j]=$temp\n            fi\n\
    \        done\n    done\n    for ((i=0; i<${#list[@]}; i++)); do\n        result[$i]=\"\
    \\\"${list[$i]}\\\"\"\n    done\n    echo ${result[@]}", "    local -a arr=($1)\n\
    \    local -a arr_sorted\n    local -a arr_sorted_index\n    local -a arr_sorted_points\n\
    \    local -a arr_sorted_points_index\n    local -a arr_sorted_points_index_sorted\n\
    \    local -a arr_sorted_points_index_sorted_index\n    local -a arr_sorted_points_index_sorted_index_sorted\n\
    \    local -a arr_sorted_points_index_sorted_index_sorted_index\n    local -a\
    \ arr_sorted_points_index_sorted_index_sorted_index_sorted\n    local -a arr_sorted_points_index_sorted_index_sorted_index_sorted_index\n\
    \    local -a arr_sorted_points_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \    local -a arr_sorted_points_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \    local -a arr_sorted_points_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \    local -a arr_sorted_points_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \    local -a arr_sorted_points_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \    local -a arr_sorted_points_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \    local -a arr_sorted_points_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \    local -a arr_sorted_points_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \    local -a arr_sorted_", "    local -a arr=(\"$@\")\n    local -a arr_sorted=()\n\
    \    local -a arr_sorted_index=()\n    local -a arr_sorted_value=()\n    local\
    \ -a arr_sorted_sum=()\n    local -a arr_sorted_sum_index=()\n    local -a arr_sorted_sum_value=()\n\
    \    local -a arr_sorted_sum_sum=()\n    local -a arr_sorted_sum_sum_index=()\n\
    \    local -a arr_sorted_sum_sum_value=()\n    local -a arr_sorted_sum_sum_sum=()\n\
    \    local -a arr_sorted_sum_sum_sum_index=()\n    local -a arr_sorted_sum_sum_sum_value=()\n\
    \    local -a arr_sorted_sum_sum_sum_sum=()\n    local -a arr_sorted_sum_sum_sum_sum_index=()\n\
    \    local -a arr_sorted_sum_sum_sum_sum_value=()\n    local -a arr_sorted_sum_sum_sum_sum_sum=()\n\
    \    local -a arr_sorted_sum_sum_sum_sum_sum_index=()\n    local -a arr_sorted_sum_sum_sum_sum_sum_value=()\n\
    \    local -a arr_sorted_sum_sum_sum_sum_sum_sum=()\n    local -a arr_sorted_sum_sum_sum_sum_sum_sum_index=()\n\
    \    local -a arr_sorted_sum_sum_sum_sum_sum_sum_value=()\n    local -a arr_sorted_sum_sum_sum_sum_sum_sum_sum=()\n\
    \    local -a arr_sorted_sum_sum_sum_sum_sum_sum_sum_index=()\n    local -a arr_sorted_sum_sum_sum_sum_sum_sum_sum_value=()\n\
    \    local -a arr_sorted_sum_sum_sum_sum_sum_sum_sum_sum=()\n    local -a arr_sorted_",
  "    local -a list=($1)\n    local -a list_with_points\n    local -a list_with_points_sorted\n\
    \    local -a list_sorted\n    local i\n    local j\n    local sum\n    local\
    \ index\n    local index_max\n    local max\n    local -a list_with_points_sorted_temp\n\
    \    local -a list_sorted_temp\n    local -a list_with_points_sorted_temp_2\n\
    \    local -a list_sorted_temp_2\n    local -a list_with_points_sorted_temp_3\n\
    \    local -a list_sorted_temp_3\n    local -a list_with_points_sorted_temp_4\n\
    \    local -a list_sorted_temp_4\n    local -a list_with_points_sorted_temp_5\n\
    \    local -a list_sorted_temp_5\n    local -a list_with_points_sorted_temp_6\n\
    \    local -a list_sorted_temp_6\n    local -a list_with_points_sorted_temp_7\n\
    \    local -a list_sorted_temp_7\n    local -a list_with_points_sorted_temp_8\n\
    \    local -a list_sorted_temp_8\n    local -a list_with_points_sorted_temp_9\n\
    \    local -a list_sorted_temp_9\n    local -a list_with_points_sorted_temp_10\n\
    \    local -a list_sorted_temp_10\n    local -a list_with_points_sorted_temp_11\n\
    \    local -a list_sorted_temp_11\n    local -a list_with_points_sorted_temp_12\n\
    \    local -a list_sorted_temp_12\n    local -a list_with_points_sorted_temp_13\n\
    \    local -a list_sorted_temp_13\n    local -a list_with_points_sorted_temp_14\n\
    \    local -a list_sorted_temp_14\n    local -a list_with_points_sorted_temp_15\n\
    \    local -a list_sorted_temp", "    local list=($1)\n    local sums=()\n   \
    \ local sum=0\n    for ((i=0; i<${#list[@]}; i++)); do\n        sum=0\n      \
    \  for ((j=0; j<${#list[$i]}; j++)); do\n            sum=$((sum + ${list[$i]:$j:1}))\n\
    \        done\n        sums[$i]=$sum\n    done\n    for ((i=0; i<${#list[@]};\
    \ i++)); do\n        for ((j=i+1; j<${#list[@]}; j++)); do\n            if [[\
    \ ${sums[$i]} -gt ${sums[$j]} ]]; then\n                tmp=${sums[$i]}\n    \
    \            sums[$i]=${sums[$j]}\n                sums[$j]=$tmp\n           \
    \     tmp=${list[$i]}\n                list[$i]=${list[$j]}\n                list[$j]=$tmp\n\
    \            fi\n        done\n    done\n    echo \"${list[@]}\"", "    local\
    \ list=($1)\n    local len=${#list[@]}\n    local i=0\n    local j=0\n    local\
    \ sum=0\n    local tmp=0\n    local tmp_index=0\n    local tmp_sum=0\n    for\
    \ ((i=0; i<len; i++)); do\n        sum=0\n        for ((j=0; j<${#list[$i]}; j++));\
    \ do\n            tmp=${list[$i]:$j:1}\n            if [[ $tmp =~ ^[0-9]$ ]];\
    \ then\n                sum=$((sum+tmp))\n            fi\n        done\n     \
    \   list[$i]=\"$sum ${list[$i]}\"\n    done\n    for ((i=0; i<len; i++)); do\n\
    \        for ((j=i+1; j<len; j++)); do\n            if [[ ${list[$i]} > ${list[$j]}\
    \ ]]; then\n                tmp=${list[$i]}\n                list[$i]=${list[$j]}\n\
    \                list[$j]=$tmp\n            fi\n        done\n    done\n    for\
    \ ((i=0; i<len; i++)); do\n        list[$i]=${list[$i]:$((${#list[$i]}-1))}\n\
    \    done\n    echo ${list[@]}", "    # Write your code here\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n", "    local -a\
    \ array=()\n    local -a result=()\n    local -a sum=()\n    local -a index=()\n\
    \    local -a temp=()\n    local -a temp2=()\n    local -a temp3=()\n    local\
    \ -a temp4=()\n    local -a temp5=()\n    local -a temp6=()\n    local -a temp7=()\n\
    \    local -a temp8=()\n    local -a temp9=()\n    local -a temp10=()\n    local\
    \ -a temp11=()\n    local -a temp12=()\n    local -a temp13=()\n    local -a temp14=()\n\
    \    local -a temp15=()\n    local -a temp16=()\n    local -a temp17=()\n    local\
    \ -a temp18=()\n    local -a temp19=()\n    local -a temp20=()\n    local -a temp21=()\n\
    \    local -a temp22=()\n    local -a temp23=()\n    local -a temp24=()\n    local\
    \ -a temp25=()\n    local -a temp26=()\n    local -a temp27=()\n    local -a temp28=()\n\
    \    local -a temp29=()\n    local -a temp30=()\n    local -a temp31=()\n    local\
    \ -a temp32=()\n    local -a temp33=()\n    local -a temp34=()\n    local -a temp35=()\n\
    \    local -a temp36=()\n    local -a temp37=()\n    local -a temp38=()\n    local\
    \ -a temp39=()\n    local -a temp40=()\n    local -a temp41=()\n    local -a temp42=()\n\
    \    local -a temp43=()\n    local -a temp44=()\n    local -a temp45=()\n    local\
    \ -a temp46=()\n    local -a temp47=()\n    local -a temp48=()\n    local -a temp49=()\n\
    \    local -a temp50=()\n    local -a temp51=()\n    local -a temp52=()\n    local\
    \ -a temp53=()\n    local -", "    local -a list=($1)\n    local -a sums\n   \
    \ local -a result\n    local i\n    local j\n    local sum\n    local index\n\
    \    local min_sum\n    local min_index\n    local min_value\n\n    for ((i =\
    \ 0; i < ${#list[@]}; i++)); do\n        sum=0\n        for ((j = 0; j < ${#list[$i]};\
    \ j++)); do\n            sum=$((sum + ${list[$i]:$j:1}))\n        done\n     \
    \   sums[$i]=$sum\n    done\n\n    for ((i = 0; i < ${#list[@]}; i++)); do\n \
    \       min_sum=${sums[0]}\n        min_index=0\n        min_value=${list[0]}\n\
    \        for ((j = 0; j < ${#list[@]}; j++)); do\n            if [[ ${sums[$j]}\
    \ -lt $min_sum ]]; then\n                min_sum=${sums[$j]}\n               \
    \ min_index=$j\n                min_value=${list[$j]}\n            fi\n      \
    \  done\n        sums[$min_index]=999999\n        result[$i]=$min_value\n    done\n\
    \n    echo ${result[@]}", "    local -a arr=()\n    local -a res=()\n    local\
    \ -a sum=()\n    local -a index=()\n    local -a sorted_index=()\n    local -a\
    \ sorted_sum=()\n    local -a sorted_res=()\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n   \
    \ local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local\
    \ u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n\
    \    local sum_digit=0\n    local temp=0\n    local temp_index=0\n    local temp_sum=0\n\
    \    local temp_res=0\n    local temp_index_2=0\n    local temp_sum_2=0\n    local\
    \ temp_res_2=0\n    local temp_index_3=0\n    local temp_sum_3=0\n    local temp_res_3=0\n\
    \    local temp_index_4=0\n    local temp_sum_4=0\n    local temp_res_4=0\n  \
    \  local temp_index_5=0\n    local temp_sum_5=0\n    local temp_res_5=0\n    local\
    \ temp_index_6=0\n    local temp_sum_6=0\n    local temp_res_6=0\n    local temp_index_7=0\n\
    \    local temp_sum_7=0\n    local temp_res_7=0\n    local temp_index_8=0\n  \
    \  local temp_sum_8=0\n    local temp_res_8=0\n    local temp_index_9=0\n    local\
    \ temp_sum_9=0\n    local temp_res_9=0\n    local temp_index_10=0\n    local temp_sum_10=0\n\
    \    local temp_res_10=0\n    local temp_index_11=0\n    local temp_sum_11=0\n\
    \    local temp_res_11=0\n    local temp", "    local -a list=($1)\n    local\
    \ -a sums\n    local -a sorted\n    local -a result\n    local i\n    local sum\n\
    \    local index\n    local item\n\n    for ((i=0; i<${#list[@]}; i++)); do\n\
    \        sum=0\n        for ((j=0; j<${#list[$i]}; j++)); do\n            sum=$((sum\
    \ + ${list[$i]:$j:1}))\n        done\n        sums[$i]=$sum\n    done\n\n    sorted=($(printf\
    \ \"%s\\n\" \"${sums[@]}\" | sort -n))\n\n    for ((i=0; i<${#sorted[@]}; i++));\
    \ do\n        sum=${sorted[$i]}\n        index=$(printf \"%s\\n\" \"${sums[@]}\"\
    \ | grep -n $sum | cut -d: -f1)\n        item=${list[$index]}\n        result[$i]=\"\
    \\\"$item\\\"\"\n    done\n\n    echo \"[${result[@]}]\"", "    local list=($1)\n\
    \    local len=${#list[@]}\n    local i=0\n    local j=0\n    local tmp=0\n  \
    \  local sum=0\n    local sum_list=()\n    local index_list=()\n    local result=()\n\
    \    for ((i=0; i<len; i++)); do\n        sum=0\n        for ((j=0; j<${#list[$i]};\
    \ j++)); do\n            tmp=${list[$i]:$j:1}\n            if [[ $tmp =~ ^[0-9]$\
    \ ]]; then\n                sum=$((sum+tmp))\n            fi\n        done\n \
    \       sum_list[$i]=$sum\n        index_list[$i]=$i\n    done\n    for ((i=0;\
    \ i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n            if [[ ${sum_list[$i]}\
    \ -gt ${sum_list[$j]} ]]; then\n                tmp=${sum_list[$i]}\n        \
    \        sum_list[$i]=${sum_list[$j]}\n                sum_list[$j]=$tmp\n   \
    \             tmp=${index_list[$i]}\n                index_list[$i]=${index_list[$j]}\n\
    \                index_list[$j]=$tmp\n            fi\n        done\n    done\n\
    \    for ((i=0; i<len; i++)); do\n        result[$i]=${list[${index_list[$i]}]}\n\
    \    done\n    echo ${result[@]}", "    local -a array=($1)\n    local -a result=()\n\
    \    local -a sum=()\n    local -a index=()\n    local -a sorted_index=()\n  \
    \  local -a sorted_sum=()\n    local -a sorted_array=()\n    local -a sorted_result=()\n\
    \    local -a sorted_index_result=()\n    local -a sorted_index_sum=()\n    local\
    \ -a sorted_index_array=()\n    local -a sorted_index_result=()\n    local -a\
    \ sorted_index_result_array=()\n    local -a sorted_index_result_sum=()\n    local\
    \ -a sorted_index_result_array=()\n    local -a sorted_index_result_sum=()\n \
    \   local -a sorted_index_result_array=()\n    local -a sorted_index_result_sum=()\n\
    \    local -a sorted_index_result_array=()\n    local -a sorted_index_result_sum=()\n\
    \    local -a sorted_index_result_array=()\n    local -a sorted_index_result_sum=()\n\
    \    local -a sorted_index_result_array=()\n    local -a sorted_index_result_sum=()\n\
    \    local -a sorted_index_result_array=()\n    local -a sorted_index_result_sum=()\n\
    \    local -a sorted_index_result_array=()\n    local -a sorted_index_result_sum=()\n\
    \    local -a sorted_index_result_array=()\n    local -a sorted_index_result_sum=()\n\
    \    local -a sorted_index_result_array=()\n    local -a sorted_index_result_sum=()\n\
    \    local -a sorted_index_result_array=()\n    local -a sorted_index_result_sum=()\n\
    \    local -a sorted_index_result_array=()\n    local -a sorted_index_result_sum=()\n\
    \    local -a sorted_index_result_array=()\n    local -a sorted_index_result_sum=()\n\
    \    local -a sorted_index_result_array=()\n    local -a sorted_index_result_sum",
  "    local list=($1)\n    local sum=0\n    local i=0\n    local j=0\n    local k=0\n\
    \    local tmp=0\n    local result=()\n    for i in ${list[@]}; do\n        sum=0\n\
    \        for ((j=0; j<${#i}; j++)); do\n            sum=$((sum + ${i:$j:1}))\n\
    \        done\n        result[$k]=$sum\n        k=$((k + 1))\n    done\n    for\
    \ ((i=0; i<${#result[@]}; i++)); do\n        for ((j=i+1; j<${#result[@]}; j++));\
    \ do\n            if [[ ${result[$i]} -gt ${result[$j]} ]]; then\n           \
    \     tmp=${result[$i]}\n                result[$i]=${result[$j]}\n          \
    \      result[$j]=$tmp\n                tmp=${list[$i]}\n                list[$i]=${list[$j]}\n\
    \                list[$j]=$tmp\n            fi\n        done\n    done\n    echo\
    \ ${list[@]}", "    local list=$1\n    local sum=0\n    local result=\"\"\n  \
    \  for i in $list; do\n        sum=0\n        for (( j=0; j<${#i}; j++ )); do\n\
    \            sum=$((sum+${i:$j:1}))\n        done\n        result=\"$result $sum:$i\"\
    \n    done\n    echo $result | tr ' ' '\\n' | sort -n | cut -d ':' -f 2 | tr '\\\
    n' ' '"]
stop_tokens:
- "\n}"

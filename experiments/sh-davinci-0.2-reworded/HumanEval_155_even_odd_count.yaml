name: HumanEval_155_even_odd_count
language: sh
prompt: "#!/bin/bash\n# Given an integer. return a list that has the number of even\
  \ and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\")\n# ['\"\
  1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n#\n# $1 is\
  \ an integer\neven_odd_count() {\n"
tests: "}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
  \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
  3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\"\
  ) = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
  \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
completions: ["  local even_count=0\n  local odd_count=0\n  local number=$1\n  if\
    \ [[ $number =~ ^-?[0-9]+$ ]]; then\n    while [ $number -ne 0 ]; do\n      if\
    \ [ $((number % 10)) -eq 0 ] || [ $((number % 10)) -eq 2 ] || [ $((number % 10))\
    \ -eq 4 ] || [ $((number % 10)) -eq 6 ] || [ $((number % 10)) -eq 8 ]; then\n\
    \        even_count=$((even_count + 1))\n      else\n        odd_count=$((odd_count\
    \ + 1))\n      fi\n      number=$((number / 10))\n    done\n  fi\n  echo \"[\\\
    \"$even_count\\\", \\\"$odd_count\\\"]\"", "  local -i even=0\n  local -i odd=0\n\
    \  local -i number=${1}\n  while [[ ${number} -ne 0 ]]; do\n    local -i digit=${number}%10\n\
    \    if [[ ${digit}%2 -eq 0 ]]; then\n      ((even++))\n    else\n      ((odd++))\n\
    \    fi\n    ((number/=10))\n  done\n  echo \"[\\\"${even}\\\", \\\"${odd}\\\"\
    ]\"", "    local even=0\n    local odd=0\n    local num=$1\n    local digit\n\
    \    while [ $num -gt 0 ]; do\n        digit=$((num % 10))\n        if [ $((digit\
    \ % 2)) -eq 0 ]; then\n            even=$((even + 1))\n        else\n        \
    \    odd=$((odd + 1))\n        fi\n        num=$((num / 10))\n    done\n    echo\
    \ \"[\\\"$even\\\", \\\"$odd\\\"]\"", "    local even_count=0\n    local odd_count=0\n\
    \    local num=$1\n    while [ $num -ne 0 ]; do\n        local digit=$((num %\
    \ 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even_count=$((even_count\
    \ + 1))\n        else\n            odd_count=$((odd_count + 1))\n        fi\n\
    \        num=$((num / 10))\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"", "  local even_count=0\n  local odd_count=0\n  local digit\n  local number=$1\n\
    \  while [[ $number -ne 0 ]]; do\n    digit=$((number % 10))\n    if [[ $((digit\
    \ % 2)) -eq 0 ]]; then\n      even_count=$((even_count + 1))\n    else\n     \
    \ odd_count=$((odd_count + 1))\n    fi\n    number=$((number / 10))\n  done\n\
    \  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"", "  local even=0\n  local\
    \ odd=0\n  local num=$1\n  local digit\n  while [[ $num -gt 0 ]]; do\n    digit=$((num\
    \ % 10))\n    if [[ $((digit % 2)) -eq 0 ]]; then\n      even=$((even + 1))\n\
    \    else\n      odd=$((odd + 1))\n    fi\n    num=$((num / 10))\n  done\n  echo\
    \ \"[\\\"$even\\\", \\\"$odd\\\"]\"", "    local even_count=0\n    local odd_count=0\n\
    \    local num=$1\n    local digit\n    while [ $num -gt 0 ]; do\n        digit=$((num\
    \ % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even_count=$((even_count\
    \ + 1))\n        else\n            odd_count=$((odd_count + 1))\n        fi\n\
    \        num=$((num / 10))\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"", "    local num=$1\n    local even_count=0\n    local odd_count=0\n   \
    \ for (( i=0; i<${#num}; i++ )); do\n        local digit=${num:$i:1}\n       \
    \ if [[ $digit =~ ^[0-9]+$ ]]; then\n            if [[ $(( digit % 2 )) -eq 0\
    \ ]]; then\n                (( even_count++ ))\n            else\n           \
    \     (( odd_count++ ))\n            fi\n        fi\n    done\n    echo \"[\\\"\
    $even_count\\\", \\\"$odd_count\\\"]\"", "    local num=$1\n    local even_count=0\n\
    \    local odd_count=0\n    local digit\n    while [ $num -ne 0 ]; do\n      \
    \  digit=$((num % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n          \
    \  even_count=$((even_count + 1))\n        else\n            odd_count=$((odd_count\
    \ + 1))\n        fi\n        num=$((num / 10))\n    done\n    echo \"[\\\"$even_count\\\
    \", \\\"$odd_count\\\"]\"", "    local num=$1\n    local even_count=0\n    local\
    \ odd_count=0\n    local digit\n    for ((i=0; i<${#num}; i++)); do\n        digit=${num:$i:1}\n\
    \        if [[ $digit -eq 0 || $digit -eq 2 || $digit -eq 4 || $digit -eq 6 ||\
    \ $digit -eq 8 ]]; then\n            ((even_count++))\n        else\n        \
    \    ((odd_count++))\n        fi\n    done\n    echo \"[\\\"$even_count\\\", \\\
    \"$odd_count\\\"]\"", "    local even_count=0\n    local odd_count=0\n    local\
    \ num=$1\n    local digit\n    while [ $num -gt 0 ]; do\n        digit=$((num\
    \ % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even_count=$((even_count\
    \ + 1))\n        else\n            odd_count=$((odd_count + 1))\n        fi\n\
    \        num=$((num / 10))\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"", "  local even_count=0\n  local odd_count=0\n  local number=$1\n  local\
    \ digit\n  while [[ $number -ne 0 ]]; do\n    digit=$((number % 10))\n    if [[\
    \ $((digit % 2)) -eq 0 ]]; then\n      even_count=$((even_count + 1))\n    else\n\
    \      odd_count=$((odd_count + 1))\n    fi\n    number=$((number / 10))\n  done\n\
    \  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"", "    local even_count=0\n\
    \    local odd_count=0\n    for (( i=0; i<${#1}; i++ )); do\n        if [[ ${1:$i:1}\
    \ =~ ^[0-9]+$ ]]; then\n            if [[ $((${1:$i:1} % 2)) -eq 0 ]]; then\n\
    \                ((even_count++))\n            else\n                ((odd_count++))\n\
    \            fi\n        fi\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"", "  local even_count=0\n  local odd_count=0\n  local number=$1\n  while\
    \ [ $number -ne 0 ]; do\n    local digit=$((number % 10))\n    if [ $((digit %\
    \ 2)) -eq 0 ]; then\n      even_count=$((even_count + 1))\n    else\n      odd_count=$((odd_count\
    \ + 1))\n    fi\n    number=$((number / 10))\n  done\n  echo \"[\\\"$even_count\\\
    \", \\\"$odd_count\\\"]\"", "    local even_count=0\n    local odd_count=0\n \
    \   local number=$1\n    local digit\n    while [ $number -ne 0 ]; do\n      \
    \  digit=$((number % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n       \
    \     even_count=$((even_count + 1))\n        else\n            odd_count=$((odd_count\
    \ + 1))\n        fi\n        number=$((number / 10))\n    done\n    echo \"[\\\
    \"$even_count\\\", \\\"$odd_count\\\"]\"", "  local even_count=0\n  local odd_count=0\n\
    \  local num=\"$1\"\n  local digit\n  while [ \"$num\" -gt 0 ]; do\n    digit=$((num\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"", "  local\
    \ even_count=0\n  local odd_count=0\n  local num=$1\n  if [[ $num =~ ^-?[0-9]+$\
    \ ]]; then\n    while [ $num -ne 0 ]; do\n      local digit=$((num % 10))\n  \
    \    if [ $((digit % 2)) -eq 0 ]; then\n        even_count=$((even_count + 1))\n\
    \      else\n        odd_count=$((odd_count + 1))\n      fi\n      num=$((num\
    \ / 10))\n    done\n  fi\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"",
  "    local even_count=0\n    local odd_count=0\n    for (( i=0; i<${#1}; i++ ));\
    \ do\n        if [[ $(( ${1:$i:1} % 2 )) -eq 0 ]]; then\n            even_count=$((\
    \ even_count + 1 ))\n        else\n            odd_count=$(( odd_count + 1 ))\n\
    \        fi\n    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"",
  "    local even=0\n    local odd=0\n    local num=$1\n    while [ $num -ne 0 ];\
    \ do\n        local digit=$((num % 10))\n        if [ $((digit % 2)) -eq 0 ];\
    \ then\n            even=$((even + 1))\n        else\n            odd=$((odd +\
    \ 1))\n        fi\n        num=$((num / 10))\n    done\n    echo \"[\\\"$even\\\
    \", \\\"$odd\\\"]\"", "  local even=0\n  local odd=0\n  local num=$1\n  while\
    \ [[ $num -ne 0 ]]; do\n    local digit=$((num % 10))\n    if [[ $((digit % 2))\
    \ -eq 0 ]]; then\n      even=$((even + 1))\n    else\n      odd=$((odd + 1))\n\
    \    fi\n    num=$((num / 10))\n  done\n  echo \"[\\\"$even\\\", \\\"$odd\\\"\
    ]\""]
stop_tokens:
- "\n}"

language: sh
name: HumanEval_30_get_positive
results:
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/^\
    \ *//g' | sed 's/ *$//g'\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=$1\n  local result=\"\"\n  for i in $list; do\n    if [ $i -gt 0\
    \ ]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo $result\n}\n\n\
    candidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=${1}\n    local positive_list=()\n    for item in ${list}; do\n\
    \        if [ ${item} -gt 0 ]; then\n            positive_list+=(\"${item}\")\n\
    \        fi\n    done\n    echo \"${positive_list[@]}\"\n}\n\ncandidate() {\n\
    \    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2\
    \ 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\")\
    \ = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local -a arr=()\n    for i in $1; do\n        if [ $i -ge 0 ]; then\n    \
    \        arr+=(\"$i\")\n        fi\n    done\n    echo \"${arr[@]}\"\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local positive_list=()\n    for i in $list; do\n      \
    \  if [[ $i -gt 0 ]]; then\n            positive_list+=(\"$i\")\n        fi\n\
    \    done\n    echo \"${positive_list[@]}\"\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=$1\n  local result=\"\"\n  for i in $list; do\n    if [ $i -gt 0\
    \ ]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo $result\n}\n\n\
    candidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=$1\n  local positive_list=()\n  for number in $list; do\n    if [[\
    \ $number -ge 0 ]]; then\n      positive_list+=(\"$number\")\n    fi\n  done\n\
    \  echo \"${positive_list[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n\
    \    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local result=\"\"\n  for i in $list; do\n    if [ $i -ge\
    \ 0 ]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo $result\n}\n\n\
    candidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local positive_list=()\n    for i in $list; do\n      \
    \  if [[ $i -gt 0 ]]; then\n            positive_list+=($i)\n        fi\n    done\n\
    \    echo \"${positive_list[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n\
    \    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=()\n    for i in $list; do\n        if\
    \ [[ $i -gt 0 ]]; then\n            result+=($i)\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=()\n    local item\n    for item in $list;\
    \ do\n        if [[ $item -gt 0 ]]; then\n            result+=(\"$item\")\n  \
    \      fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local result=\"\"\n    for i in $list; do\n        if [[\
    \ $i -gt 0 ]]; then\n            result=\"$result $i\"\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [ $i -ge 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n\
    \    echo \"$result\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local positive_list=$(echo $list | tr ' ' '\\n' | grep\
    \ -E '^[0-9]+$')\n    echo $positive_list\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for item in $list; do\n    \
    \    if [ $item -gt 0 ]; then\n            result=\"$result $item\"\n        fi\n\
    \    done\n    echo $result\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n   \
    \ [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local result=\"\"\n  for i in $list; do\n    if [ $i -ge\
    \ 0 ]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo \"[$(array_to_json\
    \ $result)]\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp7vh7l88g.sh: line 17: array_to_json: command not found

    '
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=()\n    for i in $list; do\n        if\
    \ [[ $i -gt 0 ]]; then\n            result+=(\"$i\")\n        fi\n    done\n \
    \   echo \"${result[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n   \
    \ [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [ $i -ge 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/ $//'\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local positive_list=\"\"\n    for num in $list; do\n  \
    \      if [ $num -ge 0 ]; then\n            positive_list=\"$positive_list $num\"\
    \n        fi\n    done\n    echo $positive_list\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [ $i -ge 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local result=\"\"\n  for i in $list; do\n    if [[ $i -ge\
    \ 0 ]]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo $result\n}\n\
    \ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local result=()\n    for i in $list; do\n        if [[\
    \ $i -gt 0 ]]; then\n            result+=($i)\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [ $i -ge 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n\
    \    echo \"$result\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local positive_list=()\n    for item in $list; do\n   \
    \     if [ $item -gt 0 ]; then\n            positive_list+=(\"$item\")\n     \
    \   fi\n    done\n    echo \"${positive_list[@]}\"\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/^\
    \ *//g' | sed 's/ *$//g'\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local -a arr=()\n    for i in $1; do\n        if [[ $i -gt 0 ]]; then\n  \
    \          arr+=(\"$i\")\n        fi\n    done\n    echo \"${arr[@]}\"\n}\n\n\
    candidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [[ $i -gt 0 ]]; then\n            result=\"$result $i\"\n        fi\n   \
    \ done\n    echo $result\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/^\
    \ *//g' | sed 's/ *$//g'\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for number in $list; do\n  \
    \      if [[ $number -ge 0 ]]; then\n            result=\"$result $number\"\n\
    \        fi\n    done\n    echo $result\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr \" \" \"\\n\" | grep -E \"^[0-9]+$\" | tr \"\\n\" \" \"\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/^\
    \ *//g' | sed 's/ *$//g'\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local result=\"\"\n  for item in $list; do\n    if [[ $item\
    \ -gt 0 ]]; then\n      result=\"$result $item\"\n    fi\n  done\n  echo $result\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo $1 | tr \" \" \"\\n\" | grep -E \"^[0-9]+$\" | tr \"\\n\" \" \"\n}\n\n\
    candidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=$1\n  local positive_list=\"\"\n  for i in $list; do\n    if [[ $i\
    \ -gt 0 ]]; then\n      positive_list=\"$positive_list $i\"\n    fi\n  done\n\
    \  echo $positive_list\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/ $//'\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local result=()\n    for i in $list; do\n        if [[\
    \ $i -gt 0 ]]; then\n            result+=(\"$i\")\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local result=()\n  for i in $list; do\n    if [[ $i -ge\
    \ 0 ]]; then\n      result+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=()\n    for i in $list; do\n        if\
    \ [[ $i -gt 0 ]]; then\n            result+=(\"$i\")\n        fi\n    done\n \
    \   echo \"${result[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n   \
    \ [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=()\n    for i in $list; do\n        if\
    \ [[ $i -gt 0 ]]; then\n            result+=(\"$i\")\n        fi\n    done\n \
    \   echo \"${result[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n   \
    \ [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [[ $i -gt 0 ]]; then\n            result=\"$result $i\"\n        fi\n   \
    \ done\n    echo $result\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=()\n    for i in $list; do\n        if\
    \ [ $i -ge 0 ]; then\n            result+=(\"$i\")\n        fi\n    done\n   \
    \ echo \"${result[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local result=()\n  for i in $list; do\n    if [[ $i -ge\
    \ 0 ]]; then\n      result+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local result=()\n    for i in $list; do\n        if [ $i\
    \ -ge 0 ]; then\n            result+=(\"$i\")\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local positive_list=()\n    for i in $list; do\n      \
    \  if [ $i -gt 0 ]; then\n            positive_list+=($i)\n        fi\n    done\n\
    \    echo ${positive_list[@]}\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n \
    \   [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [ $i -ge 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n\
    \    echo \"[$(join_by \", \" $result)]\"\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmps085jh5k.sh: line 17: join_by: command not found

    '
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep '^[0-9]*$' | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=$1\n  local result=()\n  for i in $list; do\n    if [ $i -gt 0 ];\
    \ then\n      result+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=(\"$@\")\n    local positive_list=()\n    for i in \"${list[@]}\"\
    ; do\n        if [[ $i -gt 0 ]]; then\n            positive_list+=(\"$i\")\n \
    \       fi\n    done\n    echo \"${positive_list[@]}\"\n}\n\ncandidate() {\n \
    \   get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2\
    \ 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\")\
    \ = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1xsumw8o.sh: line 13: [[: -1 -2 4 5 6: syntax error in expression
    (error token is "4 5 6")

    '
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local result=\"\"\n  for i in $list; do\n    if [ $i -ge\
    \ 0 ]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo \"[$(echo $result\
    \ | sed -e 's/ /\", \"/g')]\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n \
    \   [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=$1\n  local result=()\n  for item in $list; do\n    if [[ $item -gt\
    \ 0 ]]; then\n      result+=($item)\n    fi\n  done\n  echo ${result[@]}\n}\n\n\
    candidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/^\
    \ *//g' | sed 's/ *$//g'\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local positive_list=()\n    for i in $list; do\n  \
    \      if [ $i -ge 0 ]; then\n            positive_list+=($i)\n        fi\n  \
    \  done\n    echo \"${positive_list[@]}\"\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local -a list=($1)\n    local -a positive_list=()\n    for i in \"${list[@]}\"\
    ; do\n        if (( $i > 0 )); then\n            positive_list+=(\"$i\")\n   \
    \     fi\n    done\n    echo \"${positive_list[@]}\"\n}\n\ncandidate() {\n   \
    \ get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4\
    \ 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") =\
    \ \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/ $//'\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local result=\"\"\n  for i in $list; do\n    if [ $i -ge\
    \ 0 ]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo $result\n}\n\n\
    candidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for item in $list; do\n    \
    \    if [ $item -gt 0 ]; then\n            result=\"$result $item\"\n        fi\n\
    \    done\n    echo $result\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n   \
    \ [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/ $//'\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for item in $list; do\n    \
    \    if [[ $item -gt 0 ]]; then\n            result=\"$result $item\"\n      \
    \  fi\n    done\n    echo $result\n}\n\ncandidate() {\n    get_positive \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n\
    \    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local positive_list=\"\"\n    for i in $list; do\n    \
    \    if [ $i -gt 0 ]; then\n            positive_list=\"$positive_list $i\"\n\
    \        fi\n    done\n    echo $positive_list\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local positive_list=()\n    for item in $list; do\n   \
    \     if [[ $item -gt 0 ]]; then\n            positive_list+=(\"$item\")\n   \
    \     fi\n    done\n    echo \"${positive_list[@]}\"\n}\n\ncandidate() {\n   \
    \ get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4\
    \ 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") =\
    \ \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/^\
    \ *//g' | sed 's/ *$//g'\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for item in $list; do\n    \
    \    if [ $item -gt 0 ]; then\n            result=\"$result $item\"\n        fi\n\
    \    done\n    echo $result\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n   \
    \ [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local positive_list=()\n    for i in $list; do\n      \
    \  if [[ $i -gt 0 ]]; then\n            positive_list+=($i)\n        fi\n    done\n\
    \    echo \"${positive_list[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n\
    \    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local result=()\n    for item in ${list[@]}; do\n     \
    \   if [[ $item -gt 0 ]]; then\n            result+=($item)\n        fi\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local result=()\n    for i in $list; do\n        if [[\
    \ $i -gt 0 ]]; then\n            result+=(\"$i\")\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [[ $i -ge 0 ]]; then\n            result=\"$result $i\"\n        fi\n   \
    \ done\n    echo \"$result\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n \
    \   [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [[ $i -ge 0 ]]; then\n            result=\"$result $i\"\n        fi\n   \
    \ done\n    echo \"$result\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n \
    \   [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local result=\"\"\n  for i in $list; do\n    if [ $i -ge\
    \ 0 ]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo \"[$(echo $result\
    \ | sed 's/ /\", \"/g')]\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n   \
    \ [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/ $//'\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local -a list=($1)\n    local -a positive\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i -ge 0 ]]; then\n            positive+=(\"$i\")\n        fi\n\
    \    done\n    echo \"${positive[@]}\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local numbers=($1)\n    local positive_numbers=()\n    for number in \"${numbers[@]}\"\
    ; do\n        if [ \"$number\" -ge 0 ]; then\n            positive_numbers+=($number)\n\
    \        fi\n    done\n    echo \"${positive_numbers[@]}\"\n}\n\ncandidate() {\n\
    \    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2\
    \ 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\")\
    \ = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local result=()\n    for i in $list; do\n        if [ $i\
    \ -gt 0 ]; then\n            result+=($i)\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local result=\"\"\n  for i in $list; do\n    if [[ $i -ge\
    \ 0 ]]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo $result\n}\n\
    \ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    local num\n    for num in $list;\
    \ do\n        if [ \"$num\" -ge 0 ]; then\n            result=\"$result $num\"\
    \n        fi\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/ $//'\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=()\n    for i in $list; do\n        if\
    \ [ $i -ge 0 ]; then\n            result+=(\"$i\")\n        fi\n    done\n   \
    \ echo \"${result[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=($1)\n  local positive_list=()\n  for i in \"${list[@]}\"; do\n \
    \   if [[ $i -gt 0 ]]; then\n      positive_list+=(\"$i\")\n    fi\n  done\n \
    \ echo \"${positive_list[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n\
    \    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/ $//'\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [ $i -ge 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n\
    \    echo \"$result\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local -a arr=()\n    for i in $1; do\n        if [[ $i -gt 0 ]]; then\n  \
    \          arr+=(\"$i\")\n        fi\n    done\n    echo \"${arr[@]}\"\n}\n\n\
    candidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local -a arr=($1)\n    local -a res=()\n    for i in \"${arr[@]}\"; do\n \
    \       if [[ $i -gt 0 ]]; then\n            res+=(\"$i\")\n        fi\n    done\n\
    \    echo \"${res[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local result=\"\"\n  for i in $list; do\n    if [ \"$i\"\
    \ -ge 0 ]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo $result\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/ $//'\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=$1\n  local result=()\n  for i in $list; do\n    if [[ $i -gt 0 ]];\
    \ then\n      result+=($i)\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local -a arr=()\n  for i in $1; do\n    if [[ $i -gt 0 ]]; then\n      arr+=(\"\
    $i\")\n    fi\n  done\n  echo \"${arr[@]}\"\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local result=\"\"\n  for i in $list; do\n    if [ $i -ge\
    \ 0 ]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo \"[$(join_by\
    \ \", \" $result)]\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwz4fqtl5.sh: line 17: join_by: command not found

    '
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local result=\"\"\n    for i in $list; do\n        if [\
    \ $i -gt 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local result=\"\"\n    for i in $list; do\n        if [\
    \ $i -gt 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local numbers=($1)\n    local positive_numbers=()\n    for number in \"${numbers[@]}\"\
    ; do\n        if [ $number -ge 0 ]; then\n            positive_numbers+=($number)\n\
    \        fi\n    done\n    echo \"${positive_numbers[@]}\"\n}\n\ncandidate() {\n\
    \    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2\
    \ 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\")\
    \ = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [[ $i -ge 0 ]]; then\n            result=\"$result $i\"\n        fi\n   \
    \ done\n    echo $result\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local result=\"\"\n  for i in $list; do\n    if [[ $i -ge\
    \ 0 ]]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo \"$result\"\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local positive_list=\"\"\n    for num in $list; do\n\
    \        if (( $num > 0 )); then\n            positive_list+=\"$num \"\n     \
    \   fi\n    done\n    echo \"$positive_list\"\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local result=()\n    for item in $list; do\n        if\
    \ [[ $item -gt 0 ]]; then\n            result+=(\"$item\")\n        fi\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n   \
    \ [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local result=()\n  for i in $list; do\n    if [ $i -ge\
    \ 0 ]; then\n      result+=($i)\n    fi\n  done\n  echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local numbers=($1)\n  local positive=()\n  for number in \"${numbers[@]}\";\
    \ do\n    if (( number > 0 )); then\n      positive+=(\"$number\")\n    fi\n \
    \ done\n  echo \"${positive[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n\
    \    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=$1\n  local result=()\n  for i in ${list}; do\n    if [[ ${i} -gt\
    \ 0 ]]; then\n      result+=(\"${i}\")\n    fi\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local positive_list=$(echo $list | tr ' ' '\\n' | grep\
    \ -E '^[0-9]+$')\n    echo $positive_list\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [[ $i -ge 0 ]]; then\n            result=\"$result $i\"\n        fi\n   \
    \ done\n    echo \"$result\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n \
    \   [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local result=()\n    for i in $list; do\n        if [[\
    \ $i -gt 0 ]]; then\n            result+=(\"$i\")\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/^\
    \ *//g' | sed 's/ *$//g'\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=$1\n  local positive_list=()\n  for i in $list; do\n    if [[ $i\
    \ -gt 0 ]]; then\n      positive_list+=(\"$i\")\n    fi\n  done\n  echo \"${positive_list[@]}\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local result=\"\"\n  for i in $list; do\n    if [ $i -ge\
    \ 0 ]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo $result\n}\n\n\
    candidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for item in $list; do\n    \
    \    if [[ $item -gt 0 ]]; then\n            result=\"$result $item\"\n      \
    \  fi\n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local positive_list=()\n    for item in $list; do\n   \
    \     if [ $item -gt 0 ]; then\n            positive_list+=(\"$item\")\n     \
    \   fi\n    done\n    echo \"${positive_list[@]}\"\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local positive_list=\"\"\n    for i in $list; do\n    \
    \    if [[ $i -gt 0 ]]; then\n            positive_list=\"$positive_list $i\"\n\
    \        fi\n    done\n    echo $positive_list\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [ \"$i\" -ge 0 ]; then\n            result=\"$result $i\"\n        fi\n \
    \   done\n    echo \"$result\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n\
    \    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local numbers=\"$1\"\n    local result=()\n    for number in $numbers; do\n\
    \        if [[ $number -gt 0 ]]; then\n            result+=(\"$number\")\n   \
    \     fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=$1\n  local result=()\n  for item in $list; do\n    if [[ $item -gt\
    \ 0 ]]; then\n      result+=(\"$item\")\n    fi\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr \" \" \"\\n\" | grep -E \"^[0-9]+$\" | tr \"\\n\" \" \"\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local positive_list\n    local number\n    for number in\
    \ $list; do\n        if [[ $number -ge 0 ]]; then\n            positive_list+=\"\
    $number \"\n        fi\n    done\n    echo \"$positive_list\"\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local result=\"\"\n    for i in $list; do\n        if [[\
    \ $i -gt 0 ]]; then\n            result=\"$result $i\"\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local -a list=($1)\n    local -a positive_list=()\n    for i in \"${list[@]}\"\
    ; do\n        if [ $i -ge 0 ]; then\n            positive_list+=(\"$i\")\n   \
    \     fi\n    done\n    echo \"${positive_list[@]}\"\n}\n\ncandidate() {\n   \
    \ get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4\
    \ 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") =\
    \ \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=$1\n  local result=()\n  for i in $list; do\n    if [[ $i -gt 0 ]];\
    \ then\n      result+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep '^[0-9]*[1-9][0-9]*$' | tr '\\n' ' '\n}\n\
    \ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local result=()\n    for i in $list; do\n        if [[\
    \ $i -gt 0 ]]; then\n            result+=($i)\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local positive_list=$(echo \"$list\" | awk '{for(i=1;i<=NF;i++)\
    \ if($i>0) print $i}')\n    echo \"$positive_list\"\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=()\n    for item in $list; do\n      \
    \  if [ $item -gt 0 ]; then\n            result+=($item)\n        fi\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local positive_list=\"\"\n    for item in $list; do\n \
    \       if [ $item -gt 0 ]; then\n            positive_list=\"$positive_list $item\"\
    \n        fi\n    done\n    echo $positive_list\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local result=()\n    for i in $list; do\n        if [ $i\
    \ -ge 0 ]; then\n            result+=($i)\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=${1}\n  local result=()\n  for item in ${list}; do\n    if [[ ${item}\
    \ -gt 0 ]]; then\n      result+=(\"${item}\")\n    fi\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local positive=()\n    for i in ${list[@]}; do\n      \
    \  if [ $i -ge 0 ]; then\n            positive+=($i)\n        fi\n    done\n \
    \   echo ${positive[@]}\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local result=\"\"\n  for i in $list; do\n    if [ $i -ge\
    \ 0 ]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo \"$result\"\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local positive_list=\"\"\n    for i in $list; do\n\
    \        if [[ $i -ge 0 ]]; then\n            positive_list=\"$positive_list $i\"\
    \n        fi\n    done\n    echo $positive_list\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/^\
    \ *//g' | sed 's/ *$//g'\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [ $i -ge 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n\
    \    echo \"[$(join_by \",\" $result)]\"\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp87iov5tp.sh: line 17: join_by: command not found

    '
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=$1\n  local positive_list=()\n  for i in $list; do\n    if [[ $i\
    \ -gt 0 ]]; then\n      positive_list+=(\"$i\")\n    fi\n  done\n  echo \"${positive_list[@]}\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/^\
    \ *//g' | sed 's/ *$//g'\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local -a arr=()\n    for i in $1; do\n        if [[ $i -gt 0 ]]; then\n  \
    \          arr+=(\"$i\")\n        fi\n    done\n    echo \"${arr[@]}\"\n}\n\n\
    candidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local numbers=($1)\n    local positive=()\n    for number in \"${numbers[@]}\"\
    ; do\n        if [ \"$number\" -gt 0 ]; then\n            positive+=(\"$number\"\
    )\n        fi\n    done\n    echo \"${positive[@]}\"\n}\n\ncandidate() {\n   \
    \ get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4\
    \ 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") =\
    \ \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=$1\n  local positive_list=()\n  for i in $list; do\n    if [[ $i\
    \ -gt 0 ]]; then\n      positive_list+=(\"$i\")\n    fi\n  done\n  echo \"${positive_list[@]}\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=()\n    for number in $list; do\n    \
    \    if [[ $number -ge 0 ]]; then\n            result+=(\"$number\")\n       \
    \ fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [ \"$i\" -ge 0 ]; then\n            result=\"$result $i\"\n        fi\n \
    \   done\n    echo \"$result\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n\
    \    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=()\n    for i in $list; do\n        if\
    \ [ $i -ge 0 ]; then\n            result+=(\"$i\")\n        fi\n    done\n   \
    \ echo \"${result[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [ $i -ge 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=()\n    for i in $list; do\n        if\
    \ [[ $i -ge 0 ]]; then\n            result+=(\"$i\")\n        fi\n    done\n \
    \   echo \"${result[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n   \
    \ [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | awk '{for(i=1;i<=NF;i++) if($i>0) print $i}'\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=()\n    for i in $list; do\n        if\
    \ [ $i -ge 0 ]; then\n            result+=($i)\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local result=\"\"\n  for i in $list; do\n    if [[ $i -ge\
    \ 0 ]]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo $result\n}\n\
    \ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local result=\"\"\n  for i in $list; do\n    if [ $i -ge\
    \ 0 ]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo \"$result\"\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local result=()\n    for i in $list; do\n        if [[\
    \ $i -gt 0 ]]; then\n            result+=(\"$i\")\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=$1\n  local positive_list=\"\"\n  for i in $list; do\n    if [ $i\
    \ -gt 0 ]; then\n      positive_list=\"$positive_list $i\"\n    fi\n  done\n \
    \ echo $positive_list\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local numbers=($1)\n    local positive=()\n    for number in \"${numbers[@]}\"\
    ; do\n        if [[ $number -gt 0 ]]; then\n            positive+=(\"$number\"\
    )\n        fi\n    done\n    echo \"${positive[@]}\"\n}\n\ncandidate() {\n   \
    \ get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4\
    \ 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") =\
    \ \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep '^[0-9]*$' | grep -v '^0$'\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/^ *//g'\
    \ | sed 's/ *$//g'\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ echo \"$1\" | tr \" \" \"\\n\" | grep -E \"^[0-9]+$\" | tr \"\\n\" \" \" | sed\
    \ 's/^ *//g' | sed 's/ *$//g'\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n \
    \   [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [ $i -ge 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=$1\n  local result=()\n  for i in $list; do\n    if [[ $i -gt 0 ]];\
    \ then\n      result+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local positive_list=\"\"\n    for i in $list; do\n\
    \        if [[ $i -ge 0 ]]; then\n            positive_list=\"$positive_list $i\"\
    \n        fi\n    done\n    echo \"$positive_list\"\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [ $i -ge 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n\
    \    echo \"[$(echo $result | sed 's/ /\", \"/g')]\"\n}\n\ncandidate() {\n   \
    \ get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4\
    \ 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") =\
    \ \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local -a arr=()\n  for i in $1; do\n    if [[ $i -gt 0 ]]; then\n      arr+=(\"\
    $i\")\n    fi\n  done\n  echo \"${arr[@]}\"\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local result=()\n  for i in $list; do\n    if [[ $i -ge\
    \ 0 ]]; then\n      result+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/^\
    \ *//g' | sed 's/ *$//g'\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local result=()\n    for i in $list; do\n        if [ $i\
    \ -ge 0 ]; then\n            result+=(\"$i\")\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/^\
    \ *//g' | sed 's/ *$//g'\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=$1\n  local positive_list=\"\"\n  for i in $list; do\n    if [[ $i\
    \ -gt 0 ]]; then\n      positive_list=\"$positive_list $i\"\n    fi\n  done\n\
    \  echo $positive_list\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local result=\"\"\n    for i in $list; do\n        if [[\
    \ $i -gt 0 ]]; then\n            result=\"$result $i\"\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/ $//'\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local result=\"\"\n  for i in $list; do\n    if [[ $i -ge\
    \ 0 ]]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo $result\n}\n\
    \ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local result=\"\"\n  for i in $list; do\n    if [ $i -ge\
    \ 0 ]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo \"[$(echo $result\
    \ | sed 's/ /\", \"/g')]\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n   \
    \ [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local result=\"\"\n    for item in $list; do\n        if\
    \ [ $item -gt 0 ]; then\n            result=\"$result $item\"\n        fi\n  \
    \  done\n    echo \"[$(echo $result | sed 's/ /\", \"/g')]\"\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [ $i -ge 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n\
    \    echo \"[$(echo $result | sed 's/ /\", \"/g')]\"\n}\n\ncandidate() {\n   \
    \ get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4\
    \ 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") =\
    \ \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local res=()\n    for i in $list; do\n        if [ $i -ge\
    \ 0 ]; then\n            res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\"\
    \n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
    \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local res=()\n  for i in $list; do\n    if [ $i -ge 0 ];\
    \ then\n      res+=(\"$i\")\n    fi\n  done\n  echo \"${res[@]}\"\n}\n\ncandidate()\
    \ {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    -1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\"\
    ) = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local numbers=$1\n  local positive_numbers=()\n  for number in $numbers; do\n\
    \    if [[ $number -gt 0 ]]; then\n      positive_numbers+=(\"$number\")\n   \
    \ fi\n  done\n  echo \"${positive_numbers[@]}\"\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/^\
    \ *//g' | sed 's/ *$//g'\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local numbers=($1)\n    local positive_numbers=()\n    for number in \"${numbers[@]}\"\
    ; do\n        if [[ $number -gt 0 ]]; then\n            positive_numbers+=($number)\n\
    \        fi\n    done\n    echo \"${positive_numbers[@]}\"\n}\n\ncandidate() {\n\
    \    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2\
    \ 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\")\
    \ = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local numbers=\"$1\"\n  local result=\"\"\n  for number in $numbers; do\n  \
    \  if [[ $number -ge 0 ]]; then\n      result=\"$result $number\"\n    fi\n  done\n\
    \  echo \"[$(join_by \", \" $result)]\"\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzp7snirx.sh: line 17: join_by: command not found

    '
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local result=()\n    for i in $list; do\n        if [[\
    \ $i -gt 0 ]]; then\n            result+=(\"$i\")\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/^ *//g'\
    \ | sed 's/ *$//g'\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [[ $i -ge 0 ]]; then\n            result=\"$result $i\"\n        fi\n   \
    \ done\n    echo \"$result\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n \
    \   [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/ $//'\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local result=\"\"\n    for i in $list; do\n        if [\
    \ $i -gt 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/^\
    \ *//g' | sed 's/ *$//g'\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [ $i -ge 0 ]; then\n            result+=\" $i\"\n        fi\n    done\n \
    \   echo $result\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local positive_list=\"\"\n    for number in $list; do\n\
    \        if [[ $number -ge 0 ]]; then\n            positive_list=\"$positive_list\
    \ $number\"\n        fi\n    done\n    echo $positive_list\n}\n\ncandidate() {\n\
    \    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2\
    \ 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\")\
    \ = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [ $i -ge 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr \" \" \"\\n\" | grep -E \"^[0-9]+$\" | tr \"\\n\" \" \"\n\
    }\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3\
    \ 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
    ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [[ $i -ge 0 ]]; then\n            result=\"$result $i\"\n        fi\n   \
    \ done\n    echo \"[$(join_by \", \" $result)]\"\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpx2bfvvz_.sh: line 17: join_by: command not found

    '
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=$1\n  local result=()\n  for i in $list; do\n    if [ $i -gt 0 ];\
    \ then\n      result+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1\
    \ -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [[ $i -gt 0 ]]; then\n            result=\"$result $i\"\n        fi\n   \
    \ done\n    echo $result\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=($1)\n    local result=()\n    for i in \"${list[@]}\"; do\n  \
    \      if [[ $i -ge 0 ]]; then\n            result+=(\"$i\")\n        fi\n   \
    \ done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n\
    \    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=$1\n    local positive_list=()\n    for i in $list; do\n      \
    \  if [[ $i -gt 0 ]]; then\n            positive_list+=(\"$i\")\n        fi\n\
    \    done\n    echo \"${positive_list[@]}\"\n}\n\ncandidate() {\n    get_positive\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"\
    4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9\
    \ 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n       \
    \ if [ $i -ge 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n\
    \    echo \"[$(echo $result | sed 's/ /\", \"/g')]\"\n}\n\ncandidate() {\n   \
    \ get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4\
    \ 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") =\
    \ \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local -a list=($1)\n    local -a positive=()\n    for i in \"${list[@]}\"\
    ; do\n        if [[ $i -gt 0 ]]; then\n            positive+=($i)\n        fi\n\
    \    done\n    echo \"${positive[@]}\"\n}\n\ncandidate() {\n    get_positive \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\"\
    \ ]]\n    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\"\
    \ ]]\n    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local res=()\n    for i in $list; do\n        if [\
    \ $i -ge 0 ]; then\n            res+=(\"$i\")\n        fi\n    done\n    echo\
    \ \"${res[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"\
    5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"\
    -1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=$1\n  local positive_list=\"\"\n  for i in $list; do\n    if [[ $i\
    \ -gt 0 ]]; then\n      positive_list=\"$positive_list $i\"\n    fi\n  done\n\
    \  echo $positive_list\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=(\"$@\")\n    local result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i -gt 0 ]]; then\n            result+=(\"$i\")\n        fi\n \
    \   done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    get_positive \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n\
    \    [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl8s_oluv.sh: line 13: [[: -1 -2 4 5 6: syntax error in expression
    (error token is "4 5 6")

    '
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local result=\"\"\n  for i in $list; do\n    if [ $i -ge\
    \ 0 ]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo \"[$(join_by\
    \ \",\" $result)]\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmprukal093.sh: line 17: join_by: command not found

    '
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \ local list=\"$1\"\n  local result=\"\"\n  for i in $list; do\n    if [ $i -ge\
    \ 0 ]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo \"[$(join_by\
    \ \", \" $result)]\"\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate\
    \ \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate\
    \ \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwz4fqtl5.sh: line 17: join_by: command not found

    '
  stdout: ''
  timestamp: 1660013203
- exit_code: 0
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   local list=\"$1\"\n    local result=\"\"\n    for item in $list; do\n    \
    \    if [ $item -gt 0 ]; then\n            result=\"$result $item\"\n        fi\n\
    \    done\n    echo $result\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n   \
    \ [[ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n\
    \    [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660013203
- exit_code: 1
  program: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
    \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3\
    \ -5 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"',\
    \ '\"123\"', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' ' | sed 's/^\
    \ *//g' | sed 's/ *$//g'\n}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[\
    \ $(candidate \"5 3 -5 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n   \
    \ [[ $(candidate \"-1 -2\") = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660013203
